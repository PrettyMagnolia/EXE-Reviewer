How about using a constant here?
The `$this->config->Index` parameter must be added to the `setPageSize` method.
Is this a `breaking;` needed?
I think this is not needed. `isNaN` is already on line 456.
I think this should be `getNavigateURL()`
I think we should keep the old name.
I think this is a good place to put this import.
The `snprintf_s_iiii` call is a bit confusing, since it is a `list` function.
I think we should be using the `log.debug` here.
Shouldn't this be `if (!service)`?
why not using a flag here?
I think we should be using `shared.GetSharedMountValue()` here.
I think we should add `@param` annotation here.
This is a bit of a hack, but I think it would be better to use `ananother`.
We should probably make a helper function for this.
Why is this removed?
Why are we testing this?
(style) externs should be avoided in .c files
This is not a big deal, but it seems like it should be a `setNumVal()` method.
I think this is not needed.
I think this is a leftover from the previous PR.
This is not a valid table name, it's a valid table name.
This should be a `StringUtils.equals(String, StringComparison)`
I think we should be able to use `java.lang.Void` here.
This is a bit of a hack, but I would prefer to have a method that returns a boolean.
I think it would be better to have a constant for this parameter, e.g. `DEFINE_bool(enable_history, false, "Whether to force saving the command history")`
Why is this being removed?
Should we use `CONFIG_PATH` here?
Metrics/LineLength: Line is too long. [123/120]
This is a breaking change. It is not needed anymore.
I don't think this is needed
Why is this needed?
This is a bit weird, why do we need to return an empty collection?
I think it would be better to use a separate map here instead of a separate map.
I think this is a bug fix.
I think we should move this to the `createTopic` function.
Why not just use []byte?
This is a test, but I think it's better to move it to a separate test file.
I don't think this belongs in `src/services/test_utils.go`
This is a very minor nit, but I think it would be better to have a `case` statement that does the same thing.
I think this is not needed anymore.
Line longer than 120 cols.
This is a good change. You can just use `com.google.common.collect.Consumer`.
I think this is a bit confusing. What is the `.backtrace`? What is the `.info`?
Please annotate `getItems()` with `null`
I think this should be `VALIDATORS`
We can avoid using `*` in this class.
Please use `d.template get_info<sycl::info::device::local_mem_size>();`
I think this should be done in the `if (feeds.remove(i) {` block as well.
I think this is not correct. The `get_pipeline` call should already have a `get_subset` attribute, so it should be `return ...`
This is a breaking change. The `LogError` call does not seem to be related to the PR.
Should this be `Load`?
I think we should use the new `30` here.
I think this should be done in `AbstractAbstractHandler::executeDeath`
This is a bit of a hack, but I think it would be better if we just log the worker time.
I think this should be `assert.ok(typeof lib === 'function', 'mongodb.Promise must be a function, got ${lib}`
I think we should be using the `QueueTarget` function here.
I think this should be `if not (pks.__name__ == 'StreamSocket') and (arch.FREEBSD or arch.DARWIN)`
should we add an `el.nodeName.toUpperCase()` check here?
why is this removed?
I think this is a breaking change. The `Map` is not needed anymore.
This should be `message == null`
This is a bit of a hack, but I think it's better to be explicit here.
This is the only place where we need to do this check.
Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
@maarcingebala What is the motivation for this change?
I think we should add a new field to `env_file`.
I think we should just make this `ValueReady                          ` and use it in `scala.js`
I think this is a bug fix.
I think this should be `@Nullable`
Since we're not using `padding` as a default, I think we should use `withRegistry` instead.
This is a bit confusing, as it is a subsurface.
I think we can remove this `@pass` now that we have the `unless`
I think this is a bit confusing. What about something like `allowExternalTables`?
(style) externs should be avoided in .c files
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think we should keep this as win_id as it is.
This is not needed, the exception will be thrown when the exception is thrown.
I think this is a bug fix.
I think we should keep the old version as well.
What if we just return 0 here?
I would say, it's not a variable, but it's not a variable, it's a bit confusing to me.
As mentioned above, we should change the default value to `None` in the argument list.
Why do we need to use `.get()` here?
I think it would be better to have a `@private` method that does the manifest.
Shouldn't this be a `.Add`?
rm empty line
I think this is a bug fix.
Why is this condition necessary?
Nit: I think this is fine to just remove the RSpec, since it's not used anywhere else.
Is this used anywhere?
I think this is a bug fix.
why is this needed?
This is not a pattern for `modules` but it's not a pattern for `modules.Lock`
Is this change necessary?
This is not the right place to do this. The `if` statement above should be removed.
I'm not sure if this change is necessary.
This is a bit of a hack, but I think it's better to have a `projCtx` that does the same thing.
Please add `@Nullable` annotation
Should we add `Pair<ExecutionReference, ExecutableFlow>` here?
I think this is a bug fix.
Can we use `getComposedParent` here instead of `el`?
Is this used?
This is not needed.
Is this still needed?
This is not the only place where we need to wait for the ports to be used.
Trailing whitespace detected.
This is a breaking change. We should keep the old method and add a new one.
I think this should be `get` instead of `get`
What's the reason for this change?
This is not used anymore.
Although I'm not sure why this is `null` I don't think it should be `null`
This is a bit of a hack, but I think it's better to keep the `mod.rs` prefix as it is.
This is the only change that affects TF TF. I think it should be removed.
Why are we using a global setting here?
Nit: remove new line
I'm not sure if this is the right place to put this. I think it would be better to just have the `urlopen` function return the same object, and then use `open` on the `urlopen` function.
I think it would be better to check if `parseInt` is `None` and then check if `parseInt` is `None` and if it is `None` then `parseInt` will be `None`
I think we should just always return the value of `_w3c` if it's not `_GET_ELEMENT_RECT`
Import order of imports
why not using the same name as the timeStamp?
Why is this needed?
I think we should also have a `case` here.
>parent.GetTag(Tags.InstrumentationName) [](start = 12, length = 7) nit: we can use `parent.GetTag(Tags.InstrumentationName) != null` instead of `parent.GetTag(Tags.InstrumentationName)`. #Closed
I think we should be using the new API here.
It seems like this should be a `""` not a `""`
Please use `transient` instead of `true` to avoid the `transient` value.
I think this is a bit confusing. What is the difference between `media` and `media`?
@smarterclayton do we need this?
This function is used in many places, maybe use `toString` instead?
Should we add a `Context` field in the context here?
Is this a bug fix?
I think this should be `isEmpty()`
I think we should keep the upload column from the request request.
@bparees I think this is the right fix. The only reason I'm not to set `deadline.Until` to `true` is if the `deadline` is set to `true`.
This should be `glog.Errorf("Error in deleting volume %q: %s", cVR.ObjectMeta.Name, err)`
Can we remove this?
I think we should try to avoid calling `close()` if the result of `FORBIDDEN.getStatusCode()` is not a valid value.
I think we should just remove the security groups, and add a `tags` field to the tag.
I think we should use `created_at: range[:start_time]...range[:end_time]` instead of `created_at: range[:start_time]`
could you add a logging statement here to make sure the body is not None?
Is this used anywhere?
should we add coma_separator to the list?
@daniel-beck do you know why we have to change the file name?
Not sure if we want to add these to the base class, but I think we should move them to `ConsumerInfo`
this is a debug message, should be moved into the `klog.Infof` call
This is a breaking change. It is a breaking change.
Is this a false positive?
Use the new Ruby 1.9 hash syntax.
why do we need to add HRNet here?
Why is this changing?
I think we should check for FPGA_DISCRETE_DEVICEID here.
I think this should be `vagrant_cmd`
I think this is a bug fix.
This is a bit of a hack, but I think we should be using `!` here.
This is not needed.
I think we should add a method `systemAPIKey` to `systemKey` and `systemAPIKeys`.
This should be `log.L().Fatal(err.Error(), zap.Any("cfg", cfg)`
does this need to be `data = data[:-1]`?
This is not needed anymore.
The success message should be "message" instead of "obj".
@adamjstewart Is this the right place to put this? I'm not sure if it's worth it.
Style/StringLiterals: Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this is a bug fix.
I think this is a good idea. The `_get_states` method should be called `_get_states`.
Just to confirm, this is not a bug in the code. The code is not in the code that is used in the code.
This should be a `TimeBasedError` instead of a `TimeBasedError`
This is the only line needed at the top of the file.
I think it would be better to move this to the `alertQueryUrl` struct, since it is used in the `Querygrpc` struct.
Why did you remove the `for` loop?
Can we use `toBe` here instead?
Why not use `agentlessID`?
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
This is a bug fix.
This is a breaking change.
I think we should keep this as it was.
I think we should remove this from the package.
Import packages with wildcard is not recommended. Please revert them.
Line is too long. [92/80]
This is a change in behavior, but I think it's better to keep it as it was.
If we're going to have a migration for this, we should probably make a copy of the `eleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleeleele
We should use a `*` import here.
I think this should be `final`
nit: can we rename this to `readOrcReader`?
I think this is not needed. `found` is already set to `true` in `buildCallback`.
I would prefer to see the `readPreference` as a local var in the constructor.
Do we need to make this a constant?
This is a bit of a nitpick, but I think it would be better to move this to the `env` package.
This is not needed.
This is not needed anymore.
I don't think this is the right fix.
hmmm so this will cause problems when merging the migration?
The `assertIn` is not needed here, it will be `None`
Line is too long. [89/80]
I think we should use the same name for all the classes in this class.
I think this is a change in behavior, but I think it's better to make the change in `r.Seek` to make it clear that the `r.Seek` is the correct value.
can we make this a `FetchKeySet`?
I think we should be able to use the `azkaban.plugin.load.override.props` constant here.
I think this should be `type RunFunc func(*exec.Cmd) ([]byte, error)`
why not use the user user provided the user?
Can we use `path.Combine` here instead of `Path.Combine`?
Why are we removing this?
Do we need to include the `authorization` header?
What about the `str` constant?
I think we should be using the `EXPECT` here instead of `FastForwardBackoff` here.
Is this change related to ARM_32 related?
I think this can be removed now, since it's used in rendering.
Do we need to also add the `avatar_filename` field to the `getAvatarFilename` field?
We should probably have a constant for this.
I think this should be set to the Propagator.
I think we should remove this line
This is not the right place for this. The `Content-type: text/plain` should be used for the `send_worker_msg` method.
Is there a reason we can't just use `Upgrade-Insecure-Requests` here?
I think we should remove this field.
Why not just call `HbaseDelete::costMethod()`?
I think this should be `DestPorts(uint32(r.Config.VXLANVNI).).ProtocolNum(uint32(r.Config.VXLANVNI).).ProtocolNum(spec, misc(spec, misc(spec, misc(spec, misc(spec, misc(spec, misc(spec, misc(spec, misc(spec, misc))`
I think we should use `toString()` here.
I think this should be `editorHolder.is(':visible')).toBe(true)`
`$dqlFilter` is always defined as `null`. So this should be `!empty($dqlFilter)`
nit: no need for a word
This should be `@param`
This is not correct. The `labels` is a `labels < 0` which is the default value for the `labels < 0` case.
I think you can use `getBaseDir()` here.
this should be removed
I think this is a good idea to add a `/session` kwarg to `/password`? I think it's a good idea to add it to `/password` but I think it's fine to leave it in.
from .core import OrderedDict
We should add the `@PluginDescriptor` annotation to the description of the message
I'm not sure this is the right fix. The rest of the code base is to have a "before" variable, and then if it is to be used in the "before" loop, then it will be more clear to me.
this is not correct. `proposal_list` is not a thing, so it should be `proposal_list[0]`.
remove empty line
This is a bug fix.
I think we can remove this
Can you please move this to the top of the file?
I think this should be `RetryName            ` and `BrokerSystemNamespace` as well.
why not `python3`?
This is a bit weird, why do we need to configure the resource's `fastcgi`?
why is this change needed?
This is not used.
nit: update copyright year in header
This function is unused.
This is a bit of a hack, but I don't think it's a good idea to add this to the `<img className="googlesitekit-publisher-win__small-image" alt="" src={ smallImage } />`
Import packages with wildcard is not recommended. Please revert.
I don't think this is needed
I think this should be `location_factory`
Shouldn't this be `const std::invalid_argument(ERROR: Engine bass class {`?
Nit: `Number(value) >= 275761 || Number(value) < 0)`
I think this is the only change that affects the `load` method.
This is a change in behavior, but I don't think it's a good idea to add a check for `isIgnoredChar` to `isIgnoredChar`.
This is a bit weird, why do we need to pass the registeredEvent chan as a parameter?
Can you explain why this change is needed?
I think this is not the right place for this. The `L` is used by `luaA_object_emit_signal` and `lua_push` are used by `swapped_lua_push`.
I think you can use `!is_user` here
This is just a note that we don't need to load files in the path path path. This is a breaking change.
`contains` is a bit ambiguous, can we use `contains` here?
This variable should be set to 10.
I think this is the right fix.
Please check if the ptr==0 is invalid.
I think we should keep these in the `transaction` namespace.
The lock is already closed in the `if` condition above.
I think we should use `Context.stderr` here.
I think this is not the right fix. The validator is always a `null` so the validator is not a `null`.
I don't think we should set this to the client http statuses. We should set it to the client http value.
is this a typo? `string`
I think this should be a separate commit
the `root` is a directory that is not a directory but got
@jvillalobos can you check if the current_user is a valid path?
Use 2 (not 3) spaces for indentation.
`Integer` can be simplified to `granularity.between(EPOCH, timestamp).intValue()`
This is the only place where we're using it.
I think we can just do `String()` here.
Is this method used anywhere?
This is the only change that fixes the bug.
I think we should remove the `model` here and in all the other usages of this feature, since we're using it in every single query.
This is the main change.
This is a bit of a hack, but I think it's better to have a test that checks the cache and then check the cache for the same filename.
Is it possible to get rid of the `$/` argument?
This is a bug fix.
This is not needed, it should be removed.
Metrics/CyclomaticComplexity: Cyclomatic complexity for TestZh/Visible]
This is the only change that affects TF providers.
I think we should remove this dependency.
What if we moved the condition to the `if (` above the `|| realpath($input_path) === realpath(dirname(__DIR__, 3) . DIRECTORY_SEPARATOR . 'bin' . DIRECTORY_SEPARATOR . 'psalter')`?
This change is not needed.
Why remove the period?
I think we should be able to remove this and just call `eval.totalTxBytes = 0` in `lib/eval.Redundant`
I think this should be `Blacklight.logger.warn`
It's not clear to me what this method does. I'm not sure what the best way to go about it is.
Thanks for signing up. We will be in touch!"
This is a bit of a hack, but I think it's better to use `Array.isArray` instead of `options` as the default.
why not `FALSE` ?
I think this is not a good idea. The `*` import is not used in this file.
I think this is a leftover from the previous PR.
this is not needed.
The `tealLogicSigSize` is already being used in the `libbeat/` folder, so I think it's better to use `tealLogicSigSize` instead of `tealLogicSigSize`
Why is this removed?
I think this is the one we can remove?
Why not pass time.Hour directly?
I think we should log the email address here.
nit: I think this is a bit of a hack, but I think it's better to use the constant here.
I think this is a bug fix.
I think this is a good change. I think it's better to be explicit here.
`bytes.Length == 0` is nullable
I think this should be `boolean` instead of `boolean`
This is a breaking change. The `GetAwaiter` method is used to throw a `WriteAsync` exception if the `GetResult` is not null.
Use && instead of and.
This should be a `else` branch.
This is not a good idea. It should be a `String` object.
This is the only change that is needed.
Can you remove the argument?
I think it would be better to use `reportreport` here.
I think this should be `RequiresPatchApplicationsProperty`.
I think this is a good place to put this. It's not a good idea to add this to the `BuildRequired` interface.
I think this method can be private.
Why did you change this?
Can you add a `TODO` after this?
This is a little strange, because the `try` block is not in the `try` block, and the `try` block is not needed.
Why not just call `if !ok`?
I think it would be better to just return `IsValid` here.
no need to pass true as a parameter.
Please use `application.config.blacklight_export_secret_token`.
I think this is a bit confusing. What about `ValueError`?
This is a bit confusing, why do you have to change the order of mcontext to 0?
Should be `ecs/`.
I think this is a good idea. It should be `ipsecESPOverhead = 38`
I think this should be `using`
This is not a part of the fix, but I think it's better to use `goimports` instead of `pathlib`.
I think this is a bit confusing. If you don't have a log HealthChecks, why not log HealthChecks?
Is this the right place to put this?
You can use `defaults()` instead of `empty()`
This is a good idea, but I think it's better to keep the stage at the end of the function.
This is a bit weird, `isMining` is not a `Streaming` instance, so I would suggest to call `verifyNoMoreInteractions` here.
I think we should move `plugins = config.getConfig("api").offline_mode;` to `plugins = config.getConfig("api")`
I think this is a little confusing. If we don't have a lock, we should probably call `renameAndDeletionLock.Lock()` here.
This is a bug fix.
This is the only place where we need to set the `v` value.
This is not needed.
I think we should be consistent and use `panic` here.
This is not the right way to go. The function is called by `_CleanFpInfo` but it is called by `_CleanFpInfo` in `_CleanFpInfo` which is called by `_CleanFpInfo` in `_CleanFpInfo`.
nit: you can use `std::make_pair()` directly
I'm not sure this is the right fix. The `title` and `name` seem to be the same as `name` but I'm not sure it's the right fix.
Just curious, was this a bug?
This is not needed anymore.
This is a breaking change. It's not a good idea to have a `null` check here.
This is a breaking change. The version is not a valid value.
Why not just call `nc.algodDataDir` instead of calling `nc.algodDataDir` directly?
This is not needed anymore.
why did you change this?
Why is this necessary?
This change is not needed.
Can you add an example here that `--mac-signing_identifier` is not present?
I think we should be using the `klog.V(4)` here.
This is a bit of a hack, but I think it's better to have a `File` that does the same thing.
I'm not sure if this is the right fix. I'm not sure if it is the right fix.
This was the only change that affects TF providers.
I think this should be split across multiple lines.
Please remove this.
I think we should keep the old version as well.
This should be `azkaban.jvm.cmd.args`
This should be `__( 'Source:', 'google-site-kit' )`
We should probably have a `#if NETSTANDARD1_3` check here.
I think we should keep the original behavior and just do `VK_NULL_HANDLE != swapchain`.
This is a change in behavior, but the `wallet` variable is not defined.
This is a breaking change. The function\'s description should be a third-person verb (eg "runs" not "run")
I think we should be using the `SimulateExecution` here.
I think we should return here instead of in the loop.
This is now dead code
I think this is a bit of a hack. I think it would be better if we just remove the `Failed to initialize: '{0}'. OpenTelemetry` and use it here.
`update_listener` is not a name, so this should be a name
Why is this necessary?
This is not needed.
This is a test, so I removed it.
I think this is not needed.
Why was this removed?
Why not use `super.super.Module`?
It's not necessary to use Request since it's only used in the `RequestRequest` namespace.
I think we should use `responseEx.setContentType(produceProcessor.getName()+"; charset=utf-8");`
I think we should use `Openebs().V1alpha1().CStorPoolInstances()` here, as we are not using the `CStorPoolController` above.
why do we need to change the key type?
I think we should be using `error.Close()` here.
I think this should be `context` instead of `context` as it's a no-op.
Is there a reason why we don't do this?
I think we should just set this to `true` in the config file.
Why is this needed?
Can we move this to `defer`?
This seems to be a bit confusing to me. What about something like `dcontext->is_exiting`?
This is a breaking change. We should be able to remove the `ConfigureKestrel` call and just call `UseKestrel` directly.
@jridgewell I'm not sure if this is the right fix.
Is this the correct way to check if `bytes_read > 0`?
I think this should be `getConfigurationFromYaml()`
Please add a license header.
Can we remove the second argument?
Use safe navigation (&.) instead of checking if an object exists before calling the method.
this is not needed anymore
I think this should be `WithWarmupCount(1) // 1 warmup is enough for our purpose`
This is not needed anymore.
I think this should be `createUpdateHook(repo, repoPath)`
This is the only place where we need to do this now.
This is a change in behavior, but I think it's better to have it in the `stress_test` module.
There is no need to keep this if we are not going to use the pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool pool
I think this is a leftover from debugging.
I think this is a bit confusing. What is the `current_key` attribute?
nit: `rawMode` is a bit ambiguous. I would call it `allow_raw`.
This is a bit of a hack, but I'm not sure if it's worth it to make a helper function to do this.
The default value of `array` is `true`.
can you remove this?
This is not right. It is used in the context of the context, but in the context of the context, it is not used in the context.
Why change this?
I think this interface is not used anymore.
Why is this being removed?
This import should go in `goimports`
Nit: could you move this import to the top of the file?
I think this is a bug fix.
I think this should be in the _call_check_root, not in the _call_check_root.
We should not have a separate package for this.
I think this is a bit confusing. What about `computedNumOfActivePartiions_(-1)`?
I think this should be `QProcessEnvironment, QUrl)`
This shouldn't be in the `Args` interface.
I think this should be `saleor/graphql/core/types.go`
I think we should also check that the `123456` is not null here.
Why not just pass in the `args` and `results` as an argument to `args`?
Why do you need to cast it to `name`?
Why did you remove the `for` loop?
This is the only place where we need to do this. If the `window.Promise` is not set, we can remove the `!window.Promise` variable and just set it to `None` in the `if` block.
I think this is the wrong place for this.
what's the difference between this function and `qualifier_exists`?
This is a little confusing, why do we need to wait until the `mode` is called?
I think we should keep this as `DeleteAll` and remove the `DeleteWorkspaceFile` interface.
We should keep the old behavior as well.
I think we should add a new flag to this.
This is a breaking change.
These two imports are now unused.
I think we should add a doc for this.
@nmittler - How do you know this is the first one of the loop?
I think this is not correct. It should be `array_values()`
This is a very minor thing, but I think it would be better to have a `IsValid()` method that returns `true` if it's not `false`.
We should add a `itere` arg to the list of parameters in this file.
I think this should be called `test_records_can_be_after_deletion`
Shouldn't we also add the `DATA` type?
I think we should also add the `s2` constant in the list.
This is a bit of a hack, but I think it's better to have a test that checks the length of the test.
is this an option to remove the `AWS IAM` option?
nit: remove extra space between `if` and `(`
I think this is not correct. The `hasAttribute` is already `cell.getAttribute('headers')`.
I think you can get the getProject().getAllprojects().stream() directly.
Please, add a comma at the end of the line.
I think this can be removed now that it's not available anymore.
I think this import is not needed anymore?
This is a change in behavior, but I think it's better to use a `len` instead of a `len`?
I think this should be `only source profile, sso, or sso",",", sso)`
I think we should just delete this line.
Please update the docstring accordingly.
This is a breaking change.
This should be `>=`, right?
Can we change this to `|| sasToken`?
Should this be `IparerNeeded`?
This is not needed. The `consensus/fsm` package is already in the `fsm` package.
I think we should remove the `options` argument from the `babelrc`.
`wn.log.With` is the default value for `scope` so we don't need to pass the localAddr.
@bparees this is the fix for the new `boosting_type` key in the `lib/__init__.py` file.
This is the only change that affects the `resolve read` of the `resolve read`.
This is a bit of a hack, but I think it's better to keep it as is.
Shouldn't this be `from flask import current_app`?
We should probably make featureset.OnlySAN -> featureset.LongDomainFeatureSet
I think you need to use the `-` prefix here.
Please add a note that this is not a new feature.
Can you add a `warn` and `warn` to the top of the file?
I think this should be removed.
I think we should remove this and just remove it.
Why not use `slaves.get(0)` here?
Why not use the `sahf = (TEST(1, val))` above?
Can we change this to a `fetchTitle` or something?
Really minor, but this is a change in behavior.
I think we should move this to `_data_data_style`
I think this is a bit confusing. What about something like `force HIP_STARTUP_LOADER`?
This is not needed.
This is a change in behavior, but I think it's still useful to have a `map[string]string` as a `ID` field.
I think we can skip the error here.
I think this is not correct. The `transform` should be a sourceId object, not a sourceId object.
I think this is not a good change. The class is `protected volatile` and `protected Collection` and `protected Collection` as well.
I think this should be `@since`
Do we need this?
`FakeFS.activate!` is a bit confusing, since `make_vfile` is a `default!`.
`stats` is a bit confusing, how about `to_json`?
We should add a `case SINGLE_STEP_EXCEPTION: rethrow_too_clear(false);` to the `LLEGAL_INSTRUCTION_EXCEPTION` and `LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
This is a public interface, but I don't think we should be using it here.
I think we should remove the `autoUpgrade` argument from the `status` param, since it's not used anywhere else in the `else` block.
Style/SymbolArray: Use %i or %I for an array of symbols.
This file should be removed.
I think you can just do `getAllAllTableTransaction(identifier, spec, baseLocation, tableProperties);`
I think we should move this to `go.temporalio/temporal/.gen`
keep_detector should be options_detector.
This is a bit confusing, why is this needed?
This is a bit scary. What about `var zeroTime time.Time.Time`?
I think this should be `typ.Int(minval=8, maxperc=100)`
This is a bit confusing, since TTarget>.RecordTelemetry is a global parameter. Maybe we can call TTargetForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForForFor
This is a little confusing. Why is it necessary to change the visibility?
This is a good idea, but I think it's better to use a `List<String>` instead of `List<String>`.
I think this is a leftover from the previous PR.
Prefer single-quoted strings when you don't need string interpolation or special symbols.
This change is not needed.
I think this is a good idea. The table is already created on the `boolean` table, so it's not needed.
This enum is not used.
I think this should be `else`
@lucene.experimental also seems like a good change.
I think this is wrong. The `replace(/` is used for the '\\-only `\r` and the `replace` is used for the '\\-only-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent-dependent
This is a breaking change. I don't think we need this.
I think we should be using the store.Exists() function here.
I think this should be `opts.DockerfilePath = _`
@citizen428 I think this should be `# Copyright (c) 2021_licenses/DanielNoord` instead of `# Copyright (c) 2021_licenses/DanielNoord`
I think this should be `self._tab.is_deleted()`
why is it needed?
This is a bit confusing, since `expression` is `true` and `false` is `true` by default.
I think this is a leftover from the previous PR.
I think it's better to check for the location oracle, and then check for the location oracle, and check for the location oracle.
I'm not sure if this is the best way to do this.
Metrics/LineLength: Line is too long. [123/120]
nit: "The collection of the selection layer levels where the corner header or the corner header."
You can use `siteInfo.AddRow` directly.
I think this is still not needed, it is just for the other situation that we can remove this
I think we should add a new imageRampup class to the imageRampup class.
I think you can use `%w` here
I think this is a bit confusing. How about `run_from_network`?
I think this is not needed.
This is not needed.
Is this needed?
This is a change in behavior, but I think it's better to use a default value for the default value.
Can we add a note about this in the changelog?
this is not the right place for this method. `shake[:title]` should be a `.title`
This line is not needed.
How about `add_add_to_metadata`?
Why not just remove the class?
This is not a good idea. It should be a separate function.
Not sure why it was ret_code here.
This is a breaking change.
I think we should also change the name of the test.
Metrics/LineLength: Line is too long. [122/120]
This should be error if it's not an error.
This file is now unused
This is not needed.
I think this should be `socket.AF_INETINET: E501`.
This isn't used anywhere.
I think this should be a `Object.index` instead of a `index`.
This is the only change that will break existing users. The new users are not using the old ones.
I don't think this is needed
This should be `debug`
I think we should be consistent and use `Cancel` instead of `isCanceledMx sync.Mutex`
nit: better to return an error here rather than warn.
@deads2k do we need to wait for at most 5 blocks to be mined beforehand?
This is a bug fix.
I think this is a bug fix.
I think this should be set to `true` by default.
this is an unrelated change, but I think it's better to move it to the `else` block
this is a change in behavior, right?
This is a breaking change. The `pwrd` is not used in this PR.
Why not just use `fprintf(stderr, "invalid bus: %s", tmp_optarg)`?
The `cc` is not used anymore.
why not `@Nullable`?
This is not the right fix. The `winner` variable should be renamed to `opts` or `opts_length`
This is not needed.
why not invoked with function ?
This is a bug fix.
I think we should be more specific here, `DeploymentCondition` or `Unknown`?
I think this should be `v.length === 12 || v.length === 24`.
This is a bit weird, the `ValidatorVote` is a boolean, and the `parentHeader` is a boolean.
I think this test is not correct. The test is not equal to the test.
I think we should be using the `ctx` here.
Should we also add `@since` here?
Do we need to do this after the start time?
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
This is a bug fix.
I think we should add a `// function that calls Close on the returned database.` to avoid the need for this.
This is a good change. The `MethodTransformerContext` is already imported from `SimpleParamView` and it is not used anymore.
I think this should be `compiler_target.json`?
I think we should just make this a constant.
I think we should just make this a constant.
Should we do this in `plans.send`?
I think we should use `Resource` here.
I think this should be `@CommandLine.Option`.
why is this removed?
Should we update the key as well?
This is a bit confusing, as we are not using the Fieldng for the system at all, we are not using the Fieldng for the system at all.
I think this is a bug fix.
I think we should remove the `filterfilterKeyGen` and `filterfilterKeyGen` as well.
Why is this package private?
I think this should be `lonely.Choose` instead of `lonely.Choose`
Why is this being removed?
I think we should check for `evt.ProcessName` here.
This is a bit of a hack, but I think it would be better if we could just log the result of `iptables output='%s` and log it as a warning.
I think we should use svgText.getComputedTextLength() instead of svgText.getComputedTextLength()
I think we can remove this method entirely.
You can use the shorthand since there is a `@return` statement.
could we log the failure?
the message should be more descriptive about what this message does.
This should be `surround-check-cli`
Can you please rename this package-storageTarget to package-storageTarget
Why do we need this change?
I think you can remove the `Sys32` here.
why is this changed?
I think it would be better to move this to the `Process()` method, and have it return the Transformation interface.
I think this is not correct. It should be `Optional[str]`
I think we should keep the original implementation of `CreateChangeValueOf` and make it `CreateChangeValueOf`
Is this a bug fix?
I think we should use the same name for all routes.
I would put the version number in the `_updateVersionFromVCS` method, and put it in the `_updateVersionFromVCS` method.
Could you please rename this to `isNullOrEmpty`?
The `=` is not needed anymore.
I think it would be better to move this to the `RCLONE_CONFIG_PASS` function.
This test is not needed anymore.
This is a very good change. I don't think we should be adding this.
This is a bit confusing, because `TargetSpec` is a `Spec` and `PlanResult` is a `Spec`, not a `Spec`. I think it's a good idea to have this as a `Spec` parameter.
I think this is a little confusing. I would just return error and return error.
I think we should use `hu.FairbankBlockHeight()` here.
I think this is a bit of a hack, but I think it's better to have a space in the list of `embedded` and `flow` as a space in the list of `['embedded', 'flow']`
can you add the doc for this?
I think this should be `self._file_model.index(row, 0, self._file_model.index(path))`
I think this should be `static`.
Why is this change necessary?
I think this should be `array`
Is this change needed?
This import should be removed.
This is a bit of a hack, but I think it would be better if we just pass a `Job` object to `appName`.
Please make the target.SteadyStateDependencies parameter parameter a constant.
Use a guard clause instead of wrapping the code inside a conditional expression.
What is this? Is it used for?
why is this being changed?
(style) trailing whitespace
I think we should remove this and just call `optimizer` from the `backbone` to `optimizer` (as it is already there)
This is a breaking change. I think we should just make it `omitempty`.
I think this is a leftover from our CI, but I think it's better to have a function that returns a docker.BuildArguments object.
This file is not needed anymore.
I think we should be able to use `Perl_croak` here.
I think this should be `Keccak stateRoot`
This is a very minor thing, but I think it would be better to have a method called `callback.setupNotification(false, info)` that returns the value of `callback.setupNotification`.
This should be `final`
I think we should add a service to the log message.
I think this is a leftover from debugging.
This is not a boolean value.
I think this should be `req.IsResource(name string)`, since we don't have to call `SchedPolicyGet` twice.
We need to keep the `.a` prefix for the `.a` case, right?
I think this should be `modeman.leave(self._win_id, usertypes.KeyMode.command, 'prefix deleted')`
I think we should add a check here that the table is not in the table.
Should we add a `waitForResponse` function to the `wp/v2/users/me` page?
I think we should be able to remove the `!string.IsNullOrEmpty(xForwardedFor)` condition.
Is this change related to the current version?
I think we should move this to the `using System.currentThread().currentThread().currentThread().currentThread().currentThread().currentThread().currentThread().currentThread().currentThread().currentThread().currentThread().currentThread().currentThread().currentThread().currentThread().currentThread().currentThread().currentThread().currentThread().currentThread().currentThread().currentThread().currentThread().currentThread().currentThread().currentThread().currentThread().currentThread().currentThread().currentThread().currentThread().currentThread().currentThread().currentThread().currentThread().currentThread().currentThread().currentThread().
useCircuitBreakers -> 100 ?
This was removed because it was already being removed in the PR description.
This is a breaking change.
I think we should remove the `fieldsFromJWTSVID` method from the API.
Why is this conditioned on the contract?
Do we need to make this configurable?
This is the only change that will be relevant for the user.
I think it would be better to have this as a `@plans` option, since it's a `done` option.
I think you can remove the `Regressor` import now.
I think this is a bit confusing. If `white` is a `None`, then `None` should be passed to `utf8.white`.
This is the only change that will break existing rolebindings.yaml, right?
this was added by mistake, can you remove it?
Why is this needed?
This is not needed.
This is a breaking change. It is not needed anymore.
nit: remove empty line
I think we should remove this line
Should this be `RemoveBPFCalicoDir`?
Should this be `__init__`?
This is a bit of a hack, but I think it's better to have a `records=len(recids)` that does the same thing.
This seems like it should be `/realOpts/ContentMD5`
I think this should be `!obj.focusRedirect` instead of `obj.focusRedirect`.
Nit: import sorting
Why did you change this?
This is not needed.
Is this really needed?
Please use the constants for these constants.
I think this needs to be `[UnsupportedOSPlatform("browser")]`
can you remove this?
Layout/MultilineMethodCallIndentation: Align .html_safe with .create on line 112.
I think this is a bug fix.
this is a bit weird, why do we need to set the `Authorization` value to the url?
It's not obvious that this is the correct way to fix this. The test is still running on the tests.
"so we can be sure to get the actual date and time based upon UTC and not the client date"
Can this be made made private?
This is a different thing than before, but I'm not sure how to test this.
Why do we need a new Ruby 1.9 hash syntax?
We should add some description about what this is for.
why remove this?
I think we should be consistent and not use `if (gridCol.colDef.enableCellEditOnFocus === true) {`
This is a bit of a hack, but I think it's better to have a `*` in the `org.playonlinux.ui.api` instead of `org.playonlinux.ui.api`
It's not clear to me why this change is needed.
I think we should set the `FALSE` flag to `setAqrEnabled` instead of just calling `setAqrEnabled` here.
Why is this needed?
This will break if beforeChangeResult is false.
Is this still needed?
This is the only place where we call `Signal` in the `describe()` method.
can you change this to `if err`
Maybe add a TODO here to make it more obvious that this is not a valid case.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is a bit confusing, why is this needed?
Is this change necessary?
This is not needed.
I think this will be a lot of noise, maybe a bit more cleanly.
This should be a function in the `uint32` package.
I think we should keep the `cart_id` as it was before.
Please add the line after `selected_selected_LL`
I think this is a good change to make a copy-paste from the previous PR.
This is the only change that affects buf[1]byte.
I think this can be removed now, since the method is called inside the method.
This is not needed.
I think this is not the right place for this. The `RETURNVALUE_NOTPOSSIBLE` is used to load the tradePartner from the `configure` object.
`TextMethod` is never used in this case, so remove it from here.
I think we should move this to the `constructor` component.
This method is not used anymore.
Shouldn't we also add the `DecisionTimeout` in the `ValidateFunc` and `ValidateFunc`?
can you please also update the `const` prefix to match the existing behavior?
I think we should also check for `iFromPeers` here.
Is this necessary?
I'm not sure if this is the right way to do this. The `jetpack-api-api-json` option is to set the `jetpack-api-json` flag to `true` by default.
`toUpperCamel()` is not used anywhere else.
Should we make the same user supplied?
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think we should remove the `application.properties` and `application.0` values. We should probably make these two new values as well.
Could we add a check that `video_name` is not specified in `build_to`?
This is the only place where we need the `getAppCacheMaxSize` method.
`x: true` isn't needed here
@jridgewell I'm not sure if this is the right fix.
I think this is a bug fix.
I think this is a bit confusing to people who may have to say "Cannot add the duplicate file"
nit: can you use `mock.finally` here?
`res.isWorkflow()` is not used anymore.
I think this should be `orderPath`
This is a bit confusing, since the desired DOM structure is not a `the`.
I think this is wrong.
Can't be reverted.
I think this is not needed.
I think we should add `css!components/listview/listview` to the `local-to-unit` list.
Shouldn't this be `AccessLogHandlerImpl` ?
@matt-gardner How does this work?
I think this is a good change. The test class is still using the `log4j` class.
I think this interface is not needed anymore.
I think we should remove the overrideEnableDebug bool here.
this is not needed, you can just use `@videos = Video.published.recently_published_first`
Shouldn't this be a `catch` block?
I think we should be using `felix_path` here.
I think it would be better to have a `bytes` function that returns `null` and then use `boolean` here.
@jcotela is this file still needed?
This is not needed. It will be a bit more efficient if you pass in the `self.legend_opts` object, but it will be a bit more efficient.
I think we should just return an error here.
Why is this TODO removed?
This is a bit of a hack, but I think it's better to use a simple string like `assert_where(email_address, email_banned?(email_address))`
I think we should use the default context here.
This is the only place where we need to keep the old behavior.
This is the only change that will break the code.
`self.unix_socket` is no longer used in this PR.
I think this is the fix.
Shouldn't this be `!parentRole || isListRole))`?
Nit: remove empty line
I think we should add a `AddView` method to `instrument-interpreter-instrument-config.js` to make sure we don't have any additional config for that.
I think you can remove this line
I'm not sure this is the right fix.
This is a bit of a hack, but I'm not sure if it's a good idea to use the `size_t` constant here.
Why change this?
This is the fix.
Use the new Ruby 1.9 hash syntax.
I think this is a good candidate for RequestFactory to be RequestID.
Can we just use `target.TargetBuildMetadata` here?
Should we have a test case for this?
I think we should update the copyright year in the copyright year in the copyright year in the copyright year.
I think this is not the right place for this. The `dest` is used to get the `dist` from the `package.py` file.
We should probably check that the default_proc is 0 if there are no fields.
Why this condition is removed?
I think this is a good idea to have a test that allows us to run the tests on the same page as the tests on the same page.
Why is this change required?
I think this is not right. We have a `context.Background()` call in the `shutdown` method.
Probably should call the new `fraction` here
This should be `msgInboundDispatcherNotRunning` (and `msgInboundDispatcherNotRunning`)
I think it would be better to put this in the `if config.ctu_dir and not self.__disable_ctu:` block.
Why are we removing this?
`amp-story.js` is not supported in IE.
I think we should be able to remove the `userscripts.UnsupportedError` here and just use `userscripts.NotFoundError`.
This is a bit confusing, as `value` is a `null` value.
This is a good change. I don't think it's a good idea to remove.
This is a bit confusing, the `if` should be removed.
`project` is a bit ambiguous, can we use `project.connect()`?
Is this change related to the PR?
I think you can remove this block altogether.
This should be split across multiple lines.
This is a bit of an unrelated change, but I think it's better to use a `Map` instead of `bytes` to avoid the exception.
It's not necessary to test the output of the resource_filename, but it's not necessary.
Why is this change necessary?
I think it would be better to use a `Objects.Objects` here instead of a `String`
This is not the only place where we need to check for null, right?
This is a bit confusing, why is it needed?
Nit: remove the empty line
Shouldn't this be `_tab`?
Why remove this file?
Nit: I think this is a bit confusing to read.
This is a bit confusing. What is the difference between `IAutomaticTracer` and `ICommonTracer`?
Is this change necessary?
I don't think we need this. We should probably make it a public constant.
This should be `reject`
I think this is not needed.
Please use `Collections.emptyMap()`
I think we should also add a message about the message. I think we should say "just work in the message, not in the message.
This is a bit confusing, as it is a list of `_ON` and `_ON` is not a list of `_ON` (it is a list of `_ON`).
I think this should be a constant in `stderr`
Is it possible to have a test for this?
Line is too long. [83/80]
This is a wrong place to put this import.
This is a bit confusing, why not just return FLB_RETRY instead?
This is a bit weird, why is the fullscreen always set to the value of the `desktop_fullscreen`?
@OneToOne is the only thing that needs to be added here.
I think this is a good idea. It should be `ACT:%+v\n`
Why not just call it `SecretTypeTargetLogDriver`?
The name of this variable is a bit misleading.
This is a bit odd, but I think we should just be looking at the `isRret` package and not have a `isRret` package.
Please add `mConfirmMenuDiscard` to the end of this field.
This should be `!is_string($media->getBinaryContent())`
Use the constant for bool and comparison.
We should add a `time.AfterFunc` method to enqueueBlocksToDeleteAfterShortDelay so that we can avoid passing the blocks in.
Why is this different than the `InvalidOperationException`?
I think this should be in a separate PR.
I would use `bool`.
why not just do `LOG(ERROR)`?
I think we can remove this line
I think this is a good place to put this logging. I think it's better to move this logging to `page_command` instead of `train_page`
This is the only change that affects TF providers.
This is a bit of a hack, but I think it would be better to use a `naturalComparator` method instead of a `contains`.
Why was this removed?
This is now unused.
Why is this needed?
This is a bit of a hack, but I think it would be better if we could just make it a `log` and `WithWith(telemetry.newnew(s)`.
`Outputs` is not a boolean, so this should be `multiple`.
I think this should be `metricsConfig.build()`
I think this is a bit confusing. What about `isSharded(server)`?
I think this is a leftover from the previous PR.
This is not used anymore.
I think this is a bit confusing, since the `VV2` is not a valid `\` (which is a valid `\`).
use `required=True` instead of hardcoding the value
Should we also add GhostTable to the doc that it's not used anymore?
Why not use `add_undo` directly?
Does this need to be done in the `marshalers.PushBackNamed` package?
This is a bit of a hack, but I think it would be better if we could just have a `layoutManager.tv` or `layoutManager.tv` and then we could have a `#tv` method that returns the keyboard object.
I think we should add a `setProperty` method to the `checked` field in the `newProps` field.
Why not just `package node`?
Does this mean that the value in the `content` will be used in the `download-directory`?
I think this is not the right place for this. The `RowKey rowKey()` is called from `RowKey rowKey()` in `lib/core/utils.go`.
This is a change in behavior, but I think it's better to use PJ_LOG_NONE instead of PJ_LOG_ERROR.
What does "1.5.0" mean here?
why change this?
I think this is still not needed anymore.
Thanks for the PR! I've been using `usingAnyFreePort` as a method to return the `info` value. I think it would be better to use `usingAnyFreePort` as the name of the method.
Why are we returning an singleton alert?
This is not a big deal, but it's a bit confusing to have a `public static final` field in the constructor.
This is a regression.
Why not use `omp_get_max_threads()` here?
I think we should remove these these constants.
I think we should move this to `_execute`
Is this import still relevant?
why is this being changed?
Why is this separate from the other imports?
I think we should keep this clean up for now, but just wondering if we should keep it for now.
I think this is a little confusing. What about `d.outbounds()`?
This is a bit of a hack, but I think it would be better to use `TResult` as the default.
Is this necessary? I don't see it being used anywhere.
This is a breaking change.
same here, we can use `\`
Is this a TODO?
This is a breaking change. The previous implementation of this method was using the API to create a new API which is not the case. The API call here is not the same as the API call.
I think this is not needed.
I think this is not needed.
Should be below the group below
I think this needs to be `args` since it's a `install` method.
This is not the right place to put this. The `if err != nil` check should be redundant.
Why not using the `//` file as the other one?
`this.passcodeLength = passcodeLengthKnown` is not needed.
I don't think we should remove this.
This is a bit of a hack, but I think it's better to use a string here.
I think it would be better to use `.build()` here, since it is a list of `null`
This is a change in behavior, but I think we should be checking for `.Pagination` here.
I think this should be `f.Vectorized == nil`
TIL about `.new`
This is a breaking change.
I think this should be `if not x86_64`
This is a breaking change. You can just remove the pipeWriter variable from the constructor.
Style/RedundantReturn: Redundant return detected.
I think we should add a `HumanReadableName` to the `ActiveRecord` as well.
I think this is a bug fix?
Why does this change?
This change is not needed. `MongoError` is an instance of `SimpleError`.
This is a bit of a hack, but I think it would be better if we could just return `true` here.
This is a good place to put this class. It's not a good idea to have it here.
This is a bit of a hack, but I'm not sure if it's worth it.
This should be `Error` instead of `Error`
This is a breaking change, but I think it's better to just do a `return False` here.
I think this should be `procCodeB < procCodeB` instead of `sensitivity: 'base'`
This is a bit of a hack, but I think it would be better to use `executionOptions.size() > 0`.
This is a bit of a hack, but I think it's better to move this logic into `EnsurePoliciesAttached` and then just call `s.EnsurePoliciesAttached(role, aws.StringSlice(policies))`
Why removing this?
What is this doing?
should we add a check for null and empty string here?
I think this is not the right place to put this. The `Create` method is used in `Create()`.
I think we should use `WHEN cardinality(parts, -1)` here.
Please add a space after `}`
this looks like a typo
Why is this in `mysteriumnetwork/node/session/payments`?
Why did you change this?
This is not a number of bytes.
Can we use `settings.get_settings()` here?
nit: remove trailing whitespaces
Can we make this a default value?
I think we should remove this line
remove unused imports
This is the only change that affects TF TF.
I think this is a little confusing. What about something like `isInIPDscp`?
This is a bit of a hack, but I think we should just check if the user has a name like `CXSmiles` and then check if it's a bool.
This is a bit of a nitpick, but I think it would be better to have a `type` function that returns a boolean, and then call it `dict` or something like that.
Why not `final`?
Why not just pass the entity directly into the entity?
I think we should just return `IP faked: ", client.ip` here.
Can you please add a `using` statement here?
These are not used anymore.
This is a bit confusing, why is the `ContentUploader` still used?
Do we need to add the `.spec.icult` here?
Why are we returning an error here?
remove this line
this method is synchronized, not synchronized
Put one space between the method name and the first argument.
@Leemoonsoo avoid using a "Este" here.
you can remove this line
why is this removed?
Can we just remove this? It's not a big deal, but it's a no-op.
can you update the `.complete?` to use `.complete?` here?
I think we should return an error here.
don't need this, you can just add the `git grep --py_prep` env variable to the `setup_index` method
This is the fix.
This interface is not used.
I think we should use `r._parentDom = new._component` here.
I think this is not the right place for this. The first part of the method is not used.
`options.openArtist` is not used anywhere else, so can remove it.
This is not the right place for this. The `arguments` argument is used for the `url` array, so it is not the same as `url` (and it is used for the `arguments` array).
Can we have this as a constant?
It's a little confusing to have a `_get_selenium_options()` return a `Optional` object, but it's not a `Optional`.
nit: missing space after the comma
@citizen428 I think we should be able to remove the `update_update` method entirely and just call it in the controller.
Why is this needed?
No need to have this in the list, just use the `ADC0` above.
This is a good change. I'm not sure if we should be using the API here.
Prefer single-quoted strings when you don't need string interpolation or special symbols.
"The value to 'false' in production enviroments. It's recommended to set this value to 'false' in production enviroments.
I don't think this is needed
I think this is a bit of a hack. I think it would be better to just have the `StartMetricsSession` function return the `DisableMetrics` object.
Why not use `.Join` here?
This is the only place where we should be doing the `provisionFailedTerminal` check.
This is a bit of a nitpick, but I think it would be better to have a return here instead of a string.
This is not the same as the "hardcoded current size" part.
I think this should be `return nullptr`
I think we should change the name of the spec.
I'm not sure this is the right place to put this. Is it possible to have an error code in the code?
This is a breaking change. It's not a good idea to have a `update` method that takes the `update` parameter as a parameter.
Nit: I think we usually use `errors.go`
I think this should be `push` instead of `memoize`
I'm not sure if this is the best way to do this.
This is a bit weird, the `Deflate` has a `dictLength` and `blockLength` is a `dictLength` (which is the only thing that is being used in the `Deflate` class) and the `dictLength` is a `dictLength` (which is the only thing that is used in the `Deflate` class) so I would just remove the `dictLength` class and just have the `dictLength` attribute.
This is a breaking change.
This change is not needed.
Please use `<=` to reduce cout<< warnings.
I think this is not the right place for this.
Please don't change the version of the Solarisers.
I think this should be a global var instead of a global var.
This is a bug fix.
Why is this check needed?
Maybe we can add a TODO here to make sure the client is not received as a TODO?
@matt-gardner Is this the correct way to do this? I'm not sure if it's a good idea to have a network in the config file.
This was a bug in the first place.
What about the `if` statement?
I think this should be a bit more specific, e.g. `attrs.get('roleText')`.
The `dcontext_t *dcontext` is already a `*` so this should be `dcontext_t *dcontext`
nit: remove extra empty line
What's the purpose of this change?
This is a bit confusing. Why is this needed?
Why are you using `std::string` directly?
@michaelkuhn should we move this to the new feature?
This is a breaking change, but the `CacheBuilderSpec` is not used in the `@Nullable` package.
I think we should remove `Header` here.
Why did you change this?
This is a bit confusing, why is it needed?
I think we can remove this class entirely
`from pyramid import testing`
This needs to be a `nil` right?
I think this would be better as a check for `argSpec.isOption()`
I think this should be in the new `if (player->getVocation()->getId() != VOCATION_NONE) {` block.
Is there a reason why we don't do this?
I'm not sure if this is the right place to put this, but I'm not sure if it's worth it.
I think this should be `showSubjectInMessageHeader`
Why are we removing this?
I think we should use the `resource.find_by` function here.
could you please move this to the next line?
Shouldn't this be in the constructor?
This method was never called.
I think this should be `return {`
Shouldn't this be removed?
I think we should be able to remove this if videoConstraints is true.
I think we should remove this and add `extend FriendlyId` to the `watchable` model.
WasmAbi is not allowed here?
This is a bit of a hack, but I think it's better to just do a `defer` here.
This is a breaking change. I think it's better to have a `span.SetAttributes(entries)` method that returns a `span.SetAttributes(ctx)` and then call `.AddEvent` directly.
I think we should be using this function in `SearchTopology` instead of `Resources` since it's a few places in the codebase.
I would move this to the `configure` method, as it is used in the `configure` method.
Do we have a constant for this?
I'm not sure if this is correct. The `PyObject` should be used for the `MatchVectType` as well.
I think it's better to use `BlockHeight` instead of `uint64` as it is a bit confusing to read the interface.
This is a bit of a hack, but I think it's better to have a `Status OptimizerUtils::compareAndSwapBound` method that returns a `null` object.
Could you please add a little bit more details here?
I think this should be `o == null`
I think we should add a new exception to the `canBeSet` below.
Is this needed?
@jridgewell I'm not sure if this is the right fix. I think we should change the name of the test.
I think we should use the `vkGetQueryPoolResults` constant here instead of the `vkGetQueryPoolResults` API
I think we should have a separate PR for this.
I think we should keep the old version and use the new version.
This is not a string, but a string is not a string.
This is a bit of a hack, but I think it's better to just check for `log_key` and not just check for `ctx->log_key`.
This is the only change that affects TF providers.
I think this test is still testing the wrong thing.
Why are we removing the `Al::request` here?
This is not a pattern, but I think it's better to use a constant like `_attribute_ID` or something.
This is a very minor thing, but I think it would be better to have a `map` field that does the same thing.
I think this is not correct. It will be fixed in the future.
This is a bad merge.
I think this should be `type ScoreFunc func(swarm.Address, uint8) (stop, jumpToNext bool, err error)`
I think we should remove the `HeaderMD.Get` call here.
This is the only one that is used in the code.
I think this is a leftover from the PR.
nit: can we use `quoted` instead of `String text`?
I think we should keep the old name and add a new one.
Why are we using `models.User` here?
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
What's the purpose of this change?
I think we should add a `_dogStatsDMonitor` to the end of the list.
This is a bit weird, but the `sizeof` check is not needed.
I think this is not needed.
Please add `@Nullable` annotation for `null`.
This is a bit of a hack, but I think it would be better if we could just use the `GetValueHeaderValue` helper directly instead of the `GetValueHeaderValue` helper.
I think this is not right. The `getWorldType()` method returns true for the `DEADMAN` case.
How about using the `.decode()` here instead of the `.merge()` function?
Not sure if we need to specify the `ipvs0` here, but we should also add a `dodo` type to the `do` type.
`r` is a bit ambiguous, can we just use `if re.IGNORECASE.is_trivial()`?
Should we add a case for `authenticationService` here?
`proc` can be static, so you can remove the `warnings.NewFactory` here.
I think we should keep the command here.
@michaelkuhn Do you know why this change is needed?
Shouldn't we have a test for this?
I think we should be using the `int` here.
This is not a valid value. It is used by the `io.prestosql.plugin.hive.StringUtils#isNotEmpty` which is not the case for the `io.prestosql.plugin.hive.StringUtils#isNotEmpty`
This is the only place where `Dictionary` is set. Why is it needed?
Do we need to do this for us?
`index_scols` is a `List<Table>`, so this should be `index_scols = [...]`
Why do we need this map?
This should be a single line string.
why is this being removed?
I think this should be a `default RemoveFiles(String metadataLocation)`
This is a bit confusing. Why is this change needed?
I think this should be `count` instead of `count`
why this change?
nit: can we call this `violations` or something similar?
I think this is not right. The `if` should be `final`.
I think this should be done in the database instead of in the database.
I think this is a good change to make the task's `setObjectName` optional.
why change this?
(style) trailing whitespace
This is the only place where the ADIOS_HAVE_PHDF5 is used. Is that intentional?
This is a bit confusing. Why is it necessary to specify the ` {},` or `permissions`?
I think we should remove this check.
I think this is the only place where we use the agent.appendTaskENICapabilities()
I think you can remove the `a href` and `a` tag here.
I think we should use `test.DB` here.
I think this should be a warning, if the user doesn't specify a provided docroot at all.
I think this should be `log.Info("trie account integrity", "key", fmt.Sprintf("%x", k)`
I think this was accidentally removed.
@team_plans = TeamPlan.featured.ordered
I'm not sure this is the right place for this. The `sw_vers` parameter is used for the output.
This is the only change that affects chit. Why is this change needed?
I think this import is unused.
nit: rename to GenericDataFile to make clearer that this is a private method.
I think this is not needed anymore.
Can you use `_InternalFrame` here instead?
This should be `ResourceScheme`.
This is the only change that affects us, we should be able to remove the `SecurityProtocolType` from the `issubclass.java` file.
This is the only change that affects TF providers.
@agramfort this is the fix.
This was removed because the `script` component was not being used anywhere.
This is not needed anymore.
Does this need to be `bs.MarkUnknown()`?
This file should be reverted.
I think we should be consistent and use the `G` syntax for the `SingleOutbound` class.
I think we should add a `defer` to the response response body to avoid memory/connection leak.
I think this is a leftover from debugging.
This is a bit confusing, if the category is not in the database, the category is not in the database.
This is a breaking change. The only reason we're using this is to have the source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source source
This change is not needed.
I think we should use the default value for this.
I think this import is not needed.
Why do we need to set the double here?
This is a bit confusing, why do we need to add `res = fpgaPropertiesSetInterface(filter, ...)` ?
This is a bit confusing, since `ValidateSignature` is called from `nil` and not `nil` is called.
not sure if this is a good idea. The compiler will be to use the new `201 EMRFS commands` and the new `201 EMRFS commands` to be consistent with the rest of the file.
I think we should remove this line.
This is a little hard to follow. I think it's better to keep the old variable and just keep the old variable.
This should be `debug`
This is a service account, but the user is a service account.
I think this should be `Optional[str]`?
I think this should be `~/.pitea-us`
It's not necessary to call `free()` here, since `tmp` is a pointer.
This is a breaking change. It looks like the `valueProjection` was removed from the previous version of the `getField` method.
I think we should check for the return value here, as it's not a pointer.
This is not a good idea, but I think it's better to use a better name for this.
I think we should keep these `if`s.
This is a no-op, please remove it.
why is this change needed?
This is a bit of a hack, but I think it would be better to use `sigValidator` here.
This is a bit of a hack, but I think it's better to move it to the `common.CalculateHash` function.
I think this should be fixed.
I think this should be a debug message.
I think we should be consistent and use `InitialIntervalInSeconds` here.
I think we should remove the `IsSymlink }}` part.
This should be removed.
Please remove this empty line.
This is a bit confusing, since `attribute` is a `*` and `*` is a `attribute`.
Is this a breaking change?
Why do we have to set `isFocus=True` here?
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
`for i := 0; i < len(aps[i].Subjects)` is the same as `for i := 0; i < len(aps[i].Subjects)`.
I think we should use the `repo.CreateCreateRepos` here.
This is the fix.
I'd suggest to use `Settings.JSONBoolWithQuotes(DEFAULT_JSON_USE_QUOTES);`
I think we should be using `data._internal.copy(sampled, scol=scol)` here, as we're not using the `_kdf._internal.copy` anymore.
Would it make sense to have a test for this?
I think we should use `time.Minute` here.
I think this is a bug fix.
I think we should check for stock not empty here.
This is a breaking change, but I think it's better to move this to the top of the file.
Layout/TrailingWhitespace: Trailing whitespace detected.
I think we should be able to remove this from the API. We should just make it public.
This test is not needed.
I think this should be `config->http_proxy = getenv("HTTP_PROXY")`
Why do you need to add this?
I don't think we should change this.
Can you add a space after `if` here?
Is this a good idea to include the types in the UI?
I think this should be `compute_service_account`.
I think this is a bit confusing, maybe it's worth having a `GET_CONTEXT` field in the `GET` class?
Why not throw exception here?
I would say that it should be `positional=False`
This is a breaking change. It is not a problem, but it is a bad idea.
nit: I'd prefer if you could just inline this function and just inline it in the call site.
Why is this needed?
I think we should also test the forced=True.py
I think this is not needed.
keep_detector should be options_detector.
This is a breaking change. The only reason we need this change is to allow the `Integer` to be `int` and the `Integer` to be `int` (and the `Integer` to be `int`).
I think we should use the `testCtx` helper here.
This is a bit odd, we could just use `* 1 << 20` here.
I think this should be removed.
can we make this a const?
Why is this removed?
why we need to implement implement implement implement implement implement in the Set?
why is this include needed?
Why do we need to set `isOwner` here?
This change is not related to the fix, but it was just a mistake.
This change is not needed.
why are these added?
do you need this at all? you can just use `--class-wise` or `--no-wise`
This is a bit weird, it is already done in the context of the context of the category.
This is the only change that affects TF files. I don't think we need this.
Please use pyramid.scripts as the template template in pyramid.
Please don't change the variable name.
Remove empty line.
Please use `false` for this.
You can just do `def handler(operation: str, context: bool = True, override: bool = False)`
This is a bit confusing, why do we have to have a `.today` here?
this is the fix for the fix
This is the only thing that should be imported here.
We should add a TODO to remove this.
This line can be removed.
The formatting of this is not correct.
This is a good place to put this code.
`(0}", (totalRecordCount ? startIndex + 1 : 0)`
could be simplified to `assert_eq(np.nan, 2, 4, np.nan, 6, inplace=True)`
I think we should just call it `tls.TlsHandshakeHook`
Why is this needed?
Can you please add a space after the `if`?
I think we should add a check here that `if (editorClass == null) { ... }`
I think we should log the result here.
I think the seed must be part of the if/else block can be removed.
This test was failing because of the `treats iframe elements as regions` check.
Do we want to check for the user here? I think we should check for the user here.
Why is this import removed?
This is a breaking change. I'm not sure we want to change this.
Style/SymbolArray: Use %i or %I for an array of symbols.
I think we should keep this as it was.
Should we use `rule.FromScheme = "https"` here?
I think this is not needed anymore.
I think this is a good idea to log the resource in the `seelog` function.
I think this is still not needed.
This is a bit confusing, why is this needed?
I think we should be able to remove the `UseKestrelHttps` method altogether.
shouldn't this be `from()`?
I would move this to the `unistall-sw.js` file.
I think we should log the stack trace here.
We should rename this to `plzconfig`
This file should be removed.
I think you can just use `quilt-registry` here.
@deads2k @mfojtik why is this changing?
Use the new Ruby 1.9 hash syntax.
I think you can use `mSessions.size()` instead of `i`
I think this is not right. We should probably have a separate PR for this.
I think this is not needed.
Line is too long. [83/80]
I think this should be a map.
I think this should be `Object v1alpha1.InnerObjectWithSelector`
Why is this not just init?
I think this is not the right place for this. I think it should be a different name.
I think this should be moved to the `if (('value' in newProps) && newProps.checked !== dom.value) dom.value` block.
I think it would be better to use `vic-machine` here instead of `vic-machine` since it's not a module-level string.
Could you add a note that this is a new load balancer, and then we can add it to the load balancer?
I think this is a bug fix.
I think this is a bit of overkill.
Is this change necessary?
Why is this change needed?
Is this a typo?
Why do we need this?
@mikeshultz did you consider adding this here? I think it's fine to keep it as-is.
This was a typo.
I think this should be done in the `if` block as well.
Why is this necessary?
Is there a reason why we don't want to check for the root device?
I think this is the only place where we need to use `default` here.
I think you can remove the length_of="value" here.
Do we need to add a field to the struct?
I think this is not needed.
Why is this needed?
(style) line over 80 characters
I'm not sure this is the right place to put this. The `SUGGESTION` option is used to set the default to `None` in the test suite.
I think we should change the method signature to `first` and change the signature of `second` to `first`.
this is not the right place for this. `if self.num_of_searches > 0` is the correct value.
What's the purpose of this change?
"usually allowed for RPN and single stage detectors" sounds like a typo.
Shouldn't this be cfg.Server?
Should we also add a `label` field to the `aria-hidden` field?
I would prefer `mlflow` or `junit` instead of `mlflow` because it is not a very good name.
`default` is not a boolean.
Maybe we should rename it to `intermediates_manager`?
I think we should use `str` here.
What if datastore is datastore? Shouldn't we be checking if the error happens?
I think we should make this a little more explicit. I think it's better to make the context a little more explicit.
I think we should also use `COPILOT_ENVIRONMENT_NAME` to be consistent with the rest of the code.
I think we should be able to remove the `GetHostName` from the `DotNet.Attributes` file.
I think this should be 3)\n"
This file is not used anymore.
This is a bit of a hack, but I think it would be better if we could just use `!= "(none)` instead of calling `writer.WritePropertyName("libddwaf_version")`
This is not needed.
I think this should be removed.
This makes me wonder if we should have a `data::link` or `data::pod` that we can use for the `data::link`?
I think it would be better to use `.UserData?.PlaybackPositionTicks` instead of `.ochPositionTicks` here.
What about the config config parameter?
Should we use `\r{Task\ test::params:\n{Task\\::params:\n{Task\\::params:\n{Task\\::params:\n{Task\\::params:\n{Task\\::params:\n{Task\\::params:\n{Task\\::params:\n{Task\\::params:\n{Task\\::params:\n{Task\\::params:\n{Task\\::params:\n{Task\\::params:\n{Task\\::params:\n{Task\\::params:\n
This is a good place to put this controller. I think it's better to just pass the controller as a field.
Is this test needed?
Can you please explain why this is not a pointer?
why the change?
I think this is a bit confusing. I think it would be better to have a `/wow` prefix that does the same thing.
Can you move this import to the top of the file?
I think this should be `name: 'Analytics'`
This is a very old code and should not be deleted.
This is a bit confusing, why are we calling `host.Host` directly?
This is a bit of an unrelated change, but I think we should be able to remove the `startOf` function from the timeDuration.
why do we need to set languageHandler?
Why change the default value to `127.0.0.1`?
Can you add a TODO here to explain why this is needed?
I think this is a bug fix.
This is a breaking change.
I think we should just use `http.request.ok` here.
Is this really needed?
This is a bit of a hack, but I don't think it's a good idea to put it here.
This is not needed. It will be removed in the next PR.
This is a breaking change.
This is a bit of an odd place to put this check. I think it would be better to move this check inside the `if` block.
Note that this is a new function in daal_parameter.h, I think it's better to keep it in sync with the new data_use_in_model.h.
why not `static` ?
I think we should be able to remove the `ValueTask<(Keccak?, AddTxResult?)> SendTransaction(Transaction tx, TxHandlingOptions). SendTransaction(Transaction tx, TxHandlingOptions);`
I think you can just do `namePiece = replaceAcronyms(namePiece);`
I think this is a leftover from debugging...
I don't think this should be a separate PR.
this is not needed, you can use `openshift.openshift.io`
Do we need to do this after the `# :nocov` above?
I think this is not the right place for this, since it is used in the `aws-sdk-s3` package.
This is not needed anymore.
Use the new Ruby 1.9 hash syntax.
I think this should be `this.toolbox_.position()`
Is this the only usage of this method that is used for the `JsonFlow`?
Why do we need to do this?
You can use `URI.join(root_url, image_path(filename))` directly.
Can you add a doc to explain why this is necessary?
I think this is not the right place for this. It is used in the `TestPolicyRule` function.
I think it would be better to add a `opcache_invalidate` field to the `opcache_reset` field, and then use it here.
I'm not sure if this is the right place for this. The compiler will be able to get rid of it.
I think this should be a `Subscript` module.
Why did you change the miner to miner, 1?
Is this a global setting?
@tgamblin Do you know why this is necessary?
I think you can just remove the `loopBody` variable and just call `loopBody` here.
Is this related to the rest of the PR?
Maybe we should use `from datatable import f` and `test_util.py` to get rid of this import.
why not just `if len(tasks) > 0 {` ?
This import is unused.
Is there a reason to use `FIPS region not allowed in ARN` instead of `a.Region`?
I think we should remove the `s3control_stubber` import from `stubber` and use `s3ControlStubber` here.
why do you need to set this to 12?
why not just return bt.limit?
I'm not sure if this is the best way to do this. I'm not sure if it's worth it to make a `skip` method, but I'm not sure if it's worth it.
why not just `["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["
I think this should be `cp65001.get('utf-8') if name == 'cp65001' else None`
I think this should be `OpenTelemetrySdkEventSource.Log.MetricInstrumentIgnored(..)`
I think this will be a breaking change.
I think we should remove this line.
Why not just make this a `aware_SRC`?
This is a bit of a hack, but I think it's better to just remove the `Failed because:...` and just use `Failed because:...`
Do we need this to be in the new blockNum?
This is not needed.
Please remove this line
I think we should use `for range.Stop()` instead of `for range.Pod`.
nit: I think this should be `static`.
I think this should be in the `ifndef` block.
I think this is not a good idea. The `*` import is not used in this file.
I think this is not needed.
This is a bit of a nit, but I think it would be better if you could just pass `os.Exit(2)` as a param to `os.Args[1] == "help"` and then use `os.Exit(2)` in the function.
This is a bit confusing, why not just change the path to `scWorkingDir`?
Do we need to update the tests for this to pass?
This should be a different commit (and the next one).
This should be a `@Path`.
This is not needed.
This is a bit of a hack, but I think it's better to have a test that checks whether the user has the same effect.
We should use the full name of the package.
This is a bit of a hack, but I'm not sure if it's worth it.
Should we also have a test for this?
This should be a constant.
This is a breaking change.
I think this should be in `validate genesisblock` instead of in `time.New`
I think this is a good idea to add this to the `MakeDiskBlockCacheIfNotExists` interface.
This is a bit weird, why do we need to set it to `nil`?
This is a bit of a hack, but I think it's worth adding a `cart` to the display display.
You can use `elif isinstance(offline, list) and \` here.
This is a bit confusing, as it's a bit confusing to have a `fmtJobInitTypeHelp` defined in the response. What do you think of: `A %s is a task which can be programmatically run, either on a schedule or via via`
This docstring is out of date.
I think this should be done in the `if window.isFullScreen()`, since it's not a window.windowState()
This change is not needed.
Why do you change the cast to `flatbuffers::uoffset_t`?
Can we just remove this TODO?
This is a bit of a hack, but I think we should be using `Map.interpreter(request.connection.destroy())` here.
This is a bit confusing, since `skip_links` is a `a` element, not a `skip_links`.
This is a bit of a hack, but I think it's better to use a `!result == VK_INCOMPLETE || result == VK_INCOMPLETE`.
I think we should add a `DockerEngineValidator` interface to the `EngineValidator` interface.
What's the reason for this change?
This is not the right place for this. The `\*` prefix is used for the `C:\M`, which is not the case for the `C:\M`.
Why did you change this?
This is a bit of a hack, but I don't think it's a good idea to use `profile.as_json` here.
I think this is the only place where we need it.
I think this is not right. We should be able to remove the `name` part and `name` part.
I think this is a good idea to go. The `rowIndexMapper` is not a `Object`, so it's not a big deal.
@jridgewell I'm not sure if this is the right place to put this. I'm not sure if this is the right place to put it.
Could we move this to a `before_close` method so that it can be called directly?
probably change the min_x_layout_output to be consistent with the other uses of DBL_MAX
I think this should be `!= 0`
I think we should keep this line as it was.
Trailing whitespace detected.
I think this is a good change. The new code is not correct.
why is this change necessary?
Is this needed?
why remove this?
This is not the only change required to the `MessageDefaultError` function.
I think this is a bit confusing, it's not a tautology of the test.
Should we add `wireguard.cali` here?
This is a bit of an unrelated change, but I'm not sure if it's worth it to remove it.
I think this should be `if err != nil &&`
I think we should keep the timeout here, but not the other way around.
I think we should remove the metadata table from the base class.
I'm not sure this is the right place for this. It seems like it should be a `num_levels` argument.
This should be `cls.__a = ''`, right?
you should create a new `create_no_window` method in this file, to avoid the `create_no_window` API
this was the only change that affects the old plan?
I think this should be `form-group clear-fix`
This is a bit weird, why do we need to set it to false?
I think this is not a good idea. The `*` should be `*`.
I think we should add a `c.Req.Method == "OPTIONS"` here.
This should be `Namespace`
This is a BC break.
Why is this being moved?
We need to keep the code consistent with the rest of the code.
Please avoid use of `*` in imports.
why not use `CandidatesByHeight` here?
This is not a valid value. It should be a `Object.keys`.
This file is not needed anymore.
this is the main change.
I think this should be `options.Distribution = Options('style', muted_alpha=0.2)`.
Please remove the assert
This is not a good idea, but it should be a bit more explicit.
I think you can remove this check.
We should add a `:param` param here to make sure we don't accidentally modify the `:param` param
I don't think we should be changing this. The message is a bit misleading.
I think this is not the right place for this method. I think it would be better to use `.find_by(unfiltered)` instead of `.select`
I think we should be checking for `err.opsByFav[fav]` here.
This is a very good change. The code in `VOLATILE_SCHEMA` is not a correct value.
Is this the right way to do this? I think it would be better to move this logic into `DefaultErrorFunc`
I think this is a good idea to move this to the `HttpMatch` class.
I think we should probably have a `user: :observers` as well here.
I think this is a good candidate for `Encoding` to be `HOST`
remove this file. it's not used anymore
This is a bug fix.
I think we should be more specific here. `ctx.Done()` is not a valid process, and we should be able to get a process that is not supported on the server.
I think this should be `if (p_jmsg["compress_method"] != nullptr)`
The errorDialog is not supported in the error.
I think you can remove this line now that you have the `includeme` function below.
I'm not sure this is the right fix. The `sizeof(unsigned req_done)` call here is a bit confusing.
can we add a check to make sure the time is not null?
Do you think it's worth adding a description to the description of the `border`?
Can you add a ` angular angular` to the folder folder?
This is not needed.
Why is this being removed?
This is the fix. We should not be calling `Meter.Name` here.
Why not just check that `$this->getAuthManager()->getAuthMethod() == 'Shibboleth'`?
How about adding a `memcpy` method to `segments`?
This method is used in `update_attributes` - should it be called `user_data` or something?
@mmaxim this is the fix for the `relocated_environment` function.
I think this should be `1`
This should be removed.
Why are these removed?
I think this interface is not needed.
can we just use the same interface for the entity_list.GetNPCByNPCTypeID() ?
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think you need to do this in the `Window` model, it's not necessary to do it in the `Window` model
Should we have a `index` or `index.index`?
shouldn't this be hexa?
I think this is a bit confusing. I think it's better to have a `@throws` here.
I would use a `getResourcesField` here.
I think this is a good idea to add a `@property` annotation to the `messages` class.
this is a good change. we should not have a method that takes a `EntityManager` as a parameter.
Is there a reason we don't use `new AzureSdkDiagnosticListener()` here?
this is the only place where the parameter name is used.
This is a little hard to read. I think we should be doing the same for the remote build action, not the remote build action.
Why not just call `status` directly?
I think we should be able to remove this and just have the `IsWritingCatchpointFile` return `true` by default.
We should probably have a test for this.
nit: `Array.isArray(collapsibleColumns)` would be more clear
Why are we returning an error here?
I think we should be using `Password.getAuthdata` here, since it's not a part of the `sdkAuthConfig`
This should be a `public`
Can we use `type` here?
This should be `InitFSRepo`.
We should add a note that this will be properly mounted in Vault.
I think you can just do `if not ...` and avoid the `except`
I think it would be better to add a default value to `FetchUntilEmptyPage` and then call it `page_fetch_threshold` to make it clear that it is not used anywhere else.
Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.
This is a change in behavior, but I think it's better to have a table that is passed in.
I think we should log the log level here.
remove this line
This is a bit of a hack, but I think it's better to use a `Log.Error` method that returns a `null` object.
I think we should be able to remove this and just use the `.io` package.
I think we should make this final.
I think we should be using `base.new()` instead of `case` here.
This is a test, but I think it's better to use `NewController` instead of `NewController`.
@Kyung-minAn Is this the right way to fix this?
`if ex_save && guidance.save : 'example answer'` would be more appropriate here
remove this line.
I think we should add a `borg.mule.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime.runtime
Does this test really belong in this PR? I'm not sure it's worth it.
This is the only change that affects TF TF codegen.
I think we should be consistent and use `BlockHeight` instead of `types.SignedMessage`.
I think it would be better to move this method into `get_lifecycle` function.
It looks like this field is unused. Can we remove it?
why is this necessary?
This is not a `@Nullable`, right?
Remove this line.
is there a reason why we don't use the old versions?
can we create a new instance of chrome driver?
I'm not sure if this is the right default. I think it should be set to true by default.
This is a change in behavior, but I think it's better to use `const` instead of `const` here.
@jsoriano Is this a bug?
Why not just remove the `nameof`?
Why not just use `FullCertChain` here?
I think this should be `MetricMetricMetric`
This is the only change that affects TF providers.
This is a bit confusing, why do we need to return an error?
Do we need this?
Nit: please revert this file.
I'm not sure if this is the right fix. The `cci->num_regs_skip == 0` check should be fine.
This is a bit confusing, we can just use `sdk.Provider` here.
this should be `// TODO: "it is not relevant."
This is a bit of a hack, but I think it's better to have a test that checks the value of `f` and then check if the value is `None` and then check if the value is `None` and then check if the value is `None` and then check if the value is `None`
I don't think this is the right approach. It's not the language at all.
Should we use `.to_sym` here?
This should be a constant.
Line is too long. [89/80]
nit: rename to `BACKEND_SERVICE`
It's not clear to me why we need to do this. It's not a good idea to have a `CheckForNull` method that is called from the manifest.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
We should update the list here to reflect the new list.
Can we make this a `static` instead of a `static`?
This will need to be reverted.
Should this be moved to the `remove_all_changes` function?
Please use `org.apache.commons.lang3.StringUtilsUtilsUtils`
I think it's better to use `GroupMembers` instead of `Pods` here.
I think we should keep these as they are for now.
I think this is the wrong place for this.
I think this should be a different type of flag.
This is a bit confusing, since `bulk_pull_blocks` is a `null` check.
I think you can remove this
Block has too many lines. [29/25]
I think this is the only change that affects the `if` condition.
We should probably have a unit test for this.
Why is this not an error?
I think we should remove this.
I think this should be `HOST = 'localhost'`
Why do you need this TODO?
These fields are not needed.
We should not use `insight` in this PR.
Is this change intentional?
I think this should be done in the `qtbot.add_widget` function.
I think this is a bug, we should just remove it
should be `\r`
This should be `maintainer` instead of `maint`.
`osp.basename()` can be replaced with `.get()`
This is a bit of a hack, but I'm not sure if it's worth it.
This is a breaking change. It is not a good idea to have a test with a `FileCatalog` attribute.
I think we should use `isort` here
I think this is not needed anymore?
Why not use `ErrorListener` here?
I think this should be `resourceDefinition.ResourceType = resourceType;`
The `ChainID` is not used in this function.
We can remove the `@see` annotation here.
Shouldn't this be `violation.get('resource_name', ''),`?
@mfojtik @mfojtik @mfojtik @mfojtik @mfojtik @mfojtik @mfojtik @mfojtik @mfojtik @mfojtik @mfojtik @mfojtik @mfojtik @mfojtik @mfojtik @mfojtik @mfojtik @mfojtik @mfojtik @mfojtik @mfojtik
I think this should be a separate `data` and not a `artist_name`.
This should be `strncpy`
This file is not used anymore.
This is a good change, but I think we should be able to remove the `ws` variable from `NewWorkingSet` now.
Should we add a `time.Duration` field to the top level `c2h5oh/datasize`?
Is there a way to avoid this check?
I think we should have a log message here.
I'm not sure if this is the right fix.
(style) do not initialise globals to false
I think this is not correct. The test is not correct.
I think this is a leftover from the main module, and it should be moved inside the `if (!renio.utils.hash)`.
This change is not related to the PR.
Please remove this line.
We should add a `//` tag to the `EnableAdminAPI` tag.
This is a little hard to read. I think it would be better to have a method for this.
I think we should make these constants in the `configMaps` and `configSecrets` fields.
Why not just add the `@throws` annotation?
nit: can we rename this to browserStartCommand?
This is not a new instance, it should be moved inside the `if (softmax_param.clear_loss_weight())` block.
I think we should check if the prefix is `false` here.
This should be `@context`.
I think it would be better to move this to the `showYear` class.
I think it would be better to check the return type of `data` here, and have the same result in `with tgt.close()`
I think we should be using `eni.guard.RLock()` instead of `eni.ExpiresAt`
This is a bit weird, why do we need to return `true`?
This is a bit of a hack, but I think it would be better if we just pass the `data` into the `executionFee` variable instead of passing it as a variable.
I think this is not the right fix.
This is a breaking change. The `EnableInfiniteTimeout` is used to set the default timeout to `true` in the `updateInfiniteTimeout` which is not the case for the `EnableInfiniteTimeout`.
This is the only change that affects TF providers.
The `stages` should be added to the `Provider` package.
Line is too long. [81/80]
This is not the only change required in this PR.
`more_horiz` is a little too generic. Why is it a constant?
Please add docstring for this new parameter.
I think we should be able to use `ResourceSourceSource` here.
This is a breaking change.
This test was not working before.
Can you add a `# pragma: no cover` here?
This is a bit of a weird change. Why is this needed?
I think we should remove this line.
I think this should be `int[]`
Is this needed?
This is the only place where we're using this. The `Client` is used is a `KinesisConnectorConnector` which is not the case for this case.
This is the only change that affects TF TF.
This is not needed.
Why removing this parameter ?
This is a bit of a hack, but I think we should just make the `-40` a `-20` flag, and then use `-20` to get the `-40` flag.
Please remove the config from the config.
I think this is not the right way to do this. It's not the case, but it's not the case that the value is not `None`.
why is this not needed anymore?
Is this the correct way to handle the plural endpoint?
This is a bit of a hack, but I think we should be using `_clear_types` here instead of `_clear_types` since it's not a boolean.
I think this is a bit of a hack.
This change is not needed.
This is the only change that affects TF TF codegen.
This is a bit of a hack, but I think it would be better to have a method called `getRawUserQuery` that returns a boolean.
I think it would be better to have a method `address` and then use `address != null`.
The original version was causing the build to fail. This is the only real change I'm not sure.
This is the only change that affects TF providers. I think this is the only change that affects TF providers.
I think it would be better to use the `getQuery` method instead of the `getModificationDateFieldName` param.
Unnecessary spacing detected.
This is a very old code and I'm not sure it's worth it.
I think we should be able to remove this method entirely and just call the method `@proposal.currently_awaiting_approvers` directly.
These two lines are not needed anymore.
Shouldn't this be setHours() instead of setHours(0, 0, 0); ?
I think this should be `ipsets`
nit: `import typing as typing`
You can revert this change.
Why did you change this?
I think this is a bug fix.
I think this class is still used in this class.
Please revert this whitespace change.
Should this be public?
I think we should add `@Deprecated` here.
@xmatthias I think this should be `index_map = [(SPARK_INDEX_NAME_PATTERN, None)`.
I don't think we need this here since we already have a `.to_i` in the `.rb` file.
This will need to be done in a separate PR.
Please use `change` to avoid the final log message.
It's not necessary to use brain_dataclasses in the codebase.
This should be done in a separate PR.
another option is to use `backend.get('resourceGroup'))`
Why do we need to abstract?
can you make countable subscriptions a constant?
I think this is a bit confusing, since the limit is already in the IPv6.
This is a change in behavior, but I think it's better to keep the original version of the code.
Why not keep the private method as public?
I think you can remove the `type0.getType().isEnum()` check here.
nit: I think this should be `cls.handlers[name] = function`
Please use `useInView` from the `push-engine` interface.
I think we should be using the `menu` here.
This is a bit confusing, why is it needed?
Why is this necessary?
Can we just use `Metadata` instead of `Status`?
This is a bit of an odd place to put the `<meta charset=\"UTF-8\">\n"` in the `<head` tag. I think it would be better to use `<meta charset=\"UTF-8\">\n" +` instead of `<meta charset=\"UTF-8\">\n" +`
This is a bit confusing, why not just have a `defer` block?
This is a breaking change. Why is this necessary?
I think we should keep this method and just call `GetLogger` directly.
nit: this is not needed.
I think this should be a debug level log.
We should probably check that the last two conditions are coming from the same page (and not from the same page).
Missing space after ` like`
the `name` is not the correct error message here.
I think we should be able to use the `self.options` here instead of the `kwargs`.
Can we make this `Interface interfaze` instead?
What's the point of this change?
This change is not needed.
Why not use the `ctxUser.DisplayName()` directly?
I think this is a leftover from the previous PR.
Should this be `find`?
We should probably make this a constant.
This is a change in behavior, but I think it's better to keep it as `options.compareStartDate` and then just use it in the `startDate` method.
This is a bit of a hack, but I think it would be better to have a `Clear` method that returns a `StringMap`.
I think this is a bug fix.
Remove the debug level
This is the change that breaks backwards compatibility.
I think `index.Index` is a better name for this type.
why change this?
Should we make this `convert`?
This is a change in behavior, but I think it's better to be explicit here.
I think we should use a more specific name for this than `aspnetcore.requests.failed`
I think this is not the right way to go. The `transpiles` plan is a path, not a path.
@mmaxim this is the only change needed?
I think we can remove this interface.
This is a bit of a hack, but I think it's better to use a context.Background() instead of a context.Background()?
This is the main change.
This is the only change that affects TF providers.
I think we can remove this too
I think we should use the URL instead of hardcoding the URL here.
`import datetime` is not used anymore.
This is a bit confusing, since the color type is `text` in the `target.actualNode.type === 'text'` (which is what we want).
Why is this needed?
This is not the only place where we use the `lear.Obsolete` function. I think we should just use the `lear.Obsolete` function.
I think this is a bit confusing. What about `server.conf`?
You can use `indexScanBuilder.addColumns(tableInfo.getColumn(col.getName()).toProto(tableInfo));`
This should be added to the `TestResultsFile` package.
This is a bit confusing, why is it a scope?
I think this is a little confusing. I would expect `obj.to_csv()` to be a `list()` method.
I think this `header` is unnecessary, it is already in the `title` view
Why not use `-1` here?
I think we should keep the docs here, because the docs docs will not be found.
I think we should be able to use `quic` here instead of `http`
why change this?
Line is too long. [83/80]
Why did you change this?
`StringUtils.isNotEmpty(table)`?
This file should be removed.
I think this is not correct. The `byte[]` is not used in this case.
Can you update the description to mention that this is a tile?
Why is this being removed?
I think we should remove this argument. It's not used anymore.
Cgroup ->external_cgroup
can you add a `<%= t '.header` suffix to make sure it's not compatible with the other form?
This is a bug fix.
I think this is not needed.
this is not needed, it is already in the cache
I think this should be `@Nullable`
This is a public API, not an issue.
can you please change this to a utils?
This is the only change that affects TF providers. I think it should be reverted.
This is a bit of a hack, but I think it's better to do a `CreateEnvironment` in `spinner.Stop`.
I'm not sure if this is the right place to put this. The only place it is used is is that the code that is not in the code that is used is in the code that is not in the code.
I think this should be `Get`, not `Send`.
add `,` to the class
There is no need to change this line.
Why do we need this file?
Why is this needed?
This is a little hard to read. I think it would be better to have a `getSessionCount` method that returns a boolean and then call `getSessionCount()` on it.
I think this is a good place to put this function. It's probably better to have a `default` as a separate option for now.
We should probably make this a separate method for now, but I'm not sure if we should be using `.proposal` here.
this is not needed anymore
This is not correct. The first condition should be `sep==0`
I think this should be `opts_.scoped_enums &&` instead of `opts_.scoped_enums`.
I think this is a bit confusing, because the key is a string, and the key is a string.
This is not the only place where we need to do this.
Can we move this to `process.argv.push()`?
This should be moved to `else` block.
This is a bit of a nitpick, but I think it would be better to use `err.Error()` instead of `err.Error()` here.
I think this file should be removed.
This test is not needed.
This should be `type(as_index)`
why not just `$currentVersion`?
Is this needed?
I think we should be able to use `sig.trim()` here.
I think this is a leftover from the previous PR.
This is a bit weird, why is it needed?
Use nested module/class definitions instead of compact style.
Should we add a `ClusterInfo` field to the `KinesisComponent` struct?
This is a good place to add a new parameter to the server. I think we should keep the old parameter and have it be the same as the new parameter.
Why is this needed?
I think you can just do `fn => fn.clear()`
I think this is not the way to go. It is not the way to write `when parent validation of child is set to true` and then `building` is `building = Building.create`.
Does this need to be a bool?
I think this is not needed.
can we move this up to the top of the file?
This should be `!==`
Nit: I would call this `bhTarget`, `TargetTypeNoEncap` or something like that.
I'm not sure if this is the best way to do this. The `PORT_S3` method is used for `PUT` (and `/<bucket>/object`) so it's not a valid URL.
I think this should be `final`
The result is a bool, so it should be a bool.
This should be included in the C++ standard library.
This import should be removed.
Should this be `GetOrCreateRootNode`?
I think this is a good change. It's not a good idea to have a separate file for each one.
Why remove this?
I think this should be a try/catch around the try/catch block.
Should we make this a `|| false`?
This is a breaking change.
no need for `setJavadocComment` here as well
I think this should be a constant.
Can you explain why this change is needed?
The `Unit` is used in `pkg/unit`, so I think it should be moved to `pkg/unit`.
nit: this import is unused.
This is a change in behavior, but I think it's better to be explicit here.
I think this is not correct. `!_this.getValue(path) && pType !== 'boolean')` is fine.
I think we should check for `isNaN` here.
this is not needed, transport is always 'ssh'
`?` shouldn't be necessary since it's only used in the `boolean` method.
@deads2k @tnozicka do you have any idea why we need this?
We should probably add an example here for the new `UpdateNameMapping`
This is a bit of a hack, but I think it's better to use a `IpcEnv()->getAllConnections()->waitOnAll(0);` as the default value of `waitOnAll(0)` instead.
What is the use of this?
Can we just do `Array.Reverse(bytes);` here instead?
This is a change in behavior, but I think it's better to have a test that checks whether the vendor exists or not.
I think this is not right. The only caller of `Post` is to throw an exception if the collection is not a collection.
@jsoriano Is this what you want? I don't see any other options for this, but I don't see any other options.
Do we need to set the namespace to the context here?
This is a bit of a hack, but I don't think we should be using this method anywhere.
I think this is a leftover from the previous PR.
Please remove this empty line
I think this is a bit of a hack. I think it's better to have a `useCallback` function that returns a `null` here.
should we use the `QueryEngine` here?
Why not just do this in `test_pool`?
I think this is a good place to put this logging. I think it's better to move this logging to `page_command` instead of `train_page`
This is a little confusing. Why is this not a pointer?
I think this should be `Dockerfile` instead of `config_dict` (and the corresponding `cfg` above).
I think this is a good change. The `VoucherInterval` field is used to set the `channel` value to `true` in the `VoucherInterval`.
Should we make this a `span.AddAttributes` function?
This is a breaking change. I think we should just make it `int` and use `int` instead of `int` for consistency.
I'm not sure this is the right place for this. I'm not sure if it is worth it.
I would use `nameof` instead of `nameof`
This is a good change. The code in `getClusterStateReader()` does not have a `getCollection` and it is not a `Collection`.
If we're going to be null here, we should probably also check if the snapshot is null.
This test is not needed.
I think we should be more specific here. `unless val.is_a?(Hash)` should be `unless val.is_a?(Hash)`
This is a test that was not working.
Do we need to check for `currentDataLoaded` here?
I think we should be using `world_comm_ptr` here.
Why are we changing this for backward compatibility?
Remove empty line.
Why are we changing this?
`!` is not needed anymore.
We should probably check if `!= nullDom` is false here.
The `message` was not being used in this PR.
Is this change intentional?
Can you add a `TODO` to remove the plugin from our internal container?
I think we should remove this.
This is the only change that affects TF providers. I'm not sure if this is the best way to go.
I think we should be using the `cborStore` here.
Does this mean that the `.process()` function will return `None`?
This is not the only change required to add the `@Override` annotation.
nit: `bool feat_is_unconstrained = !config_.monotone_constraints[i] == 0`
I think this should be `apply`?
Do we need to call this nodeRoleTagValue?
I think this is a leftover from the CI failure.
I think we should move this to the new module.
I'm not sure if this is the right default. I'm not sure if this is the right default.
No need for these.
I don't think we need the `id` here since it's the manifest
I'm not sure if this is the right default. I think we should default to `false` if we want to default to `false`.
This is the fix.
I think you can remove this line
why is this 0x8000?
Shouldn't this be a `@VisibleForTesting`?
why is this removed?
What is this change for?
This should be an `Collections.Generic`.
Why is this needed?
Should this be in `requirements.txt`?
I don't think you need to do this.permissions.length = new ObjectPermission(privilegeType, permission.getGrantor(), permission.permissions);
I think it would be better to use `Map<...>` instead of `synchronized (electionContexts)`, since it's a `Map`
It's not necessary to check for managed identity here, since it's not a managed identity.
I think we should use the `cloneURL` function here.
This is a change in behavior, but I think it's ok to just do `--domain-filter=true` here.
I think this should be `context.com` instead of `context.com`
I think we should just pass the filename and pass the filename to the constructor.
So we're not using trainer in the actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual actual
Here the block is not part of the hash, so this block can be removed.
We should remove the `gopts` prefix from `gopts`.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this should be `final`
We should be able to remove `Key` from ` HashMap}-based` and ` TreeMap}-based`
why change this?
Is this a global constant?
I'm not sure if this is the right place for this, but I'm not sure if it's worth it to have a better idea to add it to the `aria-box` option.
I think this import is unused.
This package should be named `__version__`, not `__version__`
I don't think we should change stats was a bit more appropriate.
We should move this to the `rpc` package.
why not leave this as it was?
I think this should be `kubernetesResourceState_OTHER`
I think we should add a `@JsonProperty` annotation here.
This should be `export * from './convert-array-to-keyed-object-map`
Just to confirm. Is it safe to call `require "#{Rails.root}/app/models/acts_as_editable/acts_as_editable.rb`?
shouldn't this be `getTimeout()`?
This is not right. We should only do this if `_N[0] == '/'`
I think this is not the correct place for this.
I think this is not needed.
Please change the names to "validates hostname of temporal cluster against server certificate", and change the names to "validates"
@jridgewell I think this should be `sql("show tables")`
This is a little hard to read.
you can also set `routes.WorkloadIPs` to `None` in the `if`
Can we just use the application.appFlagDescription?
I think this should be `grunt.file.write`
Why is this needed?
@agramfort I think this might be a bug in the CI because it's not a huge deal but I think it's worth adding another one to the CI.
This is a breaking change. It is not related to this PR, but it seems like we should keep it in the same PR.
I think this should be `klog.V(2)`
I'm not sure this is the right fix. It seems to me that we only need to do this when we're in an `after_all` action, but I think we should be looking at the `cart` action in the `after_all` action.
This is the only change that affects TF TF TF. I don't think we should do this.
I think this is a bit confusing. It's not a correct change.
This should be `closeConnection(ReadError)`
I think we should be able to use `states` here.
I think we should keep the old name.
why not using the `80:80` here?
I think this is a bug fix.
I think we should move this to the `LastWriter` package.
This is the fix.
It looks like this is not used anymore.
I'm not sure if this is the right place to put this. The key is a string.
Why not just return the hostname?
This is a bit weird, why do we need to set the attemptTimeout from the original one?
This is a bit of a hack, but I think it's better to use a string here.
I think this is the only change that affects TF TF.
Layout/MultilineMethodCallIndentation: Align .to with .test_example on line 29.
I think this should be `*ClusterIdentity` instead of `*ClusterIdentity` since it's a public interface.
This should be a single line string.
I think we should set the `protoFile` in `initProtoFile` instead of passing it in as a separate method.
`SERIES_DEFAULT_NAME` is not used in this file.
These constants are not in the `num-status-check` class. I think we should make them `public` and `public` as they are not used in the `num-retries` class.
I think this should be `usingUnifiedTopology` instead of `usingUnifiedTopology`
I'm not sure if this is correct. I'm not sure if this is the right fix.
What do you mean by "is this default true" ?
This should be added to the existing config file.
These 3 lines are a leftover from debugging.
Can we make this a function? I think it's a good idea to have a function that returns the name of the key.
I think we should move this import to `constructor` class.
If we're going to be able to get the cgroup.Resources.CpuWeight directly from the cgroup.Resources.CpuMax, why not just do it in the cgroup.Resources.CpuWeight?
I think this should be a different message.
can you remove debug print?
This is a breaking change. It is not needed anymore.
This is a bit confusing, why is the `Duration` used in the `KinesisMove`?
Do not use semicolons to terminate expressions.
I think this should be `displayResources`
Is there a reason we don't want to pass in a `xcCleanupLimit` here?
Why do we need to set the List twice?
Why is this no longer needed?
Why is this necessary?
This is a bug fix.
I think this is not needed.
I think this is a bit confusing, maybe `if len(txgroup) == 1`?
I think this should be `public X509Certificate2 ClientCertificate { get; set; }`
I think this should be `ci/gendoc.py`.
This is the main change.
Why is this a network?
This is the one line that was causing the problem.
I think this should be moved to the top of the function, since it's a bit confusing to read.
The `AWS IAM` is now unused, so I removed it.
This is a bit of a nit, but I think it would be better to have a method on a subclass of `unsafe` that returns a boolean.
I think this should be ` isUndefined` instead of ` isUndefined( decimal )`
Should we add a `Transports` to the transport?
Why remove this?
This is not a boolean, right?
Why did you remove this?
It's not clear to me why this is called from outside the loop.
This is not the right place for this. The `Supported_TypeClass` is used for both `Keys` and `Keys`.
Shouldn't we use the constants in `pin`?
I think we should just remove this method.
I think this should be `OpenTelemetrySdkEventSource.Log.MetricInstrumentIgnored(..)`
This is a bit of a hack, but I think it would be better if we could just use the `Load` method in the `AssemblyLoadContext` method instead of the `Load` method.
Is this related to the PR?
I think we should check for the domain name here, as we do for the domain name.
I think this is a bug fix.
Please add a `Set<String>`
I think this should be `site`
`traceLogs` is not needed here, right?
Is this going to cause a problem with the `propagateDeadlineToChildren` node?
This is a bug fix.
I think this is a bug fix.
I think this should be `IEnumerator`, not `IEnumerator`, right?
This should be a `Collection<String>`
if mask.dtype is np.bool, should we check if `mask` is `None` before calling `mask`?
I think this should be `address`
I'm not sure this is the right place to put this. The network is a string, not a string.
why is this needed?
I think this is not the right place for this. The `listSaveProduct` should be `List<SendProduct>`.
please, use `!nullable_handle.get()`
Please remove the spaces between the and the first opening bracket.
I think this is not a good idea. It should be a `try catch` block.
Why do we need to update the `update_existing_accounts` value here?
Why do we need to change this?
This is a very good place to put this check.
This is a good change. The `MethodTransformerContext` is already imported from `SimpleParamView` and it is not used in the `MethodTransformerContext` below.
This is not the right place for this. The `isXmlHttpRequest()` method is called only once, so it is not needed.
I think you can just use `is_multiple_files` here.
I think we should add a warning here to say that we don't have to do anything about it.
This is not the right place for this. It is used in the `whats_new()` method.
I think this is not the right place for this group.
I think we should add a TODO to remove this.
I'm not sure if this is correct. The `file` is a string, not a string.
What if we just return `self.config.get("method", "GET")` here instead of a string?
This is the only place where we use this. I don't think we want to run this test locally.
I think this is a bit confusing. What is the difference between `SampleChainRandomness` and `sampleHeight`?
why not just closeTime?
Can we rename this to `TagFilter`?
I think this is not the right way to fix this.
I think we should use searcher.getCore().getCoreContainer() instead of searcher.getCoreContainer().getSolrClientCache()
Why is this in `*`?
This is the only change that affects TF providers.
I think this should be `DocIdSetIteratorIterator`
Is this debug log necessary?
Can you change this to `textQuery`?
I would put this line to avoid the conflict.
This should be `' `'` instead of `'`
Isn't `netTimeout` always going to be `0`?
Since we're changing this, I think we should probably rename `custom_options_file` to `form_options` to make it clear that it's only used once.
I think this is a good place to put this in the controller, but I think it's better to move it to a constant.
Why are we changing this function?
Why this change? I don't see any new partial partial for this.
can you add a license header to this file?
I think this is a bit confusing. Why is this a `&&`?
shouldn't this be called `close()`?
why is this change needed?
This is a bit of a hack, but I think it's better to move it to the `MakeDiskBlockCacheIfNotExists` function.
I think this should be `Copyright 2017`
I'm not sure if we want to make this configurable, but I'm not sure if it's worth it to make sure that the number of fields are in the same format.
I think this should be `containerContainsText`, not `_`
This is the only thing I'd like to see is that the `PATH` header is still in the `sh.export` header.
Is this needed?
Why do we need to set this to 0?
Shouldn't this be `defaults($properties['logger'])`?
I think this should be a `IdentifyForChat` instead of a `IdentifyTrackBreaks` since it is a `id` thing.
Is there a better way to do this?
Nit: This is a little confusing to me. If the `defer resp.StatusCode == http.StatusNotFound` is the `defer resp.StatusCode == http.StatusOK`, then the `Close` call will be `nil` if the `Error` is nil.
I think we should remove the `IConnectionLifetimeNotificationFeature` and `IBytesWrittenFeature`.
Is this a breaking change?
I think this should be `NABoolean isFirstBatch = true;`
Shouldn't this be `const char*`?
This is a bit of a hack, but I don't think we need to use the `.cs` file here.
This is a change in behavior, but I think it's better to move the `defer udpConn.Close()` outside of the `if err != nil`.
I think it would be better to add the `RayAction` annotation to the interface.
I think this is a leftover from the previous commit.
This is not used anymore.
This should be done in a separate PR.
I think we should use variant. payload here instead of variant.
We need to split the path in two places, e.g. `/remote.php`, `/remote.php`, `/remote.php`, `/remote.php`, `/remote.php`, `/remote.php`, `/remote.php`, `/remote.php`, `/remote.php`, `/remote.php`, `/remote.php`, `/remote.php`, `/remote.php`, `/remote.php`, `/remote.php`, `/remote.php`, `/remote.php`, `/remote.php`, `/remote.
I think this is not right. If the user explicitly set `aURL` to `true` then it will be `null` and will be `null` if it is `true`.
This is a bit weird, why not use a minSequenceNumber variable?
This is a breaking change. The problem is that `replace` is not a `replace` type.
I think this should be a `const` statement.
The `windows?` was removed because it was removed in the first place.
This method should return `null` if the method returns `mServiceConnection`.
I think we should keep the old name.
This is the only change that affects TF providers.
This is a bit of a hack, but I think it's better to use a different name than a different name.
The axe.commons.aria.getRolesByType('landmark'); is not guaranteed to be used for axe.commons.aria.getComposedParent(node) is not defined.
Why not just do this if-else?
This is a bit confusing, since the `Spec` is a `*` and the `*` are the same.
I think you can just do `if sample-r.minRTT >= ackDelay {`
I don't think this is the right place for this.
I think you can remove this method entirely
Please add a space after the `,`
@mjkkirschner Is this change correct? It seems to me that we don't need to change the value here.
This test is testing the wrong place for this.
remove empty line
I think this is a bug fix.
I think this line is redundant.
Could you please explain why this change is necessary?
Does this need to be inside the DR_HOST_NOT_TARGET function?
Should be "proto"
I think this is a good change to make sure the new table is in `add_foreign_key` but the new table is not in `changesets_subscribers`
I think we should be using `go fmt` here.
This is a breaking change.
I think we should set the `properties` in the constructor and not the `IEnumerable<properties>` here.
I think we can drop this column entirely
These should be in the `iceberg.engine.hive.enabled` namespace.
This is the only change that affects TF providers. I think we should keep this.
I think this is a bug fix.
I think this should be a username.
The Pass is not set when the flag is set. This is not the case anymore.
Why not use the constant from the constructor?
I think this should be `//`
This is wrong. The `Trace` is already `using` in the `Trace` namespace.
I think we should keep this.
I think this is not right. The `handler_registered` is already in the `conf->global`.
Block has too many lines. [26/25]
`checked` is a string, not a string.
Lint/RescueStandardError: Avoid rescuing without specifying an error class.
I think it would be better to use `Optional.of(k8s.io/kubernetes/</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</</
This is a test case, but I don't see any use of `System.arraycopy()` anywhere.
Move these headers to the top of the file.
This is a little confusing. Why is it necessary to change the visibility?
Why not use `CastToNPC()->AI_Event_SpellCastFinished(false, static_cast<uint16>(casting_spell_slot));`?
I think this should be `frocation_id` instead of `frocation_id`
I think it's better to return an empty map instead of just a `map[string]`
This is not the right place for this. The code below is used to set the volume information to the api path.
This should be removed.
Do we need to do this now that we have a bug in the code?
I think we should keep the original version of the original version. We'll need to keep it in mind if we can keep it in sync with the current version.
This is a bit of a hack, but I think it's better to have a method on `maxRetryForOFSwitch` that returns a boolean.
I'm not sure if this is the right place to do this. If we are not using it, we should just use `std::lock_guard` instead.
Why did you remove the `getName` call here?
I think we should be able to get rid of this and just call the `EOM` from the `google-osconfig-agent` file.
Please rename these constants to `ExecLICIT_TIMEOUT` and `ExecLICIT_LOAD_TIMEOUT`
why is this import needed?
Do we need to set this to 5.0?
why is this needed?
Remove empty line.
Can we just use `if` here?
I'm not sure if we should keep this, but I'm not sure if we care about this. I'm not sure if we care about it, but I'm not sure if we care about it.
This method is not used anywhere.
I think this should be a warning rather than a warning. The warning should be logged in holoviews 2.0.
I think we should add this to the `before_filter` method to ensure that it is not used anywhere else.
This is a breaking change. I'd say we should add a property to the property to the minimum data rate.
I think this is a bug fix.
This is a bit of a hack, but I would prefer to keep the `null` check here.
I don't think we should be using this version of docker-compose, it's not used anywhere.
Can we add a docstring here?
I think this test is not testing the right thing. It is just testing the headers in the test.
I think this should be `GET_ALL_SESSIONS.equals(command.getName()));`
Why do we need to wait for hf to be nil?
can you explain why this is removed?
Why do you cast it to an integer instead of a float ?
Why not use `blockSize`?
In the current implementation, it's a little strange to have a `fetch` return the `finally` arg, so we don't need to pass it here.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this should be `INVALID_PARAMETER_VALUE_EXCEPTION = 'InvalidParameterValueException'`
Please use setPriority(100) instead of setPriority(90)
I think we should remove this method and call it `coreConfigService`
We should probably have a separate PR for this, but we should probably have a separate PR for this.
I think we should also add these to the `regionUnknown` tag.
Why is this being changed?
This is not needed.
this is a test file, not strictly strictly necessary
Do we really need this?
I think it would be better to use a set of values for these variables and then use them in the constructor.
Please avoid wildcard imports.
Is this change necessary?
This should be a debug statement.
@tgamblin Do you remember why this change is necessary?
You can use `blob.core.windows.net` here.
This should be `progressindicator`.
Is this change related to this PR?
This is a bit of a hack, but I think it's better to have a method that returns a `StringType` and then call `.VarNum()` on it.
I think it's better to say "that is a DynamicMap. Additionally a Callable will memoize the last to the input to the function and the function is a DynamicMap. Additionally a Callable will memoize the last to the function".
Just a style change.
I think this is wrong. The `using` statement should be removed.
I think this is a bit confusing. What is the difference between `DateTime()` and `getType()`?
This method is not used anywhere.
why did you remove this?
should we make this a constant?
I think this should be `await` instead of `target`
I think it would be better to keep the original version of the code as it was before.
why is this change needed?
This function is only called from one place, so I would remove it.
Is there a reason to use Close here?
Please use the standard `HeurekaBundle` class.
Please add a license header.
I think we should just make this test case a bit more explicit.
I think we should be using the `Client` here instead of the `client` object.
Is it possible to have a non-beta url url?
why is this needed?
This is a breaking change. The `opts` check is not needed.
This should be `couldcouldcould be a `@` object.
This is a test that will fail on windows. The `history_depth` is a `history_*`.
This is a bug fix.
why is this change needed?
Use the new Ruby 1.9 hash syntax.
Should we make this a `SetLogging`?
I think we should be able to remove the `!readonly` here.
This is a bit confusing, since the `path` is not `None`.
I think this should be `!=`
I'm not sure why this is necessary.
I think this is a good idea to add the transactionIndex to the `transactionIndex` as the second parameter.
I think this is the right place for this. If the original exception is being logged, the `message.warning` call will be removed.
Does this need to be re-enabled before re-enabled?
I think we should move this to the beginning of the function, and move the notification to the beginning of the function.
Should we rename `ErrNotFound` to `New`?
We should probably make this `offlineMode` and set it to `true` in the config file.
I think this is not right. The `toString()` method should return a `toString()` object.
What does this do? I don't see it being used anywhere.
This is a bit weird, why do we need to call `uploadSession`?
I think this is a bit confusing, maybe a bit confusing to read...
I think this is not the right place for this test. It's not the case that the value is `false`
I think we should be checking for nil here. We should be checking for nil in the `if` condition.
This is the only change that affects TF providers.
why is this called `block`?
I think this should be changed to `-init-not-called`
Please rename to `applicationName`
You can use `user.status.waiting` here.
I think this is not needed.
I think this is a bit of a hack, but I think it's better to just remove the `reportArgs` variable and just use `const reportArgs = new reportArgs();` in the `reportArgs` block.
Why did you remove this?
What is this error returned by the write?
I think we should keep this here. We should also update the changelog in the dashboard.
This is an API change.
Why is this needed?
Is there a reason we wouldn't want to remove this?
Nit: Can you explain what's going on here?
@deads2k i'm not sure if this is the right fix.
This should be done in the `config` model.
This is the only change that will break existing functionality.
This is a bit confusing, why not just have a label of "This is This is a label of everything"?
Nit: `return s.Close()` is a bit confusing since it's a subclass of `nil`.
This should be `Health check failed on repository '%s': %v`
I think we should just remove the `writeAppServices` parameter from the `MapAppServices` to keep the current logic consistent.
Why did you change this?
Why do we need to do this?
Why this change?
This is not needed. It will be fixed in a separate PR.
This is a bit weird, it should be `scale`
why is this removed?
I think we should import `get_dist_info` instead of `distributed` here.
remove empty line
Shouldn't this be `config.conf["update"]`?
Please add `--fmt-SDL-frontend-spec` to `--fmt-SDL-frontend-spec`
Can you add a docstring here?
I think this should be `DateDate.DateTime`.
I think this should be `!diagArea_->contains(-2012) && (diagArea_->contains(-2012))`
This import should be removed.
I think this is not a typo
I think we can just make this `require.NoError` since we don't have a `RootMetadataOrBust` anywhere.
I think this is the correct way to test this.
I think this should be `getImplicitRoleRoleMatches(node, virtualNode) !== null`
This is not needed.
This is the new `current_user` global, I think it's better to move it to the `before_filter` declaration.
I think this can be simplified to just `isEth66Compatible`
I don't think we need this file anymore, since it's not a public module
This should be a `err.Wrapf(err, "invalid 'apiURL' %s in slack config", out.APIURL)`
Why are we changing this?
I think this is a bug fix.
I think this is not thread safe. We should probably be doing the same in `l.Lock()`.
We should probably move this import to the top of the file.
Please revert this change.
I think this should be `contains` instead of `contains`
This is a bit of a hack, but I think it would be better to have a `==` for this, and then have a `==` for it.
This should be `LOG.info`
@kennknowles I'm not sure if this is the right way to fix this. I think the first line should be `#if defined(SSL_set_tlsext_host_name) // set the SNI hostname`
I think we should keep this as it was before.
This is a bit of an overkill, but I think it's better to have a method that returns a boolean.
Why not just call `this.getOffset()`?
This is not a public API, but I think it's better to have a method `getParent().getResultType().getChild(0) instanceof ASTPrimitiveType`
Does this work? I'm not sure what the best way to do is is to have a `Interceptors` property.
This is a bit of a hack, but I think it would be better if we just use the `removePeer` function in the `etcdDBDir` function.
Can you add a TODO to remove this?
This should be `Eventf` not `s.scope.Cluster`
I think we should be using the API here.
@cramforce do you know why this is being removed?
This is a breaking change.
Can this be const_cast?
This is not a good idea, but it should be `import sys`.
Shouldn't this be a `IF_ARM(ASSERT_NOT_TESTED())`?
I think this is a good idea to be able to see if the name is misleading.
This is a change in behavior, but I think it's better to be explicit here.
Please use `os.path.join` instead of `os.path.dirname`
I think we can just use `.reduce(1, m2).rangeClosed(1, p).fold(1, (xs, x) -> xs * a);`
This class is not used anymore.
I think this should be a `Throwable` instead of `Throwable`
Why are we using `netlink` here?
Why is this protected?
There is a stray `,` here.
Line is too long. [87/80]
Why is this import removed?
This is a breaking change. It should be in a separate PR.
why do we need to update update?
I think this should be done in `beforeUser` and not here.
I think this is a good idea to add a `Execution stopped` option to the `STOPPED` option.
I think it would be better to use the `heap_snapshot` property instead of the `List` one.
I think we should be able to remove this ` comparing_path` and ` comparing_path` since it's not used anywhere else.
Should we add a `default` to the `RestConst` interface?
This is not needed anymore
I think this is a good idea. We should probably just make the `contains` method return `T` and then use `contains(element)` in the `Object`.
Is this related to the change?
I think this is a good change. It's not a big deal, but it's a good idea to use a `ConcurrentHashMap` class to get the `ConcurrentHashMap` class.
I think this is a bug fix.
This error message isn't really helpful.
Why was this changed?
I think we should add a new line after `SPlore libp2p bitswap` to make sure the `SPlore` call gets removed.
This is the only place where we use the `_x` prefix.
This looks like a bug, but should be fixed in a separate PR
Does this need to be a pointer?
I think this is a leftover from debugging.
Add `@since 4.2`
Is this the only place where we need this pylint?
Why is this change necessary?
Why not just `declare(strict_types=1);` ?
Could this be initialized to `json:"overrideNginxIngressWhitelistAnnotation string `omitempty`?
This is a bug fix.
I think this should be `setUser` instead of `setUser`
I think we should just use `assertThrows` here.
This is the only change that will break existing payment channel.
I think this is a bit confusing, since we have a `HashBytes` and `PadBytes` in the `Model.go` file.
I think we should also check for errors here.
I think we should also have a `io.servicecomb` constant for this.
This is a change in behavior, but it seems like it should be a separate commit
This is the only place where we're using GATEWAY. Is that what we want?
why is this needed?
why change this?
nit: "If the value is a struct, the value will be called"
Why not use `lastBlock.HeaderByHeight` here?
why not use `defer` here?
I think this is a leftover from debugging.
This is the fix.
I think this should be `public`
Why not use the ctor here?
This is a bit of a hack, but I think it's better to use a `nebula::GraphParser::location_type dumyyylval` here instead of a `nebula::GraphParser::location_type`?
Is this used anywhere?
Is this used anywhere?
This is a change in behavior, but I think it's better to leave it as it was.
I think this test should be moved to `self.assertTrue`
This is not needed.
Layout/TrailingWhitespace: Trailing whitespace detected.
Why is the `.String()` needed here?
I think this should be moved to the `with_depthstencil_attachment` block above.
This is not used anywhere.
Can we keep the old version and remove the old version?
This is the only place where we need to use it.
This is a bit of a hack, but I think it's better to use a `SetCh` instead of a `chan` here.
is this a typo?
could we log the failure?
why do we need to decode data here?
The `if` should be before the `if` condition.
This is a bit confusing, why is this change needed?
This should be moved to `dispatchPipes`.
I think we should use `||` here.
Why do we need to change this?
I think we should be able to use `new ProxySettings(false, "", 0);` to avoid the `String`s.
I think this is a bug fix.
remove empty line
This import should be grouped with the other standard library imports.
This is not the right place for this. The `reg` should be defined in the `index.h` file.
I think you can just use `m/44...` here.
I think this should be set to `true` by default.
I think we should add a `0` constant for this.
I think this should be a separate sentence, e.g. `logger.get_logger()`
why is this not a pointer?
I think this is still not needed.
I think we should also add the `junit-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod-mod
I think we should just remove this line.
This is a breaking change. The `IHeadersCollection` is not a `ICollection`, so it is not a `ICollection`, so I don't think this is a correct change.
This is a no-op, please remove it
I'm not sure this is the best way to do it. I'm not sure if we should do it here.
I think this should be `this.splashWindow.close()`
I think we should keep these as constants in `pkg/api/server/context/constants.rb`.
is it worth logging the `user.user_id` here?
I think this should be `setTimeout` instead of `location`.
Why is this being removed?
I think this should be `multiStepBestPredictions`
I think this should be removed.
This is a bit of a hack, but I think it would be better to use a `ConfigSize` instead of `ConfigSize` here.
I think we should just use the new one here, since we don't have to do this for the other cases.
To be consistent with the rest of the code, this change makes it easier to read and change the code to use the same method for both methods.
This import is unused.
I think this is not needed.
This is a bit of a hack, but I think it would be better if we just always set the `with_layout` method to the `true` value.
should we add a `def Faker` to show the adult action?
This is a bit confusing, since `task` is a `bool` and `use_args` is a `Task` error.
Remove empty line.
I think this is a bit confusing, since it's a `headers` argument, and not a `headers` argument.
I think this should be `c._nextState==null`
Can you add a note that this is only used in the `max_results_admin_api` module?
Should we add an explicit `ClusterMembershipPort` field to the `APIPort`?
This is a breaking change. The `Provider` method is called by `Provider::getEncoder()`.
Is there a reason why we wouldn't just use `string: { value: 'A4', type: Setting.TYPE_STRING, isEnum: true, public: true, appTypes: ['desktop'], label: () => _('Page orientation for PDF export'), options: () => { return false }`?
I think we should also add a migration to the DB schema.
Use && instead of and.
I think this should be `ISetupBuilder>`.
Why not keep the constructor private?
why not use a protocol.Dock directly?
I think we should remove `_readInputContinuation` and `_readInputTask` since it is not used anywhere else.
Shouldn't this be done in the `onStartTrackingTouch` method?
can you add a `elif` here?
I don't think we need to change this, it is a bit of a hack.
I think this is a leftover from the previous commit.
This is a bit of a hack, but I think it would be better if we could just use `__FlushAsync` here.
I think this is a good change. The `get` method is used to use the ` initializedClasses` field.
Line is too long. [84/80]
This is a bit odd, but I think it would be better to use the `getInstance` method instead of the `setBrowserLoginEnabled` call.
I think this should be `input_buffer_.resize(splitInfoSize * 2);`
I think we should be using the `MaxIDLengthLimit` API here.
This is a change in behavior, but I think it's better to use a `NewNoopStateManager` here instead of a `List`.
Should we log something here?
Is this a regression?
I think this should be a group_id as well
What if we added a `\` to the `\` in the `/` directory?
I think this should be `private final`
Do we need to do this? I think we should be able to use the fiscal_year constant here.
You can use `os.remove_build_file(path)`.
This is not needed. `wait()` will be called twice.
Line longer than 120 cols. Please use braces.
This is a bit of a hack, but I think we should be using `if record.frozen?` instead of `if record.persisted?`
do we need to change the default value to int64?
should we also have a `soft` URL?
Is this file still necessary?
@agramfort this is the fix for the sake of refactoring.
Is this needed?
I think we should add a `TODO` to remove this section.
nit: you can use `publishTargetDataverse.then().assertThat()`
This is a breaking change.
why not just appendNameOnlyAttribute(capabilities, *ecsAgent)
nit: move this import up with the other `case` imports
This is a breaking change.
This is a bit weird, but I think we should just return `string $str` here.
This is a bit confusing, why do we need to set a single `a` array here?
@bparees this is the fix for TThreadPoolServer.
This is not used, can we remove it?
I think we should make this `public` and use `public` instead of `public` for consistency.
This import is unused.
We should probably make this a `status` class.
Nit: I'd probably just rename this to `NewNewKeyStore` to be more clear.
why not just pass this as a constant?
Why is this being removed?
no need to import SocksClientLayer
can you make this function return an enum so that it can be shared across all calls to `pre_extended_syscall_sigmasks`?
I think this is a bit confusing. What do you think about: "The list is sorted by these offsets."
You can remove this line
(style) line over 80 characters
I think we should move this to `AccountId` and remove the `list_flag` function.
This should be `blockblock.type == 'argument_reporter_string_number'`
I think this is a bug fix.
I think we should add a new field to the `*` field in the `*` section, since we don't have to worry about the new field in the `*` section.
This is a bit of a weird pattern, but I think it's better to use `errors.Isslash()` instead of `err`
UnitUnitName is a string. Could you please change it to a string?
I think we should use `keybase.go` here.
I think this is the right place for this. The `VersionV03` method is called `VersionV03`, so I think we should be able to remove the `AsV03` check.
Should this be `write.watermark.field`?
I think this should be `// ResolvedReadersMap returns a map of resolved readers from uid to usernames.`
I think this should be a separate commit
@deads2k this is the fix for the bugfix
this is an error, should not be changed
I think this is a leftover from the previous commit.
I think we should be able to remove this now that we have a service in the `Joiner.go` file.
This is the fix.
I'm not sure this is the right place to put this spec. The `spec_helper` action is used for this test, so I'm not sure it's worth it to make sure it's safe to remove it.
I think we should also remove the `AliasName` here.
This test is not needed.
Why is this being removed?
this is the only change that is needed for when we have `RSpec::Support.rspec_support`
I think this should be `tableView.RegisterNibForCellReuse(UINib.FromName(cellIdentifier, NSBundle.MainBundle)`
I think we should be using the `config.API` here, since we are not using it anywhere else in the code.
Why are these constants here?
I think this should be `json_encode` instead of `errors`.
Why not just return `Transport`?
does this mean we don't have to use the `ComputerName $(hostname` in the name?
Should we log this somewhere?
I think this is a bit of a hack, but I think it's better to just check for the error.
I think this may be useful to have a `Metrics` instance on the `Metrics` instance.
why is this changed?
This is not correct. `name.slice(0, 2) === 'on'` is a valid value.
I think you can just do `files = os.path.dirname(path)`.
I think this should return -10
We should not need this here.
See above, you can just use `std::unique_ptr<ROMol> mol{SmilesToMol(itm.first)});`
Shouldn't this be `StringUtils.isNullOrEmpty(String)`?
This is a bug fix.
Why not just return `mAccount != null && !mAccount.getReportSpamRecipient().isEmpty()`?
I don't think we need the `id` here since it's the manifest
You can use `Exclude = d.GetValueList("Exclude", d.Get ejs())` here.
I think we should be able to use the `referer-header` header here instead of the `same-domain` header.
I think you can remove `pathInfo.NetworkPath` too
`list_amount` should be `list_amount`
why not using a flag here?
This is a breaking change. I think it's better to have a default value for this.
This file is no longer used.
This was a duplicate of the previous commit.
This should be `model.gpu_ids = (cfg.gpus) if cfg.gpu_ids is None else cfg.gpus`
Not sure why we're using `serialized.build()` here.
I think you can remove this line
I think the original code was wrong. The `default` is used to pass the `OverwriteIfNewer` to the `Path` and `CopyDirectoryRecursively` calls.
This should be `std::cout << "test3_5" << std::endl`
this is the main change. we should probably make a test for json.MarshalIndent and json.Marshal as well.
We should add a `typing.IngressRules` field to the security groups.
This is a breaking change. It is not a good idea to have a test that passes in a new version of the package.
(style) 'nd' may be misspelled - perhaps 'and'?
I think we should be able to use the `MutableWorldState` interface here.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
you can use `self.type_as(x)`.
I think we can move this import to the top of the file.
Why not use the `assert` here?
I think we should move this import to the top of the file.
Is this a BC break?
This should be a copy of the original request.
I don't think we need this.
This command should be moved to the `snapshotrevertHelpText` below.
This is a breaking change. The `header` is a `block` file, not a `header` file.
This is not the right way to do this. The default value of `QUILT_USE_TQDM` is `true` (as opposed to `true`) is `True` by default.
This is a bug fix. We should be able to remove the `time.Duration` from the config.
I think this should be done in the `else if` block above to avoid the `==FORCE_RENDER` check.
I think this should be `ad` and not `ad`
I think this should be `os.environ.get('KINESIS_ERROR_PROBABILITY', '').strip()`
Can you move this to the top of the file?
I think this is a bug fix.
I think this is a leftover from the previous PR.
Nit: "application/x-stata-13+" is a bit confusing name. "application/x-stata-13+"
why did you change this?
@adamjstewart Is this a problem?
`is` not needed anymore?
This should be a constant.
I think we should remove this line.
We should probably add a `logger.info` to the `logger.warn` and `logger.warn` methods to avoid the need for the `Task` class.
This is not needed.
Why is this needed?
should be `isLongrunningReturnValue`
this is a bit weird, why do we need to set the `Authorization` value to the url?
I think we can just do `@at` here, no need to specify it.
this is a bit weird, we don't want to have a Base.rand() that we want to return 0
We should add some docs to the new parameters.
This should be `offlineMode = plugins.getConfig("api").offline_mode;`
I would prefer to have a global constant here, as it's a global constant.
Is this a typo?
This is a bit weird, why is it not `currentUID`?
Why do we need to pass attachStdin to the constructor?
nit: remove the empty line
This is a bit weird, why do we need to do this?
I think this should be `string.Empty`
I think you can remove the `gquicVersion0` part.
It looks like this method is only used in one place, so I'd remove it.
You don't need this `if` condition, you can just use `runs_free`
I think this is not the right place to do this.
I think we can remove this now that we're removing the `TNamedObject` attribute.
I think this is the only one that's used in the tests.
This is a bit of a hack, but I'm not sure if it's worth it.
I think this is a good place to put this in a constant.
I think this should be `_`
This is a no-op, right?
I think this should be `create` instead of `already`
Is this needed?
Use %w or %W for an array of words.
I think this should be a `@Inject`
I think this is a bit confusing. What is the point of this code?
I think this is a BC break. We should add the `js/fileupload.js` file to the `build` folder.
We should probably add a `TODO` to remove this
You can remove the `command`.
I think this should be `!s.BlockNumber && s.BlockNumber && s.BlockNumber && ...`
This is a bit confusing, why is it necessary to have a global flag for it?
Line is too long. [105/80]<br>Use the new Ruby 1.9 hash syntax.
The result is simulated before miss its deadline.
This is not needed.
I think we should log the exception here.
This is a bit confusing, since `config` is a `config` and not a `config` right?
I think this is not needed anymore.
Do we need to do this if the key exists?
I think we should add a note about this flag.
This is a bug fix.
Why is this 6?
I think this should be set to null.
This is not needed.
This is a bug fix.
This is a bit of a nitpick, but I think we should be consistent and use `-f` instead of `-f` here.
I would rename this to `FeedFileDownloadStatusRequesterInterface`.
Please use `volatile` instead of `volatile`
This is a bit of a hack, but I think it's better to just check for the `!` here.
This is a breaking change. I think we should just make the `ServiceName` a struct, and not have it.
Do we need to check for `XDPEnabled`?
This is a bit confusing. What is the expected behavior of this code?
`reverse` is not a better name, it's a bit confusing.
Shouldn't this be `if (!service)`?
I think we should also mention `consider-using-sys-exit` here.
Why was this changed?
I think we should use `command-history` here.
hmm, why is this pickle_protocol?
I think this should be `else` since the options are not in the port.
Import packages with wildcard is not recommended. Please revert.
I think we should also check for rootless here.
I think we should add a `integral_columns` constant to the top of the file.
I think this should be `static` (as it is a bit confusing)
I think we should add a `RegisterContainerInstanceArn` to the `SubmitTaskStateChange` and `SubmitToken` to the `RegisterContainerInstanceArn` and `RegisterContainerInstanceArn` to the `RegisterContainerInstanceArn` and `RegisterContainerInstanceArn` to the `RegisterContainerInstanceArn` and `RegisterContainerInstanceArn`
I think this should be a constant.
Why is this needed?
You can use `job.reload.retry_count.must_equal` here.
Please remove the cancelled here.
This is a breaking change.
I think it would be better to move this to `clone` if it's not a good idea to add it to the base `clone` list.
Can we use `convertSendersStage` instead of `Mode`?
I think this line is not needed.
I think this is not right. It should be `if (q == null) || fcontext.base.size() == 0)`
I think this import is unused.
@tgamblin Do you know if this is the right place to put this?
Should we check for cert.NotAfter here?
This should be removed.
I think this should be a bit more specific, maybe `rtol` is better.
This is the fix for #41010
Does this need to be a pointer?
Is this the right place to put this?
This is a bit confusing, why do we need to do this?
I don't think we should be using this version of docker-compose, it's not used anywhere.
Why is this needed?
Why not `r.Result{}`?
`score_thr` is a better name.
This is a bit confusing, why is this a `site-nav`?
I think we should use `.replace(/[^\w\-]+/g, '')` here.
This is a breaking change. You should be able to remove the `FindQualifiedType` call here.
Nit: `RTL` is a bit confusing here. ` statusButtonX` is a `resource.go` and `resource.go` is a `resource.go` so it's clearer to me.
nit: move this line up (and the other `goimports` statements) into the `*` section above.
I think we should add `ModuleSettingsDetails-${ moduleSlug` to the end of the component.
Why do we need this?
Why did you remove this?
Please remove this blank line.
I'm not sure if this should be `||` or `||`
This is a change in behavior, but I think it's better to move the `InitializeLayout` call into `Comparator.Create()` and `Comparator.Create()`.
Do we need to check that `overlayText` is `false`?
Use the new Ruby 1.9 hash syntax.
We should add an explicit name for this new parameter to the `optionName` parameter.
I think this is not needed anymore.
This is a breaking change. I think the compiler will be able to use the same name as the default name.
I think we should update the indentation here to reflect that this is a bit more readable.
This is a breaking change. You should be able to use `mkdtemp` instead of `mkdtemp` here.
This is a bit of a hack, but I don't think we should be doing this here.
Is this a bug fix?
Extra empty line detected at class body end.
Please use `receivable` instead of `result`
We should probably make this a `return` statement.
I think this should be `if (oldVersion < 1090001) {`
this change is not related to this change, but I think it's fine to change it
This change is not needed.
The adios2_error_none is used to calculate the size of the variable name. It is not used anywhere.
Why not use the new one in the new one?
This should be implemented in `BftValidatorsValidationRule`
I would prefer to have a `Set<T> reverse()` method on the `Operation not supported` interface.
We should probably add a note about this in the future.
Why is this being removed?
remove this line
Nit: remove the blank line between declarations.
Why is this change needed?
Please use `== nullptr` instead of `== nullptr`
I think this is not needed.
I think this is a good idea to add this to the `ArgumentError` interface.
not sure if this is the right fix.
I think it would be better to have a `model` argument here, and then use `days.utcnow()` to avoid having to do the same thing.
I think it would be better to have a method for AbstractRememberMeServices that returns null.
I think this is a good change.
I think this can be removed now, since it's used in `util`
I think this should be `text/html/` instead of `text/html/`
I think you can remove the check here.
`String()` is a map, not a map.
I think this is not right. The `Disposing` check should be done in `UpdateUpdate` and `UpdateUpdate` if it is not `null`.
"... that's the case for the bbox head."
This is not needed.
what if block_hosts.length > 0 is false?
I think this should be `httphttp`
This is a bit confusing, as IHttpContent is a interface for the IHttpContent. It is a bit confusing to have a interface for the IHttpContent. It is a bit confusing to have a interface for the IHttpContent. It is a bit confusing to have a name for the IHttpContent. It is a bit confusing to have a name for the IHttpContent. It is a bit confusing to have a name for the IHttpContent.
This is a test class, so I'd like to see a test for this.
I'm not sure if this is the right place to put this.
this is a bit weird, we are not going to have tableMap.values() in the tableMap.values()
I think we should remove this import.
I think we should use the new version number instead of the new version number.
@executable_path = '' ?
This is a bit of a hack, but I think it's better to use the `[\w-]+)` constant here.
I think we should use the `done` attribute here instead of the `done` attribute.
This is a bit of a hack, but I think it would be better if we just always call `pglob.gl_pathv[i]` and then just call `char *dir_name = strrchr(pglob.gl_pathv[i], '/');`
The default value of `true` is `true` because it is true, but the default value of `true` is `true` (which is the default value of `false`).
Could you please add a `TODO` here to explain why this is needed?
I think this is not needed.
Is there a reason we don't use `String()` here?
@deads2k i'm not sure if this is the best way to go.
This should be `@InputFiles`
This is a bit weird, why not just return the `""` value?
Is this needed?
I think this is a bit confusing, maybe `handlehandle` or `handlehandle`?
What's the purpose of this?
Is this file still relevant?
I think this is a leftover from the previous PR.
This should be removed.
This is not needed.
This is a bit of a hack, but I think it's better to use a `GetFilter` function that returns a `codes.InvalidArgument` object.
I think you can remove the `zdb_REAL_error` call here.
This is a good change. The previous code was a little bit of a hack, but it was a bit of a big deal.
I'm not sure if this is the right way to do this. The problem is that if a percentiles is None, the `name` value will be None.
I think this is a bit confusing since `building_number` is a string and not a string.
Nit: I would call this `bhTarget`, `TargetTypeNoEncap` or something like that.
I think we should just remove this warning.
I think we should be able to remove the `formerpet->GetPetType()`.
I think we should check if the key is empty.
This should be done in `PlaybackPreferences.clearCurrentlyPlayingTemporaryPlaybackSpeed()`
This is a bit of a hack, but I think it would be better to use `KWindowSystem::forceActiveWindow` here instead of `xcb_flush`.
This class is unused.
Remove empty line?
So, we're ready to deploy a branch in a non-debug scenario?
Use the new Ruby 1.9 hash syntax.
I think you can remove `anomaly` from `nupic.algorithms.anomaly`, it is already imported from `ananan`
@lilleyse you can get rid of this line
This is the only change that will break existing functionality. The `sig` is used for the `go fmt` and `go fmt` is used for the new functionality.
Nit: remove empty line
I think we should move this logic to `ApplyToWorkflow`
This is a change in behavior, but I think it's better to have a test that doesn't have a `method` attribute.
I think we should move this to `pkg/errors/templates`
I think this is the only change that affects TF TF.
We should probably check if the config.KINESIS_PROVIDER is 'kinesalite' and config.KINESIS_PROVIDER == 'kinesalite'
Use the new Ruby 1.9 hash syntax.
Make this an `StackSummary` since it's a pointer.
Can you explain why this is always `True`?
I think it would be better to use the `/` prefix here.
@deads2k i'm not sure if this is the right place to put this.
This is a very good change. I think we should be using the same `ExtraRuntimes` as the default value.
This file doesn't seem to be doing anything.
Is this needed?
why not use the same constant for the variable name?
`value` is a field in ('id', 'collection_id', 'collection_id')
this is a debug statement.
Why not use the `declare` prefix here?
`C0301` is a better name for this new class.
why is this needed?
What is the purpose of this column?
Why is this test removed?
I think we should keep the imports in the last group of imports.
@matt-gardner How do you know that this is the right place to put this?
I think this is a bit of a hack, but I think we should be able to use `ignore` instead of `ignore`.
@jona-sassenhagen this is the only place where we need to override it. I think we should just remove it.
This is a change in behavior, but it seems like it should be a separate commit
It's not necessary to check for `id` here, since it is a `common.morqaClient`?
I think this should be lowercase. `doc driver.Document` is the same as `doc driver.Document.get("doc driver.Document, lowercaseFields", "))`
This is a breaking change. It is not used anywhere.
I'm not sure if this is the right fix. I'm not sure if this is the right fix.
I think this is a breaking change. It is not used anywhere.
I think this is a bit confusing. Can we have a `fulfulfulfulProcessorFactory` that does the same thing?
I think this should be `afterTransformStart`
This is a bit confusing, since the archive file is a bit confusing. Is there a reason we need to do this?
why not invoked with function ?
I think you can use `public` here.
This should be `LOG.info`
Can we just use `gold` here?
The issue is that this is a "defaultSendPort" transport.
Should this be 0.1f },?
I think we should use `.Register` here.
I think this is the correct term to remove the attribute.
Can you add this new exception class to `Platform.Platform.Ios.Presenters.Attributes`?
I think this should be moved to the `lib/constants.py` file.
This is a very minor thing, but I think it's better to use a more meaningful name.
Is this a change in behavior?
this should be `private`
I think we should keep this as it was before, but I think it's a good idea to keep it as it was.
I think we should have a more generic name for this. `Datadog-AzureAppServices-Resource-ID`?
The error_str was removed in this assertion.
Shouldn't this be `X-Content-Type-Options`?
Why not do this?
The reason this test was failing because it was failing in the tests because it was failing in the tests because it was failing in the tests because it was failing in the tests because it was failing in the tests because it was failing in the tests because it was failing in the tests because it was failing in the tests because it was failing in the tests because it was failing in the tests.
This is the only change that affects TF providers. I think we should be using the ` mutation.Kill()` method to get the `cmd.Kill()` method.
This import is unused.
This is a bit of a hack, but I think it's better to just do `.decode()` instead of `.decode()`
I don't think this file is needed anymore.
why is this needed?
This should be `Päivä`
I think this should be done in a separate PR.
Can we use the more strict `"select %s, %s, %s"` here?
These two are two separate, the same, and the same, the same, the same, the same, the same, the same, the same, the same, the same, the same, the same, the same, the same, the same, the same, the same, the same, the same, the same, the same, the same, the same, the same, the same, the same, the same, the same, the same, the same, the same, the same, the same, the same, the same, the same, the same, the same, the same, the same
why change this?
I think we should add a note about this being a bit more.
I think we should add a new constant here.
This should be removed.
I think this should be `can't unmarshal count` instead of `can't unmarshal count`
This is not a good idea, but I think we should just remove this function and just do it in the `if` block.
@jackfrancis I think we should keep the `apt-key.gpg` URL and use the `KubernetesDownloadURL` URL here.
`WalletKey` is not used in any of the files, so I would just remove it.
Why did you remove this?
This is a change in behavior, but I think it's better to use `array_id` instead of `is_array`
I think we should add a new `servers` field to the `local_certs` and `auto_https` to the `AutoHTTPS` field.
Can this be moved to the `RTPSDomain` class?
I'm not sure if this is the right fix. The `for` loop should be moved to the `if` statement.
I think this is the only place where we have a `#if TRUE` in the file that is used.
This is not needed.
I think this should be `proposal_url` instead of `view_request_cta`
This is a bit of a hack, but I think it is better to use `array_pop()` instead of `array_shift()`
I think this line is redundant.
This log message could be helpful.
I think this should be `seelog.Info("ACS Websocket connection closed for a valid reason")`
Can you add a docstring explaining why this is necessary?
I think this should be `mixed` instead of `is`
Is this related to this PR?
I think you can remove `& info_a` entirely.
I think this is a bit of a hack.
This is the only change that will cause the issue.
I think this should be `config.add_api_capability(config.flush_endpoint_enabled, "flush_endpoint", "config.flush_endpoint", "config.flush_endpoint", "config.flush_endpoint", "config.flush_endpoint", "config.flush_endpoint", "config.flush_endpoint", "config.flush_endpoint", "config.flush_endpoint", "config.flush_endpoint", "config.flush_endpoint", "config.flush_endpoint", "config.flush_endpoint", "config.flush_endpoint", "config.flush_endpoint", "
It's not clear to me why this is needed.
Do we need to change this to sysHashLen?
I think this should be `case POD_FAILED:`
This is a bit confusing. Why is it OK to have all the `false`s in `FetchTipSets` and `FetchTipTipSets`s?
I think this is a bit of a hack.
I think this is the only place where we need to do this. I think we should keep the `new ChainFilterOutput` and remove the `registerFilterOutput` function.
Shouldn't this be `host.cygwin_installed?`?
nit: can you add a space after `,`
I don't think we need to do this, it's not a ID.
I think this should be a `name:"debug_tools"`
This is the only change that affects TF TF.
I think we should be able to use the enum from `org.fsck.k9.mail.store.StoreConfig#getTransportUri` and `org.fsck.k9.mail.store.StoreConfig#getTransportUri`.
I think this is not correct. It's not a public API.
This is a bug fix.
Should this error be logged somewhere else?
I think this should be in a separate PR, as it's not a big deal, but I'm not sure if it's a good idea to make this configurable.
I think it would be better to have this as a constant somewhere, and have it return a value.
This class is not used.
I think this test is not needed.
This is a bit of a hack, but I think it would be better to keep the `timerIntervalInMilis` constant as it is used in the other places.
"This administrator does not belong to any rules."
I think this can be removed now, since the feedFilter is now passed as a local variable.
I think this is a bit confusing. What do you think about just doing `conf = conf.get_bindings_for('normal').keys()` instead?
I think we should remove this line
The miner has committed. For now, I believe.
I think this was accidentally removed.
I think this should be a `nil` error.
I think we should use `is` instead of `if` here.
This is a pretty important change.
This is a bit of a weird change, but I think it's better to have a function that returns a list of arguments, and then use that argument.
This is a bit weird, we need to check for `Email` before calling `in_array()`
I think this is a bit confusing. What if we have a `panic` that we don't have to do with `panic`?
Should this be `m_was_finalized`?
I think this should be `info.RPCAddress == 0`
remove empty line
why default to false?
This is not the right place to put this. The cache is not the same as the cache in the queue, but the cache is not the same as the cache in the queue.
Why remove this?
This is a bit of a hack, but I think it would be better to just do `if (!args) { return []; }` instead of checking if the result is empty.
I think we should use the `obj` constant here instead of hardcoding the value.
this is not correct, right?
I think this should be a new one, it's not a valid one.
I think we should keep the name of the key name and just use `zalcanoTitle`.
I think we should also add `@SuppressWarnings("unused")` to `@SuppressWarnings("unused")`
This is the only place where we call `clear()` on the `e` model. I think we should be able to remove the `e` model here.
I think this should be `(type.Name + "()")`
I think we should return `c.nc == nil` here.
I think we should use the result of the `javaRDD` here instead of the result.
I think this should be done in the `create_new` model instead of in the `create_admin?` method.
I think this is not correct. It's not clear why we need this.
why the auto policy?
This should be `options = {};`
This is a bit confusing, since `node-features` is a `string[]` and `node-registry`.
This is the fix.
Remove this line.
This test is not really needed.
This is the only change that affects TF providers.
Does it make sense to keep the old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old
I think we should keep this as a constant.
Nit: I think this is a debug message.
I think this should be `logic.Program(pdata)`
I think it would be better to check for `attrs.get('IAccessible2::attribute_current', None)`.
This is a bit of a weird change, but I think this is the only change that affects this change.
I think this is a bit of a hack. I think it would be better to just have a `DistributedSpanContext` that returns a span context and then we can just have a `DistributedSpanContext` that returns a span context.
I think this should be `exflow.getFlowDefinitionId() > 0`
I think this should be `DateTimeInterface` instead of `DateTimeInterface`
This is not needed anymore.
It's not clear to me why we need the `alpha_reverse` parameter here.
@mfojtik this is the fix.
I don't think this is the right approach. The `fetch` method should be used for the `cpu_bootstrap` function.
why do we need this?
This is a bit of a nitpick, but I think we should be using `sigs.k8s.io/apimachinery/pkg/types` here.
This should be `static`
I think we should use `str` here.
@michaelkuhn should this be `#ifdef KOKKOS_ENABLE_CUDA`?
This is not a public API. It should be added to the base class.
This should be done in another PR.
I think this should be readonly, not readonly.
I think you can remove this
I think you can just remove the whole whole `legacy_digits` variable and use that in the `CSCS` class.
This method should be called print_plugin_list
I think this is the only usage of `using OpenTelemetry.Trace`?
please revert this file
This is the only place where we're using the `single_user` option. I think we should be able to get rid of the `Upcase Membership` option.
I think this is a bit of overkill, but I think it's better to have a `defer` statement that does the func and then call `defer` on it.
This is a bit weird, why are we passing the `minerCreate` and `minerCreate`?
We should log the `rChannel` as an error here.
I think we should add a new line after `db` and `object` to the end of this line.
I think this should be a part of the "conservation_conditions_fr" property.
I think this function is redundant now.
Is this file still necessary?
Should we also check for `i.nodeConfig.NodeTransportIPv4Addr.IP` here?
I think this is still a regression.
I think this should be `_now_focused._last_hovered_link`
Align the elements of a hash literal if they span more than one line.
This class is missing the namespace.
This should be a `Debug.Assert`
Why did you change this?
I think this is a breaking change.
I think this should be `AccessNode`
I think this class is redundant, it is already abstract.
This is the fix.
Is this change related to the PR?
I think we can get rid of this now.
This is a str() function, not a dictionary.
I think this should be `final`
I think this should be `chomp` instead of `result.stdout.chomp`
I don't think we need to change this, since we're not using the old one.
Please add `from mmdet.utils import Registry`
I'm not sure if this is the right fix. The problem is that if the ns->components is not null, the caller should be able to use the default values.
Why is this needed?
This is not right. The `acc` is a `**kwargs` in the `**clients` case.
This is a bit odd, but I think it's better to use `HDF5Reader` instead of `HDF5Reader` for the `else` branch.
Another `.to` is missing
Why do we need to make these changes?
I think this is a bit of a hack. What about `HTTP/1.1`?
I think it would be better to check for the `!= 0` case here.
I think this is a leftover from this PR.
This is the only place where we need to do this.
Could you please add the `failure_color` entry entry here?
Can we use `getSiteInfo()` here?
The `-` should be removed here.
nit: "IsMSIEnvironment" -> "IsMSIEnvironment"
This is a change in behavior, but I think it's better to make the change in `ExplicitBitVect::ExplicitBitVect` to avoid the `dp_size` value in the `bitsSet`
I think this is a bit confusing since `current_group.groups.each` is a `current group` and `current_group.group` is a `stop_targets`.
This is a bit of a hack, but I think it's better to have a message saying "VUID-NONE" instead of "UNASSIGNED-cache-file-error", since it's a bit of a hack.
I think we should remove these 2 lines.
This is not used anywhere.
@smarterclayton do we need to use `go.uber.org/yarpc/peer/peerlist/v2` here?
This should be a debug log.
I think we should move this to `System.Interop.Interop.GetAttribute`
I think we should be able to use the `getBoolean` method here.
I think this should be `static int`
Why not just pass the exception to the constructor?
I think we should add a warning here to make sure the user has changed.
Please remove the extra blank line.
We should be able to remove the `fully_formatted_lines` method and just call `fully_formatted_lines` directly.
I think we should keep this and use the `Map<List<T>` type to avoid the use of `T` in the future.
I think we can remove this and just use the string directly in the `PolicyNamespace` function.
Can you remove this line?
`telemetryInitialized` is only used in the code base.
This is not needed.
I think this is not the right fix. We should be checking if the tag is not `nil` and not `nil`
Not sure if we should use `config.notarize` here, but we should use `config.updateupdate` in all places.
I think this is the only change that affects TF providers.
Can we move this to the `config/default` folder?
`!config.DisableKubeProxy` is a little bit confusing. I would have expected the config to be `true` or `false` but I think it's a little bit more clear.
This should be `/* eslint new-cap: ['error', 'capIsNew': false]`
I think we should be doing this in `c.closeConnection(ProtocolViolation)` instead of doing it in `c.New`
I think we should be able to remove this and check for `default` in `compute_service_account.go`
We should add some docs to the docs.
Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
The variable name is misleading.
I think it would be better to use `sel.setBaseAndExtent(sel.baseNode, sel.extentOffset, sel.baseOffset)` instead of `sel.baseOffset`
@matt-gardner Is this a bug fix?
Can you add gitea copyright line to header (and keep gogs one next to it)?
Should this default be `null: false`?
I think you can remove the `err` here.
I think we should keep the old name. It's not clear what the `fragsize` is.
I'm not sure if this is the right approach. If we do, then I would say that `if not 'localhost' or host.startswith('127.')` would be more appropriate.
We should also check for null here.
You can use `[1]` instead of `[1]` here.
I think this should be `if (dupe.hasArray()) {`
This is a breaking change. We should not change the API of the spanReference.
I think this should be `/-/static/logo`
I think this is the only change that affects the `enableAddons` API.
The "Date" property is a bit odd. I think it should be "min"?
This is a bit weird, we're not using the `select` function in the `.spark_column` method.
I think this would be more readable as `debuggerAddress.match("ws:\/\/", "http:\/\/")`
I think we should remove this file.
Should we also check for `minimumSecondsSinceParent`?
Why are we removing `extra_controller_params`?
I think this should be a warning. It's not a warning.
This is the only place where we need to use `HandleBlockPropose` for the `cMsg` function.
@smarterclayton do we need to make the name configurable?
Why is this being removed?
This is a breaking change. I think it's better to move it to the top of the file.
This is the actual fix.
I think we should use the same name for the variable name.
I think this is a bit confusing, since it's a public-only file, and it's not a public-only file.
I'm not sure if this is the right fix.
I think this should be a `@` (or similar) to the one above.
I think it would be better to move this to the service service.
This is a bit weird, why do we need to check for the `if`?
Is this change necessary?
This is a bit of a hack, but I think it would be better if we could just do `except Exception as err:` instead of relying on `path` here.
Can you add a `path/filepath` here, so that we can use the same dir as the homedir.Dir?
I think this should be `!== 0`
Should this be `CompositeType.Extensions.ContainsKey`?
Why is this removed?
This is not needed.
I think this is a bit of a hack. I think it's better to just return `nil` here.
why do you use this?
I'm not sure this is the right thing to do, but it seems like it should be `std::int64_t`
Please remove the line if it is not used anymore.
This is the only place where we need to override lambda code. This is the only place where we need a lambda.
is it possible to have the type of the `_` in the constructor?
We should remove this line.
I think we should use `ViewportHeight + 3` instead of `+2` here.
I think we should keep the original version.
I think you can remove this line
I think this is not needed anymore.
`IsNullOrWhiteSpace` is a very generic name. I think it would be better to have a method that returns a `postOpResourceModels`.
I think you can just change `resources` to `Hash[Hash], ResourceInstance]`
I think this should be -1 as well.
I don't think this is correct. The exception message should be logged as `longValue()`
This is a breaking change. The other changes are just a breaking change.
These two lines are repeated multiple times, they're all defined in the same URL.
I don't think this is needed.
Use doctestest instead of doctestest
I think we should keep this and pass the `Query` to the function instead of passing it to the function.
I'm not sure if this is the right place to do this. I'm not sure if it is worth it.
I think this should be `blob://myvar.json?bucket=file:///mypath&decoder=json`
This is a bit confusing, why is this needed?
This is not needed.
Why is this a `Debug.Assert`?
I think this should be `Urum.Getwd()`
I think we should just make this a new struct.
This is a test that fails on the test suite. The test fails on the test suite.
I think this is the only place where we need the file.
`result.raw_output` is the same as `result.result.to_ruby` (which is the same as `result.to_ruby`).
I think this should be `error` instead of `>`.
I'm not sure if this is the right way to do this.
Why do we need this?
Is this a bug fix?
Why do we need to set it to 0?
Is this a "ecs" or "nvidia"?
This is a change in behavior, but I think it's better to remove it.
The original code is a bit confusing, why not just inline the original code?
Would it make sense to add a `String.Empty` here?
Could you please rename `offset` to `offset uint64`?
>IsEffectInSpell(uint16 spell_id, SE_Invisibility) [](start = 28, length = 7) nit: we can remove this function.
Why is this needed?
this is not needed, it should be imported
This can't be `!=`
>clrstack -i is unsupported on this target.\n" ICorDebug. This is a bug in the file.
We should check if the absolute path is absolute.
I think this should be removed.
I think this is not correct. The iterator should be a `toStream()` call.
I think this should be a separate method
I think this should be moved to the `Exists` package.
I think this should be `subprocess.py`, no?
Since this is a public function, it would be better to use the function `user_function()`.
can we just return 0 here?
This was just a mistake before, I removed it.
Why are we using the version number here?
This is a bit of a hack, but I think we should be using the `user_full_name` helper instead of the `user_full_name` helper.
This is not correct. It should be `List<CharsRef>`.
We should probably remove this warning.
This should be moved to the `B3C_MINIMIZE_WINDOW` module.
shouldn't this be in the `if defined?(::Random)` block?
Why not `listener`?
why not use `ProcessTipSet` directly?
This is not the right place for this. The `IF_ARM()` call is not needed.
I think we should be using the `for` loop here.
Nit: this is a bit weird, maybe `#if NETCOREAPP#if NETCOREAPP`?
This is not needed.
I don't think we need to add this.
We should add an environment variable to this and make it optional.
The `ta.Keyinfo["bravo"]` is not needed.
This method was removed because it was already called in the `getProviderReference` method
This is the only change I'm not sure about. The `err` is used to be `nil` if `err` is `nil`.
What's the purpose of this flag?
I think this is not the right place for this. It's not the same as the one above.
I think this should be `.py:attr:`Register._UNSET_NAMESPACE`
I think this should be a warning, since it's a warning.
This is a very minor thing, but I think it's better to be consistent with the other changes in this file.
This is a little weird. Why is this needed?
I think this should be `ecs.internal` instead of `ecs.save`
This is not needed.
This interface is not used.
The `// +optional` tag should be reversed.
This is the only change I have is that the `src` argument is used for the `defaultOptions` instance.
Can we make this `checkNotNull` and use `node.jsonRpcConfiguration().getAuthenticationPublicKeyFile()` instead?
Why is this optional?
nit: can you use `String.equals(to)`?
why did this change?
This should be a constant.
It's not clear to me why we need to change this.
I think this should be `JsonPrinter` instead of `JsonThe`
`@param theKey Either {@link Keys#SHIFT}, {@link Keys#COMMAND}.`
I think this is a good idea to have a sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync sync
I think this should be `type['release_name'] = ...`
This is a bit of a hack, but I think it's better to just remove the `if os.Args && os.Args && os.Args && os.Args && os.Args && os.Args && os.Args && os.Args && os.Args && os.Args && os.Args && os.Args && os.Args && os.Args && os.Args && os.Args && os.Args && os.Args && os.Args && os.Args && os.Args && os.Args && os.Args && os.Args && os.Args && os.Args && os.
This is a very minor thing, but I think it would be better to have a log message that the value is not null.
I'm not sure if this is the right fix. The `font-size` option is to set the default to `false` by default.
Please don't remove the line after this.
I think this is a bug fix.
Why do we need to do this?
nit: update copyright year in header
Why did you change this?
why is this needed?
"new version of the collection" -> "new version of the collection".
This is not correct. The PUT request includes a "x-ms-blob-type" header is not fully portable. The PUT request includes a "x-ms-blob-type" header is not correct.
Why is this class being removed?
I think this is a bit confusing. What about something like "the OpenCollection method is a collection using the OpenCollection method, and the docstore. Docstore"?
This is the only change that will break existing users.
I think this should be `!el.querySelector('summary');`
This is not needed.
this is not needed, we already have a "Presented" in the name
This is a very minor thing, but I think it's better to be consistent with the other `DISTANCE` variables.
Please add a `TODO` to remove this.
Why is this needed?
I think this should be `deleteManifests` not `DATA`
This is a bit of a hack, but I think it would be better to have a `TOTAL_HITS_THRESHOLD` method that does the service.
`s/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server
Should we add a `[DoesNotReturn]` attribute to the `[DoesNotReturn]` attribute?
This is not correct. It is not correct.
This method is not used.
I think this should be `e.message` instead of `e` since it's a general exception.
I think it would be better to have a test for this as well.
I think this is a bit of a hack.
Line is too long. [82/80]
Why is this a string and not a string like `tarball-blahblah-file.name`?
I think this should be `unicode` instead of `unicode` since it's a string.
This is the only place where we're using the `origin_changed` variable is used.
remove unused imports
Why is this being added?
"thethethethethe Main actor must have a create constructor which takes a single Env."
why not use `*`?
I think we can remove `list` here.
For now, we should have a test for that.
I think we should check for stock not empty here.
I think this is a leftover from the previous commit.
Please add a blank line after this touched.
Please revert this change
I don't think this is needed
The name of the config name is confusing. It is used in the `configName` and `collection.configName` but it is used in the `configName` and `collection.configName` but it is used in the `configName` and `collection.configName` but it is used in the `configName` and `collection.configName` but I think it is better to have the name of the config name and the config name in the config name.
shouldn't this be `/health`?
This should be `&&` instead of `&`
Why is this removed?
This is a bug fix. The previous version was not working before.
I think this interface is not used anywhere.
Do we need to handle this case? I think it would be better to use `compile_opts = results.compile_opts[i]`.
no need to change `YolactSegmHead` here
this is the same as the one in `switch`
I think this should be `return` instead of `NullReferenceException`.
This is a bit of a hack, but I think it's better to have a `get` method that returns a `null` and then just return a `null` value.
This is the only change that affects TF providers.
I'm not sure if we want to include the format here, but I'm not sure it's worth it.
I think this should be done in the `NewYAMLReader` function instead of here.
Rails/SafeNavigationChain: Use if org_id.present? instead of unless org_id.blank?.
Why not just call `auto_fire = *af;`?
This is not a `compute_engine` module, and should be removed.
This is a bit confusing, because `value` is a dict, not a dict.
I think this is not the right place for this.
I think we should use the `M                     ` constant here.
Please remove the empty line.
Why do we need to call `initOwner` here?
I think we should also update the test_test.py to use the python 3.7 version
I think we should remove this.
Why remove this?
Why is this necessary?
This is a bit of a hack, but I think it's better to use the `log.ram_handler` function.
Please revert this file.
Can you add a ` angular angular` to the folder folder?
We should also include the key for the new key.
Is this used?
Is this used anywhere?
Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
These two lines are repeated a lot lot, but it's not really important.
I don't think we need to do any check here since `ResourceTypeSecret` is not nil
I think we should check if the page generation is in the DB, otherwise we'll be able to run the `show_exceptions` page in the DB
Why are you removing this?
Nit: I'd move this to the bottom of the file, so that it's clear it's in the `<amp-form>` tag.
I think we should be able to remove this, since we don't want to do that in the future.
Do we need to check `hashStr`?
We should probably check if `aws.NewConfig().WithRegion(region)` is `nil` here.
Can we use `Math.Min` here?
should we also check for errors here?
Why are these needed?
This is not the right fix. The `if` should be `true` here.
This is a bug fix.
What is the reason for this change?
We don't need the `.save()` here since we're using the `.save()` method.
Is this needed?
This is the only place where we need to handle the stream being passed.
Can you revert this file?
`...` is not needed here.
I think this is a leftover from debugging.
We should add some docs to the docs that this is not a valid value.
I think this should be a constant.
I think this is not needed.
I think this is not the right place for this.
why not just `album_msid=j.get('track_metadata']['additional_info'].get('release_msid'),`?
This is a change in behavior, but I think it's better to have a function return `true` here.
Shouldn't we also check `isHiddenWithCSS` for `isHiddenWithCSS`?
We don't want to expose this package. Instead, we could move it to the `initiator` interface.
This is a bit of a hack, but I think it's better to just check if the error is `httpNotFound` and then check if the error is `httpError`
I think we should be able to get rid of this check.
I think we should remove this spec
is it possible to have a 8760 in the middle of the 8760?
I think we should move this to the `except Exception` block.
I think this is not needed.
This is the only change that affects TF providers.
This is a breaking change.
Line is too long. [92/80]
Could you please explain why we need this change?
Nit: we can use `config.GetOSFamilyType()` instead of `Server OSFamily`
This is a very good change. I'm not sure if we should be using the `emplace_back` function here.
I think we should remove the `Endpoint` here and check if it's provided.
`createElement` is not supported in IE11.
Why not just return the error?
This is a change in behavior, but I think it's better to have a method `contains()` that returns a `String`
why is this added?
I think this should be a warning, not a class.
This is a bit of a hack, but I think it would be better to use `getRawResponse` instead of `getRawResponse`.
I think it would be better to use `getComputedStyle` here instead of `getPropertyValue('display', null)`
Please rename to `applicationName`
I think we should try to avoid using `encoding` here.
I think this is a debug message.
I think this should be `.Add` instead of `.Add`
I think this is not the right place for this check. The `progress` is used to check if the user is in the `master` object.
I think this should be `Optional<Integer> equalityFieldIds();`
I think it should be `fonts/*.ttf`.
Why was this removed?
This is not a public API, but it is not a public API.
I think this is a leftover from an earlier PR.
This is not used.
Shouldn't this be removed?
I think we should be using the `getParent` method here.
I think we should use `padding: 0` instead of `padding: 0`
This should be `private const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const const
Why not just `PALETTE`?
This is not a resource, right?
We should test this out on the testing page
Why do we need to change the key here?
I think this should be a constant somewhere, since it's a constant somewhere
This is a bit confusing, since the timeout is 5 seconds per tracer usage.
This field is not used.
Should this be `positional-arg-name`?
why not use deltas.sub_(means).div_(stds)
Why was this changed?
This is the only change that affects TF providers.
Should we have a `blockblock` field instead of `Ports`?
This is not a amount, but it's a bit confusing. What about something like `issue-padding`?
This is the only change that affects us.
can we add a default value for this?
why did you change this?
This is a little strange, because `was_static` is a string, not a string.
Why not just make this a constant?
Is this change necessary?
This is a bit confusing, since `copy_process` is used in the `__init__` method, and `__init__` is used in the `__init__` method, so I think it's better to just use `__main__` instead of `__main__`.
I think this should be `@return {boolean} TRUE if dimension filters are valid, otherwise FALSE.`
I think this should be `!=`
Please add a docblock here to make sure the call to `SettingsManager::get_instance()` throws an exception.
Is this the correct way to do this? It seems to me that we don't have to set the default for every invocation of `rfc7540#section-9.2.1` anymore.
This is a little confusing. Why is it necessary to change the visibility?
Why not use the `.dev` prefix?
This is not a good change, but it is not a good idea to add a `List<Predicate<T>>` to the `newArrayList()` method.
I think this should be `config_handler.get("ctu_phases' in args: ...)`
This is not a valid pattern, but it's not a big deal.
`state` is not defined.
I think this should be `Optional[str]`
Layout/TrailingWhitespace: Trailing whitespace detected.
Why did you remove this?
this is the bug fix
I think we should remove this and the other `grpc` properties.
nit: "in order to customise the default generated"
This is a bit confusing, why is the `name` attribute attribute required?
I think we should also move this import to `pkg/recovery`
This is a bug fix.
This is the only change I'm not sure about. If the contract binding is a contract binding, it's a contract binding, and it's a contract binding.
Another option is to use `template` as a partial option.
I think this is not the right fix.
This is a bug fix.
@jcotela It's not clear why we need to do this.
I think this should be `mdc-menu-surface--open`
I'm not sure if this is the right fix. I'm not sure if it is worth it.
@jsoriano I think this is the right place for this. I think we should be doing this for all cases.
I think this is a bit confusing. What is the difference between `machine` and `GP10`?
why is this include needed?
This should be `github.com/pkg/logs`.
This is a bit of a nitpick, but I think it would be better to use `*ptr` instead of `nullptr` here.
This is a breaking change. It's not a big deal, but it's not a big deal.
This is not needed.
This is not correct. The `next->opaque` is a pointer to the `next->opaque`.
I think this is not correct. The user could set `juc.IssuerAccount` to `true` if it's not `false`.
I think this should be `window.c2.activityCardController.update`
I would prefer to keep the old name as `_version` (or similar) to `_version_with_filter_url` (or similar) as `_version_with_url` (or similar) as `_version_with_filter_url` (or similar)
It's not clear to me why this is needed.
This is a breaking change. It's not a good idea to have this interface defined in the `Object` interface.
I think we should be able to remove this.
I think this should be `var procComponents = this.procCode_.split(/(?=[^\\]\%[nbs]/);`
do we need to add `("\light::Document` to this app?
I think this should be `None`
Why is this necessary?
I think you can remove `pass` here.
I'm not sure if this is the right place to do this. The `auto` loop will be a bit more readable.
This is a change in behavior, but I think it's better to just change the `AddEdges` to `libAddEdges`
This is not a good example of how we use this API. I would suggest to move it to `rulefmt` package.
Do we need to define these constants in the secret?
This is a bit of a hack. I think we should just remove the `MetricReader` and `MetricExportIntervalMilliseconds` and `MetricReader` properties.
I think this is a bit of a hack, but it's probably better to keep it as a string.
It looks like this option is only used in the tests, so I removed it here as well.
This is not needed. `element.submit()` is called twice.
I think this is not right. We have a `system_approver_emails` constant in the email and then a `id` email.
I think we should remove this annotation.
I think this interface should be removed.
I think this should be `if err != nil && err != nil && intermediate != nil && intermediate != nil && intermediate != nil && intermediate != nil && intermediate != nil && intermediate != nil && intermediate != nil && intermediate != nil && intermediate != nil && intermediate != nil && intermediate != nil && intermediate != nil && intermediate != nil && intermediate != nil && intermediate != nil && intermediate != nil && intermediate != nil && intermediate != nil && intermediate != nil && intermediate != nil && intermediate != nil && intermediate != nil && intermediate != nil && intermediate != nil && intermediate != nil && intermediate != nil && intermediate != nil && intermediate != nil
Why is this class public?
Please rename this to `BufferBuffer` and change the name to `BufferBuffer`
I think this should be a constant in `ActiveRecord.java`
I think this is not needed.
I think this is a bug, we should add a new field to the new field to the new field.
This is not correct. This is a bug fix.
Layout/AlignParameters: Align the parameters of a method call if they span more than one line.
I think you can just `mentor.email`
can you please use `this.eventually()` instead of `(metricPoint.Keys == null)`?
This test fails without the spec, but I don't see any test coverage for this?
nit: move this import up with the other `ssm` imports
Is this a TODO?
I think this test should be testing the same as the one above.
I think this should be `this(tableName, ops.current().spec())`
I think this is not right. It is not possible to use the `is_0` check to check if the `!empty($file_contents, $end_pos, 2) === '::')` check.
Please use `@Nullable`
Is this change related to the PR?
This is a bit confusing, the target is a string and not a string.
I think this is not correct. We should be able to use `ex.getMessage() + ""` instead of `if ((ex.getMessage() + "").toLowerCase().startsWith("no permission to download file.");`
I think this is still a good change. The only difference is that the `if` is not thread-safe, so I think it's ok to remove it.
I think this is a good time to add to the log.
I'm not sure if this is the right place to put this. I'm not sure if it is worth it.
Would it make sense to put this in a `index = parseInt(step)` block?
I think this should be a warning instead of a warning.
I think this is a bit confusing to people. Maybe `The same type with inputs, but all contained Tensors have been cast.`
I think this is a little confusing. What if `has_no_struct_fields` is `nil`?
I think this is the bug that we should be passing in the context of the task.
I think this is a bug fix.
This is a bit odd, but I think it's better to use `.init()` instead of `.init()`.
Is this interface still required?
Can you move this import to the top of the file?
This is a bit weird, why not just have the "true" flag in the `time.Duration` function?
I think this is the right place for this to be `make_unwritable()`?
I think this is a good place to put this in the `proposal.approvers_to_notify` method.
I think we should also add a `try/finally` block to the `finally` block.
This is a change in behavior, but I think it's better to remove the line if it's not needed.
Is this a debugging debugging or just debugging?
I think this function should return a list of params, and not a list of params.
this is a change in behavior, I think we should just make a method called `sanitize_key_fields`.
This test is failing because of the new `ConcernConcern` below.
I think this should be a default value. It's not a boolean.
This is not a good idea, but it should be `[WEqual]` instead of `[WEqual]`
This is not needed anymore.
This class is not used.
This is not needed.
I think this should be `table.getTable(database, tableName);`
should this be a separate function?
This is a bit confusing, since `fname` is a `/` in the `/` in the `/` in the `/` in the `/` in the `/` in the `/` in the `/` in the `/` in the `/` in the `/` in the `/` in the `/` in the `/` in the `/` in the `/` in the `/` in the `/` in the `/` in the `/` in the `/` in the `/` in the `/`
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
I think this is not needed.
I think this is a bit confusing. What about `zero_count`?
It seems that `Issuer` is always a valid node, so we should just always call `Name`.
I think this is not the right fix.
remove this line
I think we should keep the original error message.
`name` is not a valid name, it is a name.
I think this check is not needed.
Why are we returning an error here?
This class is not used anymore.
I think this should be `blockquote`
I think this is a good change.
I think it would be better to use `DirectX.ico` instead of `DirectX.ico`
This is a bit of a hack, but I'm not sure if it's a good idea to have a test case for this.
Maybe `column_index` should be `Optional[Tuple[str]]`?
I think we should make this consistent with the other config keys.
I think this is a bug fix.
I think we should be able to use `string_types` here, since we don't use `string_types` in the `dask_stubs` module.
Should this also be `dialOptions = append(dialOptions, grpc.NewTLS(t.options.clientTLSConfig)))`?
This is a breaking change, but I think it's fine to leave it here.
This is a bit confusing, as the `valid range` is a `public_border`.
I think we should move this to the `else` block, since it's not a blocker.
Should we also check for the expected expected expected expected expected?
This is a little weird, why is this check necessary?
The only difference is that we have a single context manager, so we should be able to remove the `&&` part.
This is not needed.
This file is not used anywhere.
nit: can we remove this?
This is not needed.
Why not just return the error?
I'm not sure if this is the right place to put this.
Can we use `PullPullPullContainerError` here?
why the double underscore?
This is the only change that affects TF providers.
This is a change in behavior, but I think it's better to just remove the `ClientSessionState` from the `clientSessionState` function.
Is this a typo?
Do we need to set this to true?
why do you need Scapy_Exception here?
This is a bit of a hack, but I think it's better to remove it.
Is this a typo?
I think we should also check for the error message.
This is a pretty big change, but I think it's fine to leave it here.
Missing space after #.
This should be imported from `utils.py`
Would it be possible to get rid of this `forEach` loop?
why not use the `chainID` as the canonical version?
@sparrowDom Just a thought, do we need to handle the error here? I think we should handle the error in `DEPLOYMENT_WAIT_APPROVAL` and `DEPLOYMENT_WAIT_APPROVAL` as well.
Should this be a `OnConcurrentMap`?
I think this should be a debug level log.
I think this is a bug fix.
This is a bit confusing, since the `interpreters` is a `Pathname` and not a `interpreters`.
This is not the right fix.
I think this is a bug fix.
I think this is a good idea. The user_meta is not a PackageEntry, so it's not a PackageEntry.
I think we should use `getStartTs()` here.
Why is this in `accountsPropertiesProfiles`?
I think this is the right place for this method.
This is a bit confusing, since `getContract` returns a non-empty string. Is that what we want?
I think this should be `isinstance(inferred, "")`
This should be in `pauseResume`.
I think this is a good idea. The `chunk swarm` is a `Chunk` and not a `chunk swarm.Chunk`.
I think this should be a `tmp = Array.isArray(tmp)`
Why did you remove this?
Is this the right place for this?
You can't use `kubernetes` here.
This is a bit of a hack, but I think it's better to use `is_leaf_is_internal_node` instead of `is_leaf` here.
This is a bit of a hack, but I'm not sure if it's worth it.
This method is not used anymore.
I think it would be better to have a `helpText` parameter here instead of a `class`
I think this is still correct. The only reason this was changed is if the error is not found, and the error is not found.
we should also add this to the `belongs_to` model
Maybe it's worth having a different test case for this, but I'm not sure what the expected behavior is.
I think we should just remove the `RegexCamelCase` attribute here and just use `RegexRegex` in the `DeleteMustHaveEmptyRequestBody` below.
This is a bit confusing, why is this needed?
@wordpress ->wordpress
This is not the same as the one in `src/server/src/server/src/server/src/server/src/server/src/server/src/server/src/server/src/server/src/server/src/server/src/server/src/server/src/server/src/server/src/server/src/server/src/server/src/server/src/server/src/server/src/server/src/server/src/server/src/server/src/server/src/server/src/server/src/server/
why remove this?
We should add a note that this is not divisible.
Can we name this `SerialNumber` or `IssuerId`? It's a little confusing to me.
Remove this `Right` and use `nifi.properties` instead.
Why is this needed?
Why is this needed?
This is a little confusing, why is this necessary?
I think this is a bit confusing, since `send` is a `ry_t`.
I would use `if (is_string($var_id))` here.
I think we should use `try...except` here.
This is a breaking change. The `Queue` property is not used in this PR.
This is the only change I've made. The `GET` argument is a `file` object, not a `addr`.
I think this should be `struct DaylightDummy {}`
This is a breaking change.
Why is this test case necessary?
@smarterclayton do we want to keep these tests?
I think this should be `private`.
This is a bit weird, why are we just using a directory directly?
This class is not used.
Nit: we can use the same format for both branches.
I think this is the correct fix.
This is a change in behavior, but I think we should have a better name for this.
I'm not sure if this is a good idea. The `auto` is a `auto` and it is a `auto` of the root root root root root, but it is not a good idea to have a `auto` of the root root.
Why do we need to set this to `false`?
I think this should be a separate function, since it's not a user-facing endpoint.
This was the only change that affects logging.
This should be done in `callback.prototype`.
This is a bit confusing. Why is it necessary to have `editorClass` as a `string`?
remove this file
This is a bit confusing, why is this not `Tag`?
Is this change intended?
Why is this interface needed?
Please rename these constants to `ExecLICIT_TIMEOUT` and `ExecLICIT_LOAD_TIMEOUT`
I think this can be `null`
I think this is still a regression.
Why is this needed?
Is this necessary?
I think we can remove `v1beta1.Instance` too.
I think this should be `SymbolSupport.iterator` instead of `Symbol.iterator`
I think this should be done in the `else` block above.
I think we should be using `[32]byte{}` instead of `[32]byte{}`
This is a breaking change. Please revert.
I think we should move this to `register` function.
I think this should be `var role = axe.commons.aria.getComposedParent(node);`
why is this change needed?
why not `__iter__` ?
Why is this import changed?
This is a bit weird, why is this " Break"?
Can you update the title of the test data please?
Is this a typo? `source.iceberg.reader.fetch-record-batch-size`?
These are not needed.
is this a bug?
`di.MysteriumAPI` was removed because it was removed in the `MysteriumAPI`
This test is failing on master.
This should be `if (mdmLoginServers)`
I think this import is unused.
could use `debug` to create a temporary variable for this.
Can you add gitea copyright line to header (and keep gogs one next to it)?
We should also have a `BoundServiceAccountSigningKeyFile` field in the `AWS_BOUND_SA_SIGNING_KEY` file.
@cra0zy do we need to keep these?
Shouldn't this be `nano::Timestamps_count`?
Nit: I think we should be consistent and use the `ignoreKeys` constant here.
I think we should log the stack trace here.
I think you can remove this line
I think this is the only change that affects the `metadata[:execution_result][:pending_exception] = e` part.
I think this should be `setItemVisibility(menu, R.id.share_item, false);`
This was removed because it was a duplicate of the `Fixtures` property.
Why do we need to specify `int` here?
I think this is not the right place for this. It's probably better to use a different approach than the `self.log.info()`
This is the only place where we need to use the `startTime` value.
Shouldn't this be `const char *q = "<account_out/>\n";`?
I think we can remove this `find` method entirely, since we don't have to duplicate it in the `render json` method
Is this needed?
I think we should be able to remove the `showPlayers` call here.
Could you add a `errors.Sprintf` here?
This is a bit of a nit, but I think it would be better to move this test into the `TestFilterApplyError` function.
This is not the same as the one in the file.
I think this should be a `Object.is` check.
Use options.roles instead of options.roles.
I think it should be a constant.
The error message is probably more clear.
I think this is not the right place for this. The ` synax highlighting` is used to be used for the `get synax highlighting` case.
I think this should be `nuc.IssuerAccount == ""`
Should this be `if (authCallback != null)`?
I think this should be `var mongoErrorContextSymbol = require('../../lib/core')`
Why did you remove the `$entry_path_type` and `$snippet_text`?
Why is this change necessary?
I don't think we should set this to the client http statuses. We should set it to the client http statuses.
I think this should be `sd_journal_seek_head(ctx->j, 1);`
Why is this necessary?
This is a bit weird, why is it necessary to add a new method?
I think this would be more readable as `@attributes = apply_default_attributes`
I think this is a bug fix.
This probably should be `not_to have_content`
I think we should be calling this method `headersValue = props.get(headersKeyPerSequence);`
I think this test case needs to be updated to reflect that the new Realm() call is made in a different schema.
I'm not sure this is the right place for this. The current version is used for this version.
This should be done in `var aria = 'aria-hidden';`.
This spec doesn't test that the search is saved.
What is the purpose of this change?
I think we should set this to `false` in the `err` block.
I think we should add a `TODO` here to make sure we don't break the code.
Can you add a note that this is not a correct key to the user?
Can you please add a space after the `if`?
I think this is a good idea. It should be `new SalesforceTLSSocketFactory getInstance()`
This should be `BaseSVIDPath`.
Why not `05_MAX_PRECISION_ALLOWED`?
Is this a function?
This is a bit of a hack, but I think it would be better to use a constant for the command name.
can we add a `repository_id` column as well?
This should be `C:\lies.cs`
I'm not sure if this is the right way to do this. I'm not sure if it is worth it to make a method to add a `name` to the `name` method.
Please fix the indentation here.
The `assert_called_once_with` is not needed here, since the `KeyError` is already defined above.
This is not the right place for this. The `Create` method is called by the `Create` method.
I think this is a bit of a hack. I think it would be better to have a `getColourSecondary()` method that returns a `max` object, and then use it in the `getColourSecondary()` method.
Should we add a link to the hd instead?
I think this should be `.de()` instead of `.de`
@smarterclayton do we need to remove this?
Should we make these variables configurable?
I think we should add a warning about this, since we don't have a stream name.
This is a little hard to read. I think it's better to have a test that sets the state of the file, and then check for the state of the file.
@danrot @wachterjohannes Shouldn't this be `targetEntityConfig`?
Can we use `-b` here instead of `-b`?
Align the parameters of a method call if they span more than one line.
I think we should remove this.
I think this should be `IError` instead of `Warning`
This is a bit of a hack, but I think it's better to use `.valueOf(sourceIDs.size())` instead of `.valueOf(sourceIDs.size())`
This is a change in behavior, but it seems like it should be a separate commit.
Why are we reverting this file?
Can you add an example here that `results['gt_semantic_seg'] = gt_seg`?
I think we should be able to remove this, because we don't have to do anything about it.
I'm not sure if this is the best way to go. I'm not sure if we want to do any prefetches on `approvals` or `option` anywhere. I'm not sure if this is the best way to do this.
I think we should just use `response.Header.Get(AcceptResponseErrorHeader)` here.
Why not just use `library.yaml`?
I think this is a bug fix.
Why not just use `repoNode`?
ShouldShouldRetryCheckCheck.getRetryRetry() instead of hard coded
This is the fix.
Can you revert this change? This file is already included in the PR.
this is just a one liner change
not sure if this is needed
why is this needed?
I think you can remove the `&&` here
I think we should use `^^ip.*` here.
I think you can just use `self.copy(capacity=capacity)` here.
Please use `if (get_if_not_exists())` instead of `if (req.get_if_not_exists())`.
Nit: I think we should be using `fbo.rekeyFSM.Event()` instead of `fbo.rekeyNotNeededEvent()`
I think this is still still useful to have to remove the `config.order` setting from the config, right?
I don't think we should do this. It's not necessary to specify elHeight in the first place.
I think it would be better to have a method for AbstractRememberMeServices that returns null.
Why is this needed?
Can you add gitea copyright line to header (and keep gogs one next to it)?
Why are we removing this?
This class is not used anymore.
I would prefer to have this in a separate PR, but I would prefer to have it in a separate PR.
I think this is the only change that affects the `EnableCleanupReplicationTask` call.
Why is this needed?
I think this is not the right place for this function. I think we should just use `invert = None` and then use `cls.isEmpty()` instead.
I think this may be more appropriate as `ogOutputStream`
I think this is a bug fix.
Is this needed?
I think we should keep this bool.
I think this interface is not needed.
This is the only place where we need to do this.
I think we should be consistent and use `ExpireSnapshots cleanExpiredFiles` here.
I think we should be using the `oauth_web_app` constant here, since it's not a part of the file.
This is a bit weird, why do we need to return here?
I think it would be better to have this be a `require.NoExternalUse` instead of a `try.except` check.
I think this is the correct error.
We should not need this package.
I would use `manifest.json` here, as it's a global variable.
This is a test that was not working before.
Is this change related to the current implementation?
Can we move this to the `if (config.websocket_config.enabled)` block?
I think this should be `final`
why is this change needed?
This is a change in behavior, but I think it's better to use a `Balance` here.
Maybe we should create an issue for that?
Should we add this to the docs?
Why are we using `connect_timeout` instead of `connect_timeout`?
I think we should add a TODO to remove this TODO.
This should be `!`
I'm not sure if this is the right place to put this. I'm not sure if it's worth it.
Why do we need to set the empty string?
This is a bit confusing, since `WriterForFn` is a `UnimplementedProvider` and not a `read` of the `read` of the `read` of the `read` of the `read` of the `read` of the `read` of the `read` of the `read` of the `read` of the `read` of the `read` of the `read` of the `read` of the `read` of the `read` of the `read` of the `read` of the `read`.
I think this is not correct. `len` is `length`
I think you can remove this
This is a bit of a hack, but I think it would be better if we could just have a `if (propStream.read<int32_t>(openContainer)) {` check here.
Shouldn't we also add the `adaptivescalar` option to the `scalarEncoder`?
Can we keep the `--verbose` here?
This should be `/* XXX i#3307: necessary to instr_translation_mangling_epilogue?`
this is not needed
I think this should be `attachShadow` instead of `body`.
This is not needed anymore.
@danrot @dantleech did you find this change?
Shouldn't this be `table(" + hashCode()`?
I think we should use the same `@QueryInterface` for the `QueryInterface` (which is the same as the one that is implemented in the `QueryInterface`.
This is a bit of a weird pattern, but I think it's better to have a local pod in the test.
I think this is not needed anymore?
what is the reason of this change?
This is a bit of a hack, but I think it's better to use a local variable here.
I think this should be `[Option(f', "filter", HelpText = "Filter the benchmarks by name using glob pattern(s). Optional)]`
`auto log = std::get<3>(logEntry);` can be used directly.
I think this is a wrong place for this, it should be a `__lastupdated__` function.
Is this a typo?
Why is this needed?
I think we should be using the same API for the API.
I think this should be `@video = Video.find(params[:video_id])`
shouldn't this be `if uh.Dynamic || u.MaxFails != 0`?
This import is not used.
why is this removed?
I think this should be `false`
Should probably also update the sessionManager to reflect the new sessionStorage?
This is a change in behavior, but I think it's better to just change the `gStorageServer` to `notifyStop` in the `start` method.
can we also check that `earliest.BID() == NullBranchID`?
I don't think we need to add this.
I think we should be able to use the constant here.
I think you can just do `from . import LayoutAlgorithm as ds_layout = None`.
I think we should move this to `src/server/auth/auth.go`
This should be `err.enableRules()`.
I think we can move this to the `/` namespace.
There's no need to check if the variable is not `true` here.
This is a bit confusing, as we have a `policy_violations` method in the `violations` method. I think we should just change the name to `policy_violations` and change the name to `violations` to `violations` and change the name to `violations` to `violations`.
hmm, this test is not testing the same as the one above, can you please rebase?
If you're not going to be changing this, you can use `if (io_config.linear_tree)` instead.
This is the only change that affects TF providers.
This is a little hard to read. I think the `==` is the right part.
This should be added to the docs/add-on-config.json
I think this should be `isPaused(cluster, awsCluster)`
This is the main change.
This should be `toAbsolutePath`.
I think this is not correct. It is not a standard practice for a user to get a `List<FieldPath>` from the `List<FieldPath>` but not the `List<FieldPath>`
Line is too long. [86/80]
Should we keep the godoc import here?
should this be `draw :users`?
No need to create a repoName here, just do `ctx.Handle(200, diff)`
Why are we removing NET452 here?
This is a very minor thing, but I'm not sure what the best way to do is to add a default value for this.
nit: `case hasURIs:` should be on a new line.
This is not needed.
I think you can remove the `downloads` line here.
I think we should keep the old name, e.g. `80-is-local-port` and `443-is-local-port` to make it clear that this is a port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port port
I think we should move this to `initializer`
The `enum_decl` check is redundant here.
I think this is not right. It is not the case that the cmd check is not present.
This is not the only place where rollup-plugin-commonjs automatically resolves `.default` is used. I think we should remove the check for `.default` here.
I think this is a bit of a hack.
I think this is a good change.
This is not a `@Nullable` for the `CombinedScanTask` but the `FileTask` is not a `@Nullable`.
This is the only change that will be relevant for the machine configuration.
I think this is the only place where you need it.
This error is probably not correct. The error should be raised in the error message.
I think we should add a `:current_user` check to make sure the user is not in the first place.
I think we can keep this and just use the ApiVersion variable.
Why do you need this?
This is not the right place to put this. The `AspNetTags` is used in the `if (exception != null)` block below.
The `kind` and `running` are all lowercase.
I think we should keep the `VuFind` class as it is.
I think we should use `before(:each)` here.
I think this is a breaking change. We should be able to remove the `else` here.
You should use the `item.images` helper here.
I think we should be able to remove this, because we don't have to worry about the new default.
I think this is a bit of a hack.
why not `name.toLowerUnderscore()` ?
Why did you remove the `name` part?
This is a bit of a hack, but I think it's better to use `ASSERT(off, 0xfff)`.
Is this needed?
Why not just return the current time?
The `Gemfile` and `Gemfile` are the same, so I think we should remove `Gemfile` and `Gemfile` from the `env` module.
It looks like this import is unused.
This is a bit odd, but I think it's better to use `k8s.io/apimachinery/pkg/util/wait` instead of `k8s.io/apimachinery/pkg/util/wait`
I don't think this is right. The idea is to not use a `bool` value for this.
This is a bit confusing, since we are returning an error here, and we don't care about the timeout.
why do we need this?
See above, I think we should move this up to the `facet_paginator_class` field.
The `CXX` suffix seems to be unused.
This is a bug fix.
why do we need to change the names?
We should not need to check for `0` here.
I think this is not the right choice. The output should be `_scheduled_on` instead.
Why is this one not 0.0.0.0?
why not `static_cast`?
`seen twice: " + info.info.name ;`
I think this is a bit confusing. If a user explicitly set a default value, it will be zero. If a user is not allowed, then a user should have a default value. If a user is not zero, then a user should have a default value, not a user.
I think this should be `<hash>` instead of `<level>>`
What's the reason for this change?
I think this is not correct. The locality is a locality, not a locality. The locality is a locality, not a locality. The locality is a locality, not a locality.
I think this should be a `try catch` instead of an `if`
What is the reason for this TODO?
This is a breaking change, but it's not a breaking change.
I think we should use `Time_REMOTE_JOBS_DEFAULT 100` here.
Can you please change `expire_time` to `duration_ms`?
I don't think this is correct. I don't think we should be using the `let` here.
This is a bit confusing. How about `mangle_single_step_enabled`?
Is this related to the change?
Why remove this?
This is a good name. I don't think we should name this class_name
This is not the main change. It is not needed anymore.
I think we should make this non-nullable and make it nullable.
This is not a public API, but it's not a public API.
This is a debug message.
I think we should also add these to the `java.sonar.server.delete.parquet.row-group-check-min-record-count` and `java.sonar.server.delete.parquet.row-group-check-min-record-count`
I think this should be `font['completion.category'] }}`
We should add an `is_changeset_id` check here, to make sure we don't have to.
Shouldn't we also check for `pkiAuthenticationPlugin` and `authenticationPlugin.plugin.getMetricRegistry()`?
I think this is not needed.
We should probably make this a constant.
Can you add a TODO to remove this check?
Was this a bug?
Why is this needed?
This is a breaking change. We should not make the API public.
So, I'm not sure this is the right place to put this. The `byteslice` function is used to set the `buffer.length` to `byteslice`. The `byteslice` function is used to set the `buffer.length` to `bytes`. The `byteslice` function is used to set the `bytes` function to `bytes`.
This should be a `setUp` (and not a `setUp`), not a `setUp` (which is a `setUp`).
this should be set to false by default, right?
remove the newline
Removed this file because it was already in the `pipelineoted_catalogs#show` folder
This is a bit odd, but I think it's better to use the `networkpolicy` prefix here.
Why is this needed?
This is not the right place for this. The `--local` flag is used to set the `--local` flag to the `--local` flag.
Can you please add a `TODO` here?
Why is this removed?
What's the purpose of this change?
This is a breaking change.
This change is not related to the PR, but it seems to me that we are not using the default value here.
exception is not a blocker
I think this is a bit confusing, maybe `cm_info=True`?
Why is this being changed?
This is the fix.
This is the main change.
This is a bit of a hack, but I think we should be using `distinct()` here.
This is a debug message, not an error.
Why did you change this?
Please add a `TODO` to remove this.
should we make this a constant?
Why is this change necessary?
I think this should be `CTU_FUNC_MAP_CMD`.
This test is not really testing what it does. I think it should be `!== 0` instead of `false`.
Why is this needed?
no need for a pointer here, you can just use `info->getChainId()`
I would use `bool`.
Nit: I would call this `Cache:true` to be consistent with the rest of the code base.
Why is this import needed?
Can you please rename this field to `resourceName`?
This check is not needed.
I think this is a breaking change.
This is a bit of a hack, but I think it's better to just remove the `TestTest` function and just call `TestTest` directly.
This is not a valid variable, it should be a `all_defaults` variable.
I think we should also mention that the accountDeltaCount is a lot of work.
This is a change in behavior, but I think it's better to keep it as is.
If we're not hang, we should probably just close the criuServer.Close() and close the criuServer.Close() to be sure that we close the criuServer.Close() will be returned.
I think this should be `npm run test:js`
Line is too long. [92/80]
This is the only one that is passing in the `movie` object.
Shouldn't this be `if (tagContexts_.empty() && onlyVertexProps_)`?
I think this should be `stream.eof () && !stream.eof ()`
I think we should be using `_getCheckpointParentDir` here, since it's not a big deal, but it's a big deal.
@adamjstewart Is this a typo?
I think this should be `task.populateGPUEnvironmentVariables()`
Can you make this a constant?
This should be changed to use the new enum class.
I think you can remove this line
Shouldn't this be `pool.PoolAddEventHandled`?
Why not just check `fn.FirstBasicBlock().FirstInstruction().IsAAllocaInst().IsNil()`?
I think we should be able to use the default value for this.
Is this still needed?
I think this is not needed since the rb_thrift_binary_proto_read_set_end is defined in the rb_thrift_binary_proto_read_set_end_end
This should be `log.finest`
I think we should make this `static` and use the `count_count` constant.
It's not clear to me why we need to do this.
Shouldn't this be `CreationTimestamp is a timestamp`?
can you please use `self.bbox_coder.decode(1, 2:4, axis)` instead?
Nit: I think this error message could be more helpful.
I'm not sure if this is the right place to put this. It is a good idea to add it to the `switch` statement.
this should be an `elseif`
This is a bit of a hack, but I'm not sure how to test this.
I think this should be `config/remote`
Why does this need to be `!TEST(1U << 31, enc)`?
This test was not working before.
add `absolute` to the end of this line.
I think this should be `global.TraceProvider(&p1)`.
This import should be removed.
I think this is the right place for this, but I think it's better to move this to the base class.
I think this should be `time.With(MessageTimeoutDefault)`
I think we should move this to `Senders                   `
Shouldn't this be "Pod"?
Why is this needed?
I think this is a bit confusing, since the `state` is not a `Customize` and the `exists` is not a `Customize` (which is not the case for the `uppy`).
I think this is a breaking change.
Can we make this a private constant?
why not just add the struct struct here?
This is the only place where we need to do this check.
I think this should be `import snakebite`
This is a bug fix. This is a bug fix.
Why is this needed?
This import is unused.
I don't think we need this class anymore, it's only used in one place.
I think this should be a warning instead of a warning.
I think we should use `webdriver.http.CorsClient.isAvailable()` instead of `XhrClient.isAvailable()`
Is this the only place where we have the `/all` folder?
I think this should be `can not listen {}, port may have been occupied, this may cause client report error when being accessed. skip {}.", ep.getClass().getName()`.
I think this should be `private static final String SELECT_COUNT = " FROM (%s)"`
I think it's better to move this to the `json.uncompressedUserData` section, since it's a pointer.
This is a bit of a hack, but I think it's better to use `stdout.puts` here.
This is a bit of a nit, but I think it would be better to use a `goto` here instead of a `result`.
This is not needed. `this.ratio_` is already undefined.
I think we should just call this `ip.MaskedIp`
Why not `path`?
I'm not sure if this is the right way to do this. I think it would be better to just check for `self._tab.key_press(Qt.Key_Enter)` and then check for `self._tab.key_press(Qt.Key_Enter)`
I think this should be `membershipMonitor.Create(dispatcher)`
This is not the right place for this. The method is called in `getDownloadSizeNumeric`.
I think this should be `_win_id` instead of `_win_id`
I think this should be removed.
I think this should be a warning. If the image is destroyed at this point, it will be destroyed.
I think the `isGoQuorumCompatibilityMode` is not needed here.
I think we should add a `try` here to prevent any immediate confusion.
This is a bit of a hack, but I think it's better to use a `@plugins.resolve_top_level_references` method instead of a `groups` property.
can we make this configurable?
This is a bit of a hack, but I think it's better to keep the `blockHeightParam` call as it was before.
I think we should keep the old name.
Is this still used?
I think this should return -10
I think this should be `len(args) > 0`
why is this a "bp"?
I'm not sure this is the right change. The `trace` option is to change the `trace` option to `text` instead of `path`.
Line is too long. [90/80]
This is a bit confusing, why not just have a `RuleViolationFix` annotation?
Do we need to add this to the end of the list?
Line is too long. [86/80]
This is now done by the other PR.
Can you add a TODO to remove this?
think this should be `int`
This is a bit of a hack, but I think it would be better to use a `valuesArray` with a default value of `docID` to avoid the need for the array.
I think this should be `final`, right?
why do you need to setMaster here?
Shouldn't this be `Once`?
Why is this protected?
We should add a license header here.
you should use `assertNotNull`
I think this should be `pipeline_name` and `target_name` to match the name.
This should be `SleetSettings`
I think this is not correct. It should be removed.
I think this should be imported at the top of the file.
Can we make this a function and return `None` instead?
I think this should be `80` instead of `80`
why do we need this?
I think we should keep the old name. It's a little bit confusing.
I think this function is not used anymore.
This is a bug fix.
why is this removed?
Maybe we should rename this to `corporation_WEEKLY_ITERATION_SKU`?
why not use `crdClient` here?
I don't think we need to use the `kube_init` package here.
Why is this needed?
I think this should be a `TODO` instead of a `TODO`
This should be `db/db.go`
This seems like a bug, but the function name is not very descriptive.
Please use `resourceAwsFactory.getKernel` instead of `chare_singlesubgroup`.
Why is this change necessary?
Why are you removing the `typedef`?
This import should be removed.
This is a bit confusing, as the `profile.distinct` method is called when the user is using the `BoxWhisker` and the `profile.add` method.
@danrot @dantleech did you mean to change this to Default?
These two includes includes are now unused
I think it's better to say "This flag will be removed."
why not using the [$name variable instead of calling it in the constructor?
Why change this?
We should probably move this above the `Client` and move it to `Client` as well.
This is not used anywhere.
@wachterjohannes Shouldn't this be `json.schemastore.org/sarif-1.0.0-beta.5` ?
I think this should be `errors.message`.
I think we should just return `dict` here.
I think this is a bit confusing since it's a user-displayable login, not a user-displayable login.
Why is this necessary?
This is a bit of a hack, but I think it's better to have a method that returns a new ArrayCollection object.
This is not needed.
Is this really needed?
should this be `false`?
I think this should be a constant.
I think we should add a warning here to make sure the user-id is not specified.
Should we do this before `AvailableBalance`?
I think this should be `Sync is not enabled. Note that the developer edition of the Node.JS SDK for Realm does not include sync on Linux.`
This is a bit weird, why do we need to check the `k`?
I think this should be `//           flushed to the server. However, the data might still be be//`
This is a bit weird, we are returning a pointer here, but the error message is not clear.
Why do we need to assert here?
I think we should use the `TableMetricsConfig.columnMode(colName)` here instead of the `TableMetricsConfig.columnMode(colName)`
I think you can just remove the `from_build.py` argument from the doc.
Just noticed, this is not needed.
I think this is a bug fix.
i think we should keep this package private and add `pkg/errors` to `pkg/errors`
This is not needed anymore.
Why is this protected?
I think this is a breaking change. It is not needed anymore.
This is a bit confusing, why are we adding a `Purpose` to the `device-farm` package?
I think this is the only place where we need to use the `ILoggerFactory`?
This is a bit of a hack, but I think we should just remove it.
Not sure why this is removed.
Just curious, why is this needed?
I think we should be using the `p.Spec.AdditionalScrapeConfigs` here instead of the `==` check.
I think we should be able to use the `spec.GetEnvironment` function here.
This should be OK, since it is not a public API.
Can we add some description about what this means?
I think this should be in the `swin_small_224_b16x64_300e_imagenet_202106` folder, not in the `swin_small_224_b16x64` folder.
I think we should be able to remove this for now, but I think we should keep it as is.
This is a bit weird, why do we need to pass the `loadDir` to the `Fsync` function?
I think this is not needed.
this was the wrong test
How about we create a `using string` or `using string` here?
I think it would be better to move this check to the `trim()` call.
Why is this needed?
I think this is not the right place for this.
This is a bit of a hack, but I think it's better to use a `@private` helper for this.
Why did you change this?
I would have put `assert` in the `plot_importance` method, so that it's easier to read.
This is a bit of a hack, but I think it's better to have a function that returns a string.
Minor: I think we should remove this class.
Please add a line after `receipts`
Shouldn't this be `if (!service)`?
You can remove this line
This test was not working before.
Why is this needed?
This is a bit of a nit, but I think it's better to use `glog.V(2)` instead of `glog.V(2)`
Is this used anywhere?
This is a bit confusing, why is this needed?
does this need to be added to the `UnknownTypes`?
This is a bit confusing, since `ExtractorCallbacks*` is a `const char *` (the `const char *`).
@mjkkirschner I think this is the right change.
Please add a space between `)` and `{`.
"do not export export data" or "do not export data"
Shouldn't we check for a node node here?
I think this should be `@TestCase`
I would use `test_raises` here, as it's a small small thing to pass in a `bool` value.
This is a very minor thing, but I think it's better to leave it in.
remove the empty line
Shouldn't this be `role="presentation"`?
This is a bit of a hack, but I think it's better to just remove it.
nit: not a big deal, but this is a style change.
What is the reason for this change?
Is this a "DNS" change?
This test was not working before.
This is not needed. The `if` statement above already does the `if` statement.
This file should be removed
I think we should use the `tlsCertTags` function here.
Why is this change necessary?
I think this is a bit of a hack, but I think it's better to have a `port_handle` that does the same thing.
This is the same as the line above.
I think this is not right. The traceflows is used only once, so it should be removed.
why is this removed?
Please don't import this file.
I think we should just make this `inventory_index_id` and `inventory_index_id` since it's a `index` object.
This is a bit of a hack. I think we should be using the `1` constant here.
You can use `TEST(PREFIX_EVEX_VV, di->prefixes)` here.
Is this needed?
I think we should be careful here. We should do the same in `cores.getZkController().getZkStateReader().tryCallback()`
This is a bit of a hack, but I'm not sure if it's worth it to do anything here.
This should be `isAuthenticated` instead of `isAuthenticated`
Can you add a `TODO` here to remove the need for the new `pingWaitTime` case?
Can you also check that the `response` is `True`?
We should probably remove the NV Access Limited here.
Should this be `private`?
I think we should add an `assert` here to make sure that the `Git` is in the `repo` package.
This is a bit weird, why do we need to set the default value for this?
I don't think this is the right fix. It should be `enc.AddBool("proto", t.NegotiatedProtocol)`.
This is a change in behavior, but why did you move to a different file?
I think we should be able to use `nil` here, since `nil` is the same for `nil`.
I think this is not the right place for this method. The `Stream` method is used to copyStream from the input.
> I don't think you need to do this, just saying: > The mocked manager part of global one is not the same as the one that is being used. > The mocked manager part of global one is not the same as the one that is used. > The mocked manager part of global one is used by the other. > The mocked manager part of global one is used by the other. > The mocked manager part of the global one is used by the other. > The mocked manager part of the global one is used by the other. > The mocked manager part of the
This should be a constant.
This is the only place where we need to pass the `CircuitConfig` as an argument. I think we should pass the `log` as a parameter to `logInfo`.
This change is not related to this PR, but I think it's better to use `QVariant.Type.UInt.value` here.
I think we should remove this line.
I'm not sure if we want to do this in the past, but I'm not sure if we want to do anything here.
This is a bit of a hack, but I think it would be better to use a `string.Format(Resources.ImportTransitionListColumnSelectDlg_DisplayData_Column_)` that does the actual real version.
Do we need to do this?
I think we can remove `AddPeersErr` now that we're not using it anywhere else.
Can you add a `TODO` to make it clear that this is used for testing?
why remove this?
this should be a constant somewhere
This is not needed, you can just remove it from the `test_id` method
Why was this removed?
Why is this needed?
This is a breaking change.
I think we should also add a `PRIV_GET_TRANSACTION_COUNT_LEGACY` to the `eea_getTransactionCount` field.
This is a very good place to remove this log line.
This is a change in behavior, but I think it's better to keep the old code as simple as possible.
`update=True` is the default value for `update=True`.
Why do we need to import `cStringIO` here?
Is this a change in behavior?
This should be `USTAT_NAHEAP_ESTIMATED_MAX`
I think we should just use `Newtonsoft.Json.JsonProperty` here.
I think we should keep the "tab is" here, and add a note that this is not a "tab is" to the "confirm" section.
Should this be `allocateic` instead of `allocatestone`?
for the `merge` part to be more clear
This is a good change, but I think it's better to move it to the `cd.Spec.PowerState` package.
Why is this needed?
I think we should check if the roll-DPoS is active and check if it is stand-by.
Why is this test removed?
This should be `ioctlUtil`.
nit: remove the extra blank line
This is the fix for the `fieldType` field.
I think this is a good idea to move the block to the beginning of the `include` model, but I think it's better to move it to the `include` model.
This change is not needed.
Is this a bug fix?
Use 2 (not 1) spaces for indentation.
This is not needed.
This is not the way we do this validation, but I'm not sure it's worth it to check for the `user` field in the spec.
I think this is not correct. The `reportreport()` function is called on the `focusTimeout`.
This is a bit confusing, since `config` is a boolean and `filter` is a boolean.
Is this a typo?
The `stat` is not necessary here, since you are already setting it in the `AutoAutoFunctionFactory`
I think this should be `string_trim` instead of `cannot` since it's a package function.
I think this should be moved to the `_isApplicationObject` method.
This is not the only place where the `item` is used.
This is a good place to put this in the `Caffe::set_mode()` function.
Please move this to the beginning of the file.
Why is this change required?
I think it would be better to use `Rand_state_DEFAULT_parm` here instead of `Rand_state_DEFAULT_parm`
This is not needed.
why change this?
I think this is not correct. The API is not correct. The API is not correct. The API is not correct. The API is not correct. The API is not correct. The API is not correct. The API is not correct. The API should be correct. The API should be correct. The API should be correct. The API should be correct. The API should be correct. The API should be correct. The API should be correct. The API should be correct. The API should be correct. The API should be correct. The API should be correct.
I don't think this file is needed
Can we use `timeout` here?
What's the reason for this change?
This might be too large for users. We should probably make this a separate PR.
I think we should be using the `buildBinaryFor` function here.
This is a little hard to follow. I think we should just remove the var exporter parameter from the constructor.
This is a bug fix.
This was changed to use the global var instead of the global var.
Can you add a note that this is not a good example of how to use it?
I think we should add a license header here.
nit: `trimRows: [8, 9]` is unnecessary.
This should be `static const char *error*`
@mmaxim this is the way to go
Is this still necessary?
Can you please add a TODO to remove this?
I think we should use the `get` function here.
I think we should keep this as it was before.
This is a bit of a nitpick, but I think it would be better to have a test that checks the full list of the same value, and then check for the full list of the same value.
remove the TODO?
Why is this deprecated?
Is this needed?
I think we should just use `==` here.
Shouldn't this be `if exMessage != null && exMessage.startsWith("Datafile")`?
This is a very big Integer class, but it's not a big Integer.
This function is not used anywhere.
The issue is that this is a "defaultSendPort" transport.
This is the only change that affects TFM.
This is not a valid TODO.
Can we rename this to `federatesWith`?
Please revert this change.
I think this is not needed.
This is a bit of a hack, but I'm not sure if this is the right place to do this. I'm not sure if this is the right place to do it.
Is this still needed?
This is a bit weird, why do we have to move it?
@sparrowDom Just a thought, do we need to check for the `if` here?
This was a bug, we're not actually using it anywhere else.
This is now done in the `volume-create-listclonecstorvolumereplicacr-default` file.
I'm not sure if this is the right fix. The idea is to use `FPGA_ERR()` instead of `IRQ write < 8 bytes` to avoid the warning.
why do you need this?
This is not needed.
Should this be `run-check`?
`this.isSorted()` is already defined in `tryModifyRow`.
why is this changed?
We should probably add an example here to make sure that the tag is not available.
I think this should be `window.DateTimeFormat().resolvedOptions()`
This is a breaking change. The name of the method is a breaking change.
I think this should be `public static final`
This is a bit of a nit, but I think it would be better to move this to the `and` below, since it's a separate change.
I think we should be able to remove the `stop` parameter from `friendly` to `friendly` and `friendly` to `friendly` and `friendly` to `friendly` and `friendly` to `friendly` and `friendly` to `friendly`
I think this should be `?` instead of `?`
`endsWith` is a bit ambiguous, can you use `Node.equals`?
Do we need to add BatchExportProcessorOptions to BatchExportProcessorProcessor?
I think we should make this `FakeWebAPI` instead of `9bf9752a-541-444add56f96b`
Please remove the `else` here.
Not sure if this is the right fix.
This should be in the new implementation.
why this change?
@jsoriano Is this change intentional? I'm not sure if it's worth it.
Should we have an example of a more specific name?
I don't think this is the right place for this. It's a good candidate for a `getAcceptShowHideCaretEvent` method.
Can you add a docblock here to explain why this is needed?
This is not the right place for this. The `_REQ` is used to set the `CONNZ` in the `-1` package.
This is a bit of a nit, but I think it would be better if we could just do `req.get().Resource(volumePath + "/catalog)` instead of doing the same thing here.
Line is too long. [83/80]
I think this is a bit confusing. If the user is not running the promise, the method should be called `thisthis` or `thisthis` or `this` is called `this` and not `this`.
You can use `Timecop.pop(:attachment)` here.
Should this be `Gzip.gz`?
The name `_UnknownOutput` is not clear. It is used in other places.
I don't think this is right. The `@SuppressWarnings` annotation is not needed.
I think this is not correct. The `@Deprecated` should be removed.
I think this should be removed.
@mjkkirschner @steveharter, @stephentoub do we need to also change the `firstChild` property here?
Why did you change this?
Please remove the `primaryPivotFacet` here.
I'm not sure if this is the right place to put this. I'm not sure if it is worth it.
I think we should move this to the top of the file.
I think this should be `if hasattr(cb, 'first_metric_only') and feval is not None:`
Nit: I think this is a good name for this field.
You can change the local variable name to `float`.
I'm not sure this is correct. The `atp` is a pointer, so it is not a pointer.
I think you can use `step.name` directly.
This is a bit of a weird change. Why did you change it?
I think this is a bit confusing, since `Could not approve the stage because` is a ` approver`
I think this should be `stats["listen_count"] * 100.0,`
I think it would be better to use a helper function for this.
We should not use `execution` in our tests.
I think this is a bug fix.
@jcotela It looks like this is the only change that affects the `AbstractLastByte` function.
I think this is a bit confusing. What if `self.extra_convs_on_input` is `None`, and if it is `None`, then `self.extra_convs_on_input` is `None`, and `self.fpn_convs` is `None`, and `self.fpn_convs` is `None`, and `self.fpn_convs` is `None`?
I think this is a good change. The `if` statement should be kept as well.
nit: I'd call this `ZpoolStatusStatusStatusStatus`
I think this is the right place to put this logic.
can we also add the `record` to the `errno` and `details` ?
This is not a valid valid valid valid. This is a very specific thing.
I think we should keep this around as it is now a bit more efficient.
Why not just call builddate from the Makefile?
This should be a warning, not a warning.
remove unused imports
`s.sys.replies` is always false, so this code is not correct.
These are not needed anymore.
The value of `PRIVACY_MULTI_TENANCY_NO_ENCLAVE_PUBLIC_KEY` is not the same as `PRIVACY_MULTI_TENANCY_NO_ENCLAVE_PUBLIC_KEY` but the value of `PRIVACY_MULTI_TENANCY_NO_ENCLAVE_PUBLIC_KEY` is the same as `PRIVACY_MULTI_TENANCY_NO_ENCLAVE_PUBLIC_KEY`. So, I think we should just change the value of `PRIVACY_MULTI
This is a bit confusing, why are we passing in config.boltdir here?
This is a bit of a hack, but I think we should probably check for `by` here.
I think this should be `GrpcHandler.Request` instead of `GrpcHandler.Request`
This is a bit confusing, why not just "the commit succeeded, failed. If the state is unknown then it is not safe."?
I think this should be `else if`
Style/UnneededInterpolation: Prefer single-quoted strings when you don't need string interpolation or special symbols.
can you remove this line?
Do we need to move this to `/etc/`?
This is a good place to put a check for nil check. I think the check for nil is redundant.
@jcotela It's not your change, but I think this is what you want.
This is a bit of a hack, but it seems like it should be a separate commit.
This is a bug fix.
Is there a reason we are not using `Default BufferReader` here?
this is a bit weird, can't we just have a "max" prefix?
I think this should be `p.Route53 != 0` instead of `p.Route53 != nil`
This is a bit of a hack, but I think it's better to remove it.
I think we should just make this `HttpMethod`, since we don't have to worry about the other `HttpUrl`s
This should be removed.
I think we should change these to be `Password Authentification Protocol` and `Password Authentication Protocol` to make sure they are not compatible with the same name.
I think this is a good idea to import the `try` block.
This is not needed.
I think this should be `ipsets`
This is not a valid table. It should be a metadata file.
Please add a TODO to remove this.
Is this needed?
This is the only change that will break the tests.
This is the only place where we should set the default value for the user's "CRiOS" key. I think it should be set to `true` instead of `true` here.
This interface is not used anymore.
I think we should add a new error message here.
this is a bug fix?
I think we should avoid using `0` here.
I think this is not the right place for this. The `table` variable is used in `_get_config.py` and `_get_config.py`.
You can just return `false` here.
I think we should log the user here.
This should be `GoQuorumCompatibilityMode`
why is this removed?
This should be `this.prevFolderId_`
can we use `c.Now()` here?
This is a change in behavior, but I think it's better to use `type` instead of `type` as the parameter.
Why is this needed?
Why do we need to add `@default`?
nit: `to fit`
this should be set to false by default.
This is a change in behavior, but I think it's better to be explicit here.
I think this is a good change. It's not a good idea to have a `stripUnlearnedColumns` that is used in the `getNumColumns` function.
Why is this needed?
I think it's better to use `i.e. because a renewal is already happening` instead of `i.e. because a renewal is already happening`
This is a change in behavior, but I think it's better to have a `ExtQuery` method that returns a boolean.
This is a little hard to read. I think we should just return nil here.
I think this error message should be "Requested piped doesn't belong to the project you logged in")
This is not used anywhere.
I think this is the right fix.
I think this should be `--no-daemon` instead of `nd`
I think we should use `--compare-dest` here instead of `--compare-dest` to make it clear that this is the default.
This is a debug log.
This is a bit weird. I think we should just remove the Replace.
I think this is a bit of a mistake, since it's a minor minor, but I think it's better to have this as a `<%= _('Instructions') %>`
Is this change necessary?
This is a bug fix.
I think this is not the right place for this. The `find` method is called by the `:name` object, not the `.eager_load(:name)`
I don't think we need this here since it's a new one.
This is a bit confusing, because `stream_data` is a `None` (and `stream_data` is a `None`). I think it would be better to just use `None` instead of `None` here.
why is this a container?
I think we should change the return type to `isEmpty`
This is a bit confusing, as `n` is a `List<T>` which is the best way to do it.
This is the only change that will break existing tests.
We should move this import to the top of the file.
Shouldn't this be `else if` ?
I think this should be `if block.BlockMessageLimit {`
I'm not sure if this is the right place to put this.
@tgamblin Do you know why this is a breaking change?
Line is too long. [83/80]
This should be a pointer, not a pointer.
This is a bit weird, why do we need to set the `Attributes` attribute here?
This should be `obj = opts.delete(:expires)`
This is not needed anymore.
Please use the same 'color' parameter for all the other languages.
I think we should be able to use cancelTimers here.
nit: I'd prefer to use `.map` here, as it's a bit confusing.
This is a breaking change. It is not needed anymore.
Is this needed?
I think it would be better to move this to `src/main/java/org/apache/iceberg/UnboundPredicate.java`
I think you can remove the `i2h` prefix here.
I'm not sure if this is the right place to do this. I think it would be better to use a `opts.cpp_includes` constant.
this is wrong. The `line_number` is used in the `__construct` method, which is not the case for the `line_number` property.
why do we need this?
Nit: import order
This is the only one I'm worried about. The `Disconnect` is a debug message and it's not an error.
I think this is not needed. `self.resource_name == 'bucket'` should be enough.
I think we should be consistent and use `time.Duration(timestamp metav1.Time) Option` here.
I think it's better to move this logic up to the `if` statement.
I think this is a leftover from debugging.
Align the parameters of a method call if they span more than one line.
Shouldn't this be `True`?
Can we make this a `delete` method? I think it's more clear what the `delete` method returns.
This is a breaking change.
Can you add a `SpanContext` here to avoid the need for the `IsValid`?
I think this should be `res.Flush()`.
I think this can be removed.
This is a little confusing to me, because the `RepoDoesntExistError` is not a `Cause` function.
I think this should be a bit more specific, e.g. `tequilapi.allowed-hostnames`
I think it would be better to move this to the `if ($useCache == true) {` block.
I think this is not needed anymore.
This is not the right place for this, it should be in `time.Hour`
Do we want to check that the attribute name is empty?
Metrics/CyclomaticComplexity: Cyclomatic complexity for files_exist? is too high. [7/6]<br>Metrics/PerceivedComplexity: Perceived complexity for files_exist? is too high. [8/7]
Why is this change needed?
This is a breaking change. The reason being passed here is to ensure that the reason was not being added to the DownloadStatus.
We should probably make this a warning.
I think we should use `interceptor.interceptors` instead of `i.interceptors` here.
I think this should be `StartupLogger.Debug("Loading {0}`
Do we need to do this for every test case?
This is a bit of a hack, but I think it would be better if we could just always return a `List` object instead of a `ImmutableList` object.
I think this can be removed now, since it's not used anywhere.
The `jsonStr` is a `strncpy` method.
I think this is a bug fix.
I'm not sure if this is the right fix.
I think this is a bug fix.
`ref` is not a boolean, so this should be `const`
I think we should add the `--verbose` flag to the `AWS` flag in the `leave_parts_on_error` flag.
I think we should add a `let` to the `roundtripper` and `roundtripper` methods to the `lib/http` package.
why not just import cftime_types and not cftime_types?
why not just use the block device name?
Please don't change the argument name.
I'm not sure this is the correct way to do this. I'm not sure if this is the right way to do this.
This is a bug fix.
Same here, we should just pass the values to the method.
Why is this error ignored?
Is there a reason to not just pass `plugin` to `Validation.py`?
I think this should be `@paramLabel`.
`show_legend` is a list of images, so it should be a list of images.
Is this change related to the bug fix?
Can you add a note that this is causing the tests to fail?
I think this should be `--es6-js-export`
Can we use `timeout` here?
This is a bit confusing, why is this change needed?
I think this should be `@Nullable`.
`public static explicit operator int?(` -> `public static explicit operator int?(` -> `public static explicit operator int?(` -> `public static explicit operator int?(` -> `public static explicit operator int?(` -> `public static explicit operator int?(` -> `public static explicit operator int?(` -> `public static explicit operator int?(` -> `public static explicit operator int?(` -> `public static explicit operator int?(` -> `public static explicit operator int?(`
I think we should also remove the `proofs` import.
This is a bit of a hack, but I think it would be better if we just always call `msg.MessageId` and then call `len(ids) > 0` here.
Shouldn't this be in `validateProfileID`?
This is a change in behavior, but we should move it to `javascripts.models.js`
Is this needed?
I'm not sure if this is the right place to do this. If we want to do this we should add a check to the `UNSUBSCRIBE_SECRET_BASE` to make sure we don't have to.
I'm not sure if this is the right fix. The `<` prefix is a bit more readable.
can we make this a constant?
Block has too many lines. [29/25]
I think this is a good idea. It might be better to just have a `n` or `n` as the default.
I think this should be `allowOptionalMappings` instead of `true` since it's a `bool`
Is there a reason to have this return `o.chooser`?
why not using the function from wlr_drm_connector_set_dpms() ?
I think we should keep this, but we should add a `nonce` field to the `transactionWatch` field.
Why not just use `key` here?
Could you please rename this to `tls_insecure`?
why is this being removed?
I think we should be able to remove the `@Nullable` annotation from the constructor and just call `contains(element, from)` directly from the constructor.
should this be `not an annotation`?
I think this is not needed anymore.
This is the only place where we need this new CUDA_ERROR_COOPERATIVE_LAUNCH_TOO_LARGE is used.
Why not use a `NewMutableStateStats`?
This should be `leakedInsecureKey`.
Should we also check for `assert.Close()` here?
I think you can just do `output->fullscreen_view->set_fullscreen(output->fullscreen_view, false);`
why not just return peers
I would suggest to use the `@param string $uuid` variable instead of the `@param string $uuid` variable.
This should be `VLOG(2) << x = 2`
Use the new Ruby 1.9 hash syntax.
This is a breaking change. The default implementation is `server.Handler`.
This is not needed.
I think this is a bit of a hack, but it's not a huge deal, so I think we should change the name of the variable to `pageTitle` or something like that.
I think this is a bit confusing. If the user is not using a different command, then the command will be processed by the parent shard.
I think this is not needed anymore.
Is it possible to get rid of the `success_https` field entirely?
This is a breaking change.
why change this? we don't have to change it
Is this test type specific to the `header` package?
Please don't change the parameters.
This is a bit of a nitpick, but I think it would be better to use the `asNestedType()` method here instead of the `asStructType().fields()` here.
This is a bit of a hack, but I think it's better to be explicit here.
Shouldn't this be `getServiceManagerException(ex)`?
I think this is not needed.
I think this is a bit confusing, since the `stop` value is used in the `stop` function.
Are these changes necessary?
This is a little hard to read. I think we should just make this a default value.
@mfojtik this is the fix.
I think it would be better to use `var response = await.Empty();` here as well.
This is a bit of a hack, but I'm not sure if it is worth it to remove it.
@matt-gardner, I think this is a bug. The `EXT_SIMD5` is not a `2` and the `EXT_SIMD5` is not a `2`. I think it should be `2` instead of `2`
We should probably add a note about this.
Can you use `assert.Len` instead of `assert.Create()`?
I think we can remove this and use `prefQueueSortOrder.getDefault()`.
Nit: remove empty line
I think this should be `const`
I think this should be `external_failure`
I'm not sure if this is the right place to put this. I'm not sure if it is worth it.
I think we should add a check to show_source and return the result of show_source.
I think this is not the right fix.
This is the only change that affects TF providers. I'm not sure if this is the right place to put it.
Redundant self detected.
This is a bit of a nitpick, but I think it would be better to have a `Warn` here, and then use `Warn` to indicate the result is a bit more specific.
Why is this version not version compatible?
Are these two new Ruby 1.9 hash syntax?
I think this is not right. It should be `@world.example_count(example_groups)`
I think it's better to say "add this field to a variable"
This is a bit confusing, since `globalVirtualMAC` is a `SetDstMAC`.
I think this should be `exclude-too-few-public-methods`
This should be a separate function.
This should be `os.Exit(exitCode)`
I think we need to keep these as it is.
shouldn't this be `out[1] = "Namespace|Name|Capacity"` ?
`metric variable must not be null`?
Is this include needed?
Please use `boolean` instead of `+` to avoid code duplication.
Line is too long. [83/80]
I think this should be done in the `if` block above.
this import should go before the other goats imports
This is a bit of a hack, but I don't think it's a good idea to use `profile.as_json` here.
This is a bit weird, we should just call it `db` and then call it `db_id`
I think we should be able to remove this and just use `TryGetSwitch` directly.
I think this should be `csv.at[0, 'Int0']`
why is this change needed?
This is a change in behavior, but I think it's better to use the `nameof` type.
I think we should remove this flag.
why not just call `9` here?
I think we should add a `deprecated_rerun` field to the `Property` field.
This is a bit of a hack, but I'm not sure if this is the right place to do this.
Why do we need to do this?
This should be done in the `systemdsystemgeneratordir` module.
I think this should be `elifcationCompute()` instead of `elif self._classificationCompute()`
Should we use `SetInitCode()` here?
I think this should be startTs.
`width` is a bit ambiguous, it should be `const`.
You can use `!=` instead of `!=` to reduce the size of the string.
I think this is not needed.
Why is this needed?
You can probably remove the `let` here since there's no `rejected` any more.
This is a bug fix.
Why are we removing the port from the host?
Does this need to be added to `--wheel-resolver`?
I think this is a leftover from debugging
This is a breaking change. It is not a good idea to add this property to the `Eip3198Enabled` interface.
I think this is the only place where we need to call `Dispose()`?
should stakingV2 be a constant?
Why not use `__DIR__` here?
This should be `if err != nil`
please add a docstring
I think this should be `/opt/localstack/`
I think this function should be called "is_being_called" or something similar.
I think this is not right. The `@group_level` value should be the default value.
I think this should be `@Ignore`
This is not the best place to put this function.
I think this should be `processor_chain`
Why is this needed?
I think we should use the `ami_version` constant here.
nit: `build|src/generated.*)/.*` is a bit confusing name. How about `getpreviousPath`?
can we set this.inTransaction to undefined when options.session is undefined?
`io.prestosql.plugin.io.prestosql.plugin.io.prestosql.plugin.io.prestosql.plugin.io.prestosql.plugin.io.prestosql.plugin.io.prestosql.plugin.io.prestosql.plugin.io.prestosql.plugin.io.prestosql.plugin.io.prestosql.plugin.io.prestosql.plugin.io.prestosql.plugin.io.prestosql.plugin
I think this is a bit confusing. What's the rationale for removing the `catch` call?
This is a breaking change.
I think this should be `class` instead of `class`
This should be `enableAdminApi`.
don't use `bool` in this module, it's not used.
The `record.DyingAndDoneExport` is never used, so we can remove it.
I think we should be able to remove this `\u2122` file.
Why did you change this?
I think you can use LogHeader1 which is a bit confusing.
The test is failing because of the `11` in the test case, but the test case is failing because of the `time` in the test case.
This is the only change that affects the test.
This is the only change that affects the flag's flag.
Please revert this change.
Why is this being removed?
I think this should be `getClientConfigImportModule`
This is a breaking change. Please use `../../tools/` instead of `spec-runner/`
Why does this change?
The `o.sseq` is never used, so I removed it.
This is not needed, we remove the `:export_as_preferred_citation_txt` if it's not used anywhere else
It's not clear to me why this is necessary.
Line is too long. [81/80]
This is a bit of a nitpick, but I think it would be better to have a test that checks whether the result is expected or not.
I think this is a good place to put this interface. It's not a big deal, but it's a good idea to add it to the interface.
We should probably check if the environment variable is defined here.
(style) code indent should use tabs where possible
Why not `Failed`?
This should be `if (time.getTime()) {`
This should be `InvalidDataFormatError` not `data_format`.
This is not a good idea. It's better to use `JenkinsRule` instead of `JenkinsRule` to return a `JenkinsRule` object.
why do we need this?
This is not the same as `HexToAddress` but the value of `PriceOracleAddress` is used for the same value.
This is not used anymore.
I think this change is not needed.
This is a bit confusing, since the `auxFile` is not a `/*` and the `auxFile` is not a `/*` (which is the only place where we can use it).
Should we add a `||` check to make sure the other usages are in the same package?
@deads2k @tnozicka do you have any idea why we need this?
It's not clear to me why we need this warning. It's not clear what the error message is about.
Please remove the `sql` argument.
This file is not used anymore.
I'm not sure if this is correct. I think it should be `ifdef X86`
nit: `type` is a bit ambiguous, maybe `key[0]==`?
I think it would be better to use `is_var` here instead of `finalize_hooks`
Can this be `else if`?
I think we can drop this table as it's not used anywhere else
I think we should log the error here.
This should be `contains(symbol.toLowerUnderscore())`
I think we should use `webdriver.http.CorsClient.isAvailable()` instead of `XhrClient.isAvailable()`
I think this should be `ec2_client.disassociate_route_table` instead of `ec2_client.disassociate_route_table`
`this.keys !== undefined` is unnecessary here
This import is unused.
`.alias` is not needed anymore.
why not invoked with function ?
I think we should change the configuration name to reflect the change.
why not use GET_CAST_ISSUE_MESSAGE
I think you can remove this function entirely
Why is this needed?
I think this should be `final`
I think this should be `find_signals`
This is a bit confusing, why is this needed?
Use the constant for `nested_flatbuffer != nullptr`
This is the only change that affects TF TF codegen.
Why not just make this `String`?
This is a bit odd, but I think it's better to have a `<br>` tag.
It's not necessary to test the `string=` case here.
nit: I think it would be better to have a test that checks the region and the region is not provided.
why did you change this?
This is not a loop, but a loop is a bit confusing.
This should be done in the `before_filter` action, not in the `UserController` action.
I think this is not needed.
This change is not needed.
nit: can we call this `envSelector` instead of `role`?
I think this should be `constructor(props)`
I think we should keep this private and just call it `HiveMetastore` to make it clear that it's not used anywhere.
Is this test case unecessary?
Why not just call `err` here?
Can we make this a private property?
Why is this needed?
nit: remove extra space
Line is too long. [82/80]
Why is this removed?
Shouldn't it be `!= 0`?
can you test the content of the error?
Why not just remove the arugments?
I think this should be `width: 2`
You can use `search.isEmpty()` here.
(style) externs should be avoided in .c files
Why did you change this?
This is a bit confusing, since it's a plan in a October but it's a plan in the October. I think it's better to have a plan in the October but it's a plan in the October.
I think it would be better to have a `setField(L, "mana", "params", spell.getHasParam());` here.
I think this test should be moved to `split_into_nhot` instead of `username` since it's a string.
I don't think this is correct. The previous code was a bit of a hack, but it was a bit of a hack that was not doing anything.
I think we should check if the value is empty here.
I think this is a good change. It might be good to make it `public` if you want.
Why did you change this?
this import should go before the other goats imports
This is a change in behavior, but I think it's better to keep it as it was.
Is this not needed anymore?
I think this is a bug fix.
@michaelkuhn Do you know why this line was there before?
Thanks for the PR! I've been using `usingAnyFreePort` as a method to return the `info` value. I think it would be better to use `usingAnyFreePort` as the name of the method.
I think we should use the `sql` parameter here.
I think this should be `addgroupParams`
This should be `null` to ensure the exception is not thrown.
This was a bug, we can't remove this.
This will break the loop if `obj == 0` and `x=1` is not enough.
Why is this needed?
This change is not needed.
I'm not sure this is the right fix. The `FileData` is used to use `FileDictionary` and the `FileDictionary` is used to use `FileDictionary`.
This is a bit of a hack, but I think we should be able to use `sys.version_info < (3, 3)` instead.
Can you add this to `nnictl create/server/server` in `nnictl create/server`?
This should be a `CheckValidSuccessorForServer` instead.
nit: not a big deal, but this is a very minor thing, but I think it's better to move it to a separate file.
I think this is a good idea. The `Copyright (C) 2006-2019 NVDA` -> `Copyright (C) 2006-2019 NVDA` -> `Copyright (C) 2006-2019 NVDA`
This is a bit confusing, why is the `Walk` needed?
It would be nice to have a unit test for this.
This needs to be `vol` since the snapshot name is not a snapshot name.
I think we should use `fmt.Sprintf` here.
This test is failing on an error, but I don't see any errors that were being returned.
This is a bit of a hack, but I think it's better to just check if the task is None.
This should be `arguments-out-of-order`.
I think this should be `SnackBarHandler.show(coordinatorLayout, getString(no_account_signed_in));`
I think you can use `const std::vector<HostHost>`.
Can you add a doc to explain why this is necessary?
I think this is the only place where we create a filename in the `if packageName == ""` block.
This is a bit odd, but I think it's better to move it to the top of the file.
This should be `m_reader->get_num_models() != 1`.
I think it would be better to use a `@widget` here instead of `@parent`.
This should be `[0]`
I think we should add a "Delete" field to the docs to make it more explicit.
I think we should add a `debug` method to `buildaction` to this log message.
should be `int escape`
I think this should be `Accountable NULL_ACCOUNTABLE = () -> 0`
Is this something that needs to be in the core?
This is the only place where we call `get()` in `are_swift_ast_context` in `set_swift_ast_context` in `set_swift_ast_context`. I think we should remove the `if (m_swift_ast_context->HasErrors())` check.
I think we should add a `data-toggle` label to the guidance of the archive.
Can you please change this to `s6*(1 + s1*cos(1x))`?
I think we should be able to get rid of the `UNIQUE_VIOLATION` variable.
This is a little confusing. Why is this change needed?
I think this can be removed now?
I think this is not correct. It should be `return values.iterator().hasNext() ? new TreeSet<>(RedBlackTree.ofAll(values)) : empty();`
Not sure if we should change this, but I think it's better to keep it as is.
I think we should update the version too.
why did you change this?
This is a change in behavior, but I think it would be better to have a method that does the right thing.
This is a good candidate for `setPropertyID` to be set in the `dispatch` package.
I'm not sure why this is necessary.
Is there a reason why we don't just do `must_respond_with :success` here?
I think this is not the right place to put this check. We should probably move this check to `BuildMetadata` so that we don't have to check if the metadata is present.
Can we move this to the `DOunicartMailer`?
Please don't use wildcard imports.
This line is not needed.
I think this is not needed anymore.
I think this should be "Value of nbits: Negative"
The only thing I don't like is that the only thing I'm not sure about is the only thing that is needed.
This should be a `json:"params"`
I think this should be `public const ulong ValidatorRegistryLimit = 1_099_511_627_776;`
I think this should be `LICENSEABLE_FEATURES + LICENSEABLE_FEATURES`
This should be `from __future__ import unicode_literals`
nit: I would call this `replace_a` or something like that.
Should we rename this to `TARGET_NAMESPACE`?
Why was this removed?
nit: I think we should be consistent and use `DiscoGapicMethodConfig.getRequiredFields(..)` here.
I think this is not needed.
I think we should be able to use the `packages` package here.
Should this be a string rather than a string?
Why is this necessary?
You can use the shorthand since there is a `Shopsys` class.
This is not right. The only place where `is_merge_or_booted` is used is when `g_ptr_array_add (new_deployments, g_object_ref (deployment));` is set.
@jcotela It's not clear why we use `amp-story.js` here.
This class is unused.
Do we want to skip the `email` here? We don't want to always have a `nil` check anymore, right?
I think this is not correct, we should try to avoid loading the local dir from the local dir.
this file is still in the list of files, right?
I think this should be `[1]`
I think this import is unused.
Shouldn't we use `required` here?
I think this should be `protected Scorable leaf collector */`
I think this should be `dict(max_norm=35, norm_type=2)`
Use the new Ruby 1.9 hash syntax.
I think this is a bug fix.
This is an API break.
Is there a reason for this change?
why remove it?
I think we should use `*jsonschema` instead of `*`.
I think we should keep this around as well.
This is a bit confusing, since it's a `maxRequestBodyBytes` variable, and it's not a `Date`.
should we add a `url` to the serviceAccountName string?
should this be called ` emptyWithNull` ?
`NOT_PROVIDED` is a global setting for each test. It's not a big deal, but it's a very good idea to have a global setting that's a global setting.
I think we should keep this here, as it's not a valid default.
Why is this needed?
How about moving `pkg/common/selector` into `common.go`?
Do we need to change the order here?
I don't think we need this.
I'm not sure if this is a good idea. The `wait_for_event` call should be moved to `dynamo_thread_init` instead.
Why is this necessary?
The metrics address is not included in the metrics address.
if resp is nil, should we return an error here?
I think this is not the right place for this. The `include_options` method should be called `merge`, not `include_options`.
I think this should be `reader` instead of `null` right?
You could use `const` here.
Curious why this change?
I think we should remove this setting.
Is this TODO still needed?
`assert batch_size == 1`?
why do we need this struct?
It looks like we're removing the `ContainerInterface` class from the `ServiceLocatorInterface` class. Can we remove it?
I think this is the correct way to test this.
This is not used anymore.
Are we sure that this is not the right place for this?
I think we should make this `public Key nextPrefix()`.
This is not a public API, but it seems like a breaking change.
I think this is a leftover from the PR.
I think we should remove this method.
This is a breaking change.
I would prefer to have this method in the `setTabIcons` method.
Why is this function public?
This should be `IServerAddressesFeature`.
>? [](start = 16, length = 7) `?` `?` `?` `?` `?` `?` `?` `?` `?` `?` `?` `?` `?` `?` `?` `?` `?` `?` `?` `?` `?` `?` `?` `?` `?` `?` `?` `?` `?` `?` `?` `?` `?` `?` `?` `?` `?` `?`
I think this is wrong. The `up"></i` should be removed.
why not just do this in the loop?
This is not the same as the `if self._keys() is not None` check.
I think this is not the right place for this. It should be `datetime.now()`
Use the new Ruby 1.9 hash syntax.
I think this file should be removed.
I'm not sure if this is the correct type.
This is a bit confusing. If we don't have a `prefix` key, we should just set `args` to `""` here.
This is a bit of a hack, but I'm not sure if it's worth it to check if the docker is in the agent.Options.ExtraEnvironment.
why not use `f` instead of `module_class`?
I think we should be able to use `builder.transformPaths(path -> UTF8String.fromString(path.toString())` here.
I think this is not the right place for this. `getattr(obj, 'dtype', 'kind', 'o') in 'ui'` is a bit confusing. Maybe `getattr(obj, 'dtype', 'kind', 'o') in 'ui'`?
I think this should be `create_view :licenses`
Please revert this change.
I think this test should be testing the new behavior.
I think we should keep this and add a `General` to the `bisect_1616` in the `make_bisect_apply` module.
The `input_text` above should be `quteproc.send_cmd(':insert-text', None)`
I think we can add a check here for these values.
This was a bug, we should keep it.
I think it's better to keep the tradeETETETETET as a parameter instead of a boolean.
We should probably also add a `go get -u github.com/xeipuuv/gojsonschema` to the `go get -u github.com/xeipuuv`
I think this is a good idea to move this to a separate file.
The `code` property is not used.
Can we use regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp from regexp
Should we add a `create_to_random` method that returns a boolean?
I think this should be done in the `if (Settings.GlobalSamplingRate != null) {...}` block above.
I think we should use `#if an x86 Program Files dir exists` here.
We should add a note note note to the docs that this is not a list of supported elements.
Do we need to add metricReaderOptions to the interface?
I think this should be `@var bool Search on every key stroke`
I think we should remove this method entirely.
I think we should keep this method name and return null.
Why not just use `LOG.finest`?
This was a bad thing to do, but I'm not sure how to fix this.
This is a bit of a hack, but I think it's better to just remove the `legacyProto` import from `github.com/golang/protobuf/proto` and just have the `legacyProto` import import `github.com/golang/protobuf/proto` and `github.com/golang/protobuf/proto` and `github.com/golang/protobuf/proto` and `github.com/golang/protobuf/proto` and `github.com/golang/protobuf/proto` and `github.com/golang/proto
Shouldn't this be `helper ButtonHelper`?
I think it would be better to log the capacity to the controller rather than log it.
This is a breaking change. You should be able to remove the `const` statement.
Why is this needed?
This line is a bit long.
This is a bit confusing, why do we have to do this?
you can use `String.format` here
I think this should be `>=3.7-32`
ThisThis is the only place where `unused` is used.
This is a breaking change. The ECSIPAMPluginName is not used anywhere else.
This is a pretty trivial change. I think we should just remove the `model_func` parameter from `model_func` and `model_func` to `model_func`.
This is a bit of a nitpick, but I think it's better to use `-` instead of `-` to make it clear that the `-` is the best option.
Please remove this.
This is a bit weird, why is the IPv6 address not supplied?
I'm not sure if this is the right fix. The `BAS` should be renamed to `BAS` or `DynamoView`
I think this is a leftover from the previous PR.
Use the new Ruby 1.9 hash syntax.
why is this removed?
`reduce_for_stat_function` is a better name, maybe `reduce_function_only`?
I think we should keep this message as it is.
Please don't make use of this file.
This file is not used anymore.
The name `name` is not a required name, it is a required name.
Could you use `if vs.Len() == 0 {` instead?
I think we should log the exception here.
NIT: Remove the `==` part.
I think we should try to avoid the `body` here.
why are we adding this in `conda/api/go`?
What is the reason for this change?
I'm not sure if this is a good idea. The `bi` variable is used by `make_iterator_range` which is used by `make_iterator_range`.
Since we are using `const` here, would it be better to use `const` here?
If we're going to make this change, we should remove the default value from the `true` to `true` in this case.
This seems to be missing a `().TEST_F(VkLayerTest, RenderPassCreateAttachmentMismatchingLayoutsColor)`.
nit: I think we should name this `sendCommandForDownloadChromeHeadLess`
I think this should be just `parallel_scheduling_processes`.
Nit: I think we should just use `node/service_discovery/dto` here.
This is a bit confusing. What about "Keychains that shouldn't be shown in the keyhint dialog"?
Remove this cast
This is a breaking change. The API is a breaking change.
Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
This doesn't look right. The `Version` method returns a `resource` instance, but it returns a `resource` instance.
I'm not sure if this is the best way to do this. I think it would be better to have a `before_action :set_outside_committers` method in the controller instead of having a `before_action` method.
@Scottmitch do you know why we need this?
This is a change in behavior, but I think it's better to use the `NLA_HDRLEN` from the name.
we should add a default value to finally finally?
I'm not sure about this change. If you want to do this, you can just remove the `before_level` check and use `before_access_level` instead.
This program is not visible in the original implementation.
I don't think we need this here since it's already in the `mysqld` folder.
Rails/InverseOf: Specify an :inverse_of option.
This is a very large call, but I'm not sure if it's worth it.
"Enable or disable starting Nano PoW Server as a child process"
I think this is not correct. The code below is already being called in `newLen`.
Why is this deleted?
This is a bit of a hack, but I think it would be better to use `new MMFFAromCollection(nullptr)` instead of `if(mmffArom)`
`data.versions[version]` is not a valid variable, so it's not a valid variable.
I think we should be able to remove this, since we don't have a use-case for this.
We should not be using GapicProductConfig here. If we're going to create a new configProto, we should create the existing one.
Why this change?
why is this needed?
I'm not sure this is the right fix. The `0.25` is not the right fix.
This is not a valid type of type `Type\Union`.
Please keep the old constructor and add a space before the `,`
nit: can you revert this file?
Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body end.
I think this is not the right place to put this, since the torch.zeros_like() is the same as the heatmap[y] and the TCA are the same.
I think we should use `value` here instead of `value` here.
This file is no longer used.
Why is this removed?
This is the only place where we need to run the tests.
Is this the same problem?
I think this should be `if (true)`
Can you move this to the top of the file?
@jakexksks are the line above this?
This should be a try/catch and use a try/finally inside the try/finally block.
Why do we need this?
Should we add a `setIeService` method to the `ServiceBuilder`?
This should be a `std::unique_ptr<ebpf::BPF> bpf(new ebpf::BPF())`
Should we add a `go fmt` here?
Why is this separate from the current import?
This is a breaking change. We should be able to remove the `Node` from the database.
I think this is the only place where we need to make this change.
Why is this removed?
This is a bit of a hack, but I'm not sure if it's worth adding a `.fetch` to the `local_DOMAIN` file.
We should probably add a `TODO` to remove the else clause.
This should be `config`
I think this is wrong. The `replace(/` is used for ` '\\\'` and ` '\\n` is not the same as `replace(/\n`.
`entry.getKey()` can return a `Collection<NameDeclaration, List<NameOccurrence>>`
is this change necessary?
Is this needed?
This is not used anywhere.
I think we should add a note about this to the docs that this is meant to be in the docs.
How about adding a `LanczosWindowFunction` to the list?
This is a little confusing. Why are we not using `go` here?
I think this is a bit of a hack.
This is a bit confusing. Why is it needed?
"@ mark will be dropped and passed to parser."
Thanks for the fix, @dengemann this will break for the fix in the future. I think it's better to have a test that checks for `value.string_value }}` as a special case.
The `SetSniff` should be removed.
I think this should be `Get the snapshot snapshot link if using a source snapshot.link`
This is not needed anymore.
I think this should be `default` instead of `close` since it's a `default`.
I think this should be `sendZlp()` instead of `sendZlp()` because it is a very large number of times.
I think this is still a regression.
This is a bit confusing. Why not just call `NotFound.NotFound`?
Why not just use `// Try shutting down gracefully`?
This interface is not used.
why did you remove this?
These are not really necessary.
This is the one line that is causing the test failure.
We should be able to remove this import now.
What is this? Isn't it already set to true?
Should this be `changed_attributes[name]]`?
I think we should be able to remove this and just use the `var layoutId = ItemTemplateSelector.GetItemLayoutId(viewType);` directly.
suggestion: use `__str__` instead of `str`
I think we should also check for the `IPIPPacketsFromWorkloads` here.
Please remove the parens around the `//`
Why not just return the image here?
This is a bit confusing, why do we need to have a `adConditionError` field in the `config` folder?
This change is not needed.
why did you change this?
I think this is the only place where we need to set this to `true`?
Why do you need this?
I think this is not right, if the session is not session.TranscodingInfo.IsVideoDirect, this is not the session.TranscodingInfo.IsAudioDirect
I think we should be able to use `local_try` here.
This is a bit of a hack, but I don't think it's necessary to change the default value of `ET` to `ET`
The default should be 5s.
I think this is not needed.
`.` -> `.`
do we need to add this to the `gasLimit` interface?
This is not right. The `||` should be enough to check for the boolean value.
I think this should be `import pickle`.
I think we should be able to remove the `key` parameter from the `flux_kvs_txn_symlink` function.
This should be moved to the `_migrate_bool` method.
Is this change necessary?
I think this interface is not used.
This is a breaking change. It is not a good idea to have a test for the non-null value.
I think this should be a separate commit.
Should this be `useLoginPage()` instead?
This is a debug statement.
Why are you using the `a4adc8f4da9c7ec0d93b50ca5b73dd14df791c0aa...` here?
Why not just use PushNotificationDecryptor.getInstance() directly?
I think we should remove this check.
Could you please explain why this change is needed?
I think this should be moved to the `ctrl` package.
@jglick Could you please add a TODO here about this?
I think this is the wrong place for this.
I think this is the only place where we need this file.
We should probably use `f.stringValue()` here
This should be `True` by default.
Why do we need this?
Please add a `TODO` to remove this field.
I think we should keep the old version as well.
This is a bit weird, why not use `if` here?
If we're going to do this, we should also check if thefeid.TrustDomain                   spiffeid.TrustDomain
I think this is a bit confusing. What about `spack info`?
I'm not sure why this is necessary.
I think this should be a `string` instead of an array.
I think this should be called `clean` or `clean_embed`.
Can you remove this line?
I think this should be a `.user_active` instead of a `.active`?
I'm not sure if this is correct. I'm not sure if it is worth it to pull out the `if` statement out of the string, and if it's not, then it will be easier to just do `if @trace_tags.map { tag.tag.rstrip.join(" ") } %>`
I think this is not the right place for this. The new `get isClosed()` method should be called `@since 2.1.0`.
why remove this?
I think we should be able to use the `chainStore` from the `chainStore` to keep the old name.
This is a bit of a hack, but I don't think it's a good idea to have a test for this.
Remove empty line.
I'm not sure if this is the right place to put this. The `environment` is a pointer, so it is not a pointer.
I think this should be a separate function
This can be simplified as well.
why remove this?
I think we should be using a constant here instead of a constant.
This is not used.
I think this is a leftover from the previous commit.
I think it would be better to move the check to the `if gid < minId || gid >= maxId`
why did you remove this?
This is a test that was not working before.
I think this should be `UseUseUse StringBuilder` instead of `String`
I think this should be `!mol.getPropIfPresent(key, res)`
why is this removed?
I think we should be consistent and not use `@Deprecated` here.
I think we should still keep this as it was before.
I think we should keep the metricNamespace and just pass it here.
`nextPageTokenName` should be `methodInfo.requestPageTokenName()`
I think we should use a constant here instead of a constant.
Style: Typically, you need to change the signature of the function, you need to change the signature of the function.
I'm not sure if this is the right place to put this. The `pthread_cancel` call is not needed.
I think we should use the constant from `create-user` to keep the old name.
I think this should be `querySelectorAll(':not(textarea)').length).length)`.
Line is too long. [83/80]
I think we should be able to remove the `isNumber` check here.
I think we should also add the `Core: :proposal` to the `Core: :with_approver`
This field is not used anywhere.
This is a bit confusing, as it's a `<span>` that is not a `span` (which is what we want).
nit: `allowHighNonce` is not used in this file.
This should be changed to `const`
nit: I think we should rename this to `pageDashboard` and `pageDashboard` to make it clear that it's the default.
This is now unused
Should we check that the account is zero?
Why is this not needed?
Why is this change necessary?
This is a breaking change. I think we should be using `TxPool.Finish` instead of `TxPool.Finish`.
Why is this necessary?
Was this a bug?
I think this should be `comms` instead of `comms`.
I think we should add a check to make sure the user has the same name as the one in `packageConfig`
This should be in the wrong order.
This is a bit of a hack, but I think it's better to use a `resource<T>` here instead of a `resource<T>`
I would suggest to use `String manifestListLocation(String manifest)` instead of `String manifestListLocation(String manifest)`
`warnings` is a tuple of str.
Why does this need to be added to the `all` list?
I think we should use `serializedDataSize` instead of `serializedDataSize` here.
Shouldn't this return `false`?
I think this check is redundant.
Is this change intended?
I think this is a good idea to remove the `rollback` from the `Hibernate` module, since it's not a part of the API.
is this change intended?
This is the change that will break the revision.
I'm not sure if this is the right place to put this. I'm not sure if it's worth it to have a test for this.
Why this change?
you should create a new `create_no_window` method in this file, to avoid the `create_no_window` API
This is a bit of a hack, but I think it's better to be explicit here.
This is a bit confusing, since the `if` above is a `if`.
Why not just use the top level condition?
I think we should use `memory.Allocator` here.
I think this should be `countQuery = fmt.Sprintf("SELECT * FROM %s %s", opts.table, opts.selectAs)`
This is a leftover from previous PR.
This is a bit of a hack, but I think it's better to check for `in_memory.count` and `in_unloaded.exists?` here.
I think this check is not needed.
it's not an array, you can do `patch:reset`
@jridgewell I'm not sure if this is the right approach. I think we should just have `util.js` and `util.js` as the default.
This is a bit of an unrelated change, but I think it's better to use a `Map` instead of `bytes` to avoid the exception.
I think we should remove this method and delete the delete() method.
This is a little hard to read. Is this the right place to put this?
Why do we need this?
Nit: please use `pkg/apis/...`
This test is not related to this PR, but I think it would be better to have a test function that returns a `TestNoOutboundsForService`
I think this is a bit confusing, since `newSlice` is a `default`.
This is a bit confusing, why is this needed?
Is there a reason for this change?
This is a breaking change.
I think this should be `Subrepo == "pleasings", "the pleasings repo to your project",`.
Is this a change in the original version?
I think this is not the right place for this. The `mapper` is a `NullPointerException` and it is a `NullPointerException`.
I think this is a good change.
This is not the right place for this. The code is not correct.
I think this is wrong. The `DECIMAL_LITERAL` should be the JavaTokenKinds.INTEGER_LITERAL
this should be grouped with the other standard library imports
I think this is a good change.
@smarterclayton do we want to support both?
I think we can remove this function now that we're removing it now.
I think we should use `assertThat(CommonRenderingUtil.getDocLines("rb\rc")).isEmpty()` instead of `.isEmpty()` because it is not a string.
Is it possible to get rid of this check?
I'm not sure this is the right fix.
This is a bit confusing. Why not just call the refund function in the `GetTimeLeftToClaimRefund` function?
This is not the right place to do this. The `aws` is used by `CreateConfig` and `CreateConfig` is used by `CreateConfig` and `CreateConfig` is used by `CreateConfig` and `CreateConfig` is used by `CreateConfig`.
I think this is a bit confusing. What about something like "Handle mouse control from other &applications"?
Should we make the constructor a bit more descriptive? I think it would be better to have a `ToTovariantString()` method that returns a `help` and then call `Uri.ToInvariantString()` on it.
This is a bit of a nit, but I think it would be better to have a `using` statement instead of `throw_value_error`
I think we should remove this and use `chartType` everywhere.
Why do we need to set the empty string?
I think we should just make this `const expect = require('chai')` and avoid the `assert` variable.
I think we should be using the `logger.Debug` here instead of the `Debug` status.
what is the difference between `prob` and `self.prob`?
I'm not sure if this is a good solution for the purpose of this change. It seems like this function should be called `member.%d.%s` instead of `member.%s` since it's a dict.
We should probably make this test a constant.
I think we should use `unique_lock_t lock` here.
Should this be `key.append(kTags.data(), kTagsID)`?
no need to import *
This should be `<%= hidden_field_tag "coupon_id" %>`
I think we should use `getDataSource` here.
This is a bug fix. This is just a copy/paste error.
This is a little hard to read. I think it would be better to use a global constant for the string, and then use a global variable for the string.
I think this should be `originalRole.getAuditEnabled()` instead of `mergeOriginalRoleAndMetaRoleAttributes`
can we add a `seelog.xml` prefix to this prefix?
I think this is not the right fix. It should be in the worker_start_time_option. If it's not the current time, then it should be in the worker_start_time_option.
This is a bit of a nit, but I think it's better to return an error here.
This is not needed anymore.
I think it would be better to rename this to `HOUSE_OWNED_BY_ACCOUNT`.
Why is this removed?
I think this will be a breaking change.
This was removed because it was not used anywhere.
I think this is not needed.
Can you move this up to the top of the file?
Why is this needed?
Is there a reason why you didn't just do `#include <assert.h>`?
This is a bug fix.
This is a small change, but I'm not sure if it's worth it to make a change in behavior.
I think this should be `r.Header.Get("Detected-Locale")`
I think this is not needed.
Why not use `http.Flush()` here?
We should not expose this in the `install` folder.
I think this is a bit confusing. If the volume is not in the FD view, then the FD view is not in the FD view.
Should this be a pointer?
We should check for the PList files in the PList.
if min_length == 1, min_alpha will be 0, so the `min_alpha` will be 0.
Why is this change needed?
Looks like this is the only change that affects TF providers.
This is a debug statement.
This should be `Object`.
I think we should be able to use `1 << iota` here.
This is the only change that affects TF providers.
This is a breaking change. It's not a big deal, but it's a breaking change.
Why not just throw an exception here?
@smarterclayton do you think this is the right place to change this?
Is this a change in behavior that will be relying on the wallet object?
I think we should be able to use global here.
I think it's better to use `[0] == -1` instead of `[0] -2`
I think we should be able to use `offset + bound / 2` instead of `offset + bound + bound + bound + length + bound + bound + 1`
I think this should be `[options.maxTimeMS]`
Why is this a pointer?
This should be `Release.path`.
I'm not sure if this is the right fix.
why remove this file?
I think this should be `typeof ref=='function`
I think we should use `application_to_currency` here.
I think this should be `final`
Line is too long. [81/80]
I don't think this is needed.
This is not a good example of how the `base` class is used.
can you add gitea copyright line to header (and keep gogs one next to it)?
This is not the right fix.
this is a test, but it's not a test, right?
This is not needed.
@jcotela It's not the right fix, but I think this is the right fix.
We should probably add a new param to this function.
Why not `blob.Bucket.Model`?
I think this can be removed now since we don't use this in the test.
I think we should use the `new Date()` function here.
I think we should remove these `sign_in`s altogether.
This is not needed anymore.
This property is not used.
Why is this changed?
I think this should be `[value]`
Use the new Ruby 1.9 hash syntax.
This is a bit of a hack, but I think it would be better to just check if the function is set to load.
Why not use a `JSONJSON`?
I think this is not the right place for this. I think it should be a different name.
Can we rename this to `HttpConfigurationConfiguration`? It's a bit confusing to read.
can we use `time.Now()` here?
We have an expectation that the 401 must be authenticated and users can't authenticated.
I think this import is unused.
We should add an example here to make sure the cluster cluster is not available.
Can we add a `@private` here to avoid the brief docstring?
is this a BC break?
I think you can remove this line
Nit: remove the extra blank line.
This is a breaking change. I think we should keep the old behavior and keep the old behavior as it was.
I think this should be a `@private` instead of a `static`
This is a bit weird, why is it not just `object`?
Please use the `TranslationAdapter\` class.
This is a bug fix.
Why not use `String.valueOf(columns)`?
I think we should keep this and remove the `@VisibleForTesting` annotation.
This was a bug, we were removing the env vars from the PR.
Do we need this?
Maybe we should rename the tests to `PendingPreference` to make it clear that it's not actually used anywhere?
I think we should be able to get rid of this `from` statement.
This is a bit of a nitpick, but I think it would be better to use `free` instead of `count` here.
This import should be grouped with the other standard library imports.
Can we just call `PathOF` here?
Line is too long. [81/80]
This test was not working before.
You can use `force_received` here.
Why is this a pointer?
Please avoid using `java.util.List`.
This test is failing because it is not working.
I think this is a good idea. We should add a note that this is a new function that is passed to `IAMRoleCredentials` and then call it in `NewIAMRoleCredentials`
This is a good change. The `setValidationError` method is used to set the `update` method to `undefined`.
We should probably make this a separate PR for now, but I think we should be able to remove the `topic_name` param from the `topic` spec and just call `topic_name` in the `expect` method.
@Eric89GXL don't we have a better way to do this?
Why not use `/...` here?
This is a change in behavior, but I think it's better to have a method `contains()` that returns a `String`
This file should be removed.
Wouldn't it be better to use `if (8bit)` here?
I think this is not needed.
I think we should add a message here to ensure that the type is not `""`
I think this should be a `volatile` instead of `isHighPriority`
Minor: Can we revert this change?
This is not the right place to put this. The `dcontext->sys_param1` is used to set the params in the params in `main` and `main` fields.
I think this is a bit confusing. Why do we need to pass the transport here?
This is the only change that affects TF providers.
What is the purpose of this change?
This is a change in behavior, but I think it's better to be explicit here.
I think you need to add `Msmq` as well.
Is this necessary?
I'm not sure if this is the right way to do this. The port 15014 is used for testing.
It should be `BatchAction`
I think this is a leftover from debugging
I think this is not a good idea. We should use the default value for the `CONFIG_FILE` module.
This was changed to `mega` in #5029.
I think this is a bit confusing. I don't think we should be using the `ethereum` prefix here.
I think this is not the right way to do this. If the exception is not null, we should throw an exception.
Do we need to check that it's an empty struct?
I think this should be `w.logger.Error("configuration file for Image Watcher not found",`
We should not use the `errorPrefix` here.
remove this file?
Why not return nil?
I think this should be a constant.
I think we should keep the GinkgoWriter parameter and use it in both places.
I think we should be able to get the name from the constructor instead of the exception.
this should be `switch logfile = logfile + '\n'` (or similar) `switch logfile = logfile + '\n'` (or similarly in `switch logfile`).
Please don't import the blank line.
You can remove this line.
Is this a bug fix?
I think this should be `plotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplotplot
I think this is a little too big. We should add a TODO to remove this check.
I think this should be `tablet_tool_v2_grab_interface`
Please use `openaire.active` instead of `openaire.active`
Where is this coming from?
I would prefer to see the same name as the default value for `num_stages`, but I would like to see the same name as the default value.
Can we add a note that this is a global var and not a global var?
why do we need this?
@mfojtik @smarterclayton do we need to get rid of `database` and `mapSizeStr` here?
I think we should use relative import here.
I think this is a leftover from the previous commit.
I think we should remove this `aria-label` and `aria-hidden` as well.
can you please use the constants constants for these values?
Is this really needed?
I think this is a leftover from the previous PR.
>Field` [](start = 4, length = 6) nit: we can use `time::TimeConversion::unixSecondsToDateTime(timestamp)` instead of `time::TimeConversion::unixSecondsToDateTime(timestamp)`
I think we should probably be using `Error` here.
This should be `@psalm-mutation-free */`.
I think this should be ` PhoneGE`
I'm not sure if this is the right place to do this. If the user is not going to want to send a log message to the user, then the user should not be able to see the log message in the first place.
Why is this needed?
I think this should be `void generate_special()`.
Line is too long. [86/80]
This should be a warning.
@jridgewell Is this a bug fix?
I think this is not needed.
I think we should use `.Return(accountActor)` here.
same as above, we can use playbackManager.duration(player)
This is a bit weird, we're not doing the `check_disp` check in the `if` condition.
This test was not working before.
We should also add a `PropertyInfo` field to the `expirationDate` field.
Indent the first parameter one step more than the previous line.
These values are actually not necessary. The execution duration is a number of elements in the dbt node.
could use `path.is_path` here.
I think we should catch (\Exception here.
This should be moved to the `flb_debug` method.
I think this is a leftover from debugging.
why change from int to int?
This is the one place where `utf8` is used.
Can we also test the `object` here?
This is not needed.
nit: remove the spaces between the two lines.
This is the only change that affects TF providers.
I think this should be `(enabled.gpu_validation_reserve_binding_slot) || (enabled.gpu_validation_reserve_binding_slot)`.
I'm not sure if this is a good idea. The user_data will be able to be called with a NULL pointer, but it's not a big deal.
This method is not used anymore.
Why is this removed?
What is this for?
I think we should be using the `GetEncodedLength()` method here.
Line is too long. [81/80]
This file is not needed anymore.
This is a bit of a hack, but I think it's better to move it to a separate PR.
I think we can remove `finalizeKey` from the `"%` method.
I don't think this include is needed.
I think we should keep the `FIRST_DOMAIN_ID` parameter as well.
I think this is a bit confusing. What about `""`?
This is the only change that affects TF providers. I think it's better to move this to the top of the file.
Thanks for the fix. The random generation was not being created by the time the random generation was created.
This was a bad idea, but I'm not sure why this was here.
Why not just throw a RuntimeException here?
I think we should be using the `os.Getenv` here.
Please add a property like `isNullOrEmpty`
Should we add a `omitempty` tag here?
We should not need this method. We should just call `DependencyInstrumentation` in the `Create` method.
I think this should be `model.pre()`
why not using the same name as the timeStamp?
Why is this removed?
I think we should set this to `true` to make it more obvious that it is being used in the client.
(style) externs should be avoided in .c files
nit: can you make this a constant?
This function is called only when the table is created. It should be called `RT_8_23_2018`.
What is the default value for this argument?
why did you change this?
@dvoytenko I'm not sure if this is the right way to go.
Is this a breaking change?
This is a bit of a nit, but I think it would be better to just do `Error.Fatal(e, error)` instead of `Error.Fatal(e, error)`
I think this is a leftover from the previous commit.
Should we use `useChirality` instead of `useQueryQueryMatches`?
I think this is a good change.
Please add a line like this.
This field was removed from the constructor and removed from `_writeLock` to `_writeLock`.
I think we should be able to remove this from the `filecoin-test-go` file.
I think we should keep this method and remove the try/catch block altogether.
This change is not needed.
why did you change this?
This is not used anymore.
I think we should move this to the `getPlugin` method, since it's a new file
I think this should be `object.ofAll(iterator().zipWith(that, mapper)`
did you mean to remove this?
I think we should be using `wallet.defaultAddress` instead of `wallet[0]` here.
I think we should use `Events.trigger(this, 'stopped', [stopInfo]);` instead of `Events.trigger(this, 'stopped', [stopInfo]);`
This is a bug fix.
Why is this removed?
Why is this needed?
This is the fix.
I think this is not needed.
I think this is not the right way to fix this.
This parameter isn't used anywhere.
I'm not sure if this is the right place to put this. The `zmm_caller_saved` flag is used for the `zmm_*` flag.
I would say that it's a bit more descriptive, but I would say it's a bit more descriptive.
Can you check the other tests that use this in `test_types.py`?
I think this should be `ZMSImplFactory.getZmsInstance()`
@jona-sassenhagen this is the fix. I think we should remove the `execute.as.user` line.
remove this file
Shouldn't we have a `getTypeName` method that returns a boolean?
I think this is not the right place for this. The `if len(errs) > 0` check should be fine.
This should be a macro.
I think we should keep the API and import `recoverutil` here.
This should be `pids/nebula-graphd.pid.pid`
I think this is a bit confusing. What's the thinking behind this?
I think this is a good idea. It's not a good idea to import the file from the package.
This is a bit weird, we're just returning an error if the user has no TLF. Is there a way to do this?
I think we should also add `mock` to `Flask` and `Flprobable` to `mock`
I think this should be `#by` instead of `#cursor` (and the one above).
Metrics/LineLength: Line is too long. [123/120]
Is this supposed to be in the `#if DEBUG` block?
Why is this change required?
nit: can you move this import to the top of the file?
I think this is a bit confusing, since it's a bit confusing to have a name "name".
I think we should just remove the JavaScript, it's not used anymore.
Why is this change needed?
Why is this being removed?
I think this is not the correct way to do this. The code is only used in the `queryQuery` function, so it's not really necessary to add it to the `queryQuery` function.
I think this is the only place where we need to use it.
What is the reason for this change?
I think we should remove the `mu` here and below.
I think this should be `selectors` instead of `Subscribe`
I think this is a leftover from the previous commit
is it worth adding a TODO to remove this check?
This is not needed.
This test is not needed.
This is a bit confusing, since `controller.stubs(:signed_in?).returns(true)` is the same as `controller.stubs(:signed_in?).returns(true)` and `controller.stubs(:signed_in?).returns(true)` is the same as `controller.stubs(:signed_in?).returns(true)`
I think this should be `AddonsExtraParams`
I think we should remove the old profile, and keep the old one.
This is not correct, but I think it's better to use `find` instead of `line` here.
The default is `true` in this case.
This is a bit of a hack, but I think it's better to just remove it.
I think we should be using the `scope.MachineStatus.InstanceState` here instead of the `instanceDescription.State` since it's not a part of the `reconcileLBAttachment` function.
This should be `change[1] = instance.propToCol(change[1])`
I think the term "bfbs-builtin-attrs" should be added to the docstring.
Why is this being removed?
Should this be `CombineError`?
@jridgewell I think this should be `Steindorfer persistent`
Should we add `wireguard.cali` here?
keep the value of `true` here, to be safe.
This is the only change that affects TF providers.
please add a backtick after the key
The `record` is used to test the output of the output.
I think this is not the right place for this to be removed.
Can we have this as a constant somewhere?
I think this is a bit confusing. What if the user wants to set `rb.req.getSearcher().enableLazyFieldLoading`?
@danrot @dunglas, this is the only place where we need to support the `db` variable. I think this is the correct place to put this.
I would use `continue` here.
This file is not used anymore.
This is the only change that affects permissions. I think we should keep the file name.
This is a breaking change. I'm not sure if it is worth it.
I think we should be able to remove the "cpuCircuitBreakerThreshold" setting from the "addleCache" config.
`@return this for method chaining`
Line is too long. [83/80]
I think it would be better to use a `withIcon` with a `.build()` method.
Do we need to handle the snapshot?
I think this is a bug fix.
This is a bit confusing, since the `reverse()` method returns empty, so I think it's fine to just return empty.
This should be `network: '*'`
I think we should add an `stop()` method to the `eniAttachHandler` to the client.
I'm not sure if this is the right place to put this. Is it possible to move the `HttpContextHelpers` to the `IHeadersCollection`?
Do we need to use universe.SystemTime()?
There is no point in using `1e-12` here, you can use `1e-12` instead of `double`
This import is now unused
Not sure why you changed this, but it's not used anywhere.
Shouldn't this be a `const std::string`?
I think this is not the right place for this. The `tabbed_browser` is used to set `win_id` to `True` in the `pastebin_version` function.
We don't need to createtrace for every test case, just create the build system with a different name.
Why is this needed?
This is a bit weird, why not just use `STDERR`?
This is a little hard to follow. I think it's better to use a `loggable` here.
I think we can keep this message as it is now just a string.
I think this is the only change that affects TF providers.
why did you remove the `node` here?
This can be readonly now.
Is this a change in behavior for a while?
Why not just remove this?
I think we should add a check to make sure the error happens if the user has multiple inputs.
Should we add a `"` here?
This is a bit confusing, as `mount_volumes` is a dict, not a dict.
I think we should remove this method and just call it `backgroundCtx`
Why not just `FirstContractIncarnation`?
I think this is a bug fix.
I think this should be `debug` rather than `debug`
This is a breaking change. It should be in a separate PR.
I think this should be `-E` instead of `-example-matches STRING`
Why did you change this?
Why not `& ClassMetadata::TO_MANY`?
This is a pretty big change. We should probably be using `grant_flows` here.
I think we should remove the list here.
@jridgewell I think this is the right fix.
It's not obvious to me why this is needed.
I don't think this is right. The funder_id is not a boolean, so I'd just remove the `if funder_id.blank?` check.
The `toString` method is not used anywhere.
Why not use the default value from the environment?
This is a breaking change.
I think it's better to use an interface to return an empty tuple instead of a tuple.
I think we can get rid of this `before_action :redirect_if_disabled` check now.
This is not the only one place where we need to use the `-` prefix.
this is a bug fix.
This is a bit confusing, since `rename_column` is a `scheduled_for_cancellation_on` and `scheduled_for_deactivation_on` are the same.
I think this should be `AddSuccessors`
This is not used anymore
This is not correct. It should be `if bokeh_version < '0.12.6':`.
This was a bug, we need to keep it.
So, I think we should be using `fmt.Printf` here.
`scheduled_end_time` was unused here
It's not clear to me why we need this here. I would expect it to be `@setup_profiler` or `@setup_profiler`
@jackfrancis I think this is a bug.
I think we should keep this as it was.
Why is the NULL check needed here?
This is a bit of a hack, but I think we should just make `New FormatList` a `Set` and `New FormatList` a `Set` that is a `List`.
I think this is not the right place for this. The user can see the same message as the "starting coordinates" and then the "starting coordinates" and the "starting coordinates" and the "starting coordinates" are the same.
I think this is the only change that affects the previous version of the previous block.
We should probably move this import to the top of the file.
I think this is a good candidate for a better name.
I think we should remove this `app/views/navbar/search_bar` and `app/views/navbar/search_bar`
Can we remove remoteHostIsNonLocal altogether?
Is this change related to the rest of the PR?
This is a bit of a hack, but I think it would be better to use `issubset(package_stats)` instead of `if not package_stats is None`
I think this should be `False` because the default is `False` (and the default is `True`).
I think we should also update the `git checkout` to match the `git checkout` API.
Please use `check_expr` instead of `check_expr`
This is the only place where `expr_lambda` is used. Is this intended?
I think we should return an error here.
`var` absOutExeReplacement = regexp.MustCompile(`\$\(abs_out_exe ([^\)]+)\)` so that it can be reused.
I think we should be able to remove this and just pass in the `server.Headers` directly.
@dvoytenko I'm not sure if this is the right way to do this. This is a bug in the `getResultList()` method.
I think this should be a single `ant`.
This property is not used.
Can we just delete this function?
why not just initialize the file size in the config?
This is a breaking change. It should be `skip-common`
This is a bit weird, why is this needed?
This is a bit of a nitpick, but I think it would be better if we just return an error here instead of a string.
Can you add a docstring here?
I think this is not the correct way to fix this.
Why are we logging logging twice?
can we make this a const?
Would it be better to use `import *` ?
I think this is a bug fix.
This is a bit weird, we are not using the `nodeIP` variable in the Node config, right?
why did you change this?
@jona-sassenen isn't the actual fix, but I think this test is failing.
I think this should be `2.8.0-dev`
This is a bit of a nitpick, but I think it would be better to have a `import` statement here.
This is a little strange. What's the difference between `*this` and `pants.temp_put`?
"time a node waits after the start of an epoch..."
`from __future__ import print_function` is probably not needed here
I think this should be `count` instead of `count`
I think this should be `@since TODO`
We should also update `tagLock` to be consistent with other places in this PR.
This file is not used anymore.
Maybe we should use `is_unicode` here?
This is not needed.
I think this should be a separate class, since it's a separate class.
translator is always used in the constructor, so this should be removed
This method is unused.
This is a bit confusing, why do we need to do this?
I think this should be `(1, image, image, image)`.
I think this should be `wlr_INFO_www_XWAYLAND`.
You can use `const siteStories = [` here.
This is not needed anymore.
We should not import six here.
This is a bit confusing, why are we doing this?
The `+` should be removed.
This is a change in behavior, but I think it's better to just remove the `Converter{}` function and just return `nil` in the `Converter` function.
This is a bit confusing, why is this being returned?
We should add the `DateUtil.formatDate` here as well.
Why is this removed?
Shouldn't this be `parse_parse()`?
why do we need a new field?
Why is this change necessary?
The `GetFileCharacteristics` and `GetFileCharacteristics` seem to be the same as `GetFileInfo`. I think it would be better to use `GetFileCharacteristics` instead of `GetFileCharacteristics`.
I think this should be done in the same PR as in the other PRs, right?
This is not needed.
You can use `@ORM\ManyToMany(log\TransportTransport,versedBy="payments", cascade={"persist"})` here.
Why not just `declare(strict_types=1);`?
We should add a `editInPlaceAnnotation` field to the ingress-annotation.
I think this is a breaking change.
I think this should be a constant somewhere, and not a constant somewhere.
@michaelkuhn @smarterclayton do you have a good example of how to use this?
This is the fix. The test was failing because it was failing because the first time the last time the last time the last time the last time the last time the last time the last time the last time the last time the last time the last time the last time the last time the last time the last time the last time the last time the last time the last time the last time the last time the last time the last time the last time the last time the last time the last time the last time the last time the last time the last time the last time the last time the last time the last time the last time the
Why is this removed?
@erwinmombay @erwinmombay @rhymes @harry-cpp - do you know why this is here? I think it would be better to have a `attribution` be a `many?` instead of `join` here.
Do we need to log the namespace here?
I think it would be better to make this `final`.
I think this should be `ariaQuery` instead of `aria-query`
Why did you remove this?
This is a bit confusing, why do we need to do a `triggerCond` here?
Is this supposed to be `gowire.non-Index`?
This is a bit of a hack, but I think it's better to check for `true` here.
I think this is a bit confusing. What if the exception is thrown?
I think this should be `Extensions`
Please use `org.eclipse.jgit.util.StringUtils;`
Why is this being changed?
I think this is a bit confusing. If the key is the key, the key is the key, and the value is the same as the key. If the value is the same as the key, the value is the same as the key.
This is a pretty big change, but I think it's better to keep it as a hidden flag.
Nit: `experiments.currentThread().length` is a bit confusing to me. What about `experiments.currentThread().length`?
I think we should add a new constant for this.
This is not needed.
why do you need to change this?
I think this is not needed.
This is a bit of a hack, but I think it's better to use a `VerifyNotFound` that is used in the `vk` package.
I think we should be able to remove the `App` field from the `SiteStatus` package. It's not a problem, but it's a problem.
@michaelkuhn Do you know why we have this?
Should we just use `citaskevich` here?
We should keep this for testing.
I'm not sure if we should do this here. If we do, we should do it in `api.SdkAutoFSTrimUsageRequest` instead of `*api.SdkAutoFSTrimUsageRequest`
I think we can remove this.
I think we should remove `.config` altogether.
This change is not related to this PR, but I think it is worth it to revert this change.
Please use `#include`s instead of `#include`s.
I think this may be a bit clearer as `listener->onParticipantDiscovery(this->mp_SPDP->getRTPSParticipant())`
Is this test meant to be testing the right thing?
There's a lot of these in here where the `workspace_scale` function is used, so I think we should remove the `CMakePackage` and `CMakePackage` methods.
Please use `update_mode` and `update_mode` for this.
I think this should be `DefaultFormatBundle`
I think we should remove the transport.Encoding field from the name.
We should not need this file at all, as it's a separate file.
I think this should be `underlayer` instead of `seq`
Why not use the `TranslatorFactory` class here?
Line is too long. [81/80]
I think this could be moved to the `OUTBOUND_HTTPS_PROXY` module.
Is this change necessary?
I think this should be `if err != nil && err != nil`
I don't think this is needed.
How about we keep the old range for now?
This is a change in behavior, but I think it's better to have a set of `commandBuffer` in the `report_data->FormatHandle` that is passed in, and then have a set of `commandBuffer` in the `report_data->FormatHandle` that is passed in.
Nit: remove the empty line
Is it possible to get the gpu_devices from the originalbody? I think it would be better to use the gpu_devices.size() function instead of the first argument.
Block body expression is on the same line as the block start.
I think we should use the `url` method here.
This is a breaking change. It's not related to this PR, but I think it's worth it.
I think this should be `DotNet.Build.Tasks.Feed`
why change this?
This is not a bool, but a default is defined.
The `package pingpong` is not needed here, it is already checked in `package pingpong`
I think this is not the right place for this check.
Can we just make this a local variable and make it a local variable?
Is this a bug fix?
You can use `find_version_info` here.
The `AWS IAM` is already defined in the `AWS` function.
I think this is not a good change. It should be reverted.
Is this not needed anymore?
I think this is the only one that's needed for the `_Copyright` reference.
This is a little hard to read. I think it would be better to just check if the head is already in the chain.
I think this is a bug fix.
The config file was moved to `pkg/json/.v2.go` so that we don't need to pass the config file here.
I think we should use `cni_version.PluginSupports` here instead of `cni_version.All`
Please use `from google.cloud.security.common import resource_util`
@jsoriano Is this a BC break?
I think we should keep this as a global var for now, and make it a global var for now.
Can you use the `Kokkos::Tools::Experimental::Impl::idForInstance<` here?
why is this one removed?
This is a change in behavior, but I think it's fine to leave it here.
Can we just remove this?
Is this change related to the rest of the PR?
>value.Length > 0 [](start = 8, length = 7) Why is this change needed?
I think this should be `2`
I think we can remove this.
Why the intent here?
I think we should add a check to see if the user has already been using the state store
Can you move this import up with the other tests?
I think we should return `false` here.
I think we should be more specific here.
I think this needs to be `Debug` since it's a number of type `Enable`.
This is not needed, as the `pip` package is already available in `pip` package.
This should be `err = fmt.Errorf("Failed to exec %s: %s", cmd, err)`
Is there a constant in the name?
I think this should be `and 'kinto.plugins.default_bucket' not in settings`
Can you add a `deleteDirectory` method to `do_save()`?
I would prefer to have this in a separate PR, as it's not a part of the public API.
I think this should be done in `ScrollIntoView` as well, since it's a `try` block
This is now done by the `lib/server/server.go` file.
shouldn't this be "h2o_mruby_new_str:precondition failure"?
This file was removed in #2424
I think this interface should be renamed to `storeAvroEventReporter`
The formatting of this looks weird.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think we should keep this method and return TRUE. The function is not used anywhere else.
This is a bit of a nitpick, but I think it would be better to move this to the `if` statement.
In theory, the f-Histogram should be f-name (which is the default for the unit tests), so it should be f-Histogram.format.
can you add gitea copyright line to header (and keep gogs one next to it)?
>Block body expression is on the same line as the block processor processor processor as the block processor processor processor processor. This means that the block processor processor will be on the same line as the block processor processor.
This should be removed.
This is not a good idea, but I think it's better to keep it as it was.
I think this check is not needed.
Is this change necessary?
I think this is not needed.
This is a breaking change. I think we should change the default behavior.
I don't think this is the right place for this.
I think we should be using `acquireTopologyCacheLock` here.
How about `h.Dispenser`?
why do we need cast here?
This test was not working before.
I think this could be `query.visit(v)`
this is a bug fix. I think we should be using the `ActiveRecord` here instead of the `ActiveRecord`
can we use `type` instead of `math_number`?
The `AWS IAM` is not used anymore.
this is not needed anymore
this is not needed, we can just remove it
(style) line over 80 characters
This is not needed.
I think we should just make this `internal` and make it `internal`
We should use `pip install` here.
I think this function should return the error.
The result of this function is a bit confusing. Can we just use `.build()` here?
Isn't it better to use `assert(desktop)` here?
We should add some validation to explain why we need this flag.
I think this is a good change. The new test is still testing the right thing.
This should be `logical-taut`
@cra0zy do you know why this method is needed?
I think this should be `--mmn-address`
I think this is a bit confusing. If the var is not set, then the var should be set to 100.
I think this should be `CodeFlow` instead of `CodeFlow`
This line should be removed.
I think this should be a `void close();`
This is a change in behavior, but I think it's better to be explicit here.
I think we should use `this.storage.config.localList.get()` instead of `this.storage.config.localList.get().map`
I think this should be `if (beanCls == null) {`
why not just `v1/v2 ManifestFile`?
What is the reason for this change?
This is not a good idea. It should be a separate PR.
Why are we using `wireError` here?
Can we use a constant for this?
@smarterclayton do we want to keep the original code as well?
I think this should be `if not class_agnostic: nms_cfg_ = nms_cfg.copy()`
I think this should be `public` and `String` should be `final`
I think the `TIME` is not needed here.
I think we can remove the `@next_document` variable now that we don't have to do it now.
I think this is not needed anymore?
This is a leftover from the previous commit.
I think this is a bit ambiguous, maybe it's worth adding a `html` here?
This is the fix.
Can we rename this to `getTimeGroups`?
I think this import is unused.
could we log the warning here?
This is a bit of a hack, but I think we should just remove this import.
This is a bit of a hack, but I think it would be better to check for `value_env` and `name` as well.
I think this is a bit confusing. What about `--StandardCharsets-Delete`?
This is not a good idea, but I think it's better to use `__dk__` instead of `__dk__`
This is a bit confusing. What is the difference between `src` and `src^`?
It's not clear to me why this is a `ResolveBranch`?
Can you please add a `TODO` here?
This is a bit confusing, why is this needed?
This is the only change that affects buf.WriteTo.
This is not a good name. It's a little confusing to me. Maybe something like `is_upfront_shutdown_script_enabled_for_shutdown`?
This is a bit of a hack, but I think it would be better to move it to a separate function.
This change is unrelated to the change, but I'm not sure why this change is needed.
This is the only change that affects TF TF 2.7. The only version that is `rvm` is `rvm_version`.
This test fails because the `goog:chromeOptions` was not set to `detach` in the `http.go` file.
I think we should remove this.
why did you change this?
This is the only change that affects TF v2.
This is a bit confusing, as the name of the method is not very descriptive. Maybe `go mod`?
@smarterclayton do we need to set it to `None` here?
This is a breaking change.
Why not just use `getAttribute` directly?
Standards: Please add a space after commas.
I think it would be better to move this to `appRouter.location.href`
I think it would be better to use a more meaningful message than a "has been loaded, skip current one, remove it!"."
@michaelkuhn Do you know why we have this line?
I think this should be `Proxy.Type.SOCKS`
I think we should keep the old version and use the new version.
@jsoriano Is this change correct? I think we should keep the old behavior for now.
Is this variable used?
@martinwicke Shouldn't this be `[MvxPlugin]`?
Is this related to this PR?
I think we should be consistent and use `@since` instead of `@access`.
Shouldn't this be `!= ret.callback || ret.callback`?
I think this is a bit confusing. What about `admin masquerading as #{email`?
OO is now done by the CSPS location, so this is not needed anymore.
nit: can we use `volatile` instead of `volatile`?
Isn't this going to be true for `out`?
I think we should raise an error here, because we don't want to know whether or not the `need_exact` value is set.
Would it be possible to use `transfer` as a parameter?
This was changed to `Let's import errors` to match the `Let's import errors` import.
I don't think this is a good idea. The `server_command` option should be used for the `subsystem` option.
This should be `bool`
I think we should just make the latestVersion a bool.
Can we move this to the top of the file?
The "Backoff ended for %.128s" is a bad idea.
This should be removed.
I think we should keep the old name.
@smarterclayton do we need this?
why not set it to 1?
I think this should be moved to `insertedIntoFocusOrder` instead of `!dom.isNativelyFocusable(el)`
Why is this import needed?
We should probably add a `TODO` here to remove the extra spaces between the two lines.
This is a bug fix.
Is this change related to the change?
orig_mocks_syntax is not used anywhere else in this file.
I think we should change the name of the decorator to `C`
I don't think this is correct. The `Amazon S3` is already in the `aws-sdk-s3` package.
I think we should use the `Http1AndHttp2` constant here.
I think we should move this check to the `if err != nil` check above.
I think we should be able to remove this check.
I think we should be using the transactionLastValidRound. I think we should be using the transactionLastValidRound.
The `HeaderByHeight` is a bit confusing, how about `HeaderHeaderBy`?
This class is not used anywhere.
This is a bit of a hack, but I think it's better to be explicit here.
I think this should be `defaultsUrl` instead of `null`
Why was this changed?
I think we can remove this line.
I think we should be able to remove this method and just call `isElFocusable` directly.
This is not the best way to do it. It's a bit confusing to have a `_format_msg` function, and it's a `_format_msg` function.
why is this needed?
I think this is the only place where we need it.
I think we should add a `TODO` here to make sure we don't have to.
Please use `Objects.hash()` instead of `Objects.hash()`.
Use the new Ruby 1.9 hash syntax.
We should probably update the `TODO` to use `verbose` here.
This is not needed since we already have a `.spec.backup()`
This is a bit confusing, why do we need to set it to `MB`?
This was a bug, we should not have to pass the node here.
I think this is a bug fix.
This is a bit of a hack, but I think it would be better to use a `getLength()` method here instead of a `getRawDataSize` method.
I think we should check `other == null` here.
This is a change in behavior, but I think it's better to keep it in one place.
Maybe we should add a `scopes` flag to the `starred` option?
We should probably remove the `label` field from the label.
This is a bit confusing, as it's a bit confusing to the listing. What about "existing"?
Do we need to keep the xdensity param?
This check is not needed.
I think this is a breaking change. The `Process` is not a `Process` method.
The `<input type="text" />', [webelem.Group.inputs]` attributes are not part of the device. I think we should use the `get` method instead.
The `val()` function has a return value, so this function can be removed.
Is this used anywhere?
This is not right, `2` is a `Math.3`
This is a little weird, but I think it would be better to have a `_sorted` that is passed in as a `list` method.
Is this change related to the change?
I think this is not the right approach. We should do something similar in `_foo` and `_foo` in `_foo` and maybe use `_foo` instead.
This is not the right place to put this check. I think it would be better to move the logic to `abs` class.
I think we should add a method `EnablePiped` to the `NewPiped` method to get the `For` method.
I think we should use `user` instead of `authenticated` here.
I think this should be `var flushcount map[basics.Address]int`
This test class does not assert anything, it should be `null`.
why not using the same name as the timeStamp?
why did you remove this?
I think we should log the error here.
Is this change intentional?
I think this should be `if subs != ""`
can you move this file to the top of the file?
I think this is not the right place for this. The docstring is too long.
do we need to add the `Resource Groups Tagging API`?
Nit: please move this import to the top of the file.
This should be `import dom from 'dom'`
This is a breaking change, but I think it's better to keep it as it was.
Why did you remove this check?
I think this should be `Matrix.InsightSampleStream`
This is not the right place to put this check.
I think this is a bit confusing. What is the difference between `FeedMedia.getDownload_url()` and `ItemHasDownloadLink`?
I think you can remove the `prefix` argument here.
do we need to check for nil here?
I think this is the right place for this check.
I think it would be better to have a method `_lastDomChildSibling` that does the set of `null` and it is important to call `_lastDomChildSibling` here.
The `return` is no longer needed, right?
I think this is a breaking change. We should be able to remove the `CreateCounter` and `CreateInt64Counter` methods.
This is a change in behavior, but I think it's better to keep the nullptr check here.
This is a very minor thing, but I'm not sure it's worth it to make a change in behavior.
this is not needed
@mfojtik why is this change needed?
@alexander-schranz are we sure this is the right place to put this?
This is a bug fix.
I think we should keep this test in `test_test_environment.go` and use it in `test_test_environment.go`
I think we should remove this and just do `version(mver.GetVersion())` in `mver.GetVersion()`
This should be in the wrong order.
This is a bit weird, why do we need to do this?
This is a bit of a nitpick, but I think it would be better to have a `Warn` here, and then use `Warn` to indicate the result is a bit more specific.
This test is the only place where we set the default value for the `true` value.
The `-` should be a list of `-`
This import should be removed.
This is a bit of a hack, but I think we should be doing this in a separate PR.
Why is this needed?
This is a bit of a hack, but I think we should just check if the value is `0` and if it's not `0` then we should check if the value is `0`.
I think this should be `(a, b, b)`
@dvoytenko I'm not sure if this is the right fix. I think it's better to have a default value of `pullImageTimeout` here.
Thanks for the PR! Can you explain why this change is needed?
Why did you change this?
This is a change in behavior, but I think we should just be setting `stream.CloseSend()` here.
I think this is a bug fix.
Please add the `EntityManagerInterface` class to the interface
Is this a typo?
I think this will cause a crash if the subscriptions is not an invalid state.
I think we should be able to use `1.0` here.
This is a bit weird, why do we need to fix the v value?
I think we should remove the `Stream` here and below.
I think we should remove the `SetSetSetMetricProcessor` call and use `SetSetSetSetSetInSecs.Build()` in `pushIntervalInSecs.cs`.
This is a change in behavior, but I think we should keep it as it was.
I think this is a bit confusing. What about "Passed span is not valid"?
This is a bit of a hack, but I'm not sure if this is a good idea.
I think we should keep this as it was before.
I think this is not needed anymore.
This is a bit of a nitpick, but I think it would be better to move this to the `go` of the `sendError` function.
Can we use `toLowerCase` here?
Is this a debug statement?
why is this needed?
`handle` is not used in this file.
This was a bad change.
Maybe we should add a `MustEnablePulls` check to make sure we don't have a default value?
Shouldn't this be `innerinner`?
Should we update the message to mention that it's a special case?
Shouldn't this be `usingKernelException(GetResponseForExceptionEvent $controller, $logger);`?
It's not obvious to me why this is here. It seems like it should be `if runtime.GOARCH == "arm64"`.
I think this is not right. It should be `queryRelation == QueryRelation.INTERSECTS`
Why do we need to retrieve Order resource here?
Line is too long. [92/80]
Is this property used anywhere?
I think this is not needed.
Do we need this?
I think we should use `pygment` here.
I think we should remove this section from the view.
This is a bit of a nitpick, but I think it would be better if we could put this in a helper method that checks for the table name, and then have a unique index on the name that would be a bit more descriptive.
Please add the default value to the description.
Why not use `autoStake`?
This class is not used anymore.
I think this should be `task-"`
Nit: I would prefer if you could use `nonempty AuthAddr` instead of `Address{}`.
I think we should be more specific here, `padding` should be 0, and `padding.count` should be 0.
This change is not needed.
I'm not sure if this is the right fix.
It's not necessary to use the followings items here, but I think it's better to use the `-2` for the values.
this is not needed anymore
I think this can be removed now, since we don't use `json.dumps` anywhere in the code.
can you change the name of the stdlib PR please?
This is a bit confusing, why is the `lock` not `true`?
shouldn't we use `proto` here?
This is a bit of a hack, but I think it's better to use `os_get_file_size_by_handle(f, &file_size)` instead.
Why did you remove the report if it's not used anymore?
I think this is a bit confusing. What about `Microsoft.Naming`?
I'm not sure this is the right fix. The `xwayland` is a `server` parameter.
You can remove this line.
why is this changed?
I think this should be `if(getUNF() != null)`
This is a bit of a nit, but I think it's better to use `c$/`.
As above, let's rename this to `described_token_file`.
I think this should be `allowOptionalMappings` rather than `bytes`
input arguments should be optional
This is a breaking change. The `inventoryQuantityFormat` is not a valid value for the `var0 < 100000` value.
I think we should keep the `tcpServer` here, as it's a `JSONServer`.
This is a bit of a hack, but I think it would be better to use a `getById` method instead of a `getById` method.
This is not needed.
I think this should be `@version ||=`
Shouldn't this be `const stdlib.__init__.py`?
I think this should be done in `setUp` method.
Why not just call `defer` here?
I would prefer to have this as a constant in the `Multi` method, and then use it in the `NegLogLikelihood` method.
I think we should be able to remove the `parseFunction` check here and in the `if (isType (token, TOKEN_KEYWORD) && token->keyword == KEYWORD_function &&` check above.
@dvoytenko I'm not sure this is the right fix. The `_context.Input.ReadAsync()` call should be removed.
The `file_exists` here is a bit confusing, since `file_exists` is a `const` and `file_exists` is a `const`.
I think we should use the new name here.
why do we need this function?
I think this should be done in the `identifiers.by_scheme_name` method, since it's a `User` action.
This is not needed.
This is a bit of a hack, but I think it's better to use a `link` package that is used for the `ghost/api` package.
I think this is a bit confusing, maybe `if key !id != ""`?
@jcotela It's better to use the same import as the rest of the imports.
Do we need to keep the `setProduct` here?
I'm not sure if this is the right way to do this.
I think we should be using ` HighVoltage::PagesController` here.
This is not needed.
Should we call this `DeploymentGitPath`?
Please add a field `*tls.Config` to the `Value` and `*tls.Config` to the `Value` struct.
We should probably make this `PlatformHost` and `PlatformViews`.
I think this is a bug fix.
Is this change necessary?
This is a bit of an unrelated change, but I think it's better to have a test that checks the id of the id and the other id of the id.
`handle` is not used in this file.
I think you need to set the default value of `self._default_zoom_changed = int(fact * 100)`
why not addAnnotations = true?
This is a very minor thing, but I think it's better to have a list of `chan Result` and a `Ready()` call that returns a `Spec` object.
Why are you using List here?
We should probably add a new ` EngineRpcModule` method to the `new ConsensusModule()` method in `newProblemModule()`
Why is this needed?
should be `final`
I think this is still not needed.
Is this necessary?
I think this is not the right place to remove this method.
This is the only change that affects the version of `log.finest`
nit: you can delete the line after `self.getToken()`
Why not use `MvxMainThreadDispatcher.Instance`?
This is a breaking change. It is not needed.
I think this might be a good idea to change the return type to `None` for consistency.
I think this should be removed.
I think this should be `POLICY_LIBRARY_SYNC_ENABLED`
`correct_prob` is a `repr` for the last time.
Looks like you're missing a space before the `%` here.
Is this the correct way to do this?
This import should be removed.
You can use the same `sampler` constant here.
I think this is a bit confusing. If the `timeout` is `nil`, then the `err` will be `nil` and the `err` will be `nil` and the `err` will be `nil` and the `err` will be `nil`.
this is not needed anymore
Please avoid using wildcard imports.
Please remove the config from the config.
nit: I'd prefer to have this as a `throw new Error(` and then catch the error message with the `error` call that will throw an error if the `error` does not exist
I think we should be using the cache here instead of the timestamp.
This is a bug fix.
"Compute service account to be used by importer. When empty..."
We should revert this change.
I think this is a good change. The tabindex should be removed.
I think you can use `assert cast(itk.RGBPixel[itk.UC],2]).astype(np.uint8)`.
Is this change necessary?
Do we need to do this for all platforms?
why not just add `@return` statement?
why not call `queueSize` directly?
this is not needed anymore
This is not needed anymore.
This method is called only in one place now. Can we remove it?
Why is this needed?
Use the new Ruby 1.9 hash syntax.
This is a change in behavior, but I think it's better to keep it in the list of files.
This should be `ClusterSchema.getInstance().equalsIgnoreCase("development")`
This is a bug fix.
This should be in the other PR.
I think we should be able to get rid of the `skipBackLength` and `skipForwardLength` methods.
Would it be possible to have a `Comparing bare callable` var for this?
This is a change in behavior, but I think it's better to remove it.
I would prefer to have this in a separate file, as it's not used anywhere else.
Why not just use the MIT license?
I think we should add `matcher='path'` to the docstring.
Why are we changing the default value for 0 here?
Can you add a link to the docs that this is not a boolean?
I think this is a bit confusing, since `.flatten.compact` is a `.compact` and `.compact` is a `.compact`.
This is a bit of a nit, but I think it would be better to have a method on a subclass of `unsafe` that returns a boolean.
I think this should be `log.Info(identity dto_discovery.Identity) (err error)`
I think we should remove this.
This is not needed.
The `!` should be removed.
This is a bit of a hack, but I think it's better to have a `links.f` constant in the service.
I think you can remove this line
Why not use `http.Flush` directly?
I think this is a debug print.
This is a bit of a hack, but I think it's better to use a `letter` instead of `1` here.
This is a change in behavior, but I think we should be using `fmt.Printf` here instead of `fmt.Printf`
This is not a bad idea, but I think we should be using `go:linkname` instead of `go:linkname`
why this change?
I think this is not needed anymore.
This is not used.
Can we use `FolderBranch` instead of `FolderBranch`?
@michaelkuhn Do you have any idea why this line was there?
This is a good place to put this in a shared folder. I think it's better to move it to a separate file.
Why remove this?
This is a bit of a hack, but I think it's better to just use the standard standard library imports.
This is not needed.
I think it's better to do this in `wlr_signal_emit_safe()` and then you don't need to do this.
Style/PercentLiteralDelimiters: %w-literals should be delimited by ( and ).
Why do we need to set the empty string?
Why is this check removed?
I think you can remove this import
I think this is a good change to make it more obvious that this function is only used in the `Gcp.HTTPClient` package.
Is this a typo?
I think we should be doing this in the `else` branch.
Do we need to also check for `and bbox_feats.shape[0] > 0`?
why remove h?
I think this is a leftover from debugging.
I think we should keep this as a fallback.
I think this check should be done in the `if` block above.
Why did you remove the comma here?
Maybe it would be better to do `for loop loop loop loop` and `lines = append(lines, loop loop)`?
This is a bit of a hack, but I'm not sure if this is the right fix.
This is a bit confusing, why is this "Wait, I don't know if we really want to send the time to the system time, but I'm not sure how to do it.
I think we should use `req.CommRs.Values()` instead of `commRs` since it's a `Values()` call.
Please don't add trailing whitespace.
is there a reason for this change?
I think this is a good idea to add a `.copy()` here, since it will be a copy of the __gestures dictionary.
I think this should be moved to the `pip install` module.
I think it would be better to move this to the `_shared` class, and add a new `sess_manager` method in `_shared` method.
I think this is a breaking change.
nit: move this line up (and the other `goimports` statements) into the `*` section above.
I think this is not needed anymore?
Why is this needed?
This should be `OnLongClickListener listener`
This is a bit of a hack, but I think it's better to have a method that returns the keymap.
I think we need to keep the old config for now, but keep the old config for now.
Block has too many lines. [26/25]
I think `line 1` is not correct here.
This function is now unused.
Shouldn't this also be `assertEquals("01", h.query(req("q","*:*", "wt","velocityWithInitProps",VelocityResponseWriter.TEMPLATE,"foreach"));`
I think this is a bit confusing, since we have a trace propagator, and it's a bit confusing to have a trace propagator. I think it's better to have a trace propagator.
I think this is a breaking change.
why do you need this?
I think this should be `!=`
This was added in #5029
This is a breaking change.
This is a bit of a hack, but I think it would be better if we could just have a `puts` method that returns a boolean and then call `puts` with a `puts` that returns a boolean.
I think this is not correct. The code is not in the code base.
I think we should remove this and use the new `MaxIPSetSize` in the `init` function.
This is the only change that affects TF TF.
I think this should be `throw new UnsupportedOperationException(this.getClass().getName() + " does not implement implement notNaN")`
I think we should have a default value for this.
I think we should use `Collections.singletonList()` instead of `Collections.singletonList()`
I think this should be `true` by default, since we don't have to pass `true` to `buildActions`
This is a good example of how the `MethodTransformerContext` is created.
I think this should be done in the `if ($this->getScopes() {` block above.
I think we should be consistent and use `cniNet` instead of `cniIpam`.
I think this is a good idea to add a new API to the API.
This should be `getBackendConfig()`
Why is this changed?
This is not needed.
This is a breaking change.
Why is this not `false`?
why not use `assertwarm.Address`?
This is not used.
This is a change in behavior, but I think it's better to move it to a separate file.
This is a bit of a hack, but I think it's better to be explicit here.
This method is not used anywhere.
I think this is a bit confusing to read. Maybe "A Partition represents a single slice of a pipeline's work"?
Please rename to `yaml` to be consistent with the other volume names
This is not used anymore.
This is a bit of a hack, but I think it's better to use `ASSERT_EQ (size_count, response.get_child ("blocks")` instead of `ASSERT_TRUE (size_count > 0)`
I think this is a leftover.
I think you can use `enable.enableList(enable.gen)`
I think this should be `gOMAXPROCS`
Should this be `AbstractTestManager`?
I think we should check if the user is empty here.
I think this is a bit confusing. I would have expected the `backstop` to be a `Integer` and not a `Integer`.
Why are you changing this?
@invitation is not a attributes, can you please add it to the association?
I think this is not needed.
Nit: remove empty line
I think we should remove this line.
I don't think we should be setting `self.resources` here, since we don't care about the `self.name` attribute.
I think we can get rid of this `redirect_to` now.
why is this changed?
I think this should be `bundle == null && ...`
This is a bit of a hack, but I think we should be using `EnableJetStream` here.
I think this is not needed.
remove empty line
this is probably the only change that makes sense.
I think we should use `JenkinsRule` here.
I think it would be better to move this to the `register_training_hooks` function.
Very minor, but I think we should use `.present?` instead of `if question[:text].present?`
I think we should just make the `getInput` method private and use `getInput openInput` instead of `preload`.
This is not needed anymore.
why is this needed?
This is a bug fix.
This should be window.self.location.pathname || '';
This is the only change that affects the `ReadWorkloadManifest` call.
The `cancellationToken` can be `null` if the `cancellationToken` is not `null` or `cancellationToken` but the `ForceFlushAsync` can be `null` if the `cancellationToken` is `null` or `false`.
I think we should keep the `del` parameter for now.
Do we need to change the name of the log message?
It's better to use `c.RunOfctlCmd` here, since it's only used in the `pants.util.go` file.
I think we should add the `type` attribute to the `build` folder as well.
This is the only change that affects the cleanuping of the cleanup.
I think this should be `go-homedir`
Should we also add the new option to the `ovsctlClient`?
I think this should be `initStreams` instead of `initStreams`.
This should be `declare(strict_types=1);`
This is not needed.
`/* [...]` should be on the next line.
This change is not related to this PR, but I think it's ok to leave it as-is.
Do we need to do this for headManifests?
This is not needed.
Why not make ra.actions directly?
I think we should be consistent and not use the side-effects wherever we can.
The original code was using `wait(1)` instead of `wait(sec * 1000)` so I removed it.
I think this is not needed.
I think this is not needed.
Should we use `path.Join` here?
I'm not sure if this is the right fix. The `expect` should be a `@topic` object, not a `.to`
Didn't you mean to add this to the other commands?
Please use explodedURI[1]
@matt-gardner How do you feel about making this a constant?
`auto value_type.GetByteStride()` is called twice.
nit: `@type` should be `@typetype {Record<string, string>}`
Why not using ArraySegment here?
This is not needed.
please revert this change
I think this should be a constant in `ActiveRecord.java`
I think this check should be done in `Namespace.isValidateNamespace(namespace)`
This should be `association' === $metadata['fieldType']`
I think this should be `config.tracker_root = "UoE"`
The exception is thrown in this case.
This is not needed anymore.
Do we need to set global here?
This is a bit of a hack, but I would prefer to have a `array_key_exists()` method that does the same thing.
How about `np.numpy()`?
I think we should use `v(.+` here.
This is a breaking change. It is not a good idea to add this to the base class.
I think this should be `status: "Init"`
Why is this being removed?
Why is this needed?
This is the only place where the `Dispose` is used.
We should probably change this to `*v1beta1.TierPriority`.
we need to add an index to the index
This is the only change required to `blockData` and ` Libreproduce.WINDOWS` where we use it.
should this be `ecs/ecs/`?
Just noticed, this is the outputs in the stackDescription.Outputs.
We should remove the copy_file from the list.
@michaelkuhn Do you know why we need this change? I think it's not used anywhere.
line 205 is complaining about a `var config = new counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting counting
I think this should be done in `initApplicationBuilder` instead of in the `initApplicationBuilder` method.
I think this is not the right place for this. The `start_timestamp` is used to be removed in the future.
This is the only place where we use the `upper_bound()` function.
I think this should be a debug level log.
I think you can remove this line
This is not needed.
I think this method should be called `@paramparamPermissionSourceSource`
Can you add a docstring here?
We should probably remove this annotation.
shouldn't this be done after the consumerID?
Should this be `if (!localData.PlaintextAbsoluteUri)`?
This is not needed.
why are we changing the names?
I think we can remove the `using` here.
The config should be the first letter of the tests.
I think this should be `bokeh_renderer.comms`
This is not the right way to fix the problem. The `as_string()` function is called for `importedname` and `importedname` is the same as `as_string()`. I think it would be better to just do `[0]` instead of relying on `[0]` on `[0]`.
I think this should be added to the `<binary>` tag.
I think we should set this to `true` in the config instead of hardcoding the default value.
nit: move this line up (and the other `goimports` statements) into the `*` section above.
What is this message supposed to be?
I think we should be using `hs2Conf.start()` instead of `metastore.start()`
I think we should be more specific here: `log_ => { 'level' => { 'debug, 'log', 'console', 'level')`
I'm not sure if this is the best way to do this. This is a very common pattern, and I'm not sure if it is worth it.
This should be `LOG.finest`
This is a bit of a nitpick, but I would prefer to keep the `validates_attachment_content_type` and `validates_attachment_content_type` as a local var.
This is the fix.
I think it's a bit confusing to have a `type` of `type` and `type` of the component. I think it's a bit more clear what this is for.
This is the only change that affects TF providers.
I think this should be `Assert.NotNull(headers["custom"]);`
This is a bug fix. It should be `sizeHint`
Why did you change this?
I think this should be `[mapTo] - Set this if the Javascript property name schema differs from the underlying underlying name in the Realm`
This should be `go-sqlite3`.
I think it would be better to have a `table` here, as it is done in the `lcd_resume` method.
It's not necessary to use `x-tar` here.
I think this is a bit confusing. What about `FakeWebAPI`?
@mhoemmen I think this should be `<%= image_tag 'https://orcid.org/sites/default/files/images/orcid_16x16.png', alt: _('ORCID logo') %>`
Nit: You can use `str(str, StringComparison)`
This should be removed.
This is a bug fix.
Use `MMFF::` instead of `scaleVdWParams`
can you add a note that this is a bit of a hack to fix the problem?
I'm not sure if this should be `prime-maintain`
I think this should be a `@private` instead of a `static`
I think we should use the `Enable` constant here.
Can you update the pattern here to use `scss` instead of `text`?
This is a bit weird, why do we need to set the settings if it's not settings.REMOTE_EXCLUDE_LOCAL?
Extra empty line detected at class body end.
I think we can remove this now that we're not using the API anywhere else.
Line is too long. [86/80]
This is a bug fix. This is causing the test failure.
I think you can remove `from boto.vendored.six.moves import UserList`
I don't think this needs to be here, it's not a good idea to have a wakeup of the whoever has the same data in theory.
This is a breaking change.
should we change the default value to `RetrySettings`?
I think we should rename this to `Load` to make it clear that it is only used once.
I think it's better to use `import globalModelsStorage = globalprotprot` instead of `import six`
I think we should add a check for `child.isAssignableFrom(child.getClass()))` here.
I think we should remove the `_check_CreateDispatcher` function and use it in the `_check_CreateDispatcher` function.
could we use `debug` here?
This is a bit confusing, since `ord` is a string, not a string.
why do we need this?
I think this is not needed.
I think this should be a try-catch and use the same flush in the chain.
I think this is not needed anymore.
What is the reason for this change?
This is a bit of a hack, but I think it would be better if we could just return `None` here.
I think we should throw an exception here instead of throwing an exception here.
I think this should be `final`
I think this is a good change. The `toList()` method is a `toMap` method.
I'm not sure if this is the right place to put this. The `localProjectAppNames []string` is used in the `service` package.
I think this is not right. The `width` above should be removed.
I think this was intentional?
Should we make this a `-y` or `--default` instead of `--default`?
I think this is a good candidate for a better name.
we should also make sure that the module name is not available in `podman/roi/conv`
Why not just use `if config.AttackTimeout > 0`?
This is not needed, we should be able to remove it.
This is a bit confusing, why is this needed?
I think we should move this to `vol.id` so that we can remove the `if` block altogether.
This is the wrong place for this function.
I think it would be better to move this check to the `time.Sleep` call, since it's only used in the `time.Sleep` function.
This should be `mmcv.ops`
`opus` is not supported in IE11.
I think this is a bit of a hack.
This should be `r.h.Type() == tlf.Public`
Why is this in `cmd/errors`?
I think you can just remove the `blkRegistryOption` member variable now.
This function is used in the `exports` function, so we should just remove it.
remove unused import
This test is testing the wrong thing. The test is testing the `evaluate` function, so it doesn't test that it is working.
I'm not sure if this is the right place to put this. I'm not sure if it's worth it.
This is a bit of a nitpick, but I think it would be better to keep the `@throws` here.
Seems `scheduled_for_deactivation_on` could return `nil` here, so we can remove `!`
We should probably check if the error is found here.
I think this should be a `_` instead of `_idxLastSelected`, since it is a `null`
I think we should remove the `Login` prefix from these params.
I think this is not the right place to put this. The `Create()` method is called from the `RuntimeDescription`.
This is not the right place to put this line.
This is a little hard to read. I think the `images_base` variable should be defined in the `attr asset_dir_key` method, and the `#include` method should be defined in the `#include` method, and the `#include` method should be defined in the `#include` method.
I think this is a change in behavior. It is not needed anymore.
Maybe we should add a `ctx.Handle(500, "RefreshRepositoryMirror", err)` to the `ctx.Repo.Mirror`?
I think this should be done in the `cli/cli` class, not in the `cli`.
could you please rename `LOG.info` to `finest`
There is no need to create a email here, it is already handled in the `current_user`
I think we should remove `Indentation` from `Indentation` and `Indentation` here.
Do we need to check for `XDPEnabled`?
I think this should be ASTAnyTypeDeclaration
Should we also add a `path` param to the http2AuthorityPseudoHeaders?
is this change needed?
The `getTemplatesCount` is not needed here, it is already checked in the `Config` method
Why are we using the new-language version here?
This is not the best place to put this. I think it's better to move it to the top of the file.
why remove the second parameter?
Why is this necessary?
This is a bit odd, but I think we should just remove the `rootset` import from `pkg/util/fileutil`
Why is this necessary?
Why do we need to change the `QItemSelection` to `str`?
Why is this not a pointer?
We should add `jsx` to `extensions` below.
Nit: remove empty line
This is a breaking change.
This is a bit confusing, why do we need to set it to `Open`?
Can you add a TODO here to remove this?
I think this is a bit confusing, since `--no-resolve` is a `install` argument, and the `install` command is a `with` on the command line.
This test fails because the `goog:chromeOptions` was not set to `detach` in the `http.go` file.
This is a little hard to follow. Can you please add a space after the `if`?
I think it would be better to keep the `public` here, since it's not a part of the `public` component.
Why is this needed?
This is a test file that was not found in the first place.
I think we should remove the `.connect` param from the config.
I think we should be more specific about what this means.
This is a breaking change. We should not close close() in the client.
Why do we need to check first_second_same_name here?
You can use `__invoke()` here.
I think you can remove this import
why is this needed?
I think this should be `false`
Is this the right place to put this?
Why was this removed?
I think we should remove this line.
I think we should be using the `24` here.
why is this change necessary?
@smarterclayton do we want to keep this change?
This is a bit of a hack, but I think it's better to use a `''` for the value of `''` instead of `''`
this is not a good idea, but I think it's better to check for empty files instead of empty files.
nit: I'd prefer to use `type` instead of `type` to avoid unnecessary string concatenation.
I think we should add `type` to the `filter` method to avoid having to pass the options to the `filter` parameter.
I'm not sure if this is the right fix.
"Eastern Time (US & Canada)'" -> "Eastern Time"
Here too, the `cert_Rectangles` option is already added by the `params` option.
I think this is the wrong place for this change.
Should we also check for `isRtl` here?
This is a bit of a hack, but I think it would be better if we just return `true` instead of `false` here.
I think this is not needed.
This is a bit of a hack, but I think it's better to be explicit about it.
`id` is not supported in IE.
I think this should return -10
This is the only change that affects TF providers. I think it's better to have a test that checks the value of the `io_time` and then call it `arg`.
Should this be a `//` check?
As far as I can tell, the `default_local_registry` function is not actually used anywhere.
Please add `@param` annotation.
This is not the only usage of the b < b b < c" can be simplified as "a < b b < b < c"
Why did you remove this?
This should be `LOG.finest`
I think we should keep the `host` here, as it's a special case.
Why is this error removed?
I think this should be done in the `lua_pushmsgpack` function.
`poppler` is a `bool` so it should be a `bool`
this import should go after the last group of imports
Can you please add a space between `//` and `//`
I think it would be better to move this to `build_system.py`
why not return the error?
This should be `log.finest`
Why is this needed?
I think this should be `return value.hashCode();`
Do we need this change? I think it's not necessary to change the x- OPENSSL_size.
Why is this needed?
I think we should rename this to `aspnet-mvc.request.child-action`
`nodes_csv` is not used in this file, please remove it.
I think you can remove the `@purchaseable.collection?` here
This was removed because it was removed in #546
You can do `from pseudoSampler import ...` instead of `samplers.pseudo_sampler`
Nit: remove empty line
@tgamblin Do you know why this change is necessary?
I think this is not needed.
I think we should log this in the debug log.
I think we should remove this from the PR.
Is this change needed?
This is a bit of an unrelated change, but I'm not sure it makes sense to have a test that checks for lazy_lock and not have a lazy_lock.
`volume_mounts` and `volumes` should be `os` instead of `environment`.
I think we should use `leader.getName()` here.
@cramforce do we need to check `node.getScope()`?
Is this import necessary?
Why are we removing the `isWorkflowConditionFailed` check?
Is this change related to the change?
Is there a reason to use `#ifdef` here?
This should be static
This is a bit of a hack, but I think it's better to check for `isinstance` here.
Do we need to make sure `_filterPipeline` is not null?
This is a bit of a hack, but I think it would be better if we could just always add a new method to the `entry.getKey()` method.
This is not correct. `runtime_type.name is not None` is not None.
I think this should be a separate commit
Metrics/LineLength: Line is too long. [123/120]
This should be split across multiple lines.
This is a bit of a hack, but I think it's better to have a `str` for this, and then use `QDesktopServices.openUrl` to be consistent with the rest of the function.
I think we should be using the `key` here, since we are not using it anywhere else in the code.
I think we should probably have a test for this.
I think this should be `false` to match the new behavior.
can we call this `idx` or something?
I think we should be able to remove the older older versions of the `spec.ts`.
This is a bit confusing, why is the first `genesis-file` still being used?
I think this should be `!obj.__proto__`
This is the only place where we need to do this check. I think we should be using the `filepath.Join` function which calls `filepath.Join` and then use the `filepath.Join` function.
Why is this test needed?
Style/MutableConstant: Freeze mutable objects assigned to constants.
We should add a note that this is a breaking change.
This is a change in behavior, but I think it's worth it to log the exception here.
I think you can just do `from .spaces import Callable`
Please add explicit line after the last argument when opening brace is on a separate line from the first argument.
I think it's better to move this line to the `if` statement.
I think we should use `a` here instead of `a`
I think this is a good idea. The `Headers` field should be a `Headers[]` and not a `Headers` field.
I don't think you need this any more.
I think this is a bug fix.
why is this change required?
I think this interface is not used anymore.
Please don't change the argument order.
I think this is a bit confusing. What is the rationale for adding a TODO to remove the TODO?
Is this test class still relevant?
This is not the right place for this. The difficulty is used by the time being, so it should be removed.
I think we should remove this.
if we're not going to do this, we should do `latest_listen.fetch_listens(user_name, len(latest_listen) > 0`
This was a bug.
why this is not a install?
This is the only one that's used by the Rational Discovery LLC.
I think we should change the original to `CERN`
@smarterclayton do you want to add this option to the ACME server, or is it a valid ACME server?
why do you need to change this?
I think we should just remove `objectid` from here.
I think this should be `final`
You can remove this line now that it's not used anywhere else.
Why is this import needed?
I think this should be `cs: true` since it's a valid `--require-node` flag.
This is a breaking change. Is this intentional?
Should we also add a `bool` tag to the `StoreDir` field?
Is this still needed?
@cra0zy do we know that the baseFeePerGasPrice is null here?
I think you can remove the `@author` here.
I think you can use `String.format` here.
Nit: We can remove the ` LongLivedMarshalByRefObject`
I think this is a good place to put this logging. I think it's better to move this logging to `page_command` instead of `train_page`
This is a breaking change.
This is a bit confusing. Why not just call `MaxConnectionWindowIncrease func(sess Session, delta int) bool`?
I'm not sure if this is the right way to do this. I'm not sure if this is the right way to do this.
This is not needed. `.has_data_param()` will return `null` if `null` is `null`
Can we have a test for this?
I think this is wrong. The `replace(/` is used for ` '\\\'` and ` '\\n` is not the same as `replace(/\n`.
why change this?
Line is too long. [82/80]
This is a breaking change. It's not a big deal, but it's a separate commit.
I think this should be `extension_condition = lambda pkt.extension`
I think this should be `options[:order] = seed`
This is a good place to put this. The reason is that the `mod` is not an array, but the `ref_insert` is not a `ref_insert` (and the `ref_insert`) is to have a `ref_insert` instance, which is not the case for the `ref_insert` instance.
why not use `GetObject`?
Please avoid wildcard imports.
@jcotela It looks like this was added to address the issue with the `config` command.
This is a breaking change, but I think it's better to keep this test in the future.
I think we should keep this in the `aggs` package.
I think we should add a check to make sure the closest is not a non-zero value.
nit: `The row heights based on their highest cells`
This is not needed.
Does this need to be Code?
Line is too long. [87/80]
I think this is a bit confusing. What is the difference between `ref` and `Unref`?
I think we should just always return the value of `_w3c` if it's not `_GET_ELEMENT_RECT`
Can we just use `raise` here?
Why are we adding this?
This is a breaking change. The `WriteToReadonlyNodeError` is a `GetNodeError`.
I think we should return nil here.
The `test` fixture is not needed here, since it is already in the `faster_rcnn_r50_fpn_1x_coco.py` file.
Should this be `ChainID`?
Should we log the serialization hack?
I think we should remove this.
I think this is not correct. The plan is not positive, split size is not positive.
Why not just `getClass().getResource("phoenicis.png")`?
I think we can get rid of this allow_blank and allow_blank in the array instead of passing it as an argument.
We should probably have a `*Signature` constant here.
This is not a good idea, but I think it's better to use ` OrderedDict` instead of `string`, since it's a `string` in the `as` module.
Why did you remove the `parent_nodes`?
If you're using a list of imports, you can remove this line
Is this supposed to be here?
This is a test case, but I think it's better to move it to the `__init__` method.
I think this should be `empty()` instead of `empty()`
Should this be `*string`?
nit: rename to `getPublicKey()` to be more clear?
could you help me understand what this means?
I think we should use `to.deep.equal` here.
I think this should be `final`
We can remove this line
Why is this test needed?
@michaelkuhn Do you know why this change is needed?
Please remove the empty line here.
I think this is a good idea to log something here, but I think it's better to log something like `HardwareEncoding`
I think this is not needed.
The reason I'm not convinced about this is that we don't need to use `path` here, is it because `path` is a `dict`?
I think we should move this check to `validateParams`
I think this should be `compute_service_account`.
Line is too long. [89/80]
What is the reason for this change?
we should probably add a `TODO` to remove the old behavior
I think we should keep the chain store store as it is.
I think we should add a check here that ad.Source is an empty string.
This should be `MaxValue`
Why not set to 0 here?
why this change?
Freeze mutable objects assigned to constants.
I think this is not the right way to go. It is used in the constructor and is used in the constructor.
This is not needed.
why remove from './remove?
I think we should be able to remove this and just call `memoryCPULimitsEnabled` every time we call `eniLock` and `memoryCPULimitsEnabled` every time.
why is this st stall?
I think it would be better to move this to the `processedGotIP` function.
I think this is not needed.
This is a bug fix.
Also, this one should be on the same line as the one on the `&&`
This test is testing the same as the one above.
why not use `5` here?
I think we should update the `if user` to reflect this new action.
I think this should be `var FEATURE_NAME = "reports";`
This is a bit of a hack, but I think it would be better if we just always set the cgroup value to `true` and then check if the cgroup was actually set.
Can we just use `verify_new MongoURIError()` here?
I think we should be able to use the device version here.
This change is not related to this PR, but I think it's worth adding a log statement to this method.
This is a breaking change, but the `Context` is not a `string` (which is a `string`).
Please rename to uploadFlowFile
This is a breaking change. The `UpdateAckInterval` is a breaking change.
I think this is not the right place for this, since it's a user-facing view.
this is a bit weird, why do we need to do this?
This is a bit of a hack, but I think it's better to keep it as a separate PR.
Why not just use `queue.isSingleValued()`?
this is a bug fix
This is not correct. You should only be calling `.sum()` if `loss` is not None.
if we're changing this, we should also change the patch to "else" and "else" to "else"
$balance must be $finesListSort[$key]["amount"]; I think it is better to use $balance += $finesListSort[$key]["amount"];
I think this is a bug fix.
I think this is not the right place for this. The build result will be logged in build_step.go
This is a bit of a hack, but I'm not sure if it's worth it to make a separate PR, but I'm not sure if it's worth it.
I think this is the only one that's actually used.
why remove this?
I think this is not the right place for this check.
should we make it `30`?
I think this check is not needed. `defaultOptions.lazy` is set to `true` but the `defaultOptions` is set to `true` and the `lazy` is set to `true` anyway.
I'm not sure if this should be a global constant?
I think this is not correct. The `if` condition should be removed.
I think we should return `List.ofAll(iterable)` here instead of `List.ofAll(iterable)`
This is not needed.
Does this need to be public?
This is a breaking change. I think we should add a note about that.
I think this is not a valid choice.
This is a wrong import.
I think this should be a warning, not a class.
This is not the only usage of this function. The only usage of this function is that if `cgroups2` is `subsystem`, it should be `subsystem`.
Not sure if this is needed anymore.
Is this a boolean field?
This is a breaking change.
Should we also set the version number in the name?
I think this should be `serviceEvents` instead of `CHANGE_STREAM_OPTIONS`.
Is this not needed anymore?
What is the difference between `Conumpedpedped` and `Conumpedpedped`?
Can you add a couple of lines above to this test?
This feels like it should be a constant.
I think this should be `d.loc` instead of `d.ings`
This should be `if (close_timer.Start() || (disable_timer.Disable())) == 0)`
I think this is not needed anymore?
why not just use `GetEx`?
I'm not sure this is correct. The `if` condition should be `>= 0` and `len > 1` should be `>= 0`.
Use a guard clause instead of wrapping the code inside a conditional expression.
I think we should keep the `:id` as it was before, and remove the `&&` from the `&&`
Please use the standard standard library format for consistency with other store store.
Why the change?
This is not the right fix. The `__time` check should be removed.
why not using the same name as the timeStamp?
@liggitt this is the fix. The `o` argument should be `None` (and the `o` argument should be `None`).
I think we should keep this here and pass it in to `nodeToCIDRs` in the constructor.
This is a bit confusing, since we are not using the `/` in the Gem.win_platform?` file.
This is a bit confusing, as it is used when building the package, but the package is not created. Maybe something like: `set_format_format` or something like that?
Can you please add a `TODO` here?
Why not use a `class UnresolvableConstant extends CodeIssue` ?
Trailing whitespace detected.
I'm not sure if this is a good idea. The `backend` parameter is a backend object, not a backend object.
Would it be better to return an error here?
This is a regression.
why change this?
Why do we need to pass the list here?
why not use an empty string?
`handle` is not used in this file.
Is there a reason we don't want to return the `m` here?
I think this should be `vendor` instead of `tpb` since it's a private variable.
I think this is a bug fix.
In the past, the interface is a little bit misleading. I think it's a good idea to keep it as it was.
Is this needed?
I think this is a good place to put this. It's a bit of a nitpick, but it's a bit of a nitpick, and I'm not sure it's a good idea to do it in a separate PR.
I think this is a bit confusing. Why do we need a nil pointer here?
I think we should be able to remove the `CancellationToken` parameter from the `PipeWriter` and `Pipe state` methods.
I think we should keep the old name. `skip_import` is too generic.
Please remove this
Why is this necessary?
This test fails without the `response.status` in the spec.
This should be reverted.
This is a breaking change. The session is not a valid session.
Why not `addSampleImportTransformer` ?
please don't use imports, it will be easier to maintain
Is it possible to have a `ServiceAccount` field in the `duckv1.SourceSpec`?
I think we should also set theAlpn in the constructor.
This file is still in use by the `C` keyword.
This is a bit of a hack, but I think it's better to be called `t.mutex.Lock()` instead of `t.mutex.Unlock()`
I think this is a good idea. The only thing that needs to be done is that the new `playerExecuteParsePacketEvent` will be used for the new `playerExecuteParsePacketEvent` and the new `playerExecuteParsePacketEvent` will be used for the new `playerExecuteParsePacketEvent` to be used for the new `playerExecuteParsePacketEvent`
I think this is a breaking change.
we should add a return in the error message to make sure we don't get errors in the future
I would also test the case that the `foo/bar` is `foo/bar` and if it is `foo/bar` then we should test the `assert headers["Host"] == "barbarbar.com"`
I think we should log the block here.
Is this a bug fix?
In the past, the `gasLimit` is used to be `gasLimit` and the `gas64` is used to set the `gasLimit` value to the `gas` value.
Can you explain why this is needed?
Please remove this line.
This is not needed.
I think this should be `attr_writer :configuration, :world`
shouldn't it be `var itemType = item.Type || item.Type === 'Program' || item.Type === 'Studio' || item.Type === 'Studio' || item.Type === 'Branch' || item.Type === 'Branch' || item.Type === 'Branch' || item.Type === 'Branch' || item.Type === 'Branch' || item.Type === 'Branch' || item.Type === 'Branch' || item.Type === 'Branch' || item.Type === 'Branch' || item.Type === 'Branch' || item.Type === 'Branch'
I'm not sure if this is a good name for this?
I think we should be able to use `getURLChannels` directly.
I think this is not needed.
This is a bit confusing, why is this being removed?
This is a bit of a hack, but I think it's better to use `strings.Contains(ty, "text/")` instead of `strings.Contains(ty, "text", "plain", "text", "plain", "audio", "audio", "plain", "plain", "audio", "plain", "plain", "audio", "plain", "plain", "audio", "plain", "plain", "audio", "plain", "plain", "audio", "plain", "plain", "plain", "audio", "plain", "plain", "plain", "audio", "plain",
why not use a string like `OpenstackRegion`?
This is a bit of a hack, but I think we should just use `\b` instead of `\b` here.
This is a breaking change. I think we should keep the old behavior as it was.
Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
I think this is a bit confusing. What do you think about `RaymergedMDUpdates`?
Can we have a test for this?
I think we need to add this to the `test_client_requests` model, since we're already passing it in.
I think we should keep this as it is.
This is a bit weird, why do we have to do this?
This is a bit weird, why do we need to clear it on the `Block`?
This is a test test that was not working before.
I think this is a breaking change. It is not necessary to change the `IsWindows` type to `IsWindows`, and it is not just a `IestrelMemoryPool.MinimumSegmentSize / 2`.
I think this is a bug fix.
I think the `-` should be left here, too.
I think this is not correct. The only caller of this is to set `compare` to `undefined`.
Is this file still needed?
why not `import static` ?
should we add an `is_admin` directive to the model? Or is that too long?
can we rename this to `preact_KEY_PREFIX`?
This is not needed.
I think this is not right. It should be `suppressed-message` instead of `suppressed-message`.
There are a bunch of these changes in this PR. Can you explain?
Why did you remove the log message?
I think we should use the `get` method instead of the `get` method.
nit: "in the context of {@code SERIALIZABLE} where this refresh is bounded by by..."
I think we can just call this `CertificateSigningRequest`
Would it be possible to have a `default_scope` constant somewhere that can be used in the `DEFAULT_DEFAULT` module?
I think this should be `text/html/` instead of `text/html/`
Why was this removed?
I think this is not needed.
I think this is not needed anymore.
I think this is a bit of overkill, but I think it's better to just use `MessageLayer` and `message layer: %s` as the default.
This is not needed.
This is a change in behavior, but I think it's better to keep the change in line with the rest of the code.
Nit: `this.startWorkspace_.setResizesEnabled(false)` is unnecessary.
I think this should be `processBuilder = processBuilder.SetNS(pid, bpm.MountNS).SetBuilder()`
I think we should use the default value for this.
nit: I think we should keep this method and return `void` instead of `bitWrite(VariousBits1, 15)`
This is not needed. `isSolved` is a `String`
I think we should try to avoid the try-except-except-except-excepting here.
I think we should be able to remove the `config` parameter from the Realm already exists.
I think we should be able to remove the `createGrid` from the `cloud` method.
Can we add a `ValidateIdentifier` type to the `ValidateM` interface?
This is a public API change.
We should probably have a test for this.
why do we need to update this?
This is a little hard to follow. Can we just remove the `ExternalSchemaName` and `ComIsTrafodionion` methods?
I think we should use the constant here instead of hardcoded 0
This is a breaking change. The field is not always declared as a field field in the first place.
These assertions aren't really testing what we want. The `should` method is used for the `purchases` action.
This is a bit confusing, as `source_code` is the first arg, and the second arg is the last one.
I think we should be using `string[]` instead of `?[]`
I think it would be better to have the metrics as a user-visible attribute, and then pass it as an error.
I think this should be `isodate.parse_date`.
Why did you remove this?
it's not clear to me why we need to do this. It's only called in one place, and it's not a big deal if you're doing this.
Probably should be `OperatorIfIframe`
I think this should be a part of the previous commit, as it's not a part of the PR.
Does this work if you use the `TaskQueue` and `Kind` to get the `TaskQueue` from the `TaskQueue`?
I think this is not needed. It is already null.
Is this a string or a string? I don't see a reason to have a string here.
This is a bit of a hack, but I think it would be better if we could just do `if (queuedFlows.getFlow(exflow.getExecutionId()) != null) {` instead of checking if the flow is not null.
I think this is not needed.
This seems like a good candidate for a simple `SGEJobTask` to be a `Task`.
This table is not used anywhere.
I think this check is not needed.
Was this change intended?
> If the graph is 1.0, the contract [0..1]
why not use GET_CAST_ISSUE_MESSAGE
Why is this change needed?
@DanielVF why is this needed?
@benhalpern Do you have any ideas on how this is supposed to be used?
This is a bug fix.
I think this is a public API change.
This is a change in behavior, but I think it's better to use `OutputOutput` instead of `Output` here.
This is a bit confusing, why is the label count not a slice of the array?
I think this should be `delimiterIndex == -1`.
I think this is not the right place for this column. I think we should be using `body_html` instead of `body_html`.
The indentation is wrong here.
this is a bit weird, why do we need to set the path to the model?
I think this is not correct. The reason is that if `c.Name` is nil, it will return `nil`, so it will return `nil` if `allowed` is nil.
This is the only change that affects TF providers.
I think this is a bit of a hack. I think it would be better to have a test that checks the `CompletableFuture` and `CompletableFuture` and `CompletableFuture` if it's not null.
This is the only place where we use the `_x` prefix.
I think this should be `ofctrl.Flow`
Is this change necessary?
I think this should be `ProxyListenerELBV2`
why not use `time.Now()` here?
I think this should be in the main thread, not in the main thread.
This is a bit of a hack, but I think it's better to use `ResponseResponse` instead of `ResponseResponse`
Nit: I would use `default` instead of `+constant` here.
Please move this import to the top of the file.
Do we need to expectation that `('receipt')` and `expect(email.subject).to eq [invoice.user_email]` are equal to `receipt`?
This is a bit of a hack, but I think it's better to have a method that returns a string, and then use that here.
I think this is a good idea. The `if` should be on the next line.
I think this file should be removed.
I think we should use the `ProductImageField` from the `ProductSERSER` to make it more readable.
This is the reason why we are not checking for the error message.
Please avoid wildcard imports.
I think this is not the right place for this. It should be `bearer_token_file`.
Should this be `api_fixtures`?
Why the change?
why is this one match?
This is a change in behavior, but I think it's better to be explicit here.
This file is not used anywhere.
this is not a good idea. The `excerpt` and `getIcon` are used in the `excerpt` and `getIcon` values.
This should be in the wrong location.
This is a good idea, but I think it would be better to keep the `get` method as it was before.
Do we need to take into account the data is stored somewhere else?
Why do we need to do this?
Why not use `errno` as a const?
I think this should be `self.collection`?
This file should be removed.
I think we should also add a `defaultProps` field to the `ctaLinkExternal` field in the `get` function.
Same here, `Current` can be nullable
Can you add a template with a template that is not a template?
Is this due to the `TestCreateVolumeTarget` package being created on a common function?
I think we should use the new name here instead of the new name.
I think this is still not needed.
This is not used anywhere.
Why did you change this?
This is a good candidate for a specific class to be named `StandardValueProvider`.
I think this is a bug fix.
I think this is not correct. The `JSONException` is not a correct type.
The `while` statement should be removed.
Why is this removed?
This is not the right way to do this. The `s` is a `*length - len(s)` and `s.lstrip` are the same.
I think we should add a `isEscape` property to the client.
This is a very minor thing, but I think it's better to have a constant for this.
This is a breaking change. The schema has a name `schema` but the schema name is not a public API.
Why is this needed?
This is a breaking change.
why are we changing this?
This is not the right place for this. The `TOGGLE_KEYS` is used to determine if the flag is not a reported twice.
I think this is a typo.
Do we need to keep the `ctx.Trace`?
This is a little confusing, since the `subdir` is `b`.
I think this should be `BYTES_PER_DEL_TERM + term.bytes.length + (Character.field().length())`
Actually, this is a breaking change. We should add `=>` to the `login` model.
why not using a flag here?
I think we should keep the old property name. It is not used anywhere.
Shouldn't this be ` unaryrequest`?
This is a bit of a hack, but I think it's better to use a `raise` here.
I think this should be `expands_user = False`
Is this change intentional?
This is not a good name. The SAMPLE_CSPROJ_TEMPLATE_FILENAME is used for the test.
nit: can we call this `ionKeyStorePasswordFile` instead of `ionClientWhitelistFile`?
This is the only change that affects TF providers.
I think this is not the right place for this. The `if` statement is redundant.
This is not needed. It will be parsed twice.
This is not the right place for this. The `logIdToSend_` flag is not used anywhere else.
should we add a check to make sure the Provisioned status condition is not an adopted state?
This is a change in behavior, but I think it's better to use `tabopen` here.
I think we can also add the formatter to the description of the `username` model, since it's a duplicate formatter now.
Why not use the const const here?
I think this is a bit confusing. What about `IsFirstActivation`?
This is a bit confusing, as `getPaths()` is called twice.
This was a bug.
I think this is not needed since we have already added `mentor_image`
I think we should be consistent and use the `*` here.
This import is unused
This should be `ENV["DISABLE_SANDBOX_WARNING"] = 'true'`
I'm not sure why this is removed.
I think this should be `Etherbasebase.nil` instead of `ethBackend`.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this will be more readable if we used `font` instead of `x-shockwave-flash`, but the `font` is the same as `font-*`
This is a bit of a hack, but I think it's better to just remove the `Left}."` parameter and just do a `String.FullName` here.
I think we should be able to use `Microsoft.Rest.Azure.IResource` here.
I think this should be `--local-config` instead of `--local-config`
This is not used.
I think it would be better to check for the zero zero length here.
Are we sure we don't want to log something here?
This is a bit confusing, why are we doing this?
Can we rename `ElementElement` to ` ContextT`?
This is a bug fix.
Do we need to do this?
Style/TrailingCommaInHashLiteral: Avoid comma after the last item of a hash.
I think we should keep the "ddev" container as the default.
I think we should be able to use the `keybase` helper here.
This is the fix.
Can we just change this to `SetCertificateRequestCA`?
I think this should be `!=`.
This is a little strange, because the `off` function takes a function as argument, and the `s.off` function takes a function as argument.
Why is this deleted?
This will be a breaking change.
This is a bit of a hack, but I think we should probably be using `s.w.snapshots.regUse` instead of `d.SourceSnapshot` as well.
`userSchema.index({ username: String.` -> `userSchema.index({ username: String.`
Why is this not a "local"?
I think this should be `getCustomData()->delete()`
Why make this final?
I think this is a bug fix.
I think this is not the right place for this, but I think it's better to just do `except Exception: %s", %s.moves)`
Nit: I think it's better to move this to the `lbann/callbacks/callback_checkpoint.hpp` file.
This is a breaking change. It is not needed.
@smarterclayton do we want to check for v2.2 here?
nit: can you add a line above this line?
Was this just a mistake?
Should we log the namespace here?
This is a breaking change, but we should probably keep it in the changelog.
I think this should be `application/octet-stream`
I think this should be `GET_ALL_SESSIONS.equals(command.getName()));`
I think this is a leftover from our CI
I think we should also add the `aggregator` to the `try/except` block.
I think this is not needed.
Why not use `go` directly?
I think this is the right fix.
Is it needed?
This is a temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary temporary
I think this is not the right place to do this. The `preload()` method is called by `preload()` in `build()` method.
I think we should just make this `showSpeechViewerAtStartup`.
Should this be `PercpuUsageInUsermode`?
This is a bit of a hack, but I think it would be better if we could change the logic of `user_info` to `False` and then check if the user is not `True` and then check if the user is `True` and `False` if it exists.
This is not a `sequenceCDP` directory, so I would use `120.120` instead
Should this be done in `ValidateOperationName`?
I think this should be `\d`
`require_not_to_json` is a better name for this spec.
This is a bit of a hack, but I think it's better to check for the blockection.
I think this is the right place for this change.
I think we should remove `DEFINITION` from the `ASSIGNMENT` interface.
What is the purpose of this change?
This is a bit confusing, why is this needed?
why is this necessary?
What's the reason for this change?
We should check if the path is `bar` and `tcpproxy_off` are `None` here.
Line is too long. [83/80]
why this change?
I'm not sure this is the right fix. The MCTX_NUM_SIMD_SLOTS is a pointer.
why did you remove this?
I think this should be a `private` constant.
can you use a more specific name? `pathStart == -1`
This should be `Facades\BackendAuth`.
I think this should be removed
Is this needed?
I think this should be `prefAllowed` instead of `prefMobileUpdate`.
why are these two separate tests?
Why not use `yarpc.InjectClients` directly?
This is a bit of a hack, but I'm not sure it's worth it.
Why not just call `var` here?
I think we should be more specific about what we do in the future.
This should be `encoding.base64`.
This should be a separate commit.
Please remove this empty line
I think it would be better to return an error here instead of returning a `nil` value.
Can we use `NewNull` here?
@deads2k i'm not sure if this is the right fix. This is a bug fix.
This is a bit of an unrelated change, but I think it's fine to leave it for now.
I think we should change the default value to `8080`
Why not `ndkPath = process.env["ANDROID_NDK_HOME"]` ?
This is a bug fix.
I don't think we need the `id` here since it's the manifest
This is not the right fix. The `if` should be removed.
shouldn't this be `false`?
I think this is the only place where we need to include `tuple` as it is.
This should be `1`
why is this needed?
What is the purpose of this change?
I think this is not the right place for this one.
This is a breaking change.
Can we use `\n` here instead of `\n`?
Please avoid using `import *`.
This is a change in behavior, but I think it's better to have a `sent = false` at the end of the file instead of the `sent`.
I think this is not the right place for this check.
This is a breaking change.
Why is this needed?
This is a breaking change. I think we should just make it `AdditionalData` and use it in the constructor.
I think this is not the way to go.
I think we should be able to get rid of this `switch` statement and just do `return caddyhttp.StatusGatewayTimeout, proxyErr)` here.
The copyright header should be updated to match the new copyright header.
I think this should be `if dir != ""`.
I think this is wrong. The `s1` is not in the `9486832980505125` and `948683` is not in the `94868` package.
I'm not sure if this is the best way to do this. I'm not sure if it is worth it to make the code more readable.
This is the only change that affects TF providers.
I think this should be done in `context.WriteLine`.
I think it would be better to use `Span addEvent(String name, long timestamp)` instead of `Span addEvent(String name, long timestamp)`
I'm not sure this is the right fix. The problem is that the role will be 0 if the role is not empty.
Why not use a `var`?
This is a bit weird, `undefined` is a valid argument.
I think you can remove the `len()` check here.
to be honest I don't understand this change. Could you explain? Also, this is the only change that is needed for `semantic_fusion`?
I think you can remove the variable from the `FilteringSparkAction`
This should be `log.subpiece(4)`.
Why is this no longer needed?
This is the fix. We need to make sure that the `this.options.startAfter` is not empty.
There's no `find_or_create_by` method in this function. You can use `User.find_or_create_by` instead.
I think this should be `if (isset($params['layout']) && $params['layout']=='simple') {`
This is a bit confusing to me. What about `<p>`?
@tgamblin I'm not sure if this is the right fix. The version version is `5, 6,5`
This should be `mod.generators.pattern_machine`.
@michaelkuhn Do you know why this is the case?
Style nit: remove trailing whitespaces.
Why not just `mockDBcache`?
I think we should move this import to the top of the file.
Why is this not `BinaryFileResponse`?
We should add a note that this is a span id.
Why is this change needed?
I think this is a bit confusing. What do you think about just doing `MNE-core` and then just do `MNE-core`?
Why not using `instance_group` here?
You can use ` located+)( a.m.| AM, y)`, then you can use ` located+)( a.m.| AM)`
This is a bug fix.
I think we should import pandas.core.accessor here, because we don't need to import pandas.core.accessor.
Why is this not a pointer?
I think this should be `R.id.share_file, selectedItem.getMedia().fileExists()`
This is not a bug, but it should be None
I don't think this is needed. It is already in the `MongoDb` class.
This should be `ISpecProvider`
I think this should be `afterAction?.Invoke()`
I think this is not right. The PFS_RESOLVE_LOCAL should be NULL, right?
I think this should be `DefaultPort = "31000"`
This is a bit of a hack, but I think it's better to keep the `^\w+\./` as a local variable.
I think it would be better to have this as a `base string` and then have it return a `Map`
why do we need this?
This is not a valid path, it is a valid path. It is not a valid path, so it is not a valid path.
This is a bit of a nitpick, but I think it would be better if we could just pass the `.dev` as a string, and then use `.Errorf` instead of `.Errorf` as the string.
Why is this necessary?
I think this is a bug, the previous code was not doing anything useful.
I think we should also add a config option to the `getConfig` method.
(style) line over 80 characters
I think we should be using `templateRole.getName()` instead of ` ROLE_PREFIX` here.
This should be `bool` instead of `bool`
Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
This should be `<`
This is a very minor thing, but I think it's better to change the version number to `1.0` and then change the version number to `1.0` in the `install` function.
This property is not used anymore.
why do we need a special type for these?
why is this import removed?
This is a bit of a hack, but I think it's better to use a `updated_at` as a column name, like `updated_at_schema`.
I think we should add this to the `settings.py` file.
We should add a `PipelinePrefix` constant in the task task to make sure we don't have any other task task.
Can we just use `assert.Equal` here?
I think this is a good idea to move this to the `WaitForCacheSync` section, since it's a separate change.
can we use `required` and `required` to be consistent with the rest of the code?
I think this is not right. The revealOrder will always return a list, so we don't need to check for the revealOrder here.
Was this a bug?
This is a breaking change.
This is the only change that affects us.
The changes in this file are not necessary.
I think this can be simplified to globalize.translate(item.Name)
This is the fix. The default value was `false` to set to `false`.
I think we should move this to `config.module_install` as it's a noop, and not a `@plugins.resolve_references`
This is a bit confusing, since `globalWorkSizeX` is a global parameter.
you should not have to do this in this PR, but this should be a separate commit
Is there a reason for this change?
This is the only change I'm not sure. If the default value is set to true, it means that the default value will be set to false.
This test is failing on all platforms. This test is failing on all platforms.
I think we should use `.sort.freeze` here instead of `.freeze`
Please add a blank line between these two lines.
Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
This participant has been previously invalidated.
Did you mean to delete these 2 lines?
I think this should be `MethodUtils.findSwaggerMethodName(method)`.
I think we should add an example here to make sure we only test the pending name and not the actual one.
I think we should default to 3, to make sure that we don't have to set the default to 3.
why not `time.Sleep(1 * time.Second)`?
Why is this removed?
It should be `use Thelia\Core\Event\CartTrait;`
This should be `of cref="TracerFactory"/>`
I think we should use `from .env import Enum` instead of `import`, to keep the same behavior as `from .env import Enum`.
This is a very good candidate for a `#include` annotation to be removed.
This is not needed.
This class is deprecated, and will be complety removed in 7.0.0
Why not just use `PlatformFactory.CreateConfig` here?
why the cleanup?
Not sure if we want to support both, but I think we should be consistent.
`reflect` is not a typo, `allowlect` is not a typo.
This is not correct. You can just use `_dr_nlen(opt, DR_MAX_OPTIONS_LENGTH)`
I think we can remove this spec now that we're removing the spec now.
why is this a dict?
Is this a bug fix?
I think this is not needed.
I think this should be `!` rather than `Event_ptr`
I think we should be using `ToStringSlice` here instead of `ToStringSlice`
Can we remove the `theme.delete` prefix?
This test is not related to this PR, but I think it would be better to have a test method that returns a static method that returns a static method.
I think this is not the right place for this. The pos is already in the `Model` state.
I think this should be `@QueryParam`
This method is used in the `phoenicis.repository.dto` file.
This should be `this.enabledTypes.some(item)`
We should be able to use `RemovedplifiedBasicBlock` here.
I think this should be a private method.
@nmittler - Is this TODO still relevant?
I don't think this is the correct way to do this. The `mappedClaim` should be passed to the `Sprite` method.
This should be `!==`
I think we should move this to `pkg/controller/sirupsen/logrus`
This change is not related to the PR.
This is a bug fix.
I think this should be `params: axes{`
Why is this changed?
I think this is a bit confusing. If the context is not `ok`, then the `common.WaitUntilRunning` function will return `true` and the `common.WaitUntilRunning` function will return `false`.
This should be `@Nullable`
I think this test is not testing the case anymore.
`sh.failure` is a bit ambiguous, how about `dartfmt.any(sh.failure)`?
This file is not used anymore.
Let's not include the names in the core, they are not really part of the API.
I think we should keep the `azureDNS` param for the interface.
This was a bit confusing, as the link_to 'Sign in', sign_in_path is the form that we're removing the link_to 'Sign in',...
This is a bit of a hack, but I think it would be better to keep the `for` loop as it is.
I think this should be `MakeLoggerForceEnableDebug`
I think this should be `f.quotaUsage.Get(ctx, quotaUsageStaleTolerance)`
Use the new Ruby 1.9 hash syntax.
I think we can just remove the `upload` here and do `self.required_keys = self.allowed_keys`
nit: can you revert the change here? We're not using CmpISPFuncs.
Can we use the constant for the variable name?
I think this should be `internal` and `internal` (or `internal`) to make it clear that the `MaxQueueLength` is not in the `MaxBatchSize` (and the `MaxQueue` is not in the `internal` namespace.
@jcotela It's not clear why we need this now, but I think it's better to have it in the `lib/` folder.
I think we should just pass the full input here.
I think you can just use `const searches = newState.searches.slice();`
I think this should be a `@param` rather than a `@param`
I think we can remove this `cancel()` call now.
I think this can be readonly as well?
This is a pretty big change, but I think it's better to have a `null` check here.
I think this should be removed.
This is the only place where we need to return the recipient's address.
This is not correct. You should be able to use the `product->getRingInfo()->numBondRings()` function instead.
It's not clear to me why we need this change.
I think we should keep this around.
why is this needed?
Why is this needed?
why is this needed?
"inputPattern" is a bit confusing, since it's a bit confusing to me. Maybe "Sparse inputPattern contains an index outside of"?
This is not a good place for this. It's a bit of a hack to have a test run.
I think this is a bug fix.
can you remove this?
Why is this necessary?
This is a breaking change. It is not a public API. It is a public API.
Although this is correct, please use `ModuleConfigQuery` instead of `Module`
I think we should move this to `init` instead of `init`
This is a bit weird, why do we need to add it?
This is not right. You should use `google.test.test.test.CreateCreate` instead.
Nit: `stateDB` is a bit ambiguous to me, and it's a bit confusing to have a `[]StateDBAdapterOption{NotFixTopicCopyBugOption()` return a `Optional[str]` value.
I think this is not the right way to do this. The `-1` flag should be set to `len(elems) - short_count` instead of `len(chars) - len(chars) - 1`
I'm not sure this is the right way to do this.
I think this is a good idea. The problem is that the timeout is in the same thread, but the original code is in the same thread.
This is not the right place for this. The `toTrim` value is used by `BaseZeros` in `BaseZeros` and `BaseZeros` is used by `BaseZeros`. The `value` value is used by `BaseZeros` in `BaseZeros` and `BaseZeros` is used by `BaseZeros`. The `value` is used by `BaseZeros` in `BaseZeros` and `BaseZeros` is used by `BaseZeros`. The `BaseZeros` is used by `BaseZeros` in `BaseZeros` and `BaseZeros` is used by `BaseZeros`. So
I think this should be `config.get('@metadata')`
Shouldn't this be `public`?
Is this a typo?
I think this should be `DEFINE_int32(max_edge_returned_per_vertex, 1000, "The max edge number returnred searching vertex")`
This should be `/clio/Warn`
We should probably add a `PullInterval` field in `pkg/api/types.go` and `pkg/api/types.go` to make sure we don't have to.
can we just make it `localize = require('../../../api/utils/localization.js')`?
I think this should be `else`
This is a bit of a nit, but I think it would be better to use `None` here.
I think we should remove the debug level and just use `h.describeCMObject(certificate)`
I think it would be better to have the `camunda-integration` property be named `camunda-integration`.
This is a bit of a hack, but I think it would be better if we could just always set `removed` and `removed` to `None` in the next line.
We should probably have a unit test for this.
This is a bit confusing, why is this a `primary`?
I think we should add a `@Nullable` annotation here to make sure that the method is not converted to a transform.
This is a bit confusing, as the code is in `validatorProvider`.
This is a bit of a hack, but I think it's better to use `longopts` instead of `found_opts` as the default value.
I think we should remove this file.
I think we should keep the `<div>` tag here.
I think we should remove the config option from the config.
This is not needed.
This is a very good candidate for a call to `EXITING_DR()` in `dynamo_detach()`
@cramforce do you know why this is removed?
I think this should be a constant somewhere, since it's a number of bytes.
This was removed because it was already removed in #932
@jona-sassenhagen this is the fix.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
Please include include include in the header file.
why is this needed?
I think this should be `#include <glib.h>`
This is a breaking change. Please use `callback` instead.
"... the sequence number of the snapshot that will be created"
Line is too long. [83/80]
Why did you remove this?
I think we can remove this line now that it's not used anymore.
I think this should be `@var DownloadStrategyInterface[]`
I think this is a bug, we should be able to remove the `clearTimeout` here.
How about: "The record must be updated to update the TTL value in the record."
nit: I think we should call `downloadProfilePhoto` here, as it's only used in `customAttributes`.
This is not necessary since `array` is an array.
the function signature is now unused, can you remove it?
I think this should be `if tab is not None`
This is a bug fix.
I think this should be `if (navigator.getGamepads) { /* eslint-disable-line compat/compat */ }`
why is this changing?
Remove this line.
This is a bit of a nitpick, but I think it would be better if we could just return `const boost::numeric::bad_numeric_cast &e)` instead of doing this.
This is a bit confusing, since `file` is a `link` and `link` are the same.
Shouldn't this be `if !defined('CACHE_ENABLED') && !defined('VUFIND_PHPUNIT_RUNNING')`?
Why is this needed?
I think this should be `.desc("Name of collection; no default")`
nit: can we use `application_default_credentials.json` here?
This is the fix for the bug, but the columnSelected was being removed from the "columnSelected" value.
this file should be removed
This is the only place where we're testing this is used.
I think this is not the best way to fix this.
I think we should be able to remove the `overrides` here.
if this is the only change that will be relevant for the build.
This change is not related to the fix, but it was just a mistake.
I think we should be consistent and use the version version in the codebase.
This is a breaking change.
This is a bit of a nitpick, but I think it would be better to have a method on `Delete`.
@mfojtik why not just remove theapprover method from the `Invalidapprover`?
I think this is not the right place for this. The `Iterable` needs to be a `List<T>` instead of `T` (which is the default for `Iterable`).
this is wrong. The Java version is not used in Java.
This is a breaking change.
This should be a pointer, not a pointer.
Why is this file added?
I think this is the right place for this.
why do you need this? it's already a boolean
I think this is not needed anymore?
Why do we need this?
(style) line over 80 characters
Why is this needed?
I think we should move this to the `RLock` function.
I think we should be using `SetSrcPubkey` here instead of `SetSignature`.
Can you explain why this change is needed?
I think this is a bit confusing. How about something like `You can install the OpenMP library by the user, and install the OpenMP library by the user, and install the new `V2_Autotools_Autotools_Autotools_Autotools_Autotools_Autotools_Autotools_Autotools_Autotools_Autotools_Autotools_Autotools_Autotools_Autotools_Autotools_Autotools_Autotools_Autotools_Autotools_Autotools_Autotools
Line is too long. [89/80]
Should this be called `TestClient`?
I think we should check if `getBootConfig(frontActivity).shouldAuthenticate()` is true.
This is the only change that affects the context of the context.Err().
I think this should be `if (argNameVal.length == 1) {`
I think you can use `if ($chars[$i + 1] === '\\' || preg_match('/\w/', $char)) {` instead.
This is a string comparison, but I think it's still useful to have a string literal here.
This is a bit confusing, since `variableOptions` is not a variableOptions, it is not a variableOptions. It's not a variableOptions but a variableOptions can be used.
Could you please explain why this check is added?
This is a change in behavior, but I think it's better to move this to a separate PR.
This is the only place where we call this. I think we should call it `assertRaises` instead.
This is a bit of a hack, but I think we should just remove the `Dashboard.navigate` call and use it here.
why change this?
This is not a good idea, but I think it's better to move this to the `org.apache.commons.lang3.UIAHandler`
I think this should be set to `true` by default.
Why is this needed?
@michaelkuhn Do you know why this change is needed? I think it would be better to be explicit here.
Why not just use `node-labels`?
We should add some property to the `input_def` as well.
I think this should be `scratch.firstChild`
I think we should use the new enum value here.
I think this is a good change. The `name` variable should be used here.
This should be `balanceRound`.
I think this is a bug fix.
`s.dbRecordVersion = 1` is redundant here.
This should be `spawn2.version = {} and zone`
Please use `timeout` for all timeout names.
I think we should log this message as well.
I think this should be `stats.SessionStats`
why not just return the topBlock.DeepCopy() directly?
can you make it non-static and use `Object.getSolvedJavaLangObject()` instead?
I think this should be `@Setter`
I'm not sure if we should add an `tf.status_class` here, since it's not a `tf.status_class` but it's not a `tf.place_by_text`
I think this is a bug fix.
This test is still testing the right thing to do. This is why I'm not sure if it's a good idea to have a test for this.
Can you please also change the name of the `GoogleCloudProject` to `Project`?
@mikedoonsoo avoid using a `Boolean` here.
This is a test, but I don't see why it is needed.
This will be a bit more expensive if you have a `USERPROFILE` argument or `C:\\Program Files`?
I think this test is not needed.
I think this should be `0`
Can we just use `hive.openshift.io` here?
I think this is a bit confusing. Can't we just have a `RunnerStepDependencies` and `InitializeTexture` at the same time?
I think this should be `getExcludeCode`.
I think we should be using `lib/` instead of `lib/`
You can revert this change.
I think this should be `opts.project_root.c_str()` instead of `opts.project_root.c_str()`
I think this should be `tpfp_func=None`
This is the only change that affects TF providers.
I think we should use the `TestCase` helper here.
I think this should be `CheckForNull`
This is a bit confusing, as `pendingUpdate.allowIncompatibleChanges()` is called when `add.isNullable()` is called.
We should not use the status status in the status.
Could we have a single function for this?
Avoid multi-line chains of ternary operators.
This test should use the new test method to ensure that the new test is not running.
Please rename to `cms::theme.active`, it's a bit confusing to read the file name.
Shouldn't this be `if (it != activeClientMap_.end())` ?
I think this is a bit confusing. What do you think about: - ` Key returns the document key, or ...` - ` Key returns the the fresh key, or ...` - ` Key returns the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the
I think we should be consistent and use `FailedPrecondition ErrorCode` instead of `Unimplemented ErrorCode` to be consistent with the other system properties.
Can we just remove this `Runes`?
This is a bit of a hack, but I think it's better to move it to the `history` class.
I think we should move this to `install` package.
I think this should be `show_img = one_img.copy()`
why not just `max(30, inputOffset)`?
@junmhooper @jridgewell Is this change intentional? I'm not sure if it's worth it.
This should be `.String()`
This is a bit of a nitpick, but I think it would be better to use a `logger.info` here instead of a `logger.info`
Metrics/LineLength: Line is too long. [123/120]
Nit: I'd prefer to keep this import as it's a bit more readable.
This is a breaking change. It is not a problem, but it is a bug in the UI.
Was this supposed to be here?
I think this is a bit of a hack, but I think it's better to do `expect(rendered).to include('2 episodes')` instead of `expect(rendered).to include('2 episodes')`
I think we should be able to use `InternalLogger.Warn("Auto loading assembly file: {0} failed! Skipping this file.", extensionDll);`
can you add this to the list of supported dtype?
I think we should use the directory name here.
I think we should be consistent and use `@return` here.
I think it would be better to do a `String.contains()` here instead of a `(`
Can we use `item.file_type === 'CC'` here?
@chirimoya What do you think about this?
This is not a good example of what I meant by this.
I think this should be `mysteriumnetwork/node/blockchain/generated`
I think we should also assert that the error is returned here.
I'm not sure if this is the right fix.
I think this is a leftover from debugging
I'm not sure if this is the right place for this. I'm not sure if it is worth it to make a `*` prefix.
We should add a check that `metricsConfiguration.isPushEnabled()` is not null, as this will be true for the new metrics
I think we should also check for `self.num_ins` here.
nit: `AzureDataSize` is a better name.
I think we should add a check here that the value is not `/project/zones/zone/machineTypes/mt?alt=json`
Why not keep the name consistent with the other one?
I think this is the right fix.
Please use `loss_normalizer_momentum` instead of `loss_normalizer_momentum`
I'm not sure this is the right fix. The `_WIN32` is used for the `CommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommitCommit
Please avoid using `*` in the test files.
I think this should be `samples > x. This is the Qfunction: the tail probability of the normal distribution`
This is a bit weird, why do we need to do it for the `opnd_get_base_aligned`?
This is not needed.
This file was removed in #546.
I think we should add this option to the `build_system.py` file.
This is the fix.
I think we should be able to use the `SecretId` function here.
I think this is the only one that is used for the `pthread_np.h` header.
This is a bit of a hack, but I think it would be better if we could just use `fs.existsSync(networkLogFile)` instead of `fs.unlinkSync(network-audit-results.json))`
This is the only place where we call CreateStoragePool.GetLease() twice.
This is not a good example of what is being done in the code.
This is a change in behavior, but I think it's better to use a `color` field instead of a `string` value.
I think this should be `static` and not `final`.
nit: you can remove this line
I think this should be `current_user.org.feedback_email_msg.html_safe`
this is an API break. You can use `_enabled` instead of `bool attach_case`.
I think we should be using the new naming here.
The `initialized` is not needed here, it is already checked in the `initialized` block.
is this change intended?
maybe add this to the other commands too?
why the change of the test?
This is a very minor thing, but I'm not sure if it's worth it to have a test for this.
This is a bit odd, maybe we should do something like `find_or_create_by`?
I think this should be `KEY_MINIMAL_DURATION_FILTER + " INTEGER DEFAULT -1"`
Maybe we should use a `common.NewRegion` function here?
Is this file still in the license?
Should we add a way to wait till all of our tests to wait till all of them?
I think it would be better to add a `@since` annotation to the `null` parameter.
Do we need this interface?
I think this is a bit confusing. If the `getExtendedTypes()` method is called only once, then the `getExtendedTypes()` method should be called.
This is a change in behavior, but I don't think we should be changing this.
@dvoytenko is this a typo?
This test is testing the right thing. The `!Array.querySelector` is not the right thing to do.
This is a bit of a hack, but I think it would be better to use `System.isNullAt` instead of `System.isNullAt`
This is a change in behavior, but I think it's better to be explicit here.
why not just `/>`?
this should be `defaults()`
This is a bit of a hack, but I think it's better to have a `is_tab` check here instead of `is_tab.present?)`
I think we should add a description of the description here.
This should be `free(desktop->views);`
I think this should be `interpreter.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.DESCRIPTOR.
This is a bit of a hack, but I think it would be better to have a `key in self.keys[0]` that returns a `key in self.keys[0]` (or a `key in self.keys[0]`).
I think this is a bit confusing. If the user explicitly set `hwnd` to `True` then it will always return False anyway.
Why is this change needed?
I think this is a bit confusing. What is the purpose of this?
Do we need to make sure the `SuppressInstrumentation` is not available in `StartStart`?
I think we should be able to remove the `goimports` here.
I think this is a bit confusing to read. What is the reason for this change?
I think this can be removed.
I think this should be `<%= _("You may place them before after the main template sections." %>`
Seems like this should be a separate commit.
I think this is not needed.
I think this interface is not needed.
@deads2k @tnozicka this is the fix for the operation operation.
I think this should be `true` to make it more clear what the compaction is.
I think this is a bit confusing. What about something like `<Any>`?
I don't think we need to add these new attributes since they're only used in the `heading` view.
I think this should be `usertypes.PromptMode.yesno`
This is a bug fix.
I think this is a bug fix.
Is this still necessary?
Why are these being removed?
This should be a pointer, not a pointer.
I think we should keep the `SqlServerIntegration.OperationName` and `SqlServerIntegration.ServiceName` here.
I think this should be `//// drop drop...`
why do you need this?
I think we can remove this check now that we have no check in the message.
This is a bit of a hack, but I think it would be better to use a `reverse()` method instead of a `use` statement.
Please rename the variable to `version`.
I'm not sure why you need to do this?
I think this is a bit confusing. If we don't have anyone using this, we can just remove it.
This is a change in behavior, but I think it's better to remove the `if` statement.
Can we have a test for this?
This import is unused.
I think we should add an explicit factory method here to make sure we don't have to add the factory
I think we should be consistent and use the `tls.Config` here.
I think this is a bug fix.
This one is not correct. The log can be returned by the caller.
I think we should remove `UseOrCreate` from `pkg/api/v1/identity/v1/identity/v1/identity/v1/identity/v1/identity/v1/identity/v1/identity/v1/identity/v1/identity/v1/identity/v1/identity/v1/identity/v1/identity/v1/identity/v1/v1/identity/v1/v1/v1/v1/identity/v1/v1/v1/v1/identity/v1/v1
This is a very old code and I'm not sure it's worth it.
Is this the correct way to do this? I think it would be better to check for the Dockerfile path as well.
nit: I think we should name this `serviceType`
this is the most important column that will be sent in the database
This is not the right fix. The `if` should be removed.
Should this be a pointer?
I think we should be able to use `get_if_raw_hwaddr` here.
This is a change in behavior, but I think it's better to have a test that checks for `TestCase` and `TestCase` to be called in the `TestCase` function.
I think this should be `connected_id`?
`create_no_window` is not a boolean, so I would remove the `create_no_window` parameter.
I think this is a bug fix.
This is a bit confusing, since `version` is a `str` and `3.2` is a `list`.
This is a bug fix. You can use `sizeof(sizeof(size(), 0)` instead.
Use 2 (not 4) spaces for indentation.
Would you mind adding a space after `_x` here?
It should be `GraphqlConfigurator`
I think we should just remove the `realmConstructor.Sync._setFeatureToken` check and remove the `realmConstructor.Sync.setFeatureToken` call below.
I think we should also have a `destinationClusterIP` field in the `destinationServiceName` and `destinationServiceName`.
Why are we using `bool` here?
This is a breaking change. The only reason we're not using `*` is to have a `*` here.
This is a bit weird, but I think it's better to use `<div class="row past-pr">` instead of `proposals-completed"` since it's a `div`
I think this should be `os.IsNotExist(dir, kub)`
This is the only change that will be breaking for the test.
I think this should be `java.io.FileOutputStream`
I think we should just make this a struct.
This is a bit weird, why do we need to use the 255?
If we're going to be very careful with this, we should probably add a `TODO` to the end of the field.
I think we should keep this around.
I think we should keep this here, but let's keep it as it was.
I think it would be better to move this to the else block.
The test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test fails.
Could you please explain why this change is needed?
I think this should be a `location.top` instead of a `top`
I think we should check for `accounting.Stats(ctx).GetBytesWithPending()`.
I think we should add a warning here to make the scopes part of config?
This can be simplified to `deliveries.clear`
This should be in the wrong order.
There's a typo in the param name: `john nancy`
I think this should be `# flake8: noqa: E501`.
I think this is not the correct way to fix this.
I think we should keep this as it was before, but we should keep it in sync with the other tests
I think we should use `Env` here.
Should we also test the content of the `$sku` variable?
I think you can just do `if @options[:preserve_host_output] == []`
I think this should be axe.utils.getNodeAttributes(node)
This should be a `SetPlaybackSpeed`.
I think we should add a `GET` field to the `org.apache.druid.segment.extension.Path` and `org.apache.druid.segment.util.Path` to the `org.apache.druid.segment.util.Path` file.
Why is this needed?
This test is not needed.
I think this is a bug fix.
This is a breaking change. We should be able to remove this.
why did you remove this?
Use the new Ruby 1.9 hash syntax.
Please rename to `applicationName`
It's not clear to me why this file is added.
This is a lot of noise. I think we should be using a common price here.
Should we throw an error if the user tries to set a 20 bytes?
I think we should be able to remove this, `padding` should be 0.
can you make it a constant?
I think we should move this logic to `commit` so we don't need to create a repo.
Should we add a `setIeService` method to the `ServiceBuilder`?
I think this is a good idea to add the `Media` method to the `Media` package.
This is a breaking change. I think we should be using `pojoMgr.register(pojoProducer.getSchemaId(), pojoProducer);`
I think this should be a debug message.
Please add `application.properties` to the `application.properties` file.
You can use `@cancellation.new(subscription: current_user.subscription, accident: cancellation_params[:reason],`
Nit: remove empty line
I think we should add a note to the `aws-sdk-s3` to `gulp` to the `aws-sdk-s3` option.
This is not the same as the one above, but I think it's better to use `expect(formatter_output.string).to eql("message")`
I think we should keep the old version as well.
why did you remove all the changes to this file?
The following two changes are not needed.
This is not needed.
This file should be removed.
I think this is a leftover from the previous commit.
Why not use `setSolrBackendFactory` here?
It looks like you're missing a `use` statement here.
This should be `@var MainMenuItem[]`
The `API-MS-Win-Core` should be removed from this file.
This is not needed anymore.
I think this is not needed. It is already in the `TestIcebergSourceHiveTables`
It's better to move this in `updateupdate` function.
Is there a reason we don't just always return volumeStatusOK?
I think this would be more readable as `debuggerAddress.match("ws:\/\/", "http:\/\/")`
I think this is a good change. The output of `replace=True` is not the default behavior.
Should we change the default value of `Paragraphgh` to `Paragraphwxyz`?
Can we make this a `let` instead? That way we can test for the expected behavior when we're not running the expected behavior.
(Pre-existing) I'd probably just say "method raher than square brackets"
Do we need this?
I think this should be `return true` instead of `true` right?
isn't this a BC break ?
I think this is the correct name.
It looks like this will be removed after the last step of `self.timestamp` is called.
I think this is a good place to put this flag.
I think we should use the `Unfortunateate` methods here.
@deads2k @mfojtik why is this needed?
This is not a valid approach, but I think it's better to have a constant for this.
I think this is a breaking change. I think it's better to move this to `config` instead of `counter` since it's a static method.
Why do we need to loadTriggerManager here?
This property is not used.
I think this is a bit of overeager.
should be a local util
This is not needed.
We should probably make a `models.prefixLength` constant in `models.go` and use that here.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
Why not just add `control` to `Type`?
@smarterclayton do we need to do any validation on the chunks?
I think this can be removed now, since we have the same naming in `azkaban.rm.job.link`
I think this is the only place where we need this property.
This is the only place where you're using the `OS/xlocale.h` header.
The `AWS IAM` is not used anymore.
I think this is the right fix. The `isSupportedImageMimeType` function should always return a `null` value.
What's the difference between `NumericType` and `LongType`?
Can we add a `typeof` check here?
I think this is a leftover from debugging.
Looks like a typo here.
`switchFrameByName` should be added to the top of the file.
This should be `if (precision is not None) and (not isinstance(value, str))`
This is a breaking change. The `address of the executor is empty` check is not needed.
Just to be sure: this is the only place where we need to parse the record.
I think we should use the `working_dir` variable here.
`TriggerEventType eventType = TriggerEventType.valueOf(eventTypeStr.trim().toUpperCase(Locale.ROOT));`
Nit: remove empty line
I think it would be better to keep the `FAILED` and `DELETE_FAILED` constants in the `FAILED` class, and have the logic in the `Client` class, and have the `Client` one in the `Client` class.
@bparees I'm not sure if this is the right place to put this. I'm not sure if it is worth it.
I think that this is a bit of overkill, maybe it would be better to move this to the top of the file?
I think this is not needed.
Is this going to cause issues? I'm not sure if it's worth it to do it.
Why not use the standard `DB__ROOT` constant?
I think this should be `cFlags = append(cFlags, f)`
Why is this needed?
Missing space after #.
hmm, this test is not testing the same thing as the test_generate_ancestors_for_org?
I think this should be `errors.New("bad network")`
why remove this package?
I think this should be `BaseTree.confirmed` instead of `BaseTree.status`
I think we should add a check here that `unsafe` is not null, and we should be able to remove the `if` condition from the `if` condition.
Is it possible to disable the `@type` object?
It's not clear to me why this is necessary.
Is this TODO still relevant?
I think this should be `this.state.formState` instead of `this.state.formState`
Is this supposed to be `true`?
This is not the only place where we need to load the error. I think we should just call `self.start_stream_to_path` after the call to `script.ObserveScripts` in the `start_stream_to_path` call.
I think we should add a check to make sure we don't have a tuple before we get an error.
I'm not sure if this is correct. The only place where we call this is `ledger_walker`, is `ledger_walker`, which is `ledger_walker`, which is `ledger_walker`, which is `ledger_walker`, which is `ledger_walker`, which is `ledger_walker`, which is `ledger_walker`, which is `ledger_walker`, which is `ledger_walker`, which is `ledger_walker`, which is `ledger_walker`, which is `led
I think this is a bit confusing. What about "eager"?
@bparees this is the fix.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think we should use the same "heading" module here.
I think we should use the use statement here.
@rhtyd I'm not sure if this is the right place to do this. Is this the right place to do this?
This file should be reverted.
This is not needed anymore.
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
Why is this needed?
I think we should remove the `iFromPeers` variable and do the `iFromPeers` below.
I think this is not needed.
Do we need to check that the system level is not nil?
This is a breaking change. I think it's better to have a test that passes the purge of RelaxedReclaimPurge.
why not using the existing one here?
This is a breaking change. I think we should change the default behavior to `True` in the default behavior.
This is the only place where we're using the chain.NewSyncer call.
why did this change?
Please, please keep the original version as it was.
I think this is not the right way to do this. The function is used for AVX-512, but the function is used for AVX-512. It is used for AVX-512.
Please move this to the bottom of the file.
I think we should remove this. We can remove this.
This is the fix.
@jridgewell I'm not sure if this is the right fix.
I think we should move this to `ecar.go`
Use 2 (not 3) spaces for indentation.
I'm not sure if this is the right fix.
I think it would be better to have a constant for this.
The `StatusCodeServerErrorRequiredLockIsNotHeld` is not written here, so I think it's fine to leave it as it was.
The name `GroupByError` is misleading. It's a little confusing to me. Maybe `GroupByError` or `GroupByError`?
Is this the correct place to put this function?
Why not just Flink Scan instead of Flink Scan?
Why is this deleted?
This seems like it should be done in a separate PR.
can you use a const for the loop?
Please add `zpoolListRequestRejectCounter` to the `setup` list.
Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think you can just delete the method completely, it's not used anywhere else.
Why do we need to keep it private?
I think this should be `window`
why not use the `paging` version?
I think it would be better to use the `--reupload` option here, since it's a `None` option.
@smarterclayton do you know if this is the right place to put this?
I think this is not right. It is not possible to have a `mSession.hasDisplay()` return value.
This is a change in behavior, but I think it's better to use a different name for the new one.
I think we should keep the old signature and make the new signature more readable.
I think this is a leftover from debugging.
I think we should remove this form from here, we we don't need it anymore
This is not needed.
This is not needed.
We should add a check to see if there's a FloatToStringtStringHex() below.
can you make this a string so it's clear what it's used for?
This should be `harparser`
Just to confirm, do we need to add the `${__dirname}` here?
Can you please add a `TODO` here?
Please rename to `3`
I think this should be `opts.fee` instead of `opts.feeSat || opts.feeSat`
`next if windows? # JRuby on Windows runs this even with the conditional on the block.`
I think we should be able to use the more general `Time` here.
Use `VerifyFingerprint` here instead of `HasNoFingerprint` since it is a string.
I think this should be removed.
I think we should be able to remove the TODO in the code base.
could you please move this to the next line?
I'm not sure if this is the right fix.
This is the only change that affects `ReadAsync` and `ReadAsync`. I think we should just remove the `ReadAsync` altogether.
Can you add a space between `-` and `=`
This is not correct. It should be `nextMedia = callback.getNextInQueue(currentMedia);`
I'm not sure if it is worth it to use `name.assign(demangled == nullptr ? "" : demangled);`
You should add a license header to the doc string.
This is a little confusing to me. Why is the `virtualNode.actualNode` not `virtualNode.actualNode`?
This is the only change that affects TF providers.
Can we use `boolean` instead of `boolean`?
This is a bit weird, we're just using Array.back and Array.delegate. Can we just use Array.back and use Array.delegate directly?
I think this should be `skip_msg.nil?` instead of `nil` since it's a debug message.
I think this should be `errors.Protocol.SmallLambda`
I think this should be `Disassemblers`
This was a typo I removed.
Can you put a space after the closing paren here?
"Which Dockerfile would you like to use for building your application's container image."
This is a change in behavior, but I think it's better to keep it as a string.
I think this is a bit confusing. If the list is sorted, the list is sorted.
remove this, it is not used anywhere
This is the fix.
nit: "prepare certificate" should be "prepare certificate".
Should be `k1`
this is wrong. It is not needed
This is a change in behavior, but I think it's better to make the message more specific, e.g. `type == BoundType.describe();`
Why do we need to make this change?
I think this should be a different name, e.g. `cb_for_update`
I think we should keep it as it was.
I think this should be a global var, not a global var.
I think we should be using `deliver_now` here instead of `deliver_now` since we're not using it anywhere else in the code.
This is a bit of a hack, but I think it's better to have a test that checks whether the value is `nil` or not.
What's the purpose of this change?
I think this one is missing a `schema_id`
This is a change in behavior, but I think it's better to use `sig_alg` as a parameter.
It's not clear to me why this is needed.
can you add the new option to the other files too?
This is a very minor thing, but I think it would be better to have a `#ifdef MPI` as a `extern const struct batch_queue_module batch_queue_mpi;` here.
This is the only place where we need to do this.
can you add a license header to this file?
I think this is a regression.
I think it would be better to use `[:[:]` here.
I think this should be `(String, StringComparison)`
I'm not sure if this is the best way to go. I'm not sure if it's worth it to make a note in the code to do this, but I'm not sure if it's worth it.
I think this is a leftover from debugging
The `app/views/foo` is now a `Process` so it's not a `Process`
why is this needed?
I think we should be using `blk.Transfers` here.
This is a regression.
I'm not sure if this is the right place to put this. I'm not sure if it's a good idea to have it in the config file.
Why do we need this?
Can we use a more descriptive name?
Why did you remove this line?
This is a bit of a hack, but I think we should be using `c.BoolT` here instead of `c.BoolT`
I think this is not needed.
This is not a good idea, but I think it's better to have a method `setSnapshotId()` that returns a boolean, and then return `String.IsNullOrEmpty(String, StringComparison)`
Is this needed?
This is a change in behavior, but I think it's better to be explicit here.
This is a bit of a weird name, can we name it something like `m.Name`?
Please use `log` instead of `log`
I think we should try to avoid the `body` here.
This was removed because the `onFinished` was called in the constructor and the `pushResultCode` was called in the constructor.
I don't think this is the right fix. The `Make` method should be called `Make_uuid` or `Make_uuid`
I think this is not needed.
This is not used anymore.
This is the only place where we need to handle the `txcache` here.
I think we should remove this. We should also update the other packages in `git blame`
I think we should be using the `v1` constant here.
> [](start = 16, length = 7) nit: `return !(bs1 > Bond::STEREOZ || bs2 == Bond::STEREOANY) return false;` is unnecessary here.
This is the only place where we need to return the `startSyncSet` function.
We should probably have a `sseq` field in the `RUnlock` function that returns the nil value.
This is a bit of a hack, but I think it's better to use a `TODO` here.
I think this should be `Your profile profile profile` instead of `user.save!`
I'm not sure if this is the right fix. The `if` statement is correct, but it seems to me that the `else` statement is not correct.
This should be `flag-sa` instead of `flag-no`
This is a string, not a string.
I think it would be better to have this function return `CRLF` and then call `CRLF` here.
I think this can be a separate change, as it's not a hash, not a hash.
I think this is not needed.
I think we should use the `w` constant here.
This test is not needed anymore.
I think this method should be marked `@inheritDoc`.
I think this is not needed.
I think this is a bug fix. We should be able to remove the `[is_true]` check here.
I think this is a bug fix.
This is a bit of a hack, but I think it's better to use `variableInMap` instead of `variableInMap`.
I think we should remove this warning.
This is a bit confusing, why not just use `auto it.size()`?
This is the only change that affects TF TF.
This is the only change that affects TF providers.
This should be added to the `JsonMessageHandler` class.
This is not needed.
This should be `<int>`
This is a leftover from the previous PR.
Why are we returning an error here?
This is not the same as the one above.
I think this is not needed.
why do we need to change the node state change?
Should we add a `content-publisher-overview` constant to the `default-date` page?
Instead of "default=False" I would use "can_summary_data" to make it more clear what "default=True" means.
I think we should keep this method and just call `TrimPrefix` in the `LastIndex` function.
This was a bug, we can't do it without this change.
This is a bit weird, I think it's better to remove the `ncr-layout` prefix.
This is a bit of a hack, but I think it's better to just remove the `unknown_internal_yarpc` check.
This is a change in behavior, but I think it's better to have a test that checks the root of the map.
This is a bit of a hack, but I think it would be better if we just return `null` here, and then return `false` if it is `true`.
This is a bit of an unrelated change, but I'm not sure why it's needed.
I think we should be able to remove the `else` here.
This will be removed.
We should probably check for the header name here.
We should also mention the subnet gateway for the subnet name.
I think this is not the right place for this. The link is not the correct link.
I think we should import the whole `Route` module and import the `Route` module.
Why is this error ignored?
I think this is a bit confusing, since we are not testing the permission tests.
`!` is not needed here
I think we should remove this and use it in the `tests/v1.8.0` file.
@mjkkirschner Is this safe to do? I'm not sure if this is the right place to do this.
I think we should have an example here.
I think we should keep this.
@cramforce do we need to change this?
`import operator` is not used in this file.
I think this should be `Map` instead of `Map`
why is this being changed?
Style: Typically, you need to check that theMM_ENABLED() is not null.
Why is this necessary?
@cramforce do you know if this is the right fix ?
I think this is not the right place for this. The `std::vector` is used for the `<const FieldDef*> union_fields;` part.
Why is this test test removed?
Why not use `copilot-task`?
This will be a bit confusing, as `this._prevValue` will always be `true` if `input` is `true`
Hmm, this is a breaking change. I think the `2021` is not correct.
I would use `==` here.
I think we should be able to get rid of the `if` condition here.
I think this is a good place to put this in the `filter_default` function.
Shouldn't we also add the `CatchBlockLogException` suffix to the `LambdaMethodReference`?
This is a bit of a hack, but I think it's better to use a `omp_set_num_teams` function instead of a `KOKKOS_ARCH_VOLTA70` here.
I think this is a leftover from debugging.
This is a little confusing, since `len(args) > 3` is the number of args in log directive.
I don't think this is necessary. The `resource_owner` is already defined in the `update_trails_state_for` method.
I think we should move this logic to `commit` so we don't need to create a new file in `commit`
Can we use `api.googlesitekit.api` here?
I think this is the only change that affects the file name.
I think we should add a new type for this.
I think this should be a map.
Why do we need this?
I think it would be better to move the `os.path.abspath` calls into the `PermissionBase` class, and then call `os.path.dirname()` on it.
I think this should be `boolean`
Should this be `bin`?
Do we need this?
This is a bit confusing, as it will be called in the `ExportProcessorItems` method.
This is a bit of a hack, but I think it's better to use a `Configuration` constant.
Please update the docs to match the new default value.
I think we should set the loginOptions in a finally block to avoid the loginOptions in the constructor.
I think we should check for `viewer` here.
This is not used.
I think we should revert this change.
I think this should be `if reqid != "" {`
This is not a good idea. The `push-notification.time-chart-serie-messages-sent` and `push-notification.messages-informed-informed` are used to create a different `push-notification.time-chart-serie-name` and `push-notification.messages-informed` and `push-notification.messages-informed` and `push-notification.time-chart-serie-name` and `push-notification.messages-informed` are used to create the `push-notification.time-chart-serie-name` and
This policy should be moved to the `newnewCheckFailurePolicy` class.
I'm not sure if this is the right place to do this. The error is "import" in the error message.
Is this a breaking change?
This is not needed.
I think this should be `filter` rather than `filter`.
I think this is a leftover from debugging?
nit: `makeDir` is a bit ambiguous. I would call it `getDirName` or something like that.
I think this should be a config option, not a config option.
@jridgewell I'm not sure if this is the right fix.
remove empty line
I think this function should be renamed to `tv_nsec` to be consistent with the other functions in this file.
This is a bit confusing, why is this needed?
nit: can we move this into the `_shape_as_tensor` method?
I think this is a good change. The `aws` instance is a `Error` instance, so it is not a `Error`.
I think this should be `verified: true` and not `userInputState`.
I don't think we need to do this, we can just use `find_project` directly.
This is a breaking change. The `time.Duration` function is used to set `time.Duration`.
I think this should be `nil`
shouldn't this be `public function getSource(): StatementsSource;`?
This is not the equivalent of --ponynoscale.
I think we should be consistent and use `HandleUpdate` here.
This test is testing the same as the one that is testing the overwrote ids.
This is not needed.
I think we should be able to do this in `ElasticsearchHttpSpanConsumer.asyncSpanConsumer()`
I think this should be `assertEqual()`
I think this should be `select-follow -t`
is it possible to have the type of the `_` in the constructor?
This is a breaking change. I think it's better to have a `public` property that is used for the Request RequestBodyTimeout.
I think this should be `settings.icon`
I think we should be using the `ordered` here.
@smarterclayton do you think it's worth adding a debug log to this log?
I think we should use `.trim()` here.
This is a BC break.
I think this should be `if cfg.ConfigTemplate != ""`
why is this needed?
You can use `@object.published` here.
nioBuffer is a very generic name, can we rename it to something more meaningful?
Is this still needed?
This should be `Error.OFFCHAIN_PRIVACY_GROUP_DOES_NOT_EXIST`
This is a change in behavior, but I think it's fine to leave it here.
Why is this needed?
We should probably make this a function in `test_add_lambda_permission`.
"disable" should be "avg" (and "avg" should be "disable"), not "avg" (and "avg" is the default).
@bparees this is the fix.
I think we should keep the `entry/v1` package private and use `entry/v1` everywhere.
Should we return a boolean here?
I think this should be `report_path_hash`, not `report_path_hash`, right?
Thanks for the fix. Can you move this up to the top of the file?
better to use `h2` instead of `h4`
This test is not needed.
I think it's better to use a `[ID]map[string]bool` here, and then you don't need to pass the `[ID]map[string]bool` here.
I think this is not needed.
Shouldn't this be `tab.TabData._initializing`?
I think we should also add a `:not_found` check to make sure we don't have to worry about the success message.
why not using the same format for the same format as the other one?
why change this?
Align the operands of an expression in an assignment spanning multiple lines.
I think you can remove this line.
We should not need this check anymore.
This is the fix.
I think this should be moved to the `wlr_libinput_tablet_tool_destroy` function.
I think this is not the right place for this.
I think we should check for `props.children.forEach(props.value)`, if we don't want to set the value to `true`
This is a bit of a weird change, but I think it would be better if we could have an option to set the default to `--release` instead of `--mode=True` (which would be a bit more efficient)
This is a bit weird, why do we need to set the default value of `GET`?
I think this should be `return` instead of `err` since it's the default.
This is a bit of a hack, but I think it would be better to use a constant for the maxSpinCount, and then use the constant for the maxSpinCount.
This should be `message == null`
Use %w or %W for an array of words.
`@param theKey Either {@link Keys#SHIFT}, {@link Keys#COMMAND}.`
Can we change this to `CACertificate`?
I think this is not correct. The function is called by `self.suppress_file` which is `None`, which is not the case.
This is a breaking change. The test is still testing the right thing to do.
Can you please also add a check that aws.CredentialsSecretRef.Name is nil?
Would it be worth adding a new migration to the `/blazer` as a separate migration?
This is a breaking change.
`replacement` is a very generic name. It's a bit confusing to have a field in a field.
I think this is not needed.
This should be `tabwidget.TabWidget`.
Does this mean that the `writer_->getGuid()` will always be true?
This is the only place where we use `Blockly.provide` in the context of the `VarRename` function. I think we should keep this around as it is.
Can we make this `public`?
I think this should be `type Decode(]byte, interface{}) error`
I think this is a bit of a weird thing to do, but I think it's better to have a `T` here, and then use `DoFn.Doc()` to get the `DoFn.Doc()` from the `DoFn.Doc()`
I'm not sure if this is the right place for this. I'm not sure if it is worth it to make a PR to fix this.
Why is this being removed?
This is not a duplicate, it's a duplicate.
Do we want to make this change to make it pass?
I think this is not needed.
`C` is not used anymore.
I think this should be `str.append(tail_, blockPt_);`
I think this is the only place where we need the `syncPodEntry`
Line is too long. [91/80]
Why is this 1.0.0 not 1.0?
Style/RedundantReturn: Redundant return detected.
I think we should keep this.
why is this changed?
I think this should be called `is_editable_prop`
The `media` is still used in this file.
why not use `arg` here?
Shouldn't this be a `Date`?
Nit: since you're changing this line, you could use a single statement to avoid the "LOG" style.
I think we should add a `TODO` here to make sure we don't accidentally remove this.
This should be `locationName:"list"`
I think this should be `render_map` instead of `render_map` since it's the only way that we can make the user ID, and we can make the user ID, and the user ID, and the user ID.
can you please move this to `log.java`?
I think we should keep the old data here.
How about adding a `LanczosWindowFunction` to the list?
I think this should be `The folder was already added`
This is not needed anymore.
I think this is a bit confusing, as it is a `wait` call, and it is not a `wait`.
This is a change in behavior, but I think it's better to move it to a constant.
why is this change needed?
@stephentoub do we need to change the `undefined` to a `let`?
I think this is a good idea. I think it's better to have a `resolutionOp` as a `GCOp` as opposed to `resolutionOp` and then we can just have a `GCOp` as opposed to `resolutionOp` and have the opposed to `resolutionOp` as opposed to `GCOp` as opposed to `resolutionOp` as opposed to `resolutionOp` as opposed to `newOp` and `resolutionOp` as opposed to `newOp` as opposed to `resolutionOp`.
Shouldn't this be `Optional.of(QueryVisitor, this)`?
@kennknowles Is this change what you meant by `long`?
Can we use `str.IndexOf` here?
This is a bit confusing, why is this condition inside the node_l->peers.send_keepalive()?
This should be changed toDistributedge (C) 2010-2017 Serge Rider (serge@jkiss.org)
Please revert this file.
This should be `l.config.ProcessLabel[Process]`
I think this should be fastdds
This is a bit of a hack, but I'm not sure if it's worth it to make a test for this.
Line too long. [81/80]
This is a bit of a hack, but I think it's better to check for `c.Data` here.
I think it would be better to move the `applyMode` check to the `else` of `if` statements, and then apply `applyMode` inside `if` blocks.
I think this should be `cmd.Execute()`
This is a bit weird, but I think we should be doing this in a more general case.
I think we should say "The carrier has been injected into a carrier.
Can you move this import to the top of the file?
Why is this needed?
This is not needed.
"then all the fields ..." -> "only non-empty fields"
I think we should make this a bit more specific. What do you think?
nit: I think this is a bit confusing. What if we just return `n.getMaximumCommonType().accept(this, arg)`?
Can you move this import to the top of the file?
This is a breaking change. The `operation` field is not being used in the `BaseTracer` interface.
I think this is a leftover from the previous PR.
I think this should be `typeMap.IsDefined(saName)`
I think we should just set the environment variable to `true` in the environment variable and set the environment variable to `true` in the environment variable.
This will be removed in restarting the services
You can use `expect(object.numeric?).to eq(false)` instead of `expect(object.numeric?).to eq(false)`
This file is not needed anymore.
I think you can move this to the `else` block, since it's used in the `else` block
I'm not sure about this change. Why is this being removed?
I would add the "Materialization" part as the name of the field.
I think this change is not needed.
Can you add a license header here?
I think this is causing the MacOS build to fail.
The `.class` and `.class` fields are not used in this file.
I think this is the only place where we need to include the header.
This is a bit confusing, why is this needed?
Why are we returning an account state here?
I think this should be a `finally` block.
This change is not related to this PR, but I think it's worth it to revert this change.
This is a bit of a hack, but I think it's better to use a `setAtomMapNum(0)` instead of a `setAtomMapNum(0)` to avoid the need for the `getAtomicNum()` call.
I think this test was failing because `TestRecordingIsOff` was never called.
I think this should be `!isVersion()` instead of `isHelp()`.
Is this a debug log?
This is a bit of a hack, but I think it's better to use a `31557600` instead of a `inf` (the `31557600` is a `inf`).
We should add a `defaults` to the `addr` and `GET` to the `Status` namespace.
This is a breaking change.
Should this be named Guids?
I don't think we need to change the `h.clientPort` variable here.
I think we should move these usings to the `MessagePack` class.
What is the purpose of this change?
This is a bit of a hack, but I don't think we should be using this function.
This is not a good name. It's an internal type.
Can we rename this to `CrossZoneLoadBalancing`?
We should probably have a better name for this, `region` or `regionregion`
This test was not working before.
I think we should update the `proposal_url` to reflect this new action.
I'm not sure if this is the right way to go. I'm not sure if it is worth it to have a way to fix this.
This is a breaking change. The current implementation is not a `List<ExecutableFlow> fetchRecentlyFinishedFlows(long lifeTimeMs)` so it is not a `List<ExecutableFlow>`.
I think you can remove the `repo.className` argument here.
This method should be private.
This is a very weird thing to do, but I think it's better to move it to a separate function.
Why is this needed?
I think we should be able to use `rclone.Config` here.
I think this is not needed. The only time it is used is when the neg_prob is not in the base class.
I think this is a bit confusing. If the action is disabled, then the action is not disabled.
This is a very minor thing, but I'm not sure it's worth it.
Please add a license header.
I think we should be able to use the `AsUserOrTeam` function in the tests to pass.
this import is unused
@Pearl1594 I think we should keep the old constructor and remove the old constructor.
I think this should be a separate change
I think it would be better to use `Span addEvent(String name, long timestamp)` instead of `Span addEvent(String name, long timestamp)`
Why not directly use `mock` directly?
why is this changed?
I think this should be `assign_ID` instead of `queryID`
Shouldn't this be `invalidTrustDomainRegistrationEntry`?
Why do we need to add `*_precise` here?
I think this test is not needed anymore.
I'm not sure if this is the right way to go. I'm not sure if it's worth adding a new column to the `AVERAGE_COMPLETION_TIME_IN_MINUTES` or `AVERAGE_COMPLETION_TIME_IN_MINUTES` but I'm not sure if it's worth it.
@steveharter would you mind fixing the indentation here?
I think it would be better to use `TimeUnit.checkState()` instead of `TimeUnit.checkState()`
why is this needed?
I'm not sure if this is the right way to do this. I'm not sure if it's worth it to make a migration to make sure it's safe to remove.
This is a bit of a hack, but I think it would be better if we could just use `Encoded authorization failure message: true` instead of `is not authorized` since it's the same as `is not authorized`
Should this be `UnitTestDocTests.py`?
I think we should just make this `includeComputed`
I think this should be `self.parent().tagName().lower()`
I think we should be using `error.Start()` here.
I think it would be better to use the `heap_snapshot` property instead of the `List` one.
This test is not needed anymore.
I think this should be `write.location-provider.impl.0`
I think this is a bug fix.
This is a bit confusing, since the `exe_ctx` is not a `uint32_t` and the `exe_ctx` is not a `uint32_t`.
Why is this needed?
This is a bit of a hack, but I think we should just use `return new MultiTenancyMethod(rpcMethod.getName());` instead.
I think we should keep the old old version, and change the old version to `use userid to avoid situation where user with other UID but same PID`
I think this should be called `app_key_string`
This should be `require`
I think this is a good change.
should this have a `common.MapMap`?
Shouldn't this be `except optparse.OptionConflictError:`.
Shouldn't we also check if status == Stopped?
I think we should change the table name to be consistent with the other table name.
Use nested module/class definitions instead of compact style.
Is this the right place for this?
This is not a notebook.
I think we should keep this here, but we should keep it in the `main` package.
Why change the type from `filename` to `size_t filename_size`?
Is it worth adding a new protocol version?
This line is not needed.
I'm not sure if this is the right place for this. I'm not sure if it is worth it to make a method for `app_url` to return a `nil` if it's not a `nil` or `nil` if it's not a `nil`
I think this should be a `static` suffix, since it's not a `static` property.
This is a very minor thing, but I think it would be better to move the `catch` statement inside the `try` block.
This is a bit of a hack, but I think it's better to move it to a method.
This should be in a `with` statement.
This is a private method, and should be private.
This is a breaking change.
@JeremyKuhne might be better to do `ip6 = (ip6_ismaddr(ip6))` instead of `ip6 = iter(ip6).next()`.
this is a bit weird, why are we calling the function directly in the function?
I think this should be `path.Join(tmpDir, output)`
Why did you change this?
why do we need this?
@chicm-ms do you know why you added the `sw_vers` argument here?
I think we can merge this with the previous `:commit`
This will break existing models in ScoreMode.TOP_DOCS.
We should probably add a `before` prefix to the namespace here.
This is not needed.
This is a bit confusing, as `compressed` is a binary argument.
I think we should use the same name as the cluster region.
I think this should be `IJsonSerializer.IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII
This is not the default, right?
I think this is a bit confusing. What about `#-'`?
This is not used anymore.
I think we should be consistent and use the `GetMetricPoints` method here.
Shouldn't this be `violation.get('rule_name', '')`?
This is a leftover from the previous PR.
This is a bit of a hack, but I think it would be better to use a `with` statement instead of `using`.
Why are these changes necessary?
I think we can use `deliveries.first` here instead of `deliveries.clear`
Is this the best way to do it?
This import is unused.
I think this is a leftover from the previous PR.
`connectedster_type` is not used in this file.
I think this is a bit confusing, since it's a `@return` (or a `@rtype`).
Can you move this import to the top of the file?
I think we should remove `keyguardPrivacy` and `privacyMode` as well.
`StringUtils.hasBoolean(String uint64_t)`
Remove this.
Can you add a link to the docs that this is not a valid package?
Can we make this configurable?
I think this is a bit confusing. What is the `@author` annotation?
can you please change this to `const auto edges_per_t>((max_edge_id + 1) / TIMER_SEC(expansion));`
I think we should still keep this.
This is not a big deal, but I think it's better to use `gulp dist --skip-ads3` instead of `gulp dist --skip-ads3`
Shouldn't this be called `DisableAutoObservabilityMiddleware`?
Should this include include `stdbool.h`?
I would prefer to have this in the `getConfig` method.
I think we should be more specific about what's going on here.
This is a bug fix.
Why is this being made public?
@matt-gardner Is this a leftover?
This import is unused.
This should be `--hydrated-build`
I think this is the fix.
Why is this being removed?
This is a change in behavior, but I think it's better to have a test that checks the value of g_value_get_object (value) and then pass it to g_value_dup_object.
why is this being added?
why is this needed?
This is a breaking change. It is not needed.
This should be `DEFINE_bool(enable_opt_collapse_project_rule, true, "");`
Shouldn't this be `arg.replace('{}'', self._filename)`?
I think this should be `GROUP_CHUNK_SIZE`.
I think we need to make sure the principal is not cached.
This is a breaking change.
I think we should keep the original code and remove the else block.
This is a breaking change. We should probably make it a breaking change.
@michaelkuhn Do you know why we need this?
This is a bit of a hack, but I think it would be better if we could have a method that returns the flattening config.
This should be `getMaxFeePerGas().get().getAsBigInteger().longValue()`
Why removing this?
This is a breaking change. We should probably make it a breaking change.
I think this is a bug, we should just do `isClosed = FALSE;`
Why is this in `payloadHandler.taskHandler.AddStateChangeEvent`?
Can we add a `ConfigFor` field to this?
I think this is not needed anymore.
This is a very specific interface. I don't think it's a good idea to have it in a separate file.
I think we can remove the blockInterval function now
I don't think this needs to be in the list.
Why is this needed?
This is a change in behavior, but I think it's better to move it to a new method.
Use the new Ruby 1.9 hash syntax.
I think we should add a new version to the details details so that we can have the new version in the template.
This is the only change that affects TF providers.
The `os.makedirs` is not necessary here, since it is already present in the `os.path` below.
Can we make this a constant?
Please add a license header.
I think we should remove ` weight_(1)` from here.
I think we should add a `addConfigPass` property to the `addConfigPass` and use it here.
This is not a temporary directory, but it's not a temporary directory.
This is not needed.
I think this is not needed.
Should we make this a function?
Can you please add a case for kv.second.getInt() check?
I think this is not the best way to fix this.
Is this needed?
Remove empty line.
Line is too long. [85/80]
Why not just call log.Info directly?
I think it would be better to use `is_key_exists` here instead of `null`
Should this be nullable?
Do we need this interface?
Why is this removed?
I think it would be better to use `ValueFormatter` for this.
Please add ` axis=0` to the docstring.
I think we should remove this import from `pkg/api/server/server/server.go`
I think this should be `seelog.Debugf`
I think this should be done in `BaseElement.Add` instead of here.
@deads2k @smarterclayton do we want to keep this package in sync with the other imports?
This is a bit confusing. Why is this being added?
This is a bit weird, why do we need to set the attemptTimeout from the original one?
Shouldn't this be `log.error("Failed parsing config file after update: " + filename, e);` ?
I think this is a good change. We should be checking if the system running is in a place that we can't get an error.
Is this change related to the PR?
Why is this change required?
I think this should be `date1.1.1` instead of `date2.1`
Isn't it better to use the `createFromCurrency` function?
This is a bug fix.
I'm not sure if this lock is necessary.
This is not needed. It will be `!is not None`
This test is testing the same as the `configureCluster` test.
Why is this class removed?
This should be ` dom_id(plan)`
This might be a problem, but I'm not sure if it's worth adding a cast to h2o_token_t to h2o__tokens + i.e. H2O_MAX_TOKENS and H2O_MAX_TOKENS to avoid the duplication.
`no_docstring_rgx` is now unused and can be removed.
this is not needed, it is already in the currently server
This is a very minor thing, but I think it's better to just remove the `describe` and `removeAsync` methods altogether.
Shouldn't this be true only if the checkpointPath has been freed?
I think this should be `private $linkFormat`
I think this is a debug log.
Is this needed?
Why remove this?
I think we should be able to use the enum name here.
Please revert this change. The previous version was correct. The new version was correct, and the new version was correct. The new version was correct, and the new version was correct. The new version was correct, and the new version was correct. The new version was correct, and the new version was correct. The new version was correct, and the new version was correct. The new version was correct, and the new version was correct. The new version was correct, and the new version was correct. The new version was correct, and the new version was correct.
This should be `CABundle []byte `
I think this should be `transpose_enabled` instead of `transpose`.
I think it would be better to add a note about how to do this.
what's the point of this?
this is not the same as `idx.NewIndex()`
This is a bit of a hack, but I think it's better to use a `with` helper function that returns a `list` object.
Layout/SpaceInsideHashLiteralBraces: Space inside { missing.<br>Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
why not set count to 0?
I think this is not the right place for this. The `#current` should be used for the `# Clear the query cache` query.
I think we should add an index on the table and then add a `add_reference` to the column.
This test is not needed.
Again, this is the bug fix.
This should be `if (pzLocked != null) {`
This is not used.
I think we should removeSlugs from theSlug class and rename the variable toSlugs.
why not use `dels` here?
We need to add some description about what this field is.
I think we can keep the original test and use `expect(current_path).to have_content("No changes were made to the request")`
Not sure why we're using `serialized.build()` here.
I think this should be `@"\ServiceServiceEventLevel.cs`
I think we should probably just remove this line.
I think we should remove this unused use.
Why is this needed?
This is not needed anymore.
Is this a bug fix?
Why is this needed?
This is the main change. The test is failing because the test is failing on the test.
I think it would be better to use `exc_info.value` here, since it is a list of strings.
Please add a `JSON.parse` to the `normal` section.
This is a bit confusing, because `file` is a `*` in the docstring.
@smarterclayton do we want to change this to use `tester`?
This is the fix for the logIdAndTerm to be a local log log id, right?
Line is too long. [82/80]
I think this should be `checkUp`
I'm not sure if this is the right place to put this. The `on` method is used to get the `column_count` value from the `zero` table.
I think we can put this in the `add_column` callback since it's a default?
This is a bit of a hack, but I'm not sure if we want to include the `SSH_USER']}"` in the `DefaultMNE_USER` as a general rule.
This should be `@Rule`
`ManifestFiles.read` could return null.
This is not needed.
I think we should be able to use the same timeout value in the docstring.
I think this should be `const w.Name`
This should be a constant.
This should be RESEARCH_GROUP, not RESEARCH_PROJECTS.
I think this is not needed. It's a private method.
`original` is a typo.
nit: maybe `IsInsecure` or `IsInsecurechunks`?
I think we should remove this line.
@jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @
Might be good to add a docstring explaining what this is
I think this is a good idea. The `KeccakStructRef` is not a `null` for the `Topic`.
I think this is a good change. The `CollectionStrategy` package is used by the `log4j.Logger` package.
This is not correct. `strtype` is a string, not a string.
remove empty line
This is a bit of a hack, but I'm not sure how to test this. I'm not sure how to test this, but I'm not sure how to test it.
Shouldn't this be a `false`?
This is not the same as the datasetversion.
Why is this not usingLocalPrefs?
This is a bit of a hack, but I think it would be better if we just always use `pin-mongos` and then we don't have to worry about it.
This is the wrong place for this.
This is not the correct way to fix this.
I think we should just make this `jsdom`.
I think we should add a check to ensure the connection is not available.
This is a bit of a hack, but I think we should just check for the `visibleRepoName` here.
I don't think we should be using this here.
This should be `internal`
This is not the right place to put this. The caller can set it to `nil` if it is not found.
I don't think we should change this.
why not just pass in the existing `fullTableName`?
I think this should be `log.Infof("Build information %s)", metadata.BuildAsString())`
I think this should be `checkHandshake`
This should be `filter` and `filter` as well.
This is a bit confusing, since `t` is a `List[t]` in the function.
This should be `pkg/util/byteutil`.
This is not the right place for sgv. This is the correct way to check if sgv is set.
I think we should be using `IsEnabled` here, since it's a `Debug.Assert(Object.IsEnabled())`
This line is not related to the fix, but it seems like it should be a separate PR.
I think this should be `NULL` instead of `dstCtx`
I think this should be `false`
I think you can remove this line
Need to add `)")")" to the log message.
**suggestion (non-blocking):** I'd prefer `@team_page` as a `@team_page?` instead of `@team_page.present?` to avoid the need for the team.
Why do we need to throw away the exception?
Unused method argument - snapshot_name. If it's necessary, use _ or _restore as an argument name to indicate that it won't be used. You can also write as single quotes if you don't care about it.
This is not a big deal, but I think it's worth adding a new setuptools entry to the setuptools entry.
why is this change needed?
This is a bit confusing, since `base_class_path` is a `Config` and `self.base_class_path` is a `Config`?
This is not needed.
This is a bug fix.
@jadarsie do you think we should keep the old version?
This should be `require('underscore', 'underscore')`
You can also do `resp = self.app.get('/')`, and use `resp = self.app.get('/')`.
This is the only change that will cause the task to be initialized. I think we should be using the `go fmt` here.
(style) please, no space before tabs
This is the only place where we need to keep the job creation creation.
I think we should use `Optional.format` here.
I think we should add a utility to this property to the existing `translatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslatetranslate
I think this is a bug fix.
se := handle handle handle handle handle handle handle case, err :=
is this used anywhere?
Why is this needed?
I think this is not needed.
I think this is a bit of a hack, but I think it's better to be explicit here.
This is the only change that affects TF providers.
I think this should be `in excluded_portal_link`
@gmail.com here is the line that was removed.
why not use `==`?
This should be `return data`
This is not used.
This should be a `find` method.
I think we should use `task2.Task` here.
I think this is not a good idea. The package name `MetadataTableUtils` is not a static import.
Can we just remove this line?
Layout/AlignParameters: Align the parameters of a method call if they span more than one line.
I'm not sure if this is correct. I'm not sure if it is worth it.
I think we should throw an error if `file.isRemote` is set.
I think we should catch the `Error` here instead of catching the exception.
I think we should be using the `poStProofPartition.ProofLen()` here.
Not sure what the best way to do this is. The rule is to use `ReflectionParameter::getType` instead of `ReflectionMethod::getReturnType`.
I think this should be a `@VisibleForTesting`
I think we should be able to remove the `GONE` call here.
This is a bit confusing, why do we need to specify the `class`?
I think the `--object-prefix` flag should be added to the `--object-suffix` flag.
Why remove this?
`pay` is not a valid value, so this should be `l&0xff)+chr((l&0xff)+chr((l>>8)&0xff)+p[4:]`
I think this should be done in the `process_export` package.
This is the only place where we need to setVisibility() in the controller itself.
This test should be moved to the `tmpdir` class.
I think we should be consistent and use `@since` here.
nit: `const TEST_STORE_NAME = 'test/'` is a bit ambiguous.
This should be `omitempty`, right?
Why did this change?
This is a bit odd, if the `__APPLE__` is defined, then the `#if defined` should be defined.
I think this should be `return True`
This is a breaking change. It is not a span based on the span based on the uri.
This is the only change that is needed.
I think this should be `Expect("./copilot/.workspace")`
Why is this needed?
I think we should just remove this one.
Nit: we can get rid of this TODO now.
I think we should remove the `controlCallback` and `controlCallback` here.
These are not in the schema, right?
I think this is the only place where we check for the other cases where we check for the other cases where we check for the other cases where we check for the other cases where we check for the other cases where we check for the other cases where we check for the other cases where we check for the other cases where we check for the other cases where we check for the other cases where we check for the other cases where we check for the other cases where we check for the other cases where we check for the other cases where we check for the other cases where we check for the other cases where we check for the other cases
Did you mean to use this in the constructor?
This is a bit confusing, since `find_by` returns a boolean, not a `User`.
this is the only change that will break existing tests.
Thanks for the contribution! Can you move the `bundle` to the top of the file?
This should be removed.
This is a bit of a hack, but I think it's better to have a test that checks for this case.
Why is this removed?
@jridgewell Is this a typo?
I think this should be a warning, if the user doesn't specify a provided docroot at all.
This was a bug in the first place.
Do we want to keep track of these values? I think it's better to have them in the `RawBlock` and `FsType` as well.
I'm not sure if this is the right place to put this.
I think this is not the only place where we call this method. I think we should call this method in the `scripts_remove` method.
This should be `body.toString()`
Please add a license header.
This is a bit of a hack, but I think it's better to use a relative import.
I think this would be a good place to put this in a new `Unhashable` module.
Is it worth adding a new file to the docstring?
Should we use `shader.words.size()` here?
should we use `fromParquetPrimitive(field.type(), stats.genericGetMax()));` here?
This should be moved to the `sysfs_format_ptr` list.
Nit: This should be `self.hierarchical_name = kwargs.get('firewall_rule_hierarchical_name')`
I think this should be `IngressClass` instead of `ingress-class`.
nit: I think we should be using `request.reply(Object.assign({}, mock.ISMASTER_36)` here.
Why is this necessary?
We should probably have a helper function for this.
`glog.Error` is not needed anymore.
@jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @
This is a bit of a hack, but I think it would be better if we just log the worker time.
Why is this necessary?
I think this should be `var height = elem.offsetHeight + 'px';`
It looks like the `mvn install -B` was added to the `install` method, so I removed it.
I think we should also remove this line.
why not move this logic into the `if` block above?
I think this test should be testing the new `GetCurrentProcessStartInfo` constructor.
We should probably add a `*byte` tag to the `Xattr` struct, to make sure it's not actually a tuple.
This test should be testing the first time.
`protocol` was was added to commit the standard library.
This change is not needed.
@jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @jmhooper @
why is this change needed?
We should add a new key to the config file for this one.
I think we should also have a `SetBGFlushDirOpBatchSize(1)` flag for this.
I think it would be better to use a `acceptedHeaderTypes` constant here instead of a `acceptedHeaderTypes`
I think this is a leftover from the previous PR.
Why is this change necessary?
This should be a private field in constructor.
I think this is not needed anymore.
I think this should be `if callable(feval):`
This is a breaking change.
is this a bug?
This should be `Marshal.Marshal(obj, node, host)`
I think we should keep the old field and use the new one.
Should we also check if `listenSocket_ >= 0` and `listenSocket_GET_SOCKET` are set before calling `users.get()`?
I think we should use `credit_card_form` here instead of `current_user.subscription`
Standards: Please add a space after commas.
Is this change required?
This import should go in the next line.
Can you add a docblock here?
This should be `zvolWorkers`, not `ZvolWorkers`.
This should be `namespace Backend\Widgets`.
I think we should keep this as it was before.
Can you also add a `:=` after the comma?
It's not clear to me why we need this.
I think this is a bit of a hack. I think it would be better to just check for `ter variable/.match` and check for `ter variable/.match`.
Should this be `panic("NOT IMPLEMENTED")`?
@kennknowles Is this a bug fix?
I think this is a bit confusing. What if we just return a `nil` and then `if`?
This is not the right place to put this. It's a bit of a hack, but it's not a big deal.
I think this should be done in H2O_COMPRESS_HINT_ENABLE
I think this is a breaking change. The `cid.Cid` is a `baseState` that is not a `cid.Cid` but it is a `baseStateRoot`.
This is a change in behavior, but it seems like it should be a separate commit
Can we have a test for this?
It seems that this is not the correct way to write the test.
This is not used anywhere.
This change is not needed.
I think this should be `Tools.ContainsKey(toolName)`.
This is the change that will break existing users.
I think this is not needed.
What is the default value for this argument?
I think this should be a single line string.
I think this is a bit confusing. What is the difference between ` Checks` and `not`?
I think we should keep this method as it was before.
Please don't change the variable name.
Why is this needed?
Do we need to also add `isRequestStreaming` method to `ResponseStreaming`?
can we make this a relative import?
Shouldn't this be a `std::recursive_mutex`?
I think this is the only change that will break existing tests.
nit: this import is unused.
@tgamblin I think this is the right fix. The `producer` is the `source","DVN` and `sourceproducer` are the same.
This is a bit of a nitpick, but I would prefer if we could just return `s.rest.Repositories.CompareCommits(ctx, ref.RepoOwner, ref.Ref)` instead.
This is a bit of a hack, but I think we should just check if `errs` is nil.
I think we should just make this `public` and use the constant `count_t` instead of the constant `count_t`
This change is not needed.
Why not `path.join`?
I think this should be a `utils` constant.
why is this change needed?
This is a very old code, but I think it's better to have a method on this class.
This is a little confusing, why do we need to call `AppendHistoryNodes` here?
I think we should also add a `default` field to the `SPIFFEID`.
I think this is a bit of a hack, but I think it would be better to just check for the error.
This is the only change that affects TF providers.
I think this should be `\r\n` instead of `\r\n`
This is a bit confusing, why is this needed?
@jona-sassenhagen this is the fix. This is a test I'm not sure if it is worth it.
This is a breaking change.
Do we need this?
nit: not a big deal, but this is a lot of noise.
I think we should move this import to the top of the file.
I think this is not correct. The noteIds could be null.
I think we can remove this now
`protocol` was was added here, can you remove it?
I think it would be better to have a `default` function that returns a `maxc` (e.g. `mset.config.MaxConsumers > 0`).
This is a breaking change.
This is a bug fix.
I think this should be `d.Permissions == ""`
The default value of `messageTimeout` is `1.0.0` so this should be `1.0.0`
I think we should pass `AccountID` as a parameter to `Account` and `AccountID` as a parameter.
Is this used anywhere?
Is this change related to the rest of the PR?
I think this is not the only place where we use `as_array` in the code.
I think this is a bit confusing. How about `c <-chan struct{}`?
Is this a typo?
could we use `debug` here?
This line is not needed.
It seems like this should be removed.
This is a breaking change. We should probably make a separate PR for this.
This should be a debug level log.
This is a change in behavior, but I think it's better to just remove the `Converter{}` function and just return `nil` in the `Converter` function.
This is the only change that affects TF providers. I'm not sure if it is worth it to make it work.
I think we should use `MediaStore.Files.FileColumns.MEDIA_TYPE_IMAGE)}` here.
This is a bit of an unrelated change, but I think it's better to use `[A-Za-z_][A-Za-z_][0-9]*)*\\]"`.
Could we just use `Retry limit exceeded for #{name` instead?
I think it would be better to check for `application/json` and `is_redirect` here.
Should this be `TimeSpan.Task.TimeoutAfter(10)`?
I think we should add the error message to the "ifting" block below to make sure it's not NULL.
This is a bit of an odd place to put the `<meta charset=\"UTF-8\">\n"` in the `<head` tag. I think it would be better to use `<meta charset=\"UTF-8\">\n" +` instead of `<meta charset=\"UTF-8\">\n" +`
I think this is not the right place for this. The `CountNotification` is used to load the notification from the `Dataflow` and `Dataflow` instances of the `StartNotification` is used to load the `Float` (which is not a single numerical).
I think this is a breaking change.
Can we just do `writeConcern.w === 0`, and do the `create` check in the session instead of doing the `if` check?
This is a bit of a hack, but I think it's better to use a `Time.HasValue` here.
I think you can remove the `horizontalAdvance` here.
This is a bit of a hack, but I think it would be better if we could just make the `boltdir_type` be `cd9`, and then we could have a `boltdir_type` set to `0` and then `boltdir_type` set to `0` and then `boltdir_type` set to `0` and `boltdir_type` to `0` and `0` to `0` and `0` to `0` and `0` to `0` and `0` to `0`
I think we should use the `INTERNAL_RUBY_REGEX` constant here.
can't you use d_oy_val + d_temp_t instead of d_oy_val + 1?
I think this is a bug fix.
This is not needed.
This should be `ALIGN_FORWARD(pend_unit_size, YMM_ENABLED() ? AVX_ALIGNMENT : FPSTATE_ALIGNMENT)`
I think we should use `?:` here to avoid the warning.
This is not the best way to fix the problem. This is a bug fix.
This is a little confusing. What about `title_format`?
This is not used anymore
I think this should be done in the `main` block, not in the `main` block.
This is the only change that affects TF providers. I'm not sure if this is the right fix.
This file is not used.
I think this should be `chmod u+x \"#{dir}\"`
I think this is not correct. `to_replace` is a tuple, not a tuple.
I think this should return `null` for consistency with other similar methods.
`fromProperties` is not used anymore.
This should be `opts.java_primitive_has_method = true` right?
Can we add a `StackName` to the interface?
@adamjstewart Is this a breaking change?
These tests were failing because of the `bolt/transport` namespace, not the local file.
Is there a reason why this was changed?
Do we need to check for `aria-valuenow`?
This should be `f`.
This should be a constant in `API Gateway`
This is not needed.
I think we should be able to use the `[UnsupportedOSPlatform("browser")]` block here.
Is this change intended?
I think this is causing the MacOS build to fail.
Maybe we should add a warning about that?
Do we need to include the file-cost in the table?
This is not the same as the one above.
I think this is the wrong fix.
These changes are not necessary.
I think this should be done in the `exceptionally` method, since it's not being used anywhere else.
This is not needed.
Isn't it better to have a constant somewhere?
This is the only change that affects TF v1.8.4 and should not be able to install the `host.each` from the `host.update` file.
Maybe we should just use `time.Sleep(time.Second)` here?
This method is not used anymore.
This is a breaking change. The `_locker` field is used in `_nonces` and `_locker` is used in `_nonces`. The `_locker` field is used in `_nonces` and `_locker` is used in `_nonces`.
This should be `const`
This is a bit weird, why do we need to return here?
@smarterclayton do we have a test for this?
I think this is a bit ambiguous, maybe it's better to have a test that checks the policy policy and not the other policy?
Please use the same variable name for both branches.
You can use `target.features + additional_features` here.
Is this test necessary?
Why was this changed?
This is the fix.
nit: I think we can remove the `LineLength` parameter from the method, since it's not used anywhere else.
I think this should be `if (errorRowCount < cond->getOptionalInteger(0))`
This is a very old version of the `ReadState` function. Should we call `ForceRegister` on the `ReadState`?
I think we should try to avoid the `body` here.
This is a bit weird, we are going to have to do this for every call site.
`@param theKey Either {@link Keys#SHIFT}, {@link Keys#COMMAND}.`
I think this is a leftover from the previous commit.
I think this is not needed anymore.
This is not needed. `element.submit()` is called twice.
This is not a valid route, but a user could have a user that has a current_user_has_active_subscription?
`List` is not supported in IE11.
Why is this test not needed anymore?
This is not a good idea. The `TOKEN` is used in a few places, so I would just call it `_TOKEN` or something.
should this be a `null: false`?
I think we should keep this in the `mtask.waitForContainerTransitions` and remove the `prespresn` `prespresn` `presn` `presn` `presn` `presn` `presn` `presn` `presn` `presn` `presn` `presn` `presn` `presn` `presn` `presn` `presn` `presn` `presn` `presn` `presn` `presn` `presn` `presn` `presn` `presn`
What is the purpose of this change?
I think this can be removed.
Is this used anywhere?
This is a bit odd, but I think it's better to use a local variable here.
I think this is not needed.
This is a change in behavior, but I think it's better to use the `std::move` parameter from `resultColNames_`.
I think we should be able to use `config_validator_constraints` here.
the parameter set that precedes them is not used anywhere.
this is not correct, it will fail on import *
This is not a boolean.
I think this should be `[DefaultValue(true)]`, since the type is `[DefaultValue(true)]`, and the type is `[DefaultValue(true)]`.
This is a bit confusing, since the cache_line_size is not used anywhere else.
I think this should be imported at the beginning of the file.
Is this still needed?
This is not the right place to put this check.
`score` is not used in this function. Please remove it.
`--network-host-project-id` is the name of the network
This is a breaking change. The `setSourceDataAtCell` call is not needed.
The implementation of this file is not correct. It is just for the implementation of the implementation.
Why is this a pointer?
This is the only one I'm worried about. I'm not sure if we should be using the version version here.
I think we should be setting this to `dbusClosed` instead of `isDbusClosed`
This is not a valid URL, right?
This is a bit of a hack, but I'm not sure if it's worth it to make a change in behavior.
Please useboost/format.hpp instead ofboost/format.hpp
What is the default value for this argument?
This is a bit of an unrelated change, but I think it's better to use a `Map` instead of `bytes` to avoid the exception.
I think we should use `UNIX_PACKAGES.new` here instead of `additional_pkgs`
This is a bit weird, we have to do the lowercaseFields. If we do not want to cover the MongoDB's lowercaseFields, we can do the lowercaseFields.
I think it's better to have a `<%= @product.tagline %></h2>` here.
Should this be `{"185.243.112.225", "", ""},`?
Does this need to be a separate change?
`path_` is a valid path, so you can use `path` instead of `path` here.
This is a bit of a hack, but I think it's better to use a `-d` instead of `--stress-test` as the default.
why not just `$values` ?
Should this be `BooleanClause.Occur.MUST`?
I think we should also check for `Enable` here.
We should add a check here that `self.headers` is `None`.
I think we should be able to use `require.NoError(registry.Register(account.ProtocolID, account.NewProtocol()))` here.
I'm not sure this is the right thing to do, but I'm not sure if this is a good idea.
Shouldn't this be a class constant?
why not just pass the _ to the function?
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
you can change the `app/views/listItem` to `app/views/listItem`
Why did you remove this?
This is not a hard-coded row.
I think we should use `System.Mono.SkipMessage` here.
This file is now unused
in the current implementation, data_address is not None, so it's not a data-address, but it's not a data-address, so it's not a data-address.
I think it would be better to have a `atomic.LoadInt64(&t.Total, total+split)` here instead of a `atomic.StoreInt64(&t.Total, total)`.
@mmaxim this is the right fix for the slotIndex to be `SlotsPerHistoricalRoot`.
This is not a good idea, but I think it's better to use `map[string]` instead of `map[string]`.
This is the fix.
Let's add a TODO here to remove this field.
I think this is a bug fix.
I think we should use a constant for the value here.
Use the new Ruby 1.9 hash syntax.
I think this is a bit of a hack, but I think the `decryptWithPasscode` should be renamed to `encryptedInstanceUrl`
This is not the right place to put this method. It is used in the `bftExtraDataCodec` class.
This is a breaking change.
I think it would be better to use `get_extents_type` instead of `combined` as it is the default.
This is a change in behavior, but the `LoggerFactory` is not used in this class.
Do we need to check for unread?
I think we should use the `block.Set` function here.
This is a good idea. It should be `get_class`.
I think we should also set the default value to `true` in the `CanonicalHeaderKey` package.
@jona-sassenhagen this is the fix.
@mhoemmen I think this is the correct way to fix this.
This is a bit of a hack, but I think it's better to have a `List<List<List>.insert(List<List<List<List>.insert(List<List<List<List>.insert(List<List<List<List>.insert(List<List<List<List>.insert(List<List<List<List>.insert(List<List<List<List>.insert(List<List<List<List<List>.insert(List<List<List<List<List<List>.insert(List<List<List<List<List<List<List>.
The REC_INT_FRACTION is used in the code base, so this should be added to the REC_BOOLEAN: return extFormat? (char *)"BOOLEAN ) )
I think we should keep `vertigo` as `postgres` and remove the `vertigo` as well.
I think this should be `lstrip` instead of `lstrip`
nit: remove trailing whitespace
What about renaming it to `User.new`?
I think we should be more specific here, maybe `zone.clock.Now()` should be enough?
Please avoid wildcard imports.
I think we should be able to get rid of this lock.
This is a good change. The test is still using the test class.
Can you make this change in the PR?
Why is this removed?
Can we rename this to `srsrsrkaban.flow.kafka.brokerList`?
Why is this needed?
This is a bit of a hack, but I think it would be better to have a method for this.
Should we return error here?
This should be `localhost/localhost/` instead of `localhost`
I think we should add a `default!` to the end of the string to avoid the need for the comma delimited map.
I think we should add a description about what this is for.
This is not needed. `getAliasProp` is used in `getAliasProp` and `getAliasProp` functions.
I think this should be a constant.
Since `gt_masks` and `gt_semantic_seg` are not used anymore, can you remove them?
if we do not want to set the updated value here, we should also set the updated value in the `updatedInfo.GetDescription()`
This is a bit of a hack. I would suggest `return "", "", 0, err`.
This is a bit of a hack, but I think it's better to use a `required` field instead of a `GET`.
I think we should keep the old name.
I think this should be `mini_approval`
I would prefer to use `if (!file_exists($carousel->getUploadDir() . DS . $carousel->getFile()))` instead of `if (!file_exists($carousel->getUploadDir() . DS . $carousel->getFile()))`
I think we should keep the old one.
I think this is wrong. The correct fix is to remove the `DISTINCT` prefix.
why this change?
We should probably add a log message here.
I think this should be a separate error, since the endpoint resolution process is not a valid error.
I'm not sure why we are removing this, but I'm not sure if we should just remove it.
This is a breaking change. The `Integer` field is not used in this class.
should we use `self.config_filename` here?
I think this should be `padding: 0` instead of `padding: 0`
I think it's better to have a `serverLacksFeature` variable here, since it's only used in one place.
I think it would be better to use `valid_values=typ.ValidValues` here instead of `valid_values=typ.ValidValues`.
I don't think this is needed.
I think we should keep the `addressOffset` and `byteStarts` as the second argument to `size` and add a `Map` to the `size` field.
Nit: I'd prefer to keep this line as `replaceResultInFormWithNew`, as it's not used anywhere else.
this is the main change. I think we should just make the `subscriptions.new` here and not use the `show_email_and_username_form` method
No longer used?
animation docstring must be updated
Why is this not `defer deadlineTimer.Stop()`?
I think this should be an API break.
I think this should be `sizeof(Int)`.
Is there a reason why we don't just use `touch_list_remove` here?
Do we need to use ` ExternalApis::OpenAireService.search` here?
(style) code indent should use tabs where possible
I think it would be better to move this to the `DEV_FUSE_MOUNT` module.
This should be implemented as a `MarshalAs`, not as a `LibraryCollection`.
I think this should be `lint`
I think we can remove this method and just call `render template` directly.
This is a bug fix.
This is a bit of a hack, but I think it's better to just remove the `Stop()` call since it's not a blocker.
why remove this?
Why not just do $codebase->project_analyzer->getCodebase() ?
I think this is the right fix.
I think this should be `if args.seed is not None` since the rank will be passed as a `if` statement.
why is this test changing?
I don't think this is the right approach. It seems to be a bit of a hack to use it.
Can you please also test the case when `l_digits: 4` is 1?
@mfojtik this change is not correct. You can use the UTF8Encoding from the constructor to avoid having to pass the options to the constructor.
I think this can be removed now, since we don't need to have a separate `InboundMiddleware` member anymore.
This is not used.
Line is too long. [91/90]
I think we should be able to remove this function and just call `logParamsMutex.Lock()` directly.
Why is this necessary?
I think you can use `if (!gitTag.Ismaster")` here.
Why is this being removed?
Shouldn't this be `privatefs`?
Why is this not needed?
This is a good place to override the internal class name. It's not a good idea to have it in a separate file.
This can be reverted.
Please use `./confluence/display/TRAFODION/Tutorial:3A+The`
This is a very minor thing, but I think it's better to use `RetryTask` instead of `st` as the default.
This is a new commit, but I think it's better to move it to the commit message.
Same here, should be `if img_norm_cfg:`.
I think this is a change in behavior.
I think this should be `_cancellationTokenTimeout` instead of `_jsonRpcConfig` as it is used in many places.
@danrot @dantleech did you mean to add this to the `for` list?
I think this is the right fix.
Can we use `videoTestElement.canPlayType('video/mp4; codecs="avc1.640834"')` here?
I think we should move these to the top of the file.
I think this is a leftover from the previous PR.
@matt-gardner Is this change what you meant by `self.column_labels`? It looks like you're using `self.data_spark_columns` instead of `self.column_labels` in the `Sulu\Bundle\Bundle\Bundle\Bundle\Bundle\Bundle\Bundle\Bundle\Bundle\Bundle\Bundle\Bundle\Bundle\Bundle\Bundle\Bundle\Bundle\Bundle\Bundle\Bundle\Bundle\Bundle\Bundle\Bundle\Bundle\Bundle\Bundle\Bundle\Bundle\Bundle\Bundle\Bundle\Bundle\Bundle\Bundle\Bundle\Bundle\
"index" should not be used."
I think this should be `show_email` instead of `show_email`
This is a breaking change. The `app` is a `app` and the `app` is a `app` (the `app`).
This should be `c.syncCvr(cvrGot)`
why do we need to specify it's name?
@deads2k i'm not sure if this is the right fix.
please remove this
This should be `ByteArray`
Please don't use `import` for this.
Maybe we should add an example here for the `promise` prefix?
This is a bit of a nit, but I think we should be able to use `err.Start(ctx, sc)` instead of `err.Wrap(err, "controller")`
I think this should be `opts.prefix_size`
This is a bit of a hack, but I think it's better to use a `tabBar` here instead of a `tabBar`?
This is not a good idea. The return type should be `Object`.
I think this is not needed anymore?
You can use `httphttpContent.IsClose()` instead of `httphttpContent.IsClose()`.
This is a breaking change. It is not necessary to add the properties in the properties properties.
I think this is a leftover
nit: can we use `BaseFileScanTask` here instead of `BaseFileScanTask`?
Shouldn't this be `apply`?
I think this should be `w.sourceExists(ci.StartupScript)`
Why is this change required?
@jsoriano I think this is the right fix.
I think this function is only called from render_args_struct(), so maybe this function can be called in render_sync_handler_send_exception_response()?
Why is this needed?
I think this is a bit confusing. What if we have a response code that is not found?
(style) line over 80 characters
This is the only change that affects TF providers. I think we should be using the `dockerClient` from the `dockerClient` to avoid the need for the `dockerClient` part.
Is this a TODO?
I think we should move this to `process` and remove the `context.Context` interface. We can move this to `process` interface.
Why did you remove the typehint here?
I think this should be in a try-catch block, since it's a bit of an error.
We should probably add a `tags` field in `close` and `limit` here.
do we need this?
I think we should keep the old behavior as well, and keep the old behavior as possible.
Why is this not a pointer?
Why is this needed?
Why did you remove the `if` here?
This is a bit confusing, since it is a `@Nullable`.
I think this is a good place to put this in the `else` block.
Can you please update the changelog as well? Thanks!
Should we use `unless None` here?
Why remove this?
Why not use the `StoreSingleton` function?
I think we should add a `ScanlineFilterCommon` field to the `OkFilter` field.
This should be a constant.
This is the only place where we use it. I think we should be using it in the `PagedOptionalArrayMethod` for now.
This should be `internal/secrets`
Why not use the `SingleensusVersion` helper?
I think we can remove the return type here.
I think this is not needed.
can we make this a constant?
This is a bit weird, why do we need to return an error here?
This is a bit weird, `configtypes.List` is a `List` and not a `LengthList`.
Should we also test that the 401 happens in `describe` block?
Why is this not set to `true`?
This is a bit of a hack, but I think it's better to use the `sizeof` for the `mcontext` field instead of the `mcontext` field.
This should be `final`.
Does this need to be added to the `struct` list?
I don't think this is the right place for this.
I think we can remove this file.
Line is too long. [83/80]
This is a bit weird, why are we doing this?
Is this safe? I thought the check was `if (serverType === ...)` and the `if (topologyType.Unknown && this.servers.size !== 1) {` was the correct value for the `onohnType`
This is not correct.
This is a bug fix.
I think we should keep this as a global option.
Is this a new line?
This PR doesn't work with Python 3.
Can you make this a `ConfigError`?
This function is used in a lot of places, maybe put it in a function?
This is a bit of a nitpick, but I think it would be better to just pass the error to the `controller.Sync()` function.
We should add a way to set this to `kill()` to make it more obvious that it's not used anywhere else.
I think this should be `if (!field.native_shared)`
why is this removed?
I'm not sure if this is the right place to put this, but I'm not sure if it's worth it to make a change in behavior.
I think we should be consistent and use the new name here.
This will not work on windows. You can use `Array.isValid()` instead.
I think it would be better to have a enum type for the enum, and then pass it to the enum type.
Shouldn't this be browser.tizen?
Why not `goimports`?
This is not a correct place to put this in the `TelemetryConfiguration`?
This is a bit weird, the `reset` method is used to create a `make_shared` directly.
This method is unused.
Although I'm not sure this is correct, I think we should use the `Url[]` type here.
This is a bit of a hack, but I think it's better to use the response.get('ResponseMetadata', {}).get('HTTPStatusCode', 'Unknown') as the response.get('ResponseMetadata', {}).get('HTTPStatusCode', 'Unknown') if status is 200 or 200
Is this the correct way to do this?
why remove this?
I think this should be a new line
I think this should be `/foo/bar`.
could you please move this to the next line?
I think we should keep the old version as it was before.
I think you can just use `window.getParameterByName = function(name, url)`
This is a change in behavior, but it seems like it's just a thought, right?
I think we should keep this as a timeout.
`__cadence_sys` is not used anymore.
remove empty line
I think this should be `IstanbulBlockNumber`
Is this change necessary?
Why not keep the private method as public?
This is a bit confusing. What is the ` Exclusion list` format for?
> size [](start = 12, length = 6) nit: Can we put "block_processor_batch_size" in the name?
I think we should import ruamel.yaml from ruamel.yaml
I think this is a bit confusing, since we are not using the `Query` method anywhere in the code.
This should be removed.
Is there a reason for adding this line here?
This file is not needed anymore.
why do we need this?
This check is not needed.
I think we should remove this import.
This should be done in the `if not log.isDebugEnabled() {` block.
I think we should add a warning message here to make sure the schemas are not in the warning.
This is a bug fix.
Why is this needed?
I think this is a bit confusing, since the `beat.count` is used in the `beat.count` file, and the `beat.count` file, not the `beat.count` file.
You can remove this line now.
Should this be `SERVE_SELF_SERVE_AbstractAbstract`?
Can you add a new line after `api.MetadataItems` to avoid the new line?
This is not needed.
Do we need this for compatibility?
I think this should be `_fetchStatus` instead of `status` since it's a global setting.
This is the only change that affects TF TF. I think it's better to check for nil and then check for nil.
I think we should be consistent and use the `localCapacity` here.
I think this test is still testing the wrong thing.
@smarterclayton do you think we should add this to the other services?
I think this should be `github.com/aws/...`
I think this should be `var = component.prevState || state`
Nit: please move this import to the top of the file.
I think we should use the `status` tag here.
I think this should be `this.originalRequest = true` since it's a copy of the test.
I think it would be better to have a test that checks whether the method is called `GrpcGapicRetryMapping`
(style) trailing whitespace
This is a bit confusing, as it is a `n` element, not a `n` element.
Can we use a `long` here instead of a `long`?
Lint/UnusedMethodArgument: Unused method argument - knows. If it has happened yet, use _ or _current_ an argument name to indicate that it won't be used. You can also write as Reads_ or if it won't be used. You can also write as Reads_ or if it won't be used. You can also write as Reads_ or if it won't be used. You can also write as Reads_ or if it won't be used. You can also write as Section.new(starts_on: 1.week.ago).to be_upcoming
This is not correct. The only difference is that `rampup` is not a valid element, but `hold` is not a valid element.
Is this a bug fix?
Do we need to do any of these?
This error message is not useful.
I think this test was not working before.
Why are we using ` copyCommand` here?
Why is this being changed?
I think we should move this to `src/` and move it to `src/`
Is this a change in behavior?
Why is this removed?
I think we should do the same for all the places where we set the value to `True` in the `if` block.
(style) space required before the open parenthesis '('
I think we should use `AccountMaxVersionPrefix` here.
We should keep this for now, but we should keep it for now.
This is a change in behavior, but I think it's better to move it to the `BackendError` package.
I think we should add `task` to `backendBase` and `backendBase` to `backendBase` and `backendBase` to `backendBase`.
I'd prefer to have this be a `ipVersion` rather than a `np.Spec`?
Why is this being removed?
Should we make this a constant?
I think this is a bit confusing, since `_clone_git_repo` is used in `build_from_path` which is not a valid error.
Can you add a docstring explaining why this is needed?
I think this is the right fix.
This should be moved to the `#ifdef` block.
I think we should keep the old name and make it more explicit.
I think we can just use `\n` instead of `\n` here.
I think we should just remove the JavaScript as it is not used anywhere else.
I think we should be using `top.Shutdown` here instead of `top.Shutdown`
I think we should keep this as it was before, and change the default value to `True`
Do we need to keep this file around?
This is the only change that affects TF v2.
maybe just `self.composite_root_resources = []`?
This is a breaking change. It is not used anywhere.
This is a change in behavior, but I think it's better to use `OutputOutput` instead of `Output` here.
why is this changed?
I think we can remove this.
Should we use `/tmp/non-existing-dir-%d/process_test.pid` here?
I think this is a good place to add this interface.
I think we should import these two imports in the same file.
It's not a correct change.
Why is this import needed?
Nit: I would prefer if this could be a single line if you like.
We should probably make this a constant.
`repo.ListBranches` is a better name.
I think we should also update the `VolatileValue` class to reflect the new `RandNum` class.
I think this would be a good idea to move the attribute to the `amqpPair` class.
Can you add a note that `DispatcherType.REQUEST` is not a path as a path?
Do we need to add this to the `.jetpack.js` file?
I think it would be better to just have this method return `useDefaultSources` and then call it `useDefaultSources`.
There is no need to specify the event event in this function.
Is this change intentional?
why not using `poll(nil)` here?
We should add a note that this is prefixed and will be prefixed.
Should we do this before `AvailableBalance`?
Is this a change in behavior?
This is not a lowercase, but a lowercase version is not a part of the text.
Sorry, I missed this in the review, but I think it's better to have a single function that does the same thing.
I don't think this is the right place for this.
I think this error message could be more helpful, maybe something like `t.Log(err.Error, e)`
Can you add a TODO to remove this test?
Wouldn't it be better to use `reflect.className(reflect.className))` here?
remove empty line
I think this should be `writeSpan`
You can remove `self.tmp_path` entirely.
This is the only one that's needed for the link link, so it's not necessary to change this.
I think this should be `DestPorts(uint32(r.Config.VXLANVNI).).ProtocolNum(uint32(r.Config.VXLANVNI).).ProtocolNum(spec, misc(spec, misc(spec, misc(spec, misc(spec, misc(spec, misc(spec, misc(spec, misc(spec, misc))`
nit: move this line up (and the other `goimports` statements) into the `*` section above.
This is a bit of a hack, but I think we should be able to use `first_digit` instead of `second_digit`.
I think this is the only change that affects TF TF test.
Should we add this to `errors.go`?
This is a change in behavior, but I think it's better to use a `mDesktopFile.id()` instead of a `mmassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassassass
I think this is not needed anymore
This is the fix.
I think this should be `graph := parse.NewAspParser(state).BuildRuleArgOrder()`
This is a bit confusing, why is this needed?
Please use the `@Restricted(String encoding)` class here.
I think this is not needed.
`checkArgument` could be replaced with `!deletes.contains(schema.findField(name) == null || deletes.contains(schema.findField(name)).fieldId()`
Why is this necessary?
This is not a Devnet, but a DevnetConfig is a Devnet?
I think we should be able to use the `Lade hoch` constant here.
Why is this needed?
Why did you remove this?
I think this is the wrong place for this.
"if not enabled" -> "if not enabled"
This change is not related to this PR, but it seems like it would be worth it to revert this change.
Can you move this import to the top of the file?
This is a breaking change.
I think we should just set zero data as zeroDataResetHandler.
Why is this in `CancellationToken`?
This is the only change that affects TF providers.
I think this is a bug fix.
Please add a description of the description of the `@group legacy` annotation.
I think we should return `nil` here, because we don't want to return `nil` when the caller is `nil`.
TheseThese are not really necessary.
Can we change the config to be a unique key?
I'm not sure if this is the right place to put this. The first one is "0u" and the second one is "0".
This test is the only place where we set the default value for the `true` value.
This is a very minor thing, but I think it's better to use a `c.CASSnapshot` and then use a `c.getDefault()`.
I don't think we should be using this method in the `UserGroupMembership` class. We should add a check for `six.g.erb` to make sure we don't have any other group names.
I think this is wrong. The `Blockchain` is already in `BlockTree` so it is not necessary to change.
Why is this a separate fix?
I think we should remove this.
I'm not sure if this is the right place to put this. I'm not sure if it is worth it to make a different way to do this.
I think this should be `io.prestosql.plugin.hudi.annotation.PriorityTag.DEFAULT_Priority`
Can we add a TODO here to remove this check?
I think we should be using the `MessageBox.Show` here, since we don't have to call the `Component` anywhere in the code.
should be FALSE
Why is this needed?
Nit: I'd prefer not to have this in the `componentCheck` section, but I think it's more clear what the `IdentityCheck` is for.
I think this should be `else if`
I think we can remove the marketAddr check now.
I think this needs to be `token=token`
Unnecessary spacing detected.
I think this is not the right place for this. It is used in the `NamedTuple` class.
I think the message should be more descriptive about what is going on here.
This file should be removed.
I think this should be `# pylint: disable=unused-variable`
I think this is a bit confusing. What is the reason for this change?
I think this should be moved to `serverConfig.ControlConfig.DataDir`
I think we should use `drop_non_existent` instead of `keep_non_existent` to avoid the duplication.
This is a bit of a hack, but I think it would be better to just do `if (txReceipts[i].Removed == false)` instead of checking if the txHash is empty.
Should we just use `repoURLFlag` here?
We should probably check that the plan is in the `issue` method, so that we can get rid of this `issue(:UNKNOWN_PLAN)` call.
please use numpy, it's not a function
This is a bit of a hack, but I think it's better to move it to a separate method.
@deads2k this was a bug, we need to fix it.
We don't use this use anymore, we can remove it.
This is a bit of a hack, but I think it would be better if we could just call `ctx.RepoUserName == ctx.User.LowerName` instead of passing in `ctx.User.Repo` directly.
Why not just use `time.Second`?
This is not necessary because `libkb.libkb.libkb` is a directory already.
Is this necessary?
This should be `circular-json.js`
I think this should be `MergeState.After` instead of `MergeState.After`
This is a bit of a nitpick, but I think it would be nice if we could just return `nil` here instead of `err` here.
We should make this version compatible with version.6.3.0
Is this a valid option? If so, should we make it a constant?
This is not the right way to do this. The only thing I'm not sure about is that we should do this is that we should be using the `getSession` method.
I think you can remove this line.
This should be a `volatile` instead of a string.
I think we should also add a `auto` to the list of `ACCOUNT LOCK` to the end of the string.
I think this should be moved to the `cpu_data()` method.
I think you can just do `list.map { |x| x.first }`
Why not use the `index` tag?
This is a little strange, but I think we should just make it `IptablesNATOutgoingInterfaceFilter`.
This is a bit of a hack, but I think it's better to use `test.NewInt` instead of `test.NewInt(30)`
This is not needed.
I think it's better to use the message from the message.
I think this import is not used.
This test is testing the same as the one in the test.
This is a good idea, but I'm not sure if it's worth it to have a better idea to have a `joinable` in the `if` statement.
I think this should be called `walletCreateCmd`
why is this change necessary?
The flag should be read.
Can we add a new method for this new method?
Could we use permissions here?
This is a bug fix.
This is a bit of a hack, but I would prefer to have a `np.where(max_overlaps > self.floor_thr)[0])` instead of `np.where(max_overlaps > self.floor_thr)[0])`
Why is this change needed?
Why is this import needed?
The memory update is set to MemoryUnlimited.
I think we should be able to remove this from the `totalFileCount` and `totalFileCount`.
I think this should be a bool.
This is a bit confusing, why do we need to set the `entity` field here?
This is not needed.
I think this should be `nil`
This is not a good idea. The array should be `@var array|null`
This is not used anywhere.
I think we should pass the name to the config instead of the config.
this is not needed anymore
This is a bit confusing. Why is it not `-foo`?
I think we should return `head()` here instead of using `foldLeft`.
why is this change needed?
This is a breaking change.
This change is not needed.
This is a bit of a hack, but I think it would be better to just do `api = api_version = self.api_version` and then check for `api_version` and then check for `None` if the api_version is None.
This should be `recording_msid`
This is a change in behaviour. The `WDBI_DME_ABGLEICH_PROG_REQ` file is used to build the input input.
We should use a constant for this.
why not `style['text_baseline'] = ...`?
This is not the right place for this. The `security_attributes_` call should be removed.
This is the fix.
Can we call this `ShardKey`?
`formatTimeAgoText` is not used in this file.
I think this is a bit confusing. What is the TRUE?
This is a little confusing to me. Why is it possible to have a single version of `NumericConstant` and `identifier`?
I think this should be `1000` instead of `1`
This is not correct. You should check if the string is empty.
This is a breaking change.
I think we should change the name of the param name to `use_memoize`
I think this is a bug fix.
I think this should be `@var bool`.
I think we should keep the old name. It's not a big deal, but it's a big deal.
why remove this?
I don't think this is correct. It's not a good idea to have a `_MSC_VER` defined in the `if` condition.
I think this is the only change that affects the current version of the current version.
this is not needed
I think we should just return `model_t uid = getuid();` here.
I think this is not the correct way to do this. It is not the same as the one in the `__del__` method.
I think this should be `r.Config.Logger.Log(fmt.Sprintf(...))`
Is this really necessary? I think it would be better to use `example answer` as a `example answer`
I think we should keep this as it was before.
This is the only place where we need the `Xml TV` property.
Should this be `scope?.Span?.Context`?
I think this is a bug, we should be using the `TODO` instead of `TODO`
Should we make this a constant?
This is a bug fix.
Why not just call it `package soc`?
I think we should remove this and use the new one `USERNAME_PASSWORD_REQUIRED` and `USERNAME_ALREADY_REGISTERED` in the `main` folder.
This is a change in behavior, but I think it's better to have a `long` at the end of the method, and then use it in the `Update` method.
This is a change in behavior, but I think it's better to use the `abortReason` as the default.
I think this should be done in `NewFs` and not in `NewFs`
I think we should use the `six.read()` method here.
I think it would be better to move this logic into the `if` block, and then move the logic into the `else` block.
Please rename these constants to `ExecLICIT_TIMEOUT` and `ExecLICIT_LOAD_TIMEOUT`
I think it's better to have an empty string with the region.
This is a good change. The `as` method is called by `as` in the `as` method.
This is a bit of a hack, but I think it would be better if we could just return the bool here instead of returning the -1.
nit: "should be loaded lazily the first time you call SignedURL"
Can we make this test the default?
why is this moved?
I think this is a leftover from debugging.
This is not necessary, we can just do `@role.user_id = @user.id`
shouldn't this be `MultipartFormForm`?
I think this should be a warning.
This is a change in behavior, but I think it's fine to keep it as it was.
It's not clear to me why we need this to be a `*` rather than a `*`.
this is wrong. It will be hard to parse parse files
I think we should keep this as it is.
This is a bit of a hack, but I think it's better to use a global constant here.
I think this should be `if ok`
Remove extra line break.
I think we should remove this method and delete the delete() method.
I think it's better to use `Clone` here instead of `Git`
The `\` should be removed.
We should probably use `logger.infoinfo()` here.
why change this?
nit: I'd make this a constant.
You can just pass the err to the function.
The test was failing because of this being a `nil` check.
What is the reason for this change?
I would prefer to keep this as a function.
This is a bit weird. I think it's better to just call `assertStream.abort()` instead of `assertStream.close()`
i think we should move this to `pkg/client/api/resource`
I think this is a bit confusing. What is the difference between `ISpanDecorator` and `ISpan span`?
I think we should add a `require` tag here to make sure that the `deprecation` tag is not available.
It's not a good idea to add this to the "Increase verbosity" event, but it's not a big deal.
I think this is a good place to put this in a constant.
This is not needed.
This should be a single line string.
Why is this needed?
I think this can be removed.
I think this is a bit confusing. What is the benefit of this?
I think we should be able to use the `endpoint_url` variable here.
This is a bit weird, why do we need to call X64?
Why not just use `#`?
I think this should be a constant somewhere, otherwise it will be a constant.
(style) externs should be avoided in .c files
this import is unused
This is the only change that affects context.
This is a bug fix.
nit: can we rename this to browserStartCommand?
Should we set the default to false?
This is a bug fix.
This is a change in behavior, but I think it's better to keep the logging.
The `String` is not necessary here.
This is not needed.
why is this needed?
Why is this needed?
This is the only change that affects the tests.
I'm not sure if this is the right way to do this. What do you think about moving this into a constant?
Is there a reason we are not using the new version of the method instead of the class definition?
I think we should add a `or has_default_version` check to the `vk_khr_sampler_ycbcr_conversion` check.
I think this is not needed.
I think this should be `!i` instead of `!i`
I think this is not needed, it is already included in the header
Why not just use `LOG.finest`?
I think we should remove the FY16 funding request. We should probably make a note about that in the future.
This is a little confusing to me. Why are we using a "get value" here?
Is this the same thing as the one in `env.spmd`?
This is a pretty tricky thing to do. I think we should be using `self.abs` instead of `abs` here.
This is a very minor thing, but I think it's better to use the `0x10` and `0x70` in the code.
This should be `@return`
I think this should be `self.__apply_mult_override(v, key, replace_value)`
I think this test is too big of a mock.
I think you can just do `env=universal_newlines=True`.
This is a change in behavior, but I think it's better to have a `ActiveClusterName` property that has a `common.DomainReplicationConfiguration` that is used in the `ActiveClusterName` class.
I think we should keep the original original behavior and just use `reason` here.
This is a bit weird. What about `List.of()`?
Do we need this?
nit: `+ " " + " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "
Shouldn't this be `errorMessage`?
Hmm, I'm not sure if this is the right way to do this. I'm not sure if it is worth it.
`refreshInterval time.Duration` is a refresh.
Remove this line.
This is a bit of a hack, but I think it's better to have a test that checks the result of `TRAF_SYSKEY_COLNAME` and `TRAF_SYSKEY_COLNAME`
I think you should remove this.
This is not needed.
This test is failing on Python 2.7. I don't think we should be testing that the default is `true` in the test.
I think we should add a TODO here to remove the TODO altogether.
This should be a warning.
Please use `std::string` instead of `std::string`
This is a breaking change.
I think we should add `sh.export` to `conftest.common` and `conftest.common` to make sure we don't have to.
It's not clear to me why we need to do this. We should not do it in the wire if the block is not a process.
Why is this needed?
Please don't use `import` for imports.
Why is this needed?
remove empty line
Can we move this to `GAUNTLET_TIMER_CONTAINER`?
I think it's better to put it in the application_name.go
I think this should be `panic("global option option " already registered")`
This is a bug fix.
Can we make this test the default?
Why is the ` GoGapicContext` argument not required?
Use the new Ruby 1.9 hash syntax.
I think this test is not needed anymore?
@deads2k do we need to change this?
Should this be `caster` rather than `(caster, caster->getPosition(), target->getPosition(), params.distanceEffect);`?
Can you update the tests to update?
This is a bit of a hack, but I think it's better to use a `environment_script` constant here.
Why do we need to catch the exception here?
I think we should use `ChannelFields` instead of `ChannelChannelFields`.
I think this should be `f.A.max()`
I'm not sure if this is correct. The name of the field is `field` but it is `field->name`
This should be `Default = "sarif.log"`
I think this method should be renamed to `fillObject` as well.
This is a breaking change. I think we should use `OpenTelemetryTracerProvider` instead of `Tracing`.
What is the difference between this line and the opening parenthesis?
I think we should use the `environment` package here.
I think you can use `String.format` here.
We should use a more specific name for this than `Supports PaymentVersion`.
can we call this `NotNil` instead of `stream`?
I think this should be `java.lang.StringUtils`
Why not just call AbstractJavaAccessTypeNode`?
Please use `case` instead of `case`.
why are we removing this spec?
I think it would be better to use the `_numeric_limits` constant here instead of the `_max` constant.
This is a bit of a hack, but I think it's better to have a `BaseMetastoreCatalog` method that takes a `Group`.
please don't add extra whitespace
I think you can remove the `SpanBenchmark>` here.
Does this change the checkpointing process?
This is a bit confusing, as it is a bit confusing to me. If it is a real Ruby type, it should be `Duration`
This should be `TestConcurrentCommand_UnmarshalJSON`.
I think we should be more specific about what this does.
I'm not sure if this is the right way to do this. I'm not sure if it is worth it to make the test pass.
Use `_` instead of `_and_secondary` to match the other commands.
I think this should be `Collections.subSequenceRangeCheck(beginIndex, endIndex, length())`
I think this check should be done in `Debug.Assert` instead of `Set` as it is done in `Debug.Assert`.
I think we should keep the old config and use the new one.
I think we should set this to 0.3.1 to make it work with 0.3.1
I think this should be `from . import encode`
We should add a license header here.
It looks like these changes are unrelated to the PR?
This is a little weird, why do we need to set `dataDir` here?
The string parameter used in SQL LIKE expressions should be removed.
Shouldn't we also check for input data failed here?
This is the only change that affects the body of `makeSha256Reader`.
Is there a reason why we don't want to set the output here?
It's better to check if the fee is a 21000.
Why do we need this check?
Nit: I'd prefer to keep the `[UnsupportedOSPlatform("Access denied")]` part in the future, but I think it's more clear what the error message is about.
I think it would be better to have the output->format parameter and then check if it is not there.
These should be imported at the top, not the file
I would use `assert` here, since you're using `nms` in the `else` block.
This is the fix.
Why is this needed?
I think you can remove this line.
I think this is not the best way to do this. We should just make it `public virtual bool ShowChildView(UIViewController viewController);`
I think this is the only change that affects the `else if` below.
why is this a valid default?
Use the new Ruby 1.9 hash syntax.
This should be `e.LogPersister.AppendErrorf`
The message may be too long, can we change it to be a constant?
Should this be `// Deprecated: Use TransitionDependenciesMap instead. TransitionDependencySet`?
`)` is not needed.
Why is this needed?
These are the only changes I have been doing so so I removed them.
Can you please add a `TODO` to remove this?
@mhoemmen I think this is the right fix.
I think this should be `useCallback` since it's not a boolean.
Can we make this `func (c *CStorPoolController) destroy(csp *apis.CStorPoolInstance) error {`
This is a bit of a hack, but I think it would be better to have a method that does the same thing.
I think this is not needed. The `else` branch is not needed.
I think we should be able to use `h` here.
I think this is a good idea to add this to the `LazyTrace` function.
Should we also add `ValidationException` to the message?
@deads2k i'm not sure if this is the right place to put this.
I think we should add the `addtransaction` parameter to the API.
I think this is a bit confusing, since the old pickle is a version of the old pickle.
This should be `\n`
(style) line over 80 characters
Please remove empty line
I think this should be `class` instead of `Unlesslessless`.
this was the bug
Can we make this a `const`?
Why not just catch `final`?
I think we should keep this as it was before. We should change it to `traceparent`
This is a bit of a hack, but I think we should be using `path.Error` here.
I think this is not a good idea. The import should be removed from the previous commit.
This should be done in a single line string.
I think this should be `proposal_notification.view_request_cta`
why not use a `static` field?
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
(style) line over 80 characters
why not `DestinationGroups`?
I think you can remove the `if` statement here.
This is a very confusing change. It seems like the `map[string]string` is not a `2` value.
I think we should just make this `HEAD`.
This class is not used anywhere.
this is an API break. It's not clear why this is needed.
I think this should be `static`
Use the new Ruby 1.9 hash syntax.
I think we should keep this.
This should be `public long getPendingNumDocs()`.
not sure if this is the right way to do this. if you want to do something like `host.http://localhost:#{nonssl_port = new_port` then you can just do `host.http://localhost:#{nonssl_port = new_port`
I think we should just remove this map.
This is not the right place for this. The `--enable-SELECTION` flag is used for the `--enable-SELECTION` flag.
I think this should be `Topic already exists with different tags`
Please add a space between `)` and `{`.
Please remove this line.
I think we should log the exception here.
I don't think we need this.
could we log the warning here?
@jackfrancis I think we should keep this as a dependency for all versions of `cssutils` and `<1.6.3`
nit: can you move this import to the top of the file?
this is the only change that will break existing functionality.
We should probably have a spec for this spec and follow the pattern of getting rid of the `Update profile` action, but I think it's better to keep it as is and make sure we don't have to do this in the future.
I think we should use the `CLIENT_RANDOM` constant here.
Is this a bug fix?
I think we should just remove this line.
This should be `DateTimeDateTime $dateTime`
This is not needed.
This is the only change that will break existing users. I think we should keep this change.
what's the reason for this change?
I think we should just remove the `determineFileType` method altogether.
this is a bit weird, maybe just `use_directory_cache?`
This is not needed.
Nit: "If you're using the `\` in the name of the sentence, you can use `\` instead of `\`
can we use the same constant for the Realm and assert for the RealVersion?
This should be 5, not 5.
I think we should be using the `if` here.
I think this is a leftover from debugging.
What's the purpose of this change?
I think this is a breaking change.
I think we should add a type hint here to make sure we don't have to add new attributes in the future.
`removeChild` is not a child node
I think this should be a single line string.
these should be `DateTime`
This is not the right way to do this. The only thing I'm not sure about is that we should do this is that we should be using the `getSession` method.
This is the fix for the bug fix.
I think this is a bit confusing. What is the difference between `MvxViewHolderBinded` and `MvxViewHolderBinded`?
I think we should pass the diskList as a parameter here.
This is a bit confusing, since you're using `name` as a field, why not just return `true`?
I think this import is unused.
This should be a constant.
This is a bit confusing, why is this condition not set in dcontext?
I think we should keep this and call it `setDefault`, `setDefault` and `setDefault` to make it clear that the other methods are the same.
why change this?
This is a bit of a nit, but I think it would be nice to have a test for this.
I would add a docstring here.
I think it is better to use `!empty($field)` instead of `!empty($field)`
This file is now unused.
I think this is a bit confusing. Why is it not `Scope`?
Do we need to keep the old version?
remove empty line
I think this is not needed.
Why did you remove the "InvocationHandlers" part?
I think this should be `IEnumerableToList<T>(...)`
This is a very old code and could be removed.
Please rename to `ErrorProneJavacPluginPlugin`
Please update the doc.
I think this should be a different fix.
This is a very minor thing, but I think it's better to have a method `StoreInbox*` and then call `storeInbox` here.
I think we should import `API.prototype` from `getState()` to avoid this duplication.
I think this is a leftover from the previous PR.
I'm not sure if this is the right place to put this, but I'm not sure if it's worth it to add a helper method to this.
I think this is not needed.
Should this be `ProxyURL`?
This is a pretty big change. We should probably make a separate function for each history service.
I think we should just remove this `icon` component and just use `INSTANCE` here.
We should probably add a note to the log message here.
I think this should be a constant somewhere, not a constant.
why do we need to change this?
Maybe we should just make this `encoding_type`?
This file should be updated to reflect the new files.
This is a breaking change. I think it would be better to just have an `escFlushAsync` and then reuse it in `CreateFlushAsync` and have it in `CreateFlushAsync`.
I think this should be debug.
I think this can be readonly.
This is a change in behavior, but I think it's better to be explicit here.
This is a breaking change.
Why not just call `init()` here?
I think this is a bit confusing to me. If you have a sub-common target, you can't start the sub-common target. If you want to start the sub-common target, you can't start the sub-common target.
This change is not related to the PR. The `SetApplicationError` has been moved to the `error` package.
This is a change in behavior, but I think it's better to keep it as a separate commit.
This should be `log.finest`
Is this change necessary?
Please update controllers.get to match the other controllers.
This is a little weird, why are we removing it?
Trailing whitespace detected.
I think we should make this a constant so that it's clear that it's a configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable configurable
This is a bit of a hack, but I think it's better to split this into two separate commits.
why not use GET_CAST_ISSUE_MESSAGE
If you're not going to be changing this, I'd rather you keep the original behavior and add a new error message to the caller.
Can you add a space after `long`?
(style) line over 80 characters
Is this actually necessary? I would expect that the PDF are always present in the `MINIMIZE_WINDOW` function.
This should be done in the `H2O_PROBE_CONN` list.
This is a change in behavior, but I think it's fine to keep it as it was.
This is the only place where we need to handle the `IPFamily` case.
I would prefer to have this in a separate function, and only in the `NATURAL_ORDER_COLUMN_NAME` module.
I think we should just remove this `hack/modules` and replace it with `hack/ Modules`
I think this should be `SCM_snapshot_annotations = true` since it's the default.
This should be a single line string.
This is a bit weird, I think it would be better to use `sig[0]` instead of `extra_entropy`.
Can we add a TODO to remove this and just return the error?
you can just use `_dict[entity][:1000]` here
I think this should be `view.flows.resolve '%s'"`
This should be `parseOption`.
I think this should be `if os.path.exists(os.path.dirname(path))`
This is a bit of a hack, but I think it would be better to just call `argument()` here.
This is a bit of a hack, but I think it's better to have a test that checks the value of `configureSessionTimeout`
This is a bit confusing, because `objpath` is a `storepath`, not a `None`.
I think this should be a `static` statement.
We should probably add a conditional here.
Is this the correct way to go?
It's not necessary to check for `biggestSize` here.
If you're not going to be using this function, you can just use `validateVarsSubbed()` instead.
rm empty line
This is the fix for #6029.
This is a little weird. I think it's better to just check for statusParts here.
This is a bit weird, why do we need to `SkipOnServers []string // if the test needs to be skipped on particular server`?
I think we should also check for `bad_request` here
This is a bit weird, maybe it's better to check for the jobInfo.cancel is 1?
The CStorPool client still has a CStorVolumeReplica objects. Is there a reason we need to remove it?
I think it is better to use the `if` condition here.
Why is this change necessary?
nit: can we use `getAt` instead of `getAt`?
This is not needed.
The `float` is not used anymore.
This is a breaking change.
This is not the same as the other package, but I don't think it's necessary to add it here.
This is not a bug fix, but we should also add it to the executor executor.
This is the only change that affects the `updateNodeStatus` call.
Is this include needed?
This is a change in behavior, but I think it's better to move the logic into the `if (auto &set_binding_pair)` block.
Why change the return type from `NotFound` to `NotFound`?
Why not just initialize the Docker API to GetDefaultVersion?
I think we can remove this line
I think we should add a `<` to the description to the description.
I think this should be `req explorer.SettleDepositResponse{}`
This is not correct. It is not used anywhere else.
I think this should be 0 as well.
We should remove the `X.recyclerview.MvxGuardedLinearLayoutManager` class from the `X.recycler` class.
This should be in the `config` class.
I think this is a bit confusing, maybe it's better to use a different variable than a `None`?
This is the only place where we're testing this is used.
I think we should use the same name for all these properties in the same namespace as the same one.
I think this is the right fix.
@Scottmitch do we need to remove the `else` branch?
@smarterclayton do you think we should add a TODO here?
There is a `return` statement here.
nit: add the name to the key so it's clear what it is
this method is not used anymore
We should probably use `cidSet.String()` instead of `cidSet.String()`
I think this is the only place where we should be using the `invalid` variable.
Use the new Ruby 1.9 hash syntax.
(style) line over 80 characters
We should add a `use_target_chanel` flag to the `--disable-brave` package.
We should revert this change.
(optional) should we check here that len(self._cron_schedule.split("") == 5) ?
@jona-sassenhagen this is the only place where we have the `clickView` in the `time.time.time` file. I think we should keep the `time.time` file here.
The `dictionary` variable is not used anywhere.
nit: "The resolution time for a promise is factored"
It's not clear to me why we need this change. It's not a problem, but it's not a problem because we have a `pages#show` page, which is not the case.
This was changed to `Intents.ACTION_NEW_TREATMENT.equals(action)` but I don't see why.
I think this is the only place where we need to add image_view_ to the image file.
This is not needed.
I think you can get the `wandCache.ByteByte` function directly here.
I think this is not the right place to put this method. It's not a huge deal, but it's probably worth it.
I think this should be moved to `el.parentNode.removeChild` instead of here.
This is the main change.
Can we remove this function?
Line is too long. [83/80]
I think we should use the same name as the last parameter to make it clear what it is used for.
I think this is a bit of a hack. I think it's better to just make the `error` a local variable and then call `this.storage.getLocalDatabase` directly.
This should be done in the `next` method.
I think this should be changed to `System.getProperty(String url, Properties mysqlConnectionProperties)`
I think we should check if the `SYSTEM_ROLES` is not `nil` here.
This is a bit confusing, why is this check necessary?
I think we should remove this `if` statement and add a `default` statement to the `index` section.
Is this a bug fix?
nit: use `std::lock_guard` here and below
Why removing the block object here?
The default value of `default_space_sum` is `('foo')` but the default value of `('foo')` is `('foo')` so this should be `DEFINE_int32(default_parts_num, 100, "foo')`
Is this still needed?
Just to confirm, this is not a problem, but not a tagMatchers anymore.
We should probably move this to `pkg/apis/duck/pubsub/knative/pubsub/v1alpha1`
I would move this to the `AdministratorDataFixture::ADMINISTRATOR`
What is the reason for this?
This should be set to `false` by default.
I'm not sure if this is the right place to do this. The current code is not correct, but it is not the case anymore.
This is a pretty big change, but I'm not sure it's a good idea to make it a constant.
Can you remove the `id` argument from the `RequestId`? It's not used anywhere else, and it's not used anywhere else.
I think this constant should be named something more descriptive, something like `write.parquet.bloom-filter-enabled.enabled`
is this a typo?
why did you change this?
This is a breaking change. The `ExecutableFlow` is not a `null` value.
I think we should have a test for this.
This is a bit weird, why not just have the `unstable` node node?
this is a bit weird, why not just use `item.traverse(lambda x: x)`?
I think this should be `if getattr(self.context, "forced_empty_list", False)`
I think we should be using the `err` here.
This change is not related to the PR.
Is this change necessary?
I think you should use the `npartitions` constant here.
shouldn't this be `StandardServiceContainer`?
This is a bit unrelated to the PR. I'm not sure if it's worth it to just catch `value.Key` and `value.Value` as a separate, but I'm not sure if it's worth it.
I think this is not needed. It's a private method.
This is a breaking change. It is not a good idea to add it to the list.
I think this should be done in the `set` method, not here.
This is a bit confusing, why do we need to check for the config?
This should be a typing.Dict[str, typing.Any]
Why not use `Array<import('.vnode')`?
This is a breaking change. It is not needed anymore.
I think we should use `list(reference.GetNumAtoms(onlyExplicit=True))` here.
I think this is not the right way to do this. It is not the case anymore.
This is a bit of a hack, but I think it's better to use a constant here.
This change is not needed.
@michaelkuhn Do you know why this change is needed?
Is this used anywhere?
This is a change in behavior, but I think it's better to keep it in the same PR.
We should probably add a bit more details here.
This is not the same as `for (uint i = 0; i < proc_num_simd_saved(); i++)`
why is this being removed?
I think this is not needed anymore.
This is the only change I'm not sure about. The `log.V` function is used to call `.Info` on the `err` object. I'm not sure if it's worth it to remove it.
This is a bug fix.
This is a change in behavior, but it seems like it should be moved to the `if !key.KID().Equal()` instead.
This is a change in behavior, but I think we should keep the old behavior.
Shouldn't it be `orcid.identifier`?
remove this file
I think this import is unused.
This should be `ContainerContentDescription`
This is a bit of a hack, but I think it's better to use a `SetEyeBufferSize` with a `mHbManager` instead of a `mType` value.
I think we should just make this `const Buffer = require('buffer')`
I think this is a leftover from debugging...
I think this should be `None` instead of `List of`
I think this should be `deleteRecursive`
Why is this needed?
can we do this in `server_url.to_json` instead of in `server_url.to_json`?
Can you add a `TODO` here to remove the extra newlines?
I think we should remove this line.
I think this should be `GET_ALL_SESSIONS.equals(command.getName()));`
Metrics/LineLength: Line is too long. [81/80]
I think this is not a good idea, but I think it's better to use `importrequest` in the test.
I think this should be `new StringMultiProperty("multiInt", "Multiple integer values")`
This should be `.receiveGetContainers( ...webContainers, ...ampContainers ] );`
Can't we just use `server_conn` directly?
I think this should be `field.required`
Hey @chirimoya What do you think about renaming `users.last_name` to `Jetsonian`?
nit: I would prefer to keep this as a separate sentence.
I think this is not needed.
I think this should be a warning, not a warning.
Can you add gitea copyright line to header (and keep gogs one next to it)?
This is a breaking change. I'd suggest to use the new default implementation in the constructor instead.
This is a very minor thing, but I think it's better to have a runtime type in the future.
Please remove the `toString` method and use the `getClass().getName()`.
This is a bit confusing, since we are now calling `runSILMandatoryOptPreDiffPasses` on the `sil_module` itself.
`teacher` is a field name, so you can use `teachers.teachers` instead of `p.teachers.teachers`
I think we should return 0 here.
This is the fix.
This is a bit confusing. Why are we using a Process state values here?
I don't think this is the right place for this. The `aws-sdk-s3` should be removed.
@bryevdv, I think this is the right place for 15000. I think it's better to have 15000 as the option of 15000.
I think this is a bit confusing, maybe `addons` is better?
This is a little confusing. Why are we doing this?
why not just `model.setPageSource(pages, rowGroupsStartRowPos)` ?
I think we should add a `timeout` to the `timeout` to make it clear that this is a number of seconds.
I think we should keep the original behavior here. We should not have a default implementation of `getDeclaredConstructor` in the constructor.
why not just `this.hot.countCols()`?
This is the fix.
Use the new Ruby 1.9 hash syntax.
This should be `libravatar`
Should we log something here?
I think it would be better to have a `logLevelUsage` helper that takes the `instanceLogLevelUsage` parameter and then use it in the `instance.js` file.
I think this is not needed anymore?
I think this is a bit confusing, maybe `IsManaged` or `IsUnmanaged`?
should we also check for "api_key" and "api_sig" ?
nit: I think this should be `keyMapping`
Style/RedundantSelf: Redundant self detected.
@mfojtik this is the fix.
Is this a valid fix for creating a resource and discussions?
I think we should add a `@BuildTimestamp` annotation to the application version
This is a breaking change. I think we should keep the old behavior and add a new one.
This should be `string` instead of `string`
I think this is a bug fix.
This is a bit of a hack, but I think it would be better if we could just pass the `type` as a parameter to the `boolean` instead of a boolean.
Shouldn't we also add these newbserver-0.kbfs?
I think it would be better to have a setTimerTimer method in the constructor and then call it in the constructor.
This file should be removed.
Why is this deleted?
This is a bit confusing, since the `.strip` is not a string, and it is not a string, so I think it's worth adding a string to the `.strip` file.
Use 2 (not 0) spaces for indenting an expression spanning multiple lines.
This import is unused.
Is this the only place where we have a `ResponseResponse`?
"Peer" -> "Peers".
I think we should move this to the `CS` package.
This is the only change that will break existing users.
(style) unnecessary whitespace before a quoted newline
@DanielVF why not use `convert_by` here?
The text.decode('mbcs') should be just a helper function.
This is a very minor thing, but I'm not sure it's worth it to remove it.
This is the only change that affects TF providers. I don't think we need to add it here.
nit: this is a bit ambiguous. Can you add `BackLiteral` as `BackLiteral`?
Do we need to do any validation here? I think we can just use `type_uri.replace('%2A', id_pattern)`
I think this is not needed.
why not `byte` here?
@pmDependenciesDirectory is the directory which contains RPM database. It is not required for images that do not contain RPM.
This is not a leftover from the previous PR.
Why is this removed?
This is a change in behavior, but I think it's better to keep it in sync with the `row.enabled` option.
Why is this removed?
I think this should be `28` instead of `28_notifications`
Why do we need this?
This is a bit of a hack, but I think it's better to check for `0` instead of `0` for `0`
Why is this necessary?
This is a breaking change.
This should be `private`.
I think this is a bit confusing. What about `server.Start()`?
nit: can we use `physical` instead of `id`?
Is there a reason for this change?
I think we should log the connection here, otherwise we will log it.
This is a bug fix.
I think this should be a OCI.
This is not correct. `if (req->res.content_length <= 100) == 0` is fine.
I think this test should be testing the right thing to do.
This is the only change that affects the version of `log.finest`
I'm not sure if this is the right place to put this. It seems like it should be a module-level constant.
I think we should remove this function.
It's not clear to me why we would want to do this automatically. It's a breaking change.
I think we should be able to remove this. We should only do this if `updatedFiles` is true.
This is the main change.
This is a bit confusing, as we have two `Chain.FieldPath` and `Chain.FieldPath` in the same package. Is this what we want?
why not ` limit > max_query_limit`?
Why is this needed?
This should be `Should accept two parameters: at the end of the line, otherwise the next line will be removed.
Shouldn't we use ` Base` here?
This is a change in behavior, but I think we should keep this as is.
I think this should be a `try/catch` block, since we don't do that in the `result` block.
This is a leftover from the previous PR.
I think this should be `JsonString` instead of `JsonString`
Can we use a `const` here?
Could you explain why this change is needed?
Redundant `self` detected.
I'm not sure if this is the right way to do this. I'm not sure if it is worth it.
This is not used anymore.
This is not needed.
This is the only change that fixes the issue.
This is the only change that will break existing tests.
`it_text` is a better name for this function.
I think we should be using the delete here instead of hardcoding the resources in project.
We should probably have a better way to do this.
I think we should keep the old behavior as it was before.
This is the only change that affects TF v2.
I think this should be an `after` rather than an `int`.
I think this is not the right place for this. The `sizeof(p.blobs)-1)` is used for the `maxHeaderSize`.
why remove this?
Why did you remove the `commandStartExternalEditing` here?
This should be `!=`
This is a bit weird, I would have expected the new behavior to be a bit more specific.
Rails/InverseOf: Specify an :inverse_of option.
This is a bit of a hack, but I think it would be better if we could just have a `string` and then have a `string` that would be the default.
Should we add a check here that the attribute is not specified?
I think this is the only one that's used in the code.
Is this a debug statement?
I think this should be `my_package1.as_string().startswith('from .', 'my_package1' instead of 'my_package1'`
This is the only change that affects TF providers.
why not just add a `json:"timeout,omitempty"` to the `json` field?
Why is this needed?
Rails/DynamicFindBy: Use find_equal instead of dynamic find_equal.
I think it would be better to have an `root` here instead of an `Event` statement.
This is not a valid URL, right?
why change this?
I think we should change the name of the object.
I think this should be `[NotNullWhen(true)]`.
This is not needed anymore.
I think we should be able to use `top` here instead of `mb_id`
Why is this removed?
This is the fix.
Is this a bug fix? It seems like there is a bug in backend->impl.c. The backend is not a backend object.
Is this a breaking change?
Why did you remove the `final`?
I think this should be called `source.iceberg.reader.fetch-batch-size`
@michaelkuhn Do you have any idea why we need to do this?
This is not used anymore.
I think this should be `internal`
nit: `catchpointWriting` is a bit ambiguous, maybe `catchpointWriting`?
what is the purpose of this change?
It looks like the `OptimizerHook` class has been removed.
I don't think we should be changing this.
Please add a trailing comma.
`trustedIssuer` is a bit ambiguous, can we use `Predicate` here?
Use `begin()` instead of `begin()`, since it's the type.
why remove this?
I think we should remove this file.
It's not clear to me why this is needed.
I think we should also rename these to `ReplicaReplica` to make it clearer that they're not used in the `common` package.
This should probably be `--rpc-allow-unprotected-txs`
Why do you need this change?
This is a bug fix.
This should be a `string PatternKeyFile`
I think it would be better to keep the function as it was before, and pass the function as parameter to the function.
I think this is a bug fix.
Why is this not a GoneHttpException?
I think this is the only place where we need to add the `provider.authProvider` param.
Shouldn't this be Math.random() instead of Math.random()?
This is the fix.
I think we can remove this method entirely.
I think this can be removed now, since we don't have to call `emplace` anywhere in the PR.
You can remove the overridden by make the system info
I think this should be `health_check` instead of `health_check`
Please add a `ILogger` parameter to the `ILogEventSink` constructor and make it `ICoreLogger`.
why is this a pointer?
Line is too long. [81/80]
I think this is not correct. The test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing
why is this `string`?
I think we need to keep the public field here.
@deads2k this is the fix for the tests.
This is a bit weird, why do we need to make this change?
The `List` is not used in this function.
Is this still needed?
This is a change in behavior, but I think it is better to have a setKeepSorted method in the constructor.
I think we should be able to remove the `App` field from the `SiteStatus` package. It's not a problem, but it's a problem.
Why are we removing these?
Is this the best place to put this in the `scfg                `?
@dvoytenko I'm not sure if this is the right way to go. I think it's better to have a test for this.
I think this should be `self.amount = Decimal('0.0')`
This should be `if (source.containsKey(cseKey)) {`
should we add `update` to `etcd-snapshot`?
This is a bit of a hack, but I think we should be able to remove the `unfinished` prefix from the `ExecutableFlow` interface.
This is the only change that will break existing users.
I think this should be `synchronized`
We should add a docstring for this function.
This is a duplicate of the line above.
Can we use `*uint32` here?
why is this changed?
I think this should be a `TODO` instead of a `TODO` (and the next line will be removed).
I'm not sure if this is the right place to put this. It is used by other packages, and it is not used by other packages.
Why is this separate from the package?
This is not the right way to do this. The only thing I'm not sure about is that we should do this is that we should be using the `getSession` method.
why not use `logging.Base` directly?
Shouldn't this be `i < src_len - 2`?
@smarterclayton do we need to make this change?
@jridgewell I'm not sure if this is the right fix. I think we should just use `-1` instead.
I think it's better to make it public instead of private.
Please sort the `IPAddresses` into a `IPIP` field.
Should this be named `ReportDeploymentCompleted`?
I think this is a bit confusing, since `tparts` is a `dict`, not a `tparts[1]`.
this should be done in the same PR as the other places where the startMs is being used.
I think this should be `f[conn]["alpn_proto_negotiated"] = \`
Don't we need to add the new option to the list?
I think this should be `skipFlushOnClose`, since we don't have to check for routes and gateways.
Why not just call it `wf-workflow-task-timeout`?
Nit: Can we call this `spyAll` instead?
I think we should keep these constants as well.
Is it possible to get the `nbytes` from the config?
This is now an API change, so it should be reverted.
nit: I think this is a leftover from our style guide.
I think this is a bit ambiguous. I would just say that if we do this, we should also check if the certificate durations is not specified.
This is not needed.
I think we should also add this to the other APIs.
should we make it clear that it is not used in the test only?
I think we should make this `DistributedContextEntry`
Have you considered using `-get` to preserve the existing `be` attribute?
This is a bit of a hack, but I think it's better to use a `find_in_chain` function instead of a `find_in_chain` function.
This is not a change in behavior, but I think it's better to have a static import of `Collectors`.
I think this import is unused.
I think we should just add this to the `BuildState` interface.
Why not just default to 10?
I think this is a change in behavior, but I think it's better to move the check to a new `else` block.
I think we should add `:classifications` to `add_index` as it will be empty.
This test is testing the wrong place for this.
nit: remove the `/json` part.
This is a bit of a hack, but I think it's better to use `np.utils.parse_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time_time
I think we should keep this here, since we are not using it anywhere else in the codebase.
should we keep the old value as well?
Line is too long. [87/80]
I think you can just do `for (auto& usm_mem : m_indirectKernelMem)`.
I think we should be doing this check in `src/server/client.go`
This is a bit of an unrelated change, but I think it's better to have a method `settings_STATE_transLeader` that returns the src object.
What is the reason for this change?
This should be using using statements.
you can also set `routes.WorkloadIPs` to `None` in the `if`
I think it would be better to have a `self.connections = Connections(self.numberOfCells())` here, and then use `self.connections = Connections(maxSynapsesPerSegment, 255)`
shouldn't this be `id`?
Why not just call `auto_fire = *af;`?
There are a lot of other places where this is being used.
Is it possible to get the result of the headaches instead of the headaches?
I think this is not needed anymore.
This is a breaking change. I think we should keep the `tree.getType` as a field and then use `tree.getArguments().get(0)` in the `getType` method.
Why did you change this?
I think this should be `clear_hashed_changesets`
Is this interface still required?
I don't think we need to add this.
Is this change necessary?
I think we should test both with the new and the new test_diary_comment_count
I think we should be using the `BuilderForTemplateObject` here instead of the `m.Runtask.Spec.Task` function.
I think you can remove the whole `if` statement here.
The exception message should be logged as `null` instead of `null`
This is a bit of a hack, but I'm not sure if it's worth it to make it more explicit to just say `errors == nil`
I think this is not right. We should merge the Spark columns into one.
I think we should move this import to the top of the file.
nit: I think this is a bit ambiguous to read.
I think this is a bit of a hack. I would prefer to have a `replace` method that returns the value of the `null` value.
Please remove this file.
this should be `true`
The `extend` is not necessary here, since the path is a list.
This should be in the wrong order.
What about `numba.ops_on_diff_frames` or `numba.ops_on_diff_frames`?
I think this should be a warning in the `new`, not the `applyPreflightCorsRequest`.
this should be error.
Should we also add these to the `deprecated_fields`?
This should be a warning.
I think this is a bug fix. I think it should be a bug fix.
I think this should be `nil` instead of `err` since it's an error.
Why is this not `Import`?
can you make sure that the exit_code from _error below also works as expected?
I think this should be `example_group_block`.
useCircuitBreakers should be set to 100
What is the purpose of this change?
(style) line over 80 characters
This is the only change that will break existing code. The `fmt` is used to create a new `Pulumi state` and `Pulumi state` instances.
I think you can just use `-`
I think this is the wrong place for this.
Why remove this?
It's not clear to me why this is returning a member of `id` instead of `MemberOf`.
I think this should be a mock. We should test that the result is not a feature.
`s/s/`
I think this is a bit confusing, since `Filters` is used in `arpc.Filters` and `Filters` is used in `arpc.Filters`
This is not the right way to do this. The `pants.util.encode` is a `bytes`. The `unicode_escape` is a `bytes`.
I think we should keep the old one as it was.
I think we should keep this as a default.
Can you check if `data.GetInitiator()` is not empty?
This is not a good example of how ` listenbrainz.db.user` can be used.
What is the default value for this argument?
I think this is the only change that will break the build.
I think this should be `self.ext.split("/")`
I think this should be `fromRoute`.
This is a breaking change.
Why is this one separate from the other?
I think this is the only change that affects TF providers.
Should we check that `isPathInFields` is not `nil`?
I think this should be `statements[]` instead of `statements[]Statement`
Can we add a `goto err` to the docs that this is used for the new table?
I think it's better to put these settings in the `Log` package.
I think this should be `final`
I think this is a bit confusing. What about `Sleep`?
Should this be `true`?
This should be in a `with` statement.
This is a very good change. It seems that we don't need to use json here, as we are already using json.dumps in the future.
can you add a `TODO` to remove this line?
Please use `RuleRule` instead of `Rule`, to avoid the need for the extra `final`
This should be `useless-param-doc`
I think we should keep this string as it is.
This is the only change that affects TF v2.
This is a bit of a hack, but I think it's better to check for `surface && !view` instead of just `join_dict`
This is not needed. `getExtension` returns a `null` object, so you can use `getExtension` instead.
I think this is the only change that affects TF TF.
This is not necessary. It is not used anywhere.
Do we need to make this function configurable?
I think this should be `fail_test(early_assertion)`
I think this should be done in the `ValidateFunc` method, since it is only used in the `ValidateFunc` method.
I think this should be `CONFIG_SYNC_DIRECTORY`
@franckc @cramforce do we need to change this to 20?
Please don't change the copyright year in this file.
This is a bit of a hack, but I think it would be better to have a `select` method that returns a `selection_specs` and then call `select` on it.
Can you add an example here that `a_number` is not in the `a_number` array?
Should we use `print(v)` here?
Can you add a note that this is not a problem with the rest of the code?
Why is this needed?
Why do we need to set the empty string?
I think this should be `reorder()`
This is a bit of a hack, but I think it's better to have it in the `tabBar` package.
@benzonico I think this is a good idea to add a `/` prefix to the end of the list.
I think this can be removed.
Why not `StringSliceEqual`?
This is not needed.
Metrics/LineLength: Line is too long. [123/120]
What do you think about using `original_twitter_digits_path` here instead of `load original_twitter_digits_path`?
I think this is not the right place for this.
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
I think we should just make this a constant.
What's the point of this change?
I think this should be `args.length > 0`.
I think this is a leftover from the previous PR.
`ContentContentIntent` is a more appropriate name for this variable.
This is not the right way to do this. The only thing I'm not sure about is that we should do this is that we should be using the `getSession` method.
I think we should use the same value for both the vendored and vendored fields.
I think this should be `Bus uint8`
I think this should be `type 'Pointer'`
Why is this needed?
This is not needed.
I think we should be using `indices` here instead of `newCIStr`
I think it would be better to check for `isinstance(v, (list, np.ndarray))` here, rather than doing it in `source.data`
I'm not sure if this is the right place to put this. I think it's better to put this on the previous line.
this is a little strange, why do we need to do it in `BetterErrors`?
@atm-quentin can you check if the `api_controllers.xml` is not defined here?
This should be `/*`
Can you please add a `;` statement here?
Please annotate `@Nullable`.
This is a breaking change.
Why change the number of parameters?
I think this is a bug fix.
It's not necessary to test the output path here, but it seems like we're using the environment variable in the test.
Please use `StringUtils.isBlank()` instead.
I think this is a good change to make it more clear that this is a `ValidateSignature` function.
I think this should be removed.
`filterExpressions` is not a snapshot summary, so this should be moved to `filterExpressions`.
I think this should be `xattr: []byte{2, 0, 0, 8, 0, 0, 254, 255, 0, 0}`
Why is this being removed?
I think you can just do `value += 2; // Tags and metrics;`
This should be `FastSyncCatchUpHeightDelta`
I think this is not needed. It's a private method.
I think this should be set only when num_simd_saved is set to num; otherwise it will be set to num when num_simd_saved is set to num;
can you explain why this change is needed?
This is a breaking change.
I think we should be able to use the `--verbose` flag here.
I think it's better to use `iiii` here, since it's a bit more strict.
This change is not needed.
This is not needed anymore.
This should be splitTableRegion, not splitTableRegion.
I think we should move this to `googlesitekit`
I think we should log the debug level here.
I think this method can be removed now since it's now unused.
Please remove the empty line
I don't think this is needed.
Can you add gitea copyright line to header (and keep gogs one next to it)?
@bryevdv, I think this is the only change that affects the test.
I think the word "dilation_h" should be "w".
Can you please add a `TODO` here?
I think this is not the right place for this. We should be using the key.
What is the purpose of this?
Is this a bug fix?
Is there a reason we are not using `WaitForStart()` here?
I think we should log level to the user.
I'm not sure if this is the right way to do this. I'm not sure if we should just delete the `options.delete(:text)` call.
why not use `list()` here?
@deads2k i'm not sure if this is the right place to put this. This is a breaking change.
I think this is a bit confusing. What is the difference between matcher and matcher?
This was a bug, we should not remove it.
I think we should add the plugin name to the interface as well.
Is this constant used anywhere?
Lint/AmbiguousBlockAssociation: Parenthesize the param [call-zA-Z]
I think this is a leftover from the CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI CI
This should be done in `setDismissText`
I think we should remove the `SetSpan` call here.
I think this should be removed.
Is this a breaking change?
I think you can remove this line.
This change is not related to this PR, but it seems to me that we should keep the `dotnet/#additional-permissions-for-iis` flag for this change.
This is not the best place to put this in the `NodeSpan` method.
You can remove the `self.obj.modified_jmx` from the `remove` method altogether.
I think this should be done in a separate PR, but I think it would be better to keep the original behavior as it was before.
Can we keep this as `@access`?
I think this is the only change that affects TF TF.
I think this test is still testing the right thing.
This file was removed from this PR.
I think we should remove this environment now.
I think this should be done in a separate PR.
I think it would be better to have a `require` statement here to avoid the `func` loop.
This is not the right place for this. It will be used in the `scripts` tag, but the `privkey2electrum` tag.
Why is this needed?
This interface is not needed.
@executable_path = '' ?
should we add a log to the initial RTT?
I think this import is unused.
nit: I think this is a bit confusing to read... maybe `get_global_operations`?
I think this should be `v1.ForkRepo`
Why is this necessary?
I think this is a bug fix.
Should we call this `HeadEvents()` instead?
@jridgewell Is this the correct way to fix this? I think it would be better to have a `assertItemsEqual` that does the partition ids.
Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.
I think we should be able to remove this and just use the `management.azure.com` property.
Should we make this a `Pool`?
Can we keep this and use the same constant for the new version?
You should use `storage_strict_json` here.
This is a breaking change.
This is a breaking change.
is this a typo?
Do we need to make it public?
This is a breaking change.
I think we should keep the lowerCamelApiTypeName as a member variable.
Why is this change necessary?
This is a bit of a hack, but I think it's better to use a `-1r` option here.
I think this should be `Libuv` instead of `C:\`)
Should this be 20?
Maybe we should add some docstring here?
I don't think we should use this.
I think this should be `Config.BoolParameter(default=False)`
@smarterclayton do we need to handle this case?
This is not used anywhere.
why not just default to 10?
Please use `knative-gcp` instead of `v1beta1`
I think this is a bit of a hack, but I think it would be better if we could just set the default to `true` and set the default to `false` in the `if (method.IsNonNullableReturnType)` instead of just the default value.
Why is this needed?
I think this is a good candidate for a reason. If the reason is not to have a separate function, it might be better to have a separate function for this.
I think we should add an assertion to the interface that the user has permission to manage high priority flows.
`this.beforeHandshake` should be nullable
I think this should be `false` to match the new behavior.
This should be `fmt.Fprintf(&buf, "\t%s %q\n", path)`
This seems like a reasonable change to me. What about `composite_root`?
This is not the right place to put this.
Add `@Deprecated` annotation
Is this needed?
I think this should be `init` instead of `vn.Path`
This is a change in behavior, but I think it's better to revert this change.
Can you remove the 95 from the "circuitBreaker/cpuCircuitBreakerEnabled" prefix?
Why do we need to check for singleBcc cast?
I'm not sure this is the right way to go. The `bool nat_lvl1_drop` is used to set `bool nat_lvl1_drop` to 0. The `bool` is used to set `bool nat_lvl1_drop` to `true` in the `build_nat` function.
This is the only change that affects TF providers.
Remove empty line.
This is not used.
I think we should be using `Root()` instead of `Roots()` because it's a `Root()` method.
I'm not sure if it is a good idea to add the fallback to the cache here.
I think this is a good candidate for a more general Exception than `Errorf`.
How about `t *.log` instead?
Why remove this test?
This is a breaking change. The old behavior of this PR is to fix the issue.
@vpodzime are you OK with this change?
This class is not used.
This is a bug fix.
I think this was accidentally removed.
Do you need this line?
I think this is not needed anymore
I think this should be `elif isinstance(wavelength, int):`
I think this is a bug fix.
This is a bit odd, but I think we should be using the `gcp` package here.
Should this be `chainID`?
@mfojtik why is this needed?
If this is just used in the file, it should be removed.
This is a change in behavior, but I think it's better to be explicit here.
I think this is not the best place to put this. I'm not sure if it is worth it.
I'm not sure if this is the right fix. If the answer is "Spark consumer" is the right fix.
This import is unused.
I think we should move this to `applyToWindow`
This is a bit confusing, why is this being used?
This is not needed.
I think this should be removed as it's not used anywhere.
Why change the primary node to a different node?
Can we add a check for `gulp dist --help` to ensure that the user is not aware of that they are not using `gulp dist --help`?
This is a bit of a nit, but I think it's better to move this to the `client` package.
This is a test that fails on the test.
Shouldn't we also add the `stop()` method to the `stop()` method?
I think we should keep the `BBformatConfig` as it was before.
Why not just use `unlockContainer`?
This is not a valid interface.
I think this should be configurable.
This is the only change that affects the API.
This is the only change that affects TF providers.
Can you explain why this change is needed?
I think this is a bit confusing, since it's a very large number of lines of code and it's a bit confusing to have a method that returns a boolean.
I'm not sure if this is the right place to put this check. I think it would be better to move this check to `removeEntry` and then check if it's needed.
I think this is not the right test.
I think this should be `if el is True:`
This is a bit weird, why not just do `m_errorMonitor->VerifyFound()`, and then just do `m_errorMonitor->VerifyFound()`.
I think this is not needed.
Please avoid wildcard imports.
This import is unused.
I think we should just call `StartTimingWrite` here.
This should be `FormPropsSet`.
I think this import is not needed.
I think this should be done in the `wlr_log()` method, since it's not used anywhere else.
why remove this?
This is a good change, but it's not related to this PR, but it's not related to this PR, so I'm not sure if this is the best way to fix it.
This is a breaking change.
I think you can remove the `*` here.
I think this should be `tg` instead of `API`
Do we need to do something if we can do `slave.path_from_code_set_id(code_set_id)`?
why is this removed?
How about we create a constant for this?
I think this should be `isset` instead of `fields`
This is not needed.
What's the reason for this change?
Is this the only place where the `Handler` is used?
This is not needed.
nit: I think the `!validResult.ErrorMessage` should be `Optional[string]`.
I think we should remove this. We can remove the trailing comma.
I'm not sure about this change. The `val_i` is a `4` for a `4` and `val_i` is a `4`.
this is not right. `clmin` is a list of `context.argmin`
This is a good change, but I think we should be using `ws.Set()` instead of `nil` in this PR.
I think this should be `data-'`
It's not clear to me why this is here. The first part of the option is " #{quiet_o", but it's not "a number of lines of text_o".
Please use the constants for these constants.
I think this is a bit confusing, since `self.version_id` is a `list`.
This is the only change that affects TF providers.
this is not needed anymore
I think this should be `if self.name == 'index' if self.name != 'level_0'`
This should be `hiveScanMode = CmpCommon::getDefaultLong(HIVE_SCAN_SPECIAL_MODE);`
Should this be `item`?
I would move this import to the top of the file.
I think this should be `objreg.self(objreg.focused_window())`
This is a leftover from the previous commit.
I think we should remove the config here.
I think we should use the `try` here instead of `finally` because it's not a boolean
I think this should be `.toAddress().replace('bitcoincash:', '');`
This is a bit weird, why do we need to check for the user's configuration?
I think we should remove this line.
I think this is not needed.
Maybe `getLiteral()` can be `Date`?
Why are we removing the `NoError` call?
Why is this removed?
this test is failing because of the test case, right?
This is not needed.
I think this should be `rContext.logger.Warningf` instead of `rContext.logger.Warningf`
why is this needed?
I'm not sure if this is the right way to go. I think it would be better to have a test for this.
This should be a constant.
It's not clear to me why we need this here. We're not using it anywhere else in the code, but I'm not sure if we should be using it in the code.
This is a bit of a hack, but I think it would be better to use `update_policy` here instead of `incoming` as the default value.
You can remove the `_applicationDelegate` variable now that you're using it here.
This is a breaking change.
This is a bit of a hack, but I think it's better to be explicit here.
this is a change in behavior, we should not have a default value in the `normalizedFunctionString` package
Please remove this line
I think you can remove `import noqa: F401`.
I think this should be a separate commit
This is a bit of a hack, but I think it's better to use NULL filename here.
I think we should keep the `target-microservice` prefix as the prefix for the other files.
This test was failing because of the issue with the new tests.
I think this is not needed.
I think this is a good candidate for a user to use `sys.path.append`
This is a little weird. Why is the `analytics` not `Analytics`?
I think we should keep the validation sets and make sure it's not passed as a validation set.
This is a breaking change. Please revert.
`+` should be passed through`
I think this should be a `getAlgorithm` function.
I think this is a good place to put this interface.
I think this should be `strictPopulate=false` since we don't care about the default value of `strictPopulate`
The test is failing because of this test case, but I don't see any test cases where this test is being made.
This should be a class constant.
Why is this needed?
Can we use `Compilation<ManifestReader>`. It is a bit confusing to read.
Can you add a docstring here?
Please remove this line.
Is this a bug fix?
Should this be a `String`?
is this change intended?
Can we use `String.getVersionIndexFileImportName()` here?
I think we should keep this here. We can fix it in a followup PR.
I think we can use `finders.by_root` here
I think this should be done in the `serviceEventHooks` block, since it's not a big deal.
I'm not sure if this is the right approach. The old code is better.
Why is this change needed?
@cheo2y9w was the issue that was not found in the old code. I think this was a bug.
This is a good idea. We should add a TODO to remove this.
I think this is a bug fix.
I think we should use `valuesFlag` here.
This is a bit of a hack, but I think it would be better to just do `if (this.Task.getSend()) { return false; }` instead of this.
This should be `warnings.filterwarnings("ignore", message="numpy.dtype size changed")`
I think we can use the `getResourceName` method here.
I think this is not the right place for this.
Is this change related to the PR?
This is a bit weird, why do you need to call `DesktopSwitch::setDesktop`?
This is not the same as `root` above.
This is not needed.
I'm not sure if we want to do this now, but I'm not sure if we want to do this in the past. I'm not sure if we want to do this in the past, but I'm not sure if we want to do it in the past.
I think this should be `:raises: true`
Line 191 is too long. [86/80]
This is a bit confusing, since `false` is a `link` anyway, and `hyperlink` is a bit confusing to me. Maybe ` OP_color`?
This is the new error message.
We should not need to connect to peer peer.
`this is a compression of oldParentVNode._children`
Please add a license header like other files.
I think this is a debug level, but I think it's better to have it in the `else` block
This class is unused.
Do we need to expose this as a public API?
Maybe we should set it to False in `setUp`?
nit: I think we should name this `sendCommandForDownloadChromeHeadLess`
This is not needed.
I would use the shorthand since it is used in the `@var`
we should add a new library to the changelog
This file is not used anymore.
this is not needed anymore
I think it would be better to have a `mdcache.Delete()` method that returns a new version of the cache.
This is not the right place to check. The `FileHelper.CombinePath` should be `FileHelper.CombinePath`
This is a change in behavior, but I think it's better to have a config here.
This should be `let wantedTime = object.seekTime * 1000;`
Is this a string that we want to trigger?
I think this should be `/vm/Checkpoint/`
Please use `TimeEmptySubject.firstTimeEmptySubject` instead.
I think we should add `this.element.deleteBlobs(fileIDs).then(() => file.id)`.
Can we use `var filePath = loadingStatus.Width - SystemInformation.VerticalScrollBarWidth` instead?
This is a bug fix.
This is the only place where we're using this. I'm not sure if we should be using it in the future.
Prefer single-quoted strings when you don't need string interpolation or special symbols.
why is this changing?
Can you use `pkg/util/runtime` instead of `pkg/labels`?
This file is not needed anymore.
This is a bit of a hack, but I think it would be better to use `Object.map(item, index)` instead of `Object.keys`
I'm not sure if this is the right fix.
I think this should be `public ContentDialogPlacement Placement { get; set; }`
I think we should move this to the `config account limits` class.
I think this is the wrong place for this.
Have you considered using `-get` to preserve the existing `be` attribute?
This is a bit of a hack, but I think it's better to use the `global_index_range_back` function instead of the `emplace_back` function.
This should be done in `test_unittest.py`
@DaanHoogland @DaanHoogland @DaanHoogland @DaanHoogland @DaanHoogland @DaanHoogland @DaanHoogland @DaanHoogland @DaanHoogland @DaanHoogland @DaanHoogland @DaanHoogland @DaanHoogland @smarterclayton do you have any ideas on how to do this?
I think this is a bug, if we don't want to check for null here, we should check for null here.
Just curious, why the 15 is needed?
I think we can remove this TODO now.
Why is this needed?
I think you can remove the `.rel{}` part
you can use `allow_one` here
This is not used.
This method is not used anymore.
I think we should be able to remove the `conntrackTimeouts` and `ScanEntry` methods.
please use `cls.isNotEmpty`
Can you add a docstring explaining what this is for?
I think this should be done in the `getExtendedIdentify` method, since it's a public method.
shouldn't this be `if (strict_types=1)` ?
We should probably add this to the `volumeV1alpha1SpecificRequest` below.
We should probably add a note that this will be a warning in the future.
I think we should have a unit test for this.
I think this is still not needed.
Use a comma, we can use tabs instead of spaces.
is this the only place where we call this method?
I don't think this is the correct solution. I think we should be using `NoIID` instead.
The condition should be `- 1` here.
Why we need to use BOOLEAN here?
This should be `getParentSvg()`
Does this need to be added to the `struct` list?
Use the new Ruby 1.9 hash syntax.
@matt-gardner Is this the right way to get the name? I'm not sure if it's worth it.
why not put this on the previous line?
you can use `name.lower()` instead of `name`
This test is not needed.
`random()` is not needed.
Is this a typo?
Can you add a space after the `if`?
I think this is the only change that affects the `no identity issued` call.
I think we should add a `func (a *WebAPI) ListEvents(ctx context.Context, req *webservice.ListEventsResponse, error)` here.
Should we also check for `4.0.1 community`?
I think this is a leftover from the PR.
I think this should be a warning, not a warning.
This is a bit confusing, why not just have a `requestTimeout` var?
This is a bit of a hack, but I think it's better to just check if `shiftAmountInt > 0`
I'm not sure why this is necessary. I don't think we should be using this anywhere else.
I think this should be `bigquery`
Redundant `return` detected.
This should be `Regex.Escape` instead of `Compiled`
Use `std::cout` to avoid the need for the `<<`
@michaelkuhn Do you know why this is needed?
This is a breaking change.
@alalazo Is this really needed?
This is not needed.
I think we should use `constructor.getDerivedStateFromProps` instead of `undefined`
I think this is a bit of a hack, but I think it's worth adding a `Property` to the `Transform` field.
It's not clear to me why this is necessary.
Line is too long. [89/80]
I think you can just remove the `TracerProvider` here.
This is a change in behavior, but it seems like it should be moved to `javascripts.models.js`?
Shouldn't this be `iframes`?
Please remove this function.
Why is this necessary?
I think this is a bit of a hack. We should probably just make the `if` condition a bit more specific and have the logic be a bit more general and have the logic be a bit more general and have the logic be a bit more general.
This was removed because it was already removed in the PR description.
remove empty line
Can you add a comma after `paych` so that it is automatically generated by the `paych` API?
Can we add a TODO here to catch this exception too?
This is a breaking change. It is not needed anymore.
I think this is not the right fix.
Why do we need to check both conditions?
I think this should be `public static void clear()`
I think we should be consistent and use `internal` as the interface.
why is this changed?
could use `debug` to create a temporary variable for this.
Why is this needed?
`replaceNode` is not a `false` value.
Nit: I would prefer to keep this assert, but I think it's more clear what the expected behavior is.
Does this need to be a pointer?
This is a bit confusing, since `d.m` is `nil` and `nil` is `nil`.
nit: this is a leftover from our PR
I think we should remove the `AssembleStats` parameter from the function and call `EnableProcessBlockStats` here.
why is this removed?
This is a bit weird, why is this needed?
Please remove the default as they are not used anymore.
Why is this needed?
I think this is a breaking change. The `BestHeaderHeader` is already in `cli.go` and it is not needed.
Please add a `TODO` to remove this new class.
Please add `ColorColorBlue` to the function `translatetranslate`
I think we should keep this here, as we are not using it anywhere else in the code.
Should we use `Array.print_methods` here instead?
This is a no-op, right?
@adamjstewart Is this a good idea to set the `APP_DOMAIN` attribute to true?
I think this is a leftover from the previous PR.
Why remove this?
why is this no longer needed?
We should use `projectUtil.select` here instead of `select`.
We should add a `.` at the end of the sentence.
In the next line, it will be `if (newAccount == null) {`
This is a change in behavior, but I think it's better to use `log.addAll` instead of `log.addAll`
why do we need to pass the other values?
I think this is a good change. I think it's better to have a `*` statement in the `*` statement.
This is a bit confusing, why do we need to do this?
Not sure if this change is correct.
I think this function could be moved to `config.go` since it's only used in `pkg/api/server/server.go`
This will be a breaking change, but I think it's better to move it to `buildEnvStored`?
Why removing the receiver parameter from the function?
I think we can remove this.
I think this is wrong. The payloadGas check should be in `MAX_content.go` and the `MAX_content.go` check should be in `MAX_content.go`
I think we should be able to get rid of these too.
I think we should be able to use `typeWidth` here, since we don't use `Optional` in the `typeWidth` interface.
I think we should be able to remove the `3` from the `init()` function.
Why is this removed?
I think this import is unused.
Should we add a `default` here?
I think we should just use `go fmt` here.
I think this is a bit confusing, since it's a `-` in the `llvm_version` package.
This is a breaking change. The `Swarm` is not used anymore.
Is this error returned by algod.java?
I'm not sure if this is the right place to put this. I'm not sure if it's the right place to put this.
Can we use `HelixWatch` here instead?
I think we should add a `KS              ` field to the `KeyStore` field in the `KS` package.
why change this?
This change is not correct. `cert-manager` is a string.
Why did you change this?
I think we can remove the `PostAdviceReactive` field from the `PostAdvice` class.
@dvoytenko I'm not sure if this is the right place to put this. The log entry might be empty.
I think we should also update the `ldap3` and `ldap3.2.1` to be consistent with the other packages.
This test was not working before.
Please use `JSON.comparing` instead of `class_exists`.
This is not a good idea, but I think it's better to have a default implementation of `DataType` and then `DataTypeCatalog` with `DataType other`.
Should this be `current_backend`?
Do we want to make this configurable?
This is a change in behavior, but I think it would be better to use a `ResourceReference` here instead of a `List`.
Style/StringLiterals: Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
This change is not necessary.
I think we should remove this, it's not used anywhere
why did you remove this?
This is a breaking change. It is not needed anymore.
I think this is a bit of a hack. I think it would be better to just do `v := values.New(t.KeyValues[j]) == semantic.Invalid` and then just do `v = values.New(t.KeyValues[j])`.
shouldn't this be `//`?
nit: I think we can move this to `serviceAccountTokenCreator`
I think this import is unused.
This is a breaking change. I think we should keep it as it was.
Is there a reason why we don't just use `goimports` here?
I think this will break the `Id` setting of `Id` to be in the state of the `current_user`?
I think this is a bug fix.
remove empty line
I think we should add a `getPost` method to `getPost` and add a `getPost` method to `getPost` and call it `getPost` instead.
This is a bit weird, why do we need to check for `nil` here?
Line is too long. [87/80]
We should be able to remove this from the `dcontext` package.
This is a bit confusing. How about `Get`?
Why not `index.fromhex()`?
We should probably have a unit test for this, but I'm not sure if it makes sense to have a test for it.
Why is this needed?
I think this should be `Memoed.prototype.isReactComponent = c.name` instead of `isReactComponent`
I think this is not needed.
this is a very old version of oldParentVNode?
Line is too long. [87/80]
This is a bit confusing. Why not just call `Mvx.Resolve<IMvxChildViewModelCache>().Cache(((MvxViewModelInstanceRequest)request).ViewModelInstance)`?
Should we log the failure here?
I think we should use `goimports` here.
remove empty line
I think this test is not needed.
This is the only place where we need to set the existing one.
This is the only change that will break existing release.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
This is a bit odd, maybe we should just remove it?
Why remove this?
The `pending_confirmation_height` is already defined here.
This is not needed anymore.
The `allCategoryButton` is a `Control` object, so I think it should be a `allCategoryButton` object.
This is a bug fix.
nit: can you use `std::string_list()` here?
I think we should be able to use the `specificspecific` helper here.
I don't think we need to add `Network` to the `Public` table.
This is not needed.
Why not `actions`?
I think this should be `c._hydrating === true` instead of `c._pendingSuspensionCount`
I think this is not the right fix. The code is not doing anything useful if the locale is not None.
why do you need to change this?
This should be a separate PR.
This is a little weird. I would just call `c.RevisionOn` here.
I think this is not needed anymore?
I think this is not a function, it should be a function.
This is a bit of a hack, but I think we should just use `nonce` instead of `account?` to avoid the need for the `nonce` argument.
@danrot @dantleech is this a BC break ?
Why do we need this?
I think it would be better to just say `doesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoesdoes
Can you explain why this change is needed?
I think we should use `c != '>'` here.
I think this should be `--blacklist` or `--none`.
I think you can use `logger.info("Shutting down executor...", host, port), ex);`
I think we should just use `_                           ` here.
I think we should be able to remove this and use `super().__init__(backbone, neck, bbox_head, train_cfg, pretrained)` in the `_internal` module.
I think we should be using `--target` here instead of `+config.Target.Triple`
Can we use `AuditLog` here instead of `AuditRPCWithTypesStatus`?
Should this be `var BatchKey = batchKey`?
I think this is a bit confusing, since it's a `isFocusable` object.
I think this is a good change. The `if` statement above should be removed.
This is a bit of a hack, but I think it's better to use `.c_str()` instead of `.c_str()`
I think we should be using `felix_path` here.
This is a bit of a hack, but I think it would be better to have a method `wake_up` that returns a boolean.
I think this is not the right place for this method.
I think we should move this to the `interceptor` interface.
I think this should be a static import.
This should be a call to `memset_s`
This is not the correct way to fix this. The `if` statement is not needed.
I think this is not the right place for this. The `NumExtraElements` should be a `List`.
I think this should be moved to the other PR.
I think this should be `2.2.0.dev0`
Line is too long. [85/80]
Please revert this change.
I think this should be `_get_presentationType`
Please rename to `output_handler_plist_to_stdout`
I think this should be `after_update :reconcile_published, if: Proc.new { |template| template.published? && template.version > 0 }`
Should this be `PodReference`?
Please add the explicit name here.
Please, change the description to `Brave`
I think this should be `HOUSE_OWNED_BY_ACCOUNT`
I think this is not needed.
`target_decoded_bbox` is not used in this file.
Should we make this internal?
I think this is a bit confusing, maybe it's worth having one input for the exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact exact
I think we should use the ` setDefaultSettings` here.
I think this test is not needed anymore.
I think this should be `C:\2` instead of `C:\2`
This is the only change that affects TF TF.
Do we need to check if exe and err is nil?
I think we should keep this around as well.
Why did you change it to `t`?
I think this is not the right place for this. The `else` can be removed.
This class is not used.
I think this should be `Timeaky.Time`
This is not needed.
This is not a big deal, but I think it's worth adding a new one for the `s3.ruby.s3_add_default_sse_encryption` to be able to remove the `s3.ruby.s3_add_default_sse_encryption` and `s3.ruby.s3_add_default_sse_encryption` one.
Can you please add a `TODO` to remove the `if`?
Can we just do `transaction.getGasLimit()` instead of the validation against the private state?
This should be a warning.
`self.add_message` should be `self.add_message(as_string())`
This is a bit of a hack, but I'm not sure if it's worth it.
This is not needed.
shouldn't this be `protected Map<String, Integer> eligibleTemplatesForAutoUpdate = null;` ?
@pgavlin, do you know why we need to change this?
Please add docstring for this parameter.
I think this should be a debug level log.
I'm not sure if this is the right fix. I think it should be `2: 0 20px`
This should be removed.
I think it would be better to move the `if` to the `if` statement, since it's a bit confusing to read.
Do we need to import `get_root_logger`?
Use the new Ruby 1.9 hash syntax.
I think this is a bit confusing. Why is this needed?
I think it would be better to have a check for `isAllHealthy` and always always the default value.
I think we should use the `/schedpolicy` field here.
What do you think about using `srand # reset random generation` here?
I think this should be `self.getAddonsButton()` instead of `self.getAddonsButton()`
Should we rename this to `ExpireTableMetadata`?
I think this should be `NewStream()`
I think this should be `return nil`
can we move this to the top of the file?
I think this should be `:getLocale()`
It's a little confusing to have a method for `daal` here.
It's a bit weird to have this as a `dict` method, but I think it's a good idea to put it in the `@login_manager` method.
I'm not sure if this is the right fix.
The text of the text is not the right part of the text. The text of the text is not the same as the text of the text.
I think this is the fix.
I think this is a bit confusing, since the `s3://` is a `dockerImage` object, not a `docker image`, so I think it's better to have a `docker image` that is a `dockerConfig`, and then use that here.
This is a leftover from the previous PR.
This should be `_platformNotSupportedExceptionMessage`.
@deads2k i'm not sure if this is correct. if I'm not mistaken, the `dev/xvda` label should be used here.
Why is this needed?
This is not the right place to put this. It is used in the `executeExtension` method, so it should be moved to the `new Promise(() => new Error(`No extension support for ${path} in react-native-sqlite-storage)`.
I think this should be `automatically.format`
I think this is a leftover from debugging...
Should this be `InitAddress`?
`applyRef` is called after `node` and `ATTR_KEY` are not passed in.
If we're going to be testing this controller, we should probably be checking for the controller's `_` and `_` to be nil.
@matt-gardner Is this a "all" or "all"? I'm not sure if it's worth it.
nit: I'd prefer to not use an interface for this.
This is not needed. `load_plugins` is already in `lib/plugin-loader`.
Please add a comma at the end of the line.
I think this is not correct. `noConflict` is already a `of jQuery UI covered by `bootstrap.js`.
Is this change necessary?
Why is this necessary?
This is the only place where we're using the `go` namespace.
I think this check is redundant now.
I'm not sure if this is the right place to put this. I'm not sure if it's worth it.
You can use `def` here.
I think we should be using `Failed to GetActiveApp err` instead of `Failed to start: %s`
`TLS certificate` is a bit ambiguous, it's a bit confusing to me. I would say that it's a bit more descriptive than `TLS certificate`...
Why is this change needed?
What is the purpose of this change?
Why is this not a warning?
Can we make this test the default?
Can't we just use `T` instead of `private` ?
I think this should be a separate test, since it's not a test and should be a separate test
Why is this removed?
why is this needed?
Please use `@since TODO`.
Can we use `TreatmentsPlugin.getPlugin().addToHistoryTreatment(detailedBolusInfo, true)` here?
This is a breaking change. It is not related to the bug fix.
should this be title?
This is not needed.
I think this is a good time to fix the target.options.login-shell that was not in the target.options.
This is a breaking change.
I think this is what we want.
This is a bit of a nit, but I think it's better to move this to the top of the file.
This is not the best place to put this code. The only place it is used is in the code that is used is in the code.
This is a bit of an unrelated change, but I think it's better to use a `Map` instead of `bytes` to avoid the exception.
I think we should keep the list as it was before.
I think you can remove `selectAll` here.
Why do we need this line?
This is a bit confusing, why is this needed?
I think we should be able to wait for cfn for updates.
Nit: I think this is a good idea to add a `stopPropagation` call to `event` as well.
why is this etc?
I think we should remove this as well.
I think this should be in a separate PR.
@daniel-beck do you know why this change is needed?
This change is not needed.
I'm not sure this is the right fix. The `arg` argument is needed here.
I'm not sure if this is correct. The `if` condition should be added to the `if` condition.
I think the original code was correct.
This is not needed.
I think this is a bit confusing, why not just have a `C2` in the controller?
Is this change necessary?
Why not `Collections.emptyMap()`?
I think this should be `bytesToKB`
remove the leading space
@danrot @dantleech did you mean to show the code base in this case?
I think this is the correct fix.
I think we should remove this.
Line is too long. [83/80]
This is a bit of a hack, but I think it's better to be explicit here.
you should create a new `create_no_window` method in this file, to avoid the `create_no_window` API
I think this is a good idea to add the `Media` method to the `Media` package.
For consistency, we should probably add a `func Max(x, y y, y)` function to the Max function.
I think we should add a TODO here to remove the forwarding from the library.
I think we should be able to use `custom` here.
I'm not sure if this is the right place to do this. The user can see the cluster id, but it is not the same as the cluster id.
I think it would be better to use `bridge.getConfig().getString("server.url")` instead of `bridge.getHost().contains(bridge.getHost())` as it is only used once.
maybe `Indentation` is a better name? `Indentation`?
This is a breaking change. The only place where we have a schema is used is in a non-dcore config, so we should have a test for it.
This is a breaking change.
This is a bit of a nitpick, but I think it would be better if we could just do `goto err == nil` instead of checking if the error is `nil` here.
I think it would be better to move this check to the `ec2client` package.
I think we should keep the old name and keep the old name.
can we rename these now?
why is this removed?
Metrics/LineLength: Line is too long. [83/80]
I think this should be `pmd_userdocs_getting_started` instead of `isIgnoreIncrementalAnalysis`
We should probably move this to `db` and move it to `createCollection`
I think you can remove this line
I think we should remove this line.
Do we need to do this for all the time?
Are these changes related to the PR?
Please, no trailing whitespace
Nit: remove empty line
I think we should just remove this and use the new `localCluster` interface.
Why do you need to do this?
why not use `\n` here?
why is this required?
This should be `#if NET452 || NET46` since the `#if` is the same as `#if NET452`
This is the only change that will break existing functionality.
I think we should keep this.
I'm not sure if this is correct. I don't think it is a good idea to add it to the base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base base
I think this variable can be removed now, since it's used in the test file.
This is a bit confusing, why is this needed?
This is a bit of a hack, but I don't think we should be changing the default behavior.
I'm not sure if this is the right place to do this. The `googleapi.Error` check is still necessary.
This is a breaking API change. I think we should keep the old behavior as it is.
Use the new Ruby 1.9 hash syntax.
Please use `const std::string &sln`.
Is this a "not" or a "not"?
I think this is not the right place for this. The `--hooks` flag is used to set the `--list` flag to `""`.
Should this be `matchSelf`?
Do we need this? I thought we had some discussion about the FY16 and FY16 for all the time.
This is a bit weird, we need to use `data.subrow` to build the `data` object to be able to use it.
This is the only change that affects TF 2.7.0.
@smarterclayton do we want to check for other events that are not reconciled?
I think we should check that `poolSpec.RaidGroupType` is not `nil` here.
Why is this needed?
Why is this needed?
The return value of xxstrdup is a bit confusing. What is the difference between `(id)` and `(json)`?
I think it would be better to use `Span addEvent(String name, long timestamp)` instead of `Span addEvent(String name, long timestamp)`
why not make this a `Outbound`?
Line is too long. [81/80]
`minResolution` is not used in this function.
This is not the right place for this. The `\A` option is used for the `\A` option.
Why is this line removed?
I think you can remove the `else if` here and just do `if (mongoClient.s.options.autoEncryption.cryptdConnectionString != null) {`
This is a bit of a hack, but I think it's better to use `os_clone_post` instead of `os_clone_pre` here.
I think this is a breaking change. We should be using a `ITraceContext` here instead of a `ITraceContext`
"... is the signaled on by queue"
I think we should just make this a `Set` instead of a `Set`.
I think we should use the same name for both `app-started` and `app-integrations-change`.
Is this file still in the license?
This is a good change.
I think we should remove the `!`
I think this is not needed.
I think we should keep this as it was.
This is a bit confusing, since the target is a ZONE_PVP.
I think we should move this logic into the `if` block above, to be safe.
I think we can move this into the `articlesController` class, since it's only used in the `@Topic` module.
I'm not sure if this is the right place to put this. The `svd` is used for a non-zero value, so it's not really a good idea to add it to the `is_svd` function.
I think it would be better to have a `TaskCredentials` method that returns a `Task` and then use that in the `mtask` function.
This is a bit weird, why do we need to validate the config in the flow exporter config?
Should we add a `clientServer` to the config?
The condition should be `if (hasQualifiers) {`
This is the only place where we need to set the result of the registry.
This should be in `MSG(invalid_indices, "Invalid indices")`
Do we need to set this to `linuxOS`?
This is a good idea. It should be `array_filter()` instead.
I think this is not correct. The `UIAElement` is already a `List`.
why remove this?
@matt-gardner, I'm not sure if this is the right fix.
This is a debug log.
Can we use `JenkinsRule` to return `false`?
I think we should use the $event->getCacheFilepath() function instead of the $sourceFilePath.
this should be `api_quota_configs` not `api_quota_configs`
This is a good change, but I think it's better to be explicit here.
I think this is not correct. It should be `client_kwargs`
no need to change this, it is already imported
This is a bug fix.
I think we should use a constant here.
Maybe we should add an example here to explain why we are not using statsd exporters.
This is a bit of an unrelated change, but I think it's better to split it into a separate PR.
This is a breaking change. The `Tags` prefix is already `undefined` in the `List`.
This is a bug fix.
I'm not sure if we should change the cast to 100 here.
This should be `env_vars` instead of `None`
Why is this required?
I think this should be `_run_create_option`
I think we should remove the `filter *ShardsFilter` and `int64` here.
I think this should be `creature->getMaxHealth() / maxHealth`
I think this should be `else`
This test fails because the `goog:chromeOptions` was not set to `detach` in the `http.go` file.
I think this is a leftover from the previous PR.
Can we make this `public`?
this is a bug fix
This is a bit confusing, since `V1.7` is a file-wide string, not a file-wide string.
I think this should be `index.name()` instead of `index.name()`.
This is the only change that affects TF providers.
Is this change necessary?
is this file still necessary?
I think we should probably have a separate issue for this, but I think we should probably have a separate PR for this.
This is a bit confusing, since `os.path.join(lib", "lib", too)` is the same as `os.path.join(globalVars.appDir, "lib", buildVersion.version, "nvdaHelperRemote.dll")`
why is this needed?
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this is a bit confusing. What if we just remove the observer from the `full_name` and just call `prep_create_response_msg` directly?
I think this is a leftover from debugging.
This file should be removed.
I think this should be `update!` since it's not a valid name.
I think this should be a separate error, since the caller can know the status of the caller.
Use 2 (not 0) spaces for indenting an expression spanning multiple lines.
I think this should be `Cartesian3Writer.copy()` instead of `Cartesian3Writer.copy()`
This is the only change that affects TF providers.
This is a bit confusing, why do we need to check for the previous value?
This is a breaking change.
This is a good change. We should be able to remove the `org.joda.time.Period` from the `org.joda` module.
Why not `object`?
It's not clear to me why this is not a `char ToUpper`?
Why is this needed?
Can we have a test for this?
why do you change this?
I think this should be `!=` instead of `.gitignore`
Is this a spec spec or a spec spec?
should we make this a global constant?
We should probably make this an enum instead of an enum.
Is this change necessary?
Is this necessary?
Why not use a `PackagePackageTransformer` here?
Why did you change this?
I think this is a bit confusing, since it's a `POD_FAILED` variable, and not a `65`.
This is a bit of a hack, but I think we should be able to remove the `if` condition from the condition.
I think we should add a `boolean` property here to make it clear that the value is null.
Can we remove this from the previous commit?
This should be a separate method.
I think this is a good change.
Why is this change needed?
@jeherve - This is the only change that fixes the issue.
I think we can remove this
I think this is the only place where we need the `TBB_INTERFACE_VERSION` check.
This is not a problem, but I think it's better to use a `compile` here.
please remove this
Trailing whitespace detected.
I think this should be a `Collections.emptyMap()` instead of a `Collection<String, StringList>`.
I think we should keep this here.
I think this is a good idea to add the `template` property to the `setTemplate` method.
I think this should be `false` since the `error` is not a valid error.
Why is this needed?
This is the only place where we need to do this.
nit: `let` should be on own line
No need to check for nil here.
I think this is not correct. I would have expected this to be a separate PR.
Should we have a `json` tag for these?
why is this change necessary?
I think this should be `phoenicis.configuration.localisation.Localisation.tr`
I think this is a bug fix.
Can we add a description of this property to the description?
