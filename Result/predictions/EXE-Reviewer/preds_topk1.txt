Is this the correct way to do this? I don't see any `transport` field in this module.
`$backend->setPageSize($config->Index->record_batch_size);`
I think this should be a separate PR, but I don't think it's necessary to change it in this PR.
this is a bug fix.
I think this is a great way to pass a `isNavigating` to `isNavigating` and then you can pass the `isNavigating` to `isNavigating` and then you can pass the `isNavigating` to `isNavigating` and then you can pass the `isNavigating` to `isNavigating`
I think we should be consistent with the rest of the code base, but I think we should be consistent with the rest of the code base. I think we should be consistent and use `const Mat& {` instead of `const Mat + 1;`
I think we should move this import to the top of the file.
There is a typo in printf printf.
There is no need for the `focus.windowThreadID` check here.
This is the only change that affects TF providers.
Please remove this.
I think we should use `shared` here.
nit: I think we should add a sentence about what this is for.
ToHexString is a string, not a string.
I think `x.name() == ""` would be more appropriate here. `x.name() == ""` would be more appropriate here. `x.name() == ""` would be more appropriate here. `x.name() == ""` would be `x.name() == ""`.
Why was this removed?
Can you please add a space after `:`
Please remove the extra spaces here.
Should this be `status`?
This change is not related to this PR, but I think it's safe to remove.
I think we should add a TODO to remove this?
I think we should use `NONEXIST_ENABLED` here.
This is a breaking change.
@Scottmitch why isEmptyType() not needed anymore?
Why is this change required?
"Whether to" -> "Whether to"
why is this removed?
I think this is not needed anymore
I think `respond_to?` is enough here, since we don't have any special logic for it.
This is not the right place to put this. It seems to be the only place where we need to do this. I think we should be setting `runner.with...` to `null` here.
I don't think this namespace is needed.
Redundant `return` detected.
I think we should add a `clear()` method to the `clear()` method.
This is not the same as `alerters`
@deads2k i'm not sure if this is the right place to put this.
I think this is a bit confusing, since we're not using the topic name anywhere else.
This is a bit of a change in behaviour. Is this correct? ` []byte("node1")` is the default.
This function is now unused, and can be removed.
This interface is a bit confusing to me. What is the reason for adding this interface? It seems to me that it's only used by the `Container` method.
I think we should create a separate `SetTag` for this, and then `SetTag` to be consistent with the other `Tags.Version` and `SetTag` in the `Tags.Mono.cs`.
This docstring is out of date.
This should be `2014, 2005, 2006`
This is not a good use of `BiConsumer` in this class.
I think we can just use `trace.create` here.
Why not just use `if` here?
Is there a reason why we can't just use `validators` directly?
I think this import is unused.
This line is not needed.
I think this should be `for (int i = 0; i < feeds.size() {`
I think this can be just `None`.
Why is this needed?
I think we should pass the `chain` here, as it is already used in the `WriteLine` method.
Why not just `lowest`?
This is a bit weird, why not just use `isRemoved`?
why not just `startTime := time.Since(startTime) == 0`?
Shouldn't this be `Promise.Promise`?
We should probably have a TODO here to fix this in a follow-up PR.
Don't use `__class__` for multi-line `name`?
I think this is not correct. `video` is always `false` so we should not be returning `false` here.
I think this is a leftover from the previous commit.
Why not use a `Map<String, Object>` here?
double check - not needed.
Why do we need to cast it to an int?
This is the only change that affects TF providers. I think we should be passing in the default here.
I think this should be `if !save(user)`, since the `create` method is the same as `create` on the `create` callback.
Line too long. [87/80]
Can we just use a string here?
Is this needed for all requests to usefrastructureReady?
why not just using the `aws_ghost_stable` function?
shouldn't this return true only when `in == null`?
I think we should use `from builtins importGit` instead of `padding` as the second argument.
I'm not sure if this is the right way to check. The `assert(sibling->parent == subsurface->parent)` call above is to check if the `assert(sibling->parent == subsurface->parent)`)` call is to check if the `assert(sibling->parent == subsurface->parent)`)` call is to check if the `assert(sibling->parent == subsurface->parent)`)`
Style/SymbolArray: Use %i or %I for an array of symbols.
I'm not sure if this is a good idea. If the `inDDL` flag is set, then it will be removed.
(style) please, no space before tabs
I'm not sure this is the right test. It should be `internal/service/provider_spec.rb` instead.
I think this is the wrong place for this. The `webenginesettings` is used for the `theme_color` parameter.
I think this should be catching a `Exception`.
This change is not related to this change, but it seems like it should be a separate change.
Please remove the trailing comma.
This is the fix.
I think this is a leftover from a previous PR, but I think it's worth mentioning that this is a replace variables.
@agramfort this is the default
I'm not sure why we need to generate the data timestamp here? I think it's a good idea to generate the data timestamp in the first place.
I think it would be better to have a `pos` method that does the manifest.
Why not use `log.trino`?
I think this import is no longer needed
This is a breaking change. It's not a public API, so I'd be fine with it.
I think this should be `localConnection_`
Why not just use `container` here?
Is `Device` a thing? Can't we use `Device` here?
why not `m.store`?
This is a bit of a hack, but I think it's better to just pass the test to init() and pass it in in the test.
I think this should be `Sequence`
I think this should be `(source, x, y, y, element || POINTER)`
Why is this here?
Is there a reason we don't want to keep the call to `toplevel`?
Please use `==`
This isn't needed, right?
Should this be a different call to ExecutorManagerException?
The `obj` is not a `typeof` so it should be removed.
We should just use `el.getAttribute('aria-hidden')` here.
Why do you need this import?
I think we should add a `@JavaParser` annotation here.
Is this change intended?
This is a bit weird, why is the `PortBinding` not a `long`?
this is not needed anymore
This is not the same as `pollFirst` (as in `RequestRequestId`) but the same as `RequestRequestId` (and the same for `RequestRequestId`)
I think this is a leftover from an array.
The readlink() is a bit confusing, why is it needed?
This is not needed anymore
Plz add a blank line between tags and summary for better readability
This is the only line changed in this file.
Why is this removed?
The default is `false` by default, so I think it's better to default to `false` here.
I think we should remove this one. It's not used in the test.
`req.addheaders` is used only once, so you can remove `req.addheaders` altogether.
breakpoint is already an `int`?
This is a bit weird, why do we need to check for the dictionary?
I think we should use the new `issue` package here.
This is a breaking change. It should be in a separate PR.
`std::distance(first, std::size_t)` is sufficient.
I think this is a bit confusing, as we are not using `kubelet` as the `app.kubernetes.io/name` as the `kubelet` namespace. I think we should change the `app.kubernetes.io/name` namespace to be `kubelet-operator` and `app.kubernetes.io/name` to be consistent with the `kubelet` namespace.
I think this is the wrong way to fix this. The `!` should be removed.
Shouldn't this be `xrc20`?
I think this should be done in `before_action` instead of here. We should be able to remove the `if` statement.
I think this should be a `Miner`.
I think this is a leftover from an earlier version of this change.
Can you make this default to false by default?
I think you can use `typeoftypeof fetch === 'undefined'`
Is this the correct way to do this? We don't have to do it in the context.
This is the fix.
This is a bit confusing, as we have a `getDefaultServiceVersion()` method in the code that is used in the codeGenVersion. I would suggest to rename this to `getDefaultServiceVersion()` and `getDefaultServiceVersion()` to avoid the need for the `getDefaultServiceVersion()` method.
I think we can remove `setFileState` altogether now since we don't have any other response anymore.
I think we should keep this in case it's not set.
This change is not related to this PR, but it is not related to this PR, so I would remove it.
Without? The only thing I don't like is that we're using the `Path` in the code.
I think this line is redundant now
The tags in the config file should be `tag` not `tags`.
where is the scope used?
I think this should be a warning, not a warning.
I'm not sure this is the correct way to do it.
I think you can just do `const char *h2o_next_token(h2o_iovec_t *value, int coma_separator)` here, and then you don't need the extra cast to int coma_separator.
I think you can remove the `Recycling` here and just use the `include` in the `include` method.
`request.ConsumerInfo.PaymentVersion == PaymentVersionV3` is the name of the payment.
@deads2k @mfojtik why do we need to do this for every operation?
This is a breaking change. It's not a breaking change.
I think this is not the right fix. We should just always use `canBeamLinkClass` when the `EdgeID eid` is true.
This is a bit weird, we're passing the `certname` into the `default_certname` method.
do we need tossd any more?
Why is this change needed?
Why is this check removed?
I think this should be a warning since it's not a debug level.
We don't need to check for `EdgeEdge` anymore, since `EdgeEdge` is a `EdgeEdge` anyway.
Can we use the `notificationManager.updateReport()` method here?
It seems that `c` is not used in this file, it is used in `Call` and `req` is used in `status`.
I think we can just remove the `GenerateAPIKey` from the `Retry` method.
error strings should not be capitalized or end with punctuation or a newline
It's not obvious to me why this is necessary. It's not the case anymore. It's the same as `convolve` but it's not the case anymore.
This is the fix. We need to test that the `calledThrice` is not defined.
This method is called only in `invoke_message` (it's called in `invoke_error_to_s`), and it's only called in one place. It's probably better to make this method a private method.
I think we should add a note that this will be a new message in the future.
Style/StringLiterals: Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this is not correct. It is not used anywhere.
I think you can just remove the `ationalList` method here and use `Optional[then]` instead of `if`.
`protected E` is unused.
This is a change in behaviour.
Why is this include needed?
We should rename this to `alertQueryUrl` to be consistent with the other `Validate` and `Validate` keys.
Is this the only place where we use this?
it's not a huge deal, but I'm not sure how this testcase will work. It's not a huge deal, but it's not a huge deal, just a thought.
This test is not testing anything, it is testing the same thing.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
hmm, this is a change in behavior, but I think it's okay to catch `Level.FINE` here.
Why was this removed?
Why is this being removed?
I think we should keep the domain-PACKAGES at the beginning of the file.
`javaslang.Serializables` is not used in this class.
do you need to call `host['ips'].each` here?
Why is this being removed?
Do we need to do this here?
I think this is not a good idea. It's better to move the `import` to the `style` block.
This is not used anywhere.
This is a change in behavior, right? Why is this needed?
I think this is not correct. We should only be calling `clone` if the `File.SPEC_ID` is true.
Could you please add a space after `?:` here?
I think it would be better to have this as a `const allEvents                   = "*"`
You should add `pip install` to `pip wheel` and `pip wheel` as well.
@jridgewell I think this is the only place where we want to do this. I think we should just do `isHydrating = true` instead of `isHydrating = false`
I think this is not needed anymore.
Why did you change this? This is a test, so it's not possible to have a test with a new name.
`check_disabled_client` is a global setting but we don't need to check check for `disabled_client` in the `disabled` action.
I think this test should be renamed to `find_default_querystring_parameters_are_taken_into_account`
@jmhooper @mitchellhenke Thanks for the PR! I think we should have a better way to do this, I'm not sure if we should do this. I'm not sure if we should do this now, but I think we should do it in a separate PR.
Should this class be part of the base class?
Why change the number of arguments to 1?
Why not `SSource`?
Do we need to add this property to `.properties`?
I think this is a good idea, but I think it's better to move this to the `setup.go` file. It's not a big deal, but it's not a big deal.
Please don't change the copyright.
What if we have a directory directory in the directory?
Why are these imports changed?
I think this is a leftover from the previous PR.
(style) line over 80 characters
This is the only line changed in this file.
This is not correct. The `AARCHXX` is defined by default.
This field is not used anymore.
@wachterjohannes Shouldn't this also be `$event->getAvatarFilename()`?
We should add error message here
I think you can just do `new BaggagePropagator(new TextMapPropagator(KubernetesTextTextMapPropagator)`. The default is `DefaultTextMapPropagator` and the default is `DefaultTextMapPropagator`.
This is the only change that affects TF codegen.
This is the only change that affects TF codegen. I think we should use the `Access-Control-Allow-Origin` option.
this is not needed anymore
This is a bit weird, why the change to the default value of "required"?
nit: this could be a one liner
I think we should use `int32` here
This is not correct. It will be put in the response. Instead, we should put the JSONObject in the response.
Can we use `!=` instead?
If you remove this line, you can remove the `!empty()` check.
the error returned by the caller should be `return`
I think you can remove the `@out` tag here.
I think this is a bug fix. It should be `labels[inds] - 1]`
This is a bit weird, I would have expected a `FileServer` to be a `FileServer`.
Nit: remove empty line
I think we can drop this one right? `user.password` is already called in `in_as`.
shouldn't Dimensioned be replaced with a `# noqa (API import)`?
Why is this change required?
What's the reason for this change?
nit: this is a good candidate for a test
Nit: could you move this package name up so that it's clear what's happening?
I think this will break the API. We need to update the `UpdateCapabilities` field to pass the ` capabilities` argument to the constructor.
why was this removed?
Space inside { missing.<br>Space inside } missing.
I think we should use the name of the retry here.
Is this the correct type of the url?
I think we should remove this and just use `go` instead of `1.2`
This is a change in behavior, right?
I think this is not needed
let's remove this file
I think this is not used anymore
This is not the only place where we use a TestPipeline. The `small-image` option is used, so I think we should remove the `__small-image` option.
I think this is not needed
This is the only line changed in this file.
Why not `factory`?
Shouldn't this be `std::string &func`?
I think this is not the right place for this. The `Number(value) < 0` check is done in the `if (typeof value === 'number') {` block below.
Can we remove the TODO?
I think this is not correct.
This function is a bit confusing to me. Why not just have `handleLoop chan` return the result of `WithIdentityRegistered`?
Is it possible to use `query` as the latter like `wav` is optional?
I think this should be an `luaA_object_push`?
this is not needed
This is a change in behavior, right?
I think we can get rid of `contains` now that we have `contains` method.
I think we should make this a global variable.
Metrics/LineLength: Line is too long. [83/80]
I think we should be able to use `!ptr==NULL` here.
I think we should remove the `Remote_url` from the notebook since we're not using it anywhere else in the codebase. It's not a security issue, but it's not a big deal either way.
The `s.mu.Env()` is not a valid path, so it is not a valid path.
Can we have this as enableDownloading?
This method name is not very descriptive. It's not a method, but it's a method.
Should we also set spans as errors by default?
I think we should remove this.
`createBaseZnode` is not used anywhere else.
This is a bit confusing, as we are using the same name as the "root" directory.
I'm not sure this is the right way to do it, but I'm not sure how to test this. I'm not sure what the best way to do is is, but I'm not sure.
This seems like a good candidate for a `begin` to be inside the `azure.beaker/options/#{file` directory.
`String.valueOf(...)` is not needed. `year` is an integer, and `EPOCH` is a number.
I think this is the only change that will need to be done in the `handleContainerChange` method. The `dockerMessages` function is used in the `dockerdockerMessages` method.
I think this is the only place where we need to do this.
This method is not used.
This is a breaking change. It is not related to the fix, but I think it is better to keep it.
I think we should be using `type: type`, `type:`, `type:`, `type:`, `type:`, `type:`, `type:`, `type:`, `type:`, `type:`, `type:`, `type:`, `type:`, `type:`, `type:`, `type:`, `type:`, `type:`, `type:`, `type:`, `type:`, `type:`, `type:`, `type:`, `type:`, `type:`, `type:`, `type:`, `type:`, `type:
This is a bit odd, why do we need to do it here?
I think this should be a separate commit
why did you change this?
This is a good change. It's a good idea to have a test that checks for the length of the buffer.
This is the only real change. The only reason we're using this is that the `os` package is not in the `os` package.
Why is this change necessary?
I think we should use `404` here.
why change this?
You should use `#INE($input_path)` instead of `#INE($input_path)`
I think we can remove the `package aws_test` dependency now that we have the `package aws` package.
This test is no longer necessary, since the histogram is in the `test-float64-histogram` namespace.
do we need this?
I think this should be a warning or a warning.
This is a breaking change. It's probably worth adding a guard clause to make sure we don't accidentally break anything.
Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is a bit of a hack, but I think it's better to move this to a separate PR.
Why is this change necessary? I think we should be able to get rid of the `wasHiveString` and just call `wasHive_`.
I think this import is unused.
I think this can be removed.
This is a breaking change. I think it should be `c.Getter()`
@mfojtik why did you change this?
This was a bug, right?
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
Why is this change necessary?
Can we use `err.Email` here?
I don't think you need to pass `getAvailablePort()` here, since you are using it in the `app/policy.yml` file.
I think this should be `var_loc_keys=self.loc_mng.get_locator`
I think we should rename this project to `projectFlag`
Is this a bug fix? It seems to me that `bytes` is not null.
this is not correct. if node is set, return node is set
This is a breaking change. Why are we removing WriteAsync from the buffer?
Why is this change required?
This is probably a good candidate for a helper method.
This is not correct. attach(String name, Object value) is not a valid name.
This is not the same as `IOException` below.
Why change the parameter name? The parameter is not used anymore.
I think you can just do `return it.find(guid)`.
shouldn't this be a constructor instead of a property?
I think this is a leftover from debugging I think.
I think we should keep this method as protected and make it private.
I think `$this->getRequest()` is a better name.
@danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot
I think this is the key errors that was chosen by the caller.
This is a test case, but I think it is better to check `if not _` and `chainID != 0` instead of `if not _`
Why do we need to use `IsValid` here?
This is the only change that will be needed in the future.
I think this should be `Rails.application.config.blacklight_export_secret_token`
is this still needed?
This is the only place where we want to do this.
I think we should be able to use `HostDataDir:                    ` here instead of `ecs` as the default value.
@mramato do you know if this is the right way to do this? I'm not sure if this is the right way to do this. I'm not sure if it is worth it, but if it is possible to just add the `ipsecESPOverhead` to the `ipsecESPOverver` in the `ipsecESPOverhead`?
I think this is a bit confusing. The `MeasurementItem` and `MeasurementItem` are both a `OnEnd` and a `MeasurementItem` are the only one that is passed to `X509`. I think it would be better to have them all the time instead of having them all in `X509`.
Nit: import sorting
Could you please add a TODO to remove this?
Why is this test removed?
you should not have to change the `sort` method in this class
Why is this error required?
This change is not necessary. `isMining` already handles the `isMining` case.
I don't think we should get this from config, as it is not a `getConfig` method.
I think `Unlock` is a misleading name.
I think this is the only change that affects the change.
This is the only change that affects TF providers. I think we should be using the default version of the API here. We should probably make it configurable.
Is this used?
Why are we removing this? I don't see any unsupport variable being used anywhere.
I think you can just use `CleanFpInfoAttr_` here.
I think you can remove this line. It is already done in the `callback`
shouldn't `exercise` be a `id`?
`ExerciseWithProgress` is now unused
why is this public?
I think this is a good change. It's not really the most common use case, but I think it's better to have a method that returns a `null`.
This version is not in Spack
I think we should rename this to `maybe_one_setting_index` to be consistent with the other `maybe_one_index`
import in wrong section
Why is this change necessary?
I think we can move the `LEGACY_HELLO` above the `codes` variable.
I think it would be better to change the `begin` to `privilege_THREAD` here.
this should be in a separate PR
I think we should be using the `--allow-no-cache` option here.
I think we should keep `dokan.ExistingDir` here.
Do we need to make this list configurable?
I think this is not needed, we can just delete the container.
I think this should be `function roots_get_search_form($argument)`
It's not necessary to add this extra line.
This is a change in behavior, but I think it's okay to remove.
Can we rename this to `azkaban.jvm.jvm`?
I think we should remove the sprintf from the sprintf method and just use the `is` helper here.
I think we can remove the `GetCancelledZeroTask` here since it's no longer being used.
I think this is a bug fix. The first if statement is not needed.
I think this should be `wallet_work_regeneration` instead of `auto block`
I think this is a leftover from debugging purposes, right?
Why is this change necessary?
I think we should just remove this function.
I think this is not needed anymore.
Why is this needed?
I think this is a good time to move the es_starter to the `.py` file. It's not a big deal, but it's a good idea to move the es_starter to the `.py` file.
Why is this necessary?
Please, fix the spacing.
Line is too long. [82/80]
same here, can we just remove the property?
Why is this removed?
Is this used?
I think this is not needed.
Would it be better to set the body of the charset as a parameter?
Why are we using a different name here?
why not use `omitempty` directly?
I think we should close tty here, as we have `Close` already.
I think we should remove `implicit` field from `ksql.spack.String` now.
there is no need to change this, since it is already in the `protoreflect`
What do you think about renaming this to `skipOSConfig`? It's not clear what this is for.
why do we need this? Isn't it already covered by the existing `if` statement above?
Is this a typo?
Is this really needed?
I think this is the only change that will break existing code.
Shouldn't this be `[headers]`?
I'm not sure if this is the right error. If it's not, it should be: `[0] == 0`
Shouldn't this be `!=`?
This is the only line changed in this file.
This is a breaking change. The first time I see this PR, I see the schema file path, but the first time I see the schema file path, and the second time I checked. So, I see the schema file path, but the second time I checked the first time I checked the first time I checked the first time. So, I see the first time I checked the first time I checked the first time I checked the first time I checked the first time I checked the first time I checked the first time I checked the first time I checked the first time I checked the first time I checked the first time I
I think this is not right. The idea is that if the user has a phone number, the `.to_s` will be `BSON::Decimal128` and `.to_s` will be `nil` instead of `.to_s`
This file is not in `bolt/plan_creator` but in `plan_creator.js`. I think it's better to move `bolt/plan_creator` to `plan_creator.js` and `plan_creator.js`
Is this the only place where we set a 20?
Remove this line.
Why is this a repo here?
I think this is the only change that will break the ` storage provider: %s\n` provider.
`define_reader` is a `_test` method, so it's not a `_test` method.
why remove this? Are we removing the pool pool from the server?
Do we need to change the `DrandEntries`?
I think this should be `(current_key, '_current_key', None)`.
Shouldn't this be `mode`?
We should also check if the timeout > 0 before calling it. Otherwise, we'll have to check if the timeout is zero.
Do we need this limit? I think it should be a constant.
`consts` is unused.
rollbackPrimary is not used anywhere.
why is this needed?
`isOpenToNode` is not needed.
If we're not using the fakeListOk, can we rename it to fakeListOk?
I think we should move this to `client-go` package.
Nit: I think this import can be removed now since it's used in the go go library.
Is this the right place to handle the pipeline?
This is a bit weird, why do we need to do it here?
This is a bit of a merge conflict, but I think it's better to move it to the top of the file.
Does this need to be updated to use the existing `computedNumOfActivePartiions_`?
This import is not needed anymore.
I think this should be `var insecure`.
I think we should be able to use HTTP version here.
This test is not really testing what we want. It should be a separate test.
I think this is a bit confusing. Why not just return `reflect.Func(typing, Value{})`?
Does this change the window name?
Is this the only place where we use this?
This should be `self.Promise = undefined;`
what's the reason for removing this? can't we just skip the entire if-statement?
Maybe we should add a function for this function to return a ` promoting`?
I think we should do this in a separate PR. I think we should do it in a separate PR.
I think this interface is used by `File*` on `File*` and `File*` on `File*` so I think we can remove this interface.
I think we should remove this
I think we should add a `config` property to the `config` field.
This is the only change that affects the OpenTelemetrySdk.
I think this is the only change that will break existing code.
I think we should just call this `CloudBackupCreateRequest` and remove the `volatile` below.
I think this is not the right place for this. The `if` statement should be moved to the `if` statement above.
I think this is a bug. The `call` function should be called `array_merge`.
I think we can extract the `ctx` object directly to `supplier` in the `if` condition.
nit: I think we should add a description to the `'Erstellen und weitere hinzufügen'` as well.
you don't need to copy here
What's the point of having a reserved string?
This is the wrong name. It's the name of the params. The name is the name of the name of the test.
I think the `TogglePrefetcher` should be `nil` here.
Can you please add the new type hint?
I think we should remove this line.
Shouldn't this also check for `tableGrid`?
I think this should be `getAllprojects()`, since it's the only one that is used in the project.
shouldn't this be `data-lists`?
I think this is not right. The right fix is to use `not conf.use_winpcapy` and `not conf.use_pcap` when `not conf.use_dnet` is used.
Add a space before the `asset_defs`
could also be strncpy
I think we should keep the original behavior and just pass the source to the credential.
Can we move this to the bottom of the file?
Why do we need to_float32?
I think we should be consistent and use `config/kinto.ini` here.
are you sure this is needed? `shape` should always be `undefined`.
This is a bug fix. It should be `if len(accountName, storageDomain, protocol)`
I think this should be a public getter.
This import is now unused.
I think we should add `options: {backend}` to `configFile: false,` and `backend}` to `options` in `init()`
why change the line?
Please add a license header here.
I think we should change this to `write_COLOR_ATTACHMENT_OUTPUT_COLOR_ATTACHMENT_READ` and then we can change it to `ca_COLOR_ATTACHMENT_OUTPUT_COLOR_ATTACHMENT_READ` and then we can change it to `ca_COLOR_ATTACHMENT_OUTPUT_COLOR_ATTACHMENT_READ`
I think this is a leftover from debugging... it should be `--SO3H`
this is not needed
I think we should use the new `LongDomain` here.
These lines are too long, can you remove them?
This should be moved to the `setup_build_environment` function.
This is a weird place to put this. It's not a `_` but the `_` prefix is used for the `search` package.
This is a breaking change. I think it should be changed to `NET17` and not `http://localhost:4317` as well.
The name of this var is `gc` but not `gc`. I think it's better to say `!during writes`.
Shouldn't this be `SolrInputDocument`?
This is the only place where we need to do this. The only reason we need to do this is if the flag is not set.
This is a change that will break existing users. Is this a change that will break?
@mfojtik @jridgewell I think this is the right way to go.
I think we should move this to `setup_single_tasks_style`
I think we should remove this line
why not just use `getFilesAndDirectoriesApi` directly?
This is the only change that affects TF providers.
Why is this change required?
Why is this change required?
I think this is a breaking change. The `volatile` is not thread-safe.
Remove this line.
Please use `SAMPLERS`
I think this is a leftover from debugging I think.
If we're going to do this, we should probably also check for stats.to_json here.
I think this is a leftover from the previous commit.
This is a breaking change. It's not a public API.
@sparrowDom Just a thought, what do you think about moving this to a separate `state` package?
Align the parameters of a method call if they span more than one line.
Please add the license information to the project
This is a bit confusing, why do we need `location`?
I think we should use `executionproto` instead of `execution`
I think we need to keep the old parameter as well.
This is the only change that affects EOGO. We should probably be using EOGO here.
`time.Time` is a `time.Time`.
I think this should be a constant.
This is not the right place to put this code. The `TIntegration` is not a `Optional`, so it should be `Optional[T.PlatformMethod]`.
I think we should keep the name of the class as it is for now.
This is a breaking change.
This one is still a good idea, because the `_validate` method now calls `_validate` on the `single_required_string_config_dict` method.
This is the only change that affects the `winrm_nodes` change.
Copyrightright should be translated
This is a bit confusing, why do we need to check for `!hasLobColumn()`?
I think we should use a enum here
I think we should use `iconNode.children` here instead of `iconNode.children` as the default value.
This was removed because the id was already in the `<id>`
This is a breaking change. We need to make sure `g` is `@/g` and ` '\\r` is `final`.
This interface is not used anywhere. Can we remove it?
I think this should be `cfg.SynchronizableEntitiesPrefix`, since it's a `axis` error.
Should we check the path here?
I think this is the only line changed.
`_tab.is_deleted()` is a bit confusing. I think it should be a function.
`profiling_enabled` is not a valid option. It should be a global option.
This is a bit weird, why do you need to do `v.ssh.forward_agent`?
It looks like this line is not used anymore.
I think we should also check that the services are supposed to be routed.
I think this is the only change needed.
this seems to be a bit scary, but if we have a controller that checks for current_user, then we should check if the account was disabled.
Add `=`
Could you use `log.Join` here?
I think this is the only place where we should be using the info.Environment.GoPath.
I think this would be better as a `maxImageRampup`
I think we should log the error message here. We can then say that it's not going to be used in the `Logger` package.
I think this is not needed, the original code is already doing the network.
This test is not right. The schemaMan is not held by the schema.
This file should be removed.
I think this should be `r.interpreter.Eval(semPkg, r.scope, err)`
I think this is the only change that will be needed in the future, since we don't want to support the default labels in the `operated-alertmanager` namespace.
`default:false` is not a boolean.
Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
I think this is not needed anymore, right?
How about `path: Full path to the addon.`
I think this is the only change that will need to be changed.
shouldn't this be `wxLang.LayoutDirection`?
This is the fix.
Is this change related to the PR?
Can you add a `TODO` here?
Don't do this. You should be able to do `options.html` instead of `do respond`
Should this error be logged at a higher level?
Is this needed?
Nit: please remove the empty line
Is there a reason to use a `ss`?
This is not the same as `flattenIndex`
I think we should add some description about what this is for.
This is a little weird, why do we need to download the file name?
I think you can remove this file
Could we use `dialect.dialect` here?
Why not just ` chan`?
We should probably return `err.ErrorAs(err)` here, as we do on line 688 below.
This is a little hard to read. I think we should be doing 5 blocks to be mined.
`load` is a bit confusing with `file` as it is a bit confusing. I think it's better to call `load(file(statePath, "r")` and then call `load(file(statePath, "r")` in `load()` and then call `load(file(statePath, "r")` in `load()`
I think this should be `if params.qstring.method == 'core'`
I don't think this is the right way to go. We should be setting the default to null.
This is not needed.
@jridgewell I've removed the `static const` here.
I think we should not have a `rserve.password` here. We should not have a `.rserve.password` in the config file.
`strnlen_s()` is a better name.
the email should be from the email object, not from the email object
why not just remove the `act` call?
The `info_a` check is redundant here.
I think we should just return `LegacyFormHelper::getType('form');`
I think this is not the right way to check. This is a case where `opt_port` is a `null` port, so maybe it should be `opt_port`?
@agramfort do you know why this is necessary? I think we should be consistent and use `for` for the `Blockly.ScratchBlocks`
Is this supposed to be `UnknownDeployment`?
I think this is not correct. We should check that `v.length === 24` is the same as `v.length === 24`
can we use protocol.isPresent() instead?
I think we should use assertFuncEquals here instead of assertFuncEquals
This is a bit confusing, as this is a `registryAddress` field.
This is a bit of a hack, but I don't think it's worth it.
I think you can just use `time.Since(start).Milliseconds()`
I'm not sure if this test is really testing what we want. I'm not sure if it's worth it.
why is this a pointer?
I think this is the wrong place for this. The `Wire` package is used for the `Wire` package.
This is not needed, we have the same logic in the jenkins folder.
This is a bit of a hack, but I think it's better to move it to the `utils.py` file.
Can we move this to the bottom of the file?
I think this should be `BlockChanSize: 1000, BlockSyncChanSize: 10, defaultChanSize`
This was a bug, since `plans` was never used.
This constant is not used anywhere. It can be deleted.
Shouldn't this be `@SuppressWarnings`? I think that we should be able to use `--dns-discovery-url` instead of `--dns-discovery-url`.
I think this is missing a license header
I think we should use `key` instead of `key` here.
I think this should be a class constant.
It would be better to use a strlen() instead of strlen()
This is the only way I could see the `desiredUID` flag is to be set to `desiredUID`.
Why is this import removed?
nit: I think we should return an error here, so that we can verify that the router is not in the router.
`passwordModificationTime` is not used anywhere else in this class
I think this is the wrong place for this. The `ProcessStart` variable is used to check if the `ProcessName` is null.
I think we can remove this ``"
Please revert this change.
I think we can get the Action by doing nothing?
No need for this method, it's already in the constructor
Should we log this message?
I think this is the wrong fix.
The above logic is further specialized, depending on the kind of the app is hosted.
I think we should use `cmd/storage` here.
Why is this not just deleting the client?
Should this be `nativeSys32`?
I think you can remove the `editController` here.
I think you can remove this
what is this?
This is a breaking change. If the element is null, it will be null, so it should be removed.
I think we should just call `saveTaskIP` here.
I think we should just add the output to the output.
This should be default true only when `version_rank` is `None`.
Nit: This line is not needed
Rails/InverseOf: Specify an :inverse_of option.
I think this should be done in the `RCLONE_CONFIG_PASS` function.
I think this test should be in the `XmlSessionRequest` class instead of here.
This is a bit weird, why not just return the original value?
Does this need to be `compiler.evaluate_string('type PlanResult = Boltlib::PlanResult')`?
This change is not related to this PR, but I'm not sure why we need it here.
I think this is not right. The `+a` is the right thing to do here. The `+a` is the right thing to do here. The `+a` is the right thing to do here.
Why do we need this change?
I think we should also add ` FieldLenField` to the docstring.
this is a bit weird, why not just use `self._file_model.rowCount`?
I think this should be `maxQueryLength`
should this be "ndc"?
This is not used anywhere.
I think you can remove the `isglob` check here, it's already checked in the `if (isglob && fnmatch (arg, name, FNM_PERIOD) == 0) {`
This is a bit of a hack, but I don't think we should be using it elsewhere.
This is the name we give to the client name.
I think you should keep this line and pass `target.SteadyStateDependencies` to `deleteStatusResolvable`
Since `has_active_subscription?` always returns false, it seems like `has_annual_plan?` should be always true.
I think we can remove this pylint.
This is a breaking change. It's not a public API, and it's not a public API.
I'm not sure this is the correct way to check for the new functions. The new functions are only for the first one, and the second one is not for the first one.
Please use `in_channels` instead of `os.rpm`, you can use `os.rpm`, which is more efficient.
Why do we need a json field here?
I think this is a leftover from debugging?
Why did you remove the `deploy`?
Perl_croak() takes a long parameter, so you don't need to pass the last parameter.
I think this is a leftover from the previous PR. The `stateRoot` is used in the `IEnumerable` below.
This is the only change that affects TF providers.
How about `STATS_COLUMNS`? This way we can avoid the need for SCAN_WITH_STATS_COLUMNS and just use the default value.
I think we can use ReportStat instead
I think this is a leftover from the PR.
Why do we need min min and not just 0?
why is this needed?
Is `to?(:exercises)` needed here?
I think this should be `modeman.error` instead of `modeman.error` since that's the default behavior.
I'm not sure if this is the right place for this. I'm not sure if it is worth it.
I think this is a bit of a weird thing to do, but I think it would be better to have a test that checks if the `waitForResponse` is true.
This is a bit of a hack, but I think it's better to do a `FirstOrDefault()` instead of a `First` here.
nit: I think we should not need the `status` param here.
This is a bit confusing, as it is used in the `else` block.
Is this needed?
This file is no longer used.
Can you add a note that this is a public API?
This is the only change that will be needed for the `AuditFields` method.
This is the only place where we check if `visitOrAssembly` is true.
I'm not sure this variable is needed since it's used in the `depositToRewardingFund` package.
I think this is a leftover from the previous PR
can you use the same description as the one above?
Remove the nested import
I would prefer to keep this as `default=None, allow_None=True, doc=True`.
This is a bit confusing, as we have a `downstream` that has a `ClientK3s-controller` and a `ClientK3sControllerKey` that is being used for the `ClientK3sControllerKey` and `ClientK3s-controller` fields.
I think this is a leftover from debugging I think.
This file is not in the interface.
This is the only line changed in this file.
I think this is the only place where we use `getAllTypeVariables` in this method. Can we rename it to something more meaningful?
This method is used in a few places, maybe we should rename it to `eaSessionFactory`?
I think we can remove this line.
This is a breaking change. The old code was using `BPF`, but now it's a `BPF`.
It's not a good idea to add `Bla` as a dictionary for the `Bla` field.
`recids` is not used in this function.
I think this is a good idea, but I think we should just check for `err != nil` here. We should also check for `err != nil` if `err != nil` and then check for `err != nil`.
I think we should add a note that this will be a no-op on the event feed.
Nit: newline should be before the last line.
This is the default job name.
I think this can be removed. The `SQLite3File` already exists in `lib/lib/`
Would it be possible to move this to the `WriteLine` method?
Can we rename this to `DEFAULT_INSTRUMENTATION_NAME`?
Should we just delete the whole class? Seems like we are not testing that the input is not cached.
I think this should be a `finally` block
I think this was a typo.
This is the fix for #1740.
I think the password is already saved in the password, so you don't need to add the `Basic` here.
The `BAZEL_TEST_DATA_PATH` file is also used in `pkg/configurator.h`, so this file is not included in the `pkg/configurator.h` file.
I think this is not the right fix.
I think it would be better to have a `Int32 *granteeList` that does the same thing.
This would cause the subscriptions to be set to the first time the node is started.
This makes the line too long
I think this is not the right place for this.
This is not needed anymore.
I think we should just use `self.footerHeight` here.
I think we can remove `Installer` from `RemoteAvailableInstallers`
I think it would be better to use `run_id` instead of `start_time`.
@tarekgh I'm not sure why you removed the generator->setAqrEnabled() here.
does this mean we can delete delete delete for remote purposes? if so, we can delete delete remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote remote
nit: can we use `== null` here?
Out of curiosity, why do we need to "Out" the middleware here?
This is the only place where we start a container.Exec() is called.
This is the only place where we need to do this.
This is a bit weird, why not just use `cacert.get_subject()`?
what if we called this `License` instead of `index`?
This method is not used anywhere.
I think we should also add the `sanitizeWith` to the base class.
Please remove this line.
I'm not sure if this is the right way to do this, but I'm not sure what the right answer is. I'm not sure what the right answer is is, but I'm not sure what the right answer is.
I think this is not needed.
I think this URL could be more specific, maybe `approval_response_path`?
Please add XLE UL.
I think this is a no-op, right? This is a no-op for a specific domain.
This is the only place where we use the `Read` method. I think we should use the `n` keyword here instead.
I think this can be `final`
I think this is a leftover from the `base` package, not the site
shouldn't this be the same as the previous line?
Why is this necessary?
`reseted` is reset by `reset`
I think this should be a `config.fee_per_kb()` function.
Shouldn't we use the `ACTIVITY_TIMEOUT` constant?
Can you remove the empty line?
I think this should be `processRefCGs(ingressRule.SourceGroups) > 0`
We should probably also set the `Pending` in the `libkb.go` file.
shouldn't we use `!=` here?
nit: `nextPageTokenName` is a better name
hmmm so this is a breaking change?
This flags flags are listed twice.
I think we should use the `as follows` value here.
Do we need to also tests for the case where the user might not have an SP?
why is this removed?
`String#Equals(String, StringComparison)` is not supported in IE.
I think this is a leftover from debugging...
I think this is the only change that will be needed if `len(sha1) == 7`
Nit: please use `openFolderNamed`
@deads2k @stephentoub I'm not sure why this is needed.
This is the only place where we need to do this.
How about `orderPath`?
Why is this change necessary?
I think this is the only change that affects this PR.
This is a breaking change. The `object` is an object, not a `boolean`.
This is a public static field, so it should be public.
This is a bad idea, but I think we should use the `components` module here.
This import is unused.
Please use `String#Equals(String, StringComparison)`
This is not a good idea, but it's a good idea to have to introduce a new interface.
I think we should add a `consumerID` field to the `Client` base class.
This is a little confusing, as the `override` argument is now being used by the `--set`. I think it would be better to keep the `--set` flag as a parameter.
I think this should be ` Video.published.recently_published_first`
This is a bit of a hack, but I think it's better to move the `log.info` out of the `log.info` and then use that to check the `log.info`
Should we check that `BeEmpty` is not null before we try to catch it?
I think we should use leftField.Interface() here instead of using the leftField.
This include is not needed.
This is a bug fix.
I think we should delete the `ec2svc.CreateLaunchTemplateVersion` function and just delete the `ec2svc.CreateLaunchTemplateVersion` function.
Why is this change necessary?
I think this should be a `.rb` instead of a `.rb` file, right?
This is a pretty trivial change.
I think this was removed because it was already handled by the old code, so I removed it.
I think this import is not needed
Why do we need to run this?
I don't think this is the right fix. The `type` is not null, it is a bug in the `type` case.
I think this is a bit of a hack, but I think it's better to move it to the `onClick` package.
I think we can remove this
I think this is the only place where we use MetricStreamConfiguration. I think we should use the `MetricStreamConfiguration` instead.
We should use `six.moves` here
>type [](start = 16, length = 6) nit: `type != Type::None`?
This is the same as the line above.
This is a change in behavior, but I think it's fine to leave it as it was.
This is the only change that affects TF codegen.
Can you move these to the bottom of the file?
Should we add a note that this is a default setting?
I think we should log the error here, since it's not a `log.Warning`.
This is the only change that affects TF providers.
Please revert this change.
@jmhooper @mitchellhenke Thanks for the PR!
inconsistent spaces here, longer than 5 (2)
Please use `||`
Can you add a note that this can be a breaking change?
I think this is not needed. `!` should be removed.
why not use `j.BlockServer.shutdown()`?
It looks like the `fraction` can be removed.
Should this be `peer for service %q`?
`=true` is a bit confusing, can we just use `self.get_ctu_dir()`?
I think we should remove this plugin. The config file is already in the config file, so it is not required.
I don't think this is the right place for this. The `getAttribute` method should be called for each test.
I think this is a leftover from a previous PR, but I think it's better to move this to a `try/except` block to be safe.
I think we should make this `sub_type = 0`. It's not clear to me why we need to check for `null` here.
Is this a typo?
Please add a `TODO` here.
I think you can get rid of this line entirely and just use `useSelect(string)` and just do `useSelect(string)`.
This is the same as the one above, but it's more readable to use `%d` as the format.
Line is too long. [82/80]
Style/StringLiterals: Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
This is a change in behavior, but I think it's safe to change.
@cramforce do you know why this change is needed?
I think this should be `&&attr &&`
This is a breaking change. It should be reverted.
(style) trailing whitespace
This should be `[]key: false`
Nit: remove newline
I think we should use `__init__` instead of `__init__` here.
Why is this removed?
Is this needed?
I think this should be a public method. It's not a public API, and it's a public API.
`self._doc.setHtml('{}'.format(html.escape(self._opt.text)))` is the same as `_draw_focus_rect`. You should also call `_DocAuthInfo` instead of `_DocAuthInfo`
Can we make this a constant? We don't use it in other classes, and it's not used anywhere else in this class.
This is not right. The first call to `update` is the first call to `sendLibrary`.
Why not `f2O_ASYNC_NOTIFY_USING_EVENTFD`? `f2O_ASYNC_NOTIFY_USING_EVENTFD` is the default for `2727`
I think this can be removed.
Final newline missing.
This is the only place where we need to do this.
I think we should make this patch-wide, otherwise it will be executed for all versions of the same server.
This is not needed.
Line is too long. [81/80]
Import packages with wildcard is not recommended.
I think we should return here, since we don't want to return anything.
This is a bit confusing, as we are already passing the `self.state_before_fullscreen` in.
I think this is a leftover from debugging?
I don't think this is right. The `-` is the correct one.
I think we should default to "true" in the default behavior here.
I think you can remove this line
Why is this necessary?
You can just use `mConfirmDiscard` here.
This is not correct. `is_string($media->getBinaryContent()))` is the correct return value.
Don't you mean to remove the `nested_flatbuffer` field from the field?
I think this is a bit of a hack, but I think it's better to move it to a new file.
I think this is a leftover from debugging...
Shouldn't this be in the `getSource()` method?
Wouldn't it be better to use `$attributes['class'] !== {}` instead?
Why not just use `opEnum`?
I think we should remove this `installedVersions` call and `isVersions` in `removeVersions` as well.
`1.2.1` is probably more idiomatic, but 2.3.1 is more consistent with `1.3.1`
This is the only change that affects this PR.
I think this is a bug, since `Serializable` is a `Serializable`.
This is a breaking change. We need to keep the old behavior as is.
Why is this removed? I think `disable_iptables` is not needed anymore.
go isn't used
This is a good change. It's not a big deal, but it's a good thing to do.
This was the only place where we had a fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh fresh
I think this is not used anymore.
I think this condition should be moved inside the `readPreference` if it's a group by.
this is a test, please revert
why is this class needed?
I think this is a bit confusing, as `cur_path` is a `powershell` variable, and it is not a `API` variable.
`edit_guidance_alert_dialog` is too generic, can we use the same variable name as the class name?
Can we remove the link?
I think we should add `add_undo` to `copy_arge` and add it to `copy_arge` as well.
I think this is the only place where we want to do this.
We should probably also check for `navigation` in `onWindowKeyDown` and check for `time.Duration` here.
I think you can just do `newProps.checked !== dom.checked`
This is not correct. The `glue_code` key is already in the `SearchElement` package.
I think this should be a `_get_value_transformer`
This is not a key, but a table is a key.
Is this change necessary?
I think we should be able to remove this from the `<qutebrowser>` since it's not used in the `<source>` tag.
Why is this being removed?
I think this is not needed, we can remove `lvis_v1_instance.py` from the `base_` folder.
We should keep the info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info
I think we should call `RaiseSingleton` here.
I think it would be better to have a static constructor that accepts a list of supported jobExecutorTests.
(style) 'nd' may be misspelled - perhaps 'and'?
Do we need to call `clone` here?
I think we should just remove the `KindEcsApp` field and just do it in the `Ecs` field.
Does this need to be anything other than the `execute`?
This file has been removed.
I think this is a little confusing, as we are not using `kubernetes.io/hostname` anymore.
Why did you remove the config/urfavecli?
why not keep the same code as for RRIENDSCHAT?
I think this function could be a little more readable.
This is a breaking change. Can you explain?
I think this can be removed now, since we are already using the `torch.moves` module.
nit: I think we can remove the `private` here since it's not being used anywhere else.
You can use the shorthand since there is a `use` statement.
I think we should return a `[]string` here, and return a `[]string` in the `[ConditionalTheory]` in the `Path` instead of a `string`
This is the only change that affects TF providers. I think we should keep this as it was before.
This file should be removed.
Please add a license header
Why is this `action` needed?
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
I think this is the only place where we want to do this.
Is this a typo?
You can remove the `if` here.
I think we should keep this package for now, but we should keep it for now.
why not just pass the error directly?
I think this could be done in a separate PR, but it would be nice to have a separate PR for this.
I think this is not right. The datastore can be removed if the logger is not datastore.Pagination.Token == 0.
This is not right. The function will already have the FunctionExpression.
I think you meant `respond_to do` here, because you're using it in the previous line.
This is a leftover from the original version
Do we need to check that the `x86_64` exists?
Is there any reason why we wouldn't just call `Complete` here?
What if the user didn't specify this?
Why not use URISafeName here?
I think this is the only change that affects TF providers.
Why is this necessary?
This is a change in behavior, but I think it's okay to leave it as it was. The `Error` is not used in this PR, so I think it's safe to remove it.
Is this the correct way to check for a non-null buffer? Isn't the cachedResult already in the if block?
`LoggerFactory` is not used anymore.
Do we need to check for the limiter_drop?
Success or cert cert?
why do you need this?
Why is this needed? procCodeA.localeCompare already does this.
Can we use a mock here?
I think it would be better to use `ManagedMachinePool.Spec.RoleAdditionalPolicies` here.
Why did you remove this? It's not used anywhere.
This should be a single line string.
I think this should be in a different PR, but if we ever want to be sure we don't have any other way around it, we should also check if the returnType is null.
@matt-gardner Is this change related to this PR?
I think this should be `-1`
Can we remove the "hive" prefix? We already have a table in the table table.
I don't think we need this in the specs, it's in the `initializers` namespace.
Can you move this line up with the other `payments/crypto` imports?
Bibliographic is now unused, can you remove it?
I think we should move this to a constant somewhere, to make it more clear what's going on here.
I would use a different version of the configuration here.
I think we should remove `hashivault` and `hashivault` as well.
I think this should be `if (strcasecmp(value, "false") == 0) {`
I think this is still not needed anymore?
remove empty line
This is the only place where we call `CheckErr` is called.
I think this is a bit confusing. If the user is calculated by shifting, the value is calculated by shifting. How about: `false, value is calculated by shifting, given the value is calculated by shifting, given the value is calculated by shifting, given the value is calculated by shifting, given the value is calculated by shifting.
I think you can remove `cxSmiles` variable altogether.
I think this should be `super().__dict__`
Why not use the enum directly?
this is a breaking change. It should be `$this->entity['name']`
This is a bit confusing, since it's a `outboundIp` function.
Nit: using using statements seems unnecessary.
please revert this change
This is a breaking change. It's not related to the PR.
I don't think this is the right way to fix this. The gasPriceUnitIOTX is not in the gasPriceUnitIOTX.
I think we should wait for the result of wait here, to make sure that we don't wait for the result of wait?
Nit: remove empty line
Why do we need to synchronized here?
If we're going to have to worry about email, we should probably add a `edit` column to the `edit` table.
I think this should be `'Este :attribute já está ligado.'`
I think you can remove this line. It will be a bit of a hack anyway.
This err is no longer needed
How about just let this be configurable?
@agaspardcilia can you confirm that we don't need this condition? I mean, we don't need to check whether trail has ails trail?
This is a bit confusing, why not just return the error?
this is not needed
This is the only change that is needed. The code was only used in the test code, so it was not used in the code.
IMvxBasePresentationAttribute() is not needed.
why did you change this?
I think we should move the call to `cleanup` to `cleanup` in `build-system/common/config.js`
I think we should use `options.artist` here instead of `([([])`
Is this needed?
are we sure this is not an error?
This will only work if browser is 'firefox' or 'firefox' is 'firefox'
I think this is a little hard to read - maybe we should check if the `text` has a `dict` and then check if the `text` has a `dict` and then check if the `dict` has a `dict`?
The migration wants this to be a valid account.
Why is this needed?
Why do we need to define these as `pins pins`?
I think this was a mistake, @bparees
@jmhooper @mjkkirschner @mitchellhenke Thanks for this. I think we should also make sure we don't accidentally generate a roadmap for road.
This is a bit of a hack, but I don't think it's a good idea to have to do this.
I think this is the only change that needs to be added.
I think we should rename `TestDisableMetrics` to `TestEric-douglas` and rename `TestEric-dododododododododododododododododododododododododododododododododododododododododododododododododododododododododododododododododododododododododododododododododododododododododododododododododododo
Can you move this to the test file, so that we don't need to pass the `testGOPATH` on each test file?
I think this should be done in the `handlehandle` method, since it's only used in one place and not all the other classes.
Shouldn't this be `err.Name()`?
@mfojtik why is this hardcoded?
I think this should be `queryFilter`
I think we should use the `pulp` prefix here.
I'm not sure if this is the right place for this.
why name it `name`?
I think this is not needed.
This should be a `_` not a `_`.
I think we should be consistent and use the new style `\n`
I think we can just use `isNotEmpty` here.
Why are we making this public?
I think this should be set to false by default.
I think this can be removed, since the year is not a year, it is not a year.
I think this should be a build option
would be nice to have a test for this too
Is this meant to be here?
This is a change in behavior, right?
I think we should use the value `ReplacementSubstituteNew` here.
I think this should be a `GetLatestEventRequest`?
@kennknowles do you know if this is the right way to do this? This is not the case, if the user hasn't specified a port in the config, we must use the default peering port for the network port.
This was a typo.
is this really needed?
I think we should be able to get rid of the roleTextText here and just use the roleText. If we want to keep it it should be fine.
I think it's better to make the variable name more descriptive.
Please remove this.
Is this change related?
I think this should be a warning rather than a debug message.
Why not just `to...`?
This is the only change that affects this PR. I'm not sure it's the best way to go.
I think this was unused.
How about we make it a constant?
Why did you change this to `strncmp(resource_str, "id:", 3)`?
This is not needed.
There is no need to change Fork here.
This is a leftover from previous version, should be removed
I think we should deprecate `deactivated_on` and `deactivated_on` in this file.
I think it would be better to add this check to the `positional` method, and then add it to the `filter` method.
Is this the right version? Shouldn't it be `if (version >= 1100)`?
Why is this package removed?
`html_safe` is already in the list above, so it should be `<%=201201e%>`
I think you can remove the subject check here.
I think this is the default setting of `DefaultSampler` so it can be set to `defaultSamplingProbability` instead of `defaultSamplingProbability`
I think we should keep the generateDeploymentStrategicPatch at the same time as the patch.
why would we remove the info level info level?
I think this should be a DCHECK instead of DCHECK
Why remove the `default`? We don't want to keep the `image` in the `String` case, right?
Can we make this a `Set`?
Was this intentional?
I don't think we should change the name of the videoConstraints. It's not clear what it means. I would suggest `videoConstraints.facingMode` or `videoConstraints.facingMode`.
Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
I think this is the only place where we use `Target` in the `HasPrefix` module. I think we should just remove the `.WasmAbi` parameter from `./pants run` and use `./pants run` instead.
Why is `Append` needed here?
This is a bit confusing, why do we need to expose a span here?
I think this should be `t.topology.SearchTopology`.
I think this is a bug fix. We should not use the admin admin in the admin admin in the admin admin.
I'm not sure if this is the right fix. The ClaimFromRewardingFundGasPerByte should be in the _such_ of the _such_ of the _sending_ of the _sending_ of the _sending_ of the _sending_ of the _sending_ of the _sending_ of the _sending_ of the _sending_ of the _sending_ of the _sending_ of the _sending_ of the _sending_ of the _sending_ of the _sending_ of the _sending_
This is not correct. We're passing `NOGIL gil` to the `Resource` method.
I think this is a bit confusing to have to say "if the block height and the network are not found" as a name.
This is a bit of a hack, but I don't think it's worth it.
This is a bit confusing, as we are in the `QueryInput` and `QueryType` configurations.
I think this is the only change that is needed for the change.
I think we should check that the property is not empty before calling the method.
I think this is a leftover from the PR.
Could you explain why this change is needed?
@liggitt this is the change I was looking at. I don't see the point of this change.
I think this is not needed, we can just use `String[][] ToDbKey(String key, value)`
This is a bug, we should not exist yet.
Is there a reason why we can't just use `IsAppInsight`?
Is this used anywhere?
This is the only change that affects this PR.
Why did you change this?
The CPU implementation is not necessarily CPUping.
This change is needed because `setup_rvm` is `nil`
I think this is a good idea, but I think it's better to move this method into the `TODO` for now.
can we add a docstring here? `from_ts` is a bit confusing, it's a bit confusing to have a function that returns a tuple of the parameters.
I think this is a wrong change.
Score is not a peer, right?
I think it would be better to check that the value is not `0` and then check if it is a non-zero value.
why is this include removed?
This is a bit of a hack, but I think it's better to move it to the bottom of the file.
shouldn't this be "\'" + "\'"?
Should we rename this to `DirectDirectX`?
I think we can remove the list here.
It's a bit weird to have a path in the app but I think it's a good idea to have a migration to make sure it's not working correctly.
Should we add an option to the docs?
I think we should make the name more descriptive, e.g. `_dogStatsProcess`
This is not right. You're calling this with `AARCH64` in the default value. You're not doing any validation, but you're not doing any validation.
I think this is the only change that will make this change. If the old code doesn't use the new code, it will make the new code harder to read.
This option should be a `type` (and the `type` above)
This is a bit of a hack, but I think it's better to move the logic to a new method.
this is not needed anymore
`eval_otp` should be `eval_otp`. You should also have a `mlvl_confids` which is passed to `mlvl_confids.append(confidences)`
I think this should be `kube-ipvs0`
I think this is the wrong place for this.
I think we should be consistent and use `resource` here.
It looks like this test is testing the same as the `testing.T` test case. Is that intended?
I think we should also add a check for `JSON_DATA` here.
I think this should be `IScopeManager`
Should we make this a field? I think it's not a JSON object, and it's a JSON object.
We should not be changing the API here.
I think this should be a `Map` instead of a `Map`.
I think it would be better to use `_poSSwitcher.ForkchoiceUpdated(newHeadBlock!.Header, finalizedHeader);`
I think we can remove the old `diskImporterDiskName` field from the `disk-importer-` namespace.
I think this should be `sdf = self._internal.index_scols`
There is a typo in "Baz" - it should be "type of map[string]interface{}"
This is a bit weird, why not use a method for the result of the method?
I think we should rename this to `ChannelImplementation` to be consistent with the other ID in `ChannelImplementation`
Why not `removeFiles`?
why is this change in idxCurrentSort?
I think it would be better to use the constant `IMPORT_ENABLE_PATH` here.
why this change? this is a change in behaviour
convert_to_timestamp should be a list of keywords.
I think it would be better to have a method that returns a `Optional` instead of a `Optional`. Then we can have a `if`.
I think we can get rid of this too.
Is this the correct way to repeat the name? If so, can we name it `metaTaskExec`?
Why is this necessary?
(style) line over 80 characters
I think we should be using the FIPS module for these, e.g. `ADIOS_CPP.h`
Is this just a cleanup?
This is not right. If the `c.leaf.remote` is nil, then `c.leaf.remote.Hub` will return true.
why is this removed?
I think we should use the `<%= trail.unstarted?>` instead of the `a` tag.
why do we need to call `Stop` here?
I think it would be better to use `pkg.util.GetDev("Warning: the provided docroot at {}, docrootRelPath)` instead of `pkg.util.Dev("Warning: the provided docroot at {}, docrootRelPath)`.
I think we should use `log.Error` here.
I think this is not needed, we can remove the constructor.
aside: why is this needed?
It's not clear to me why we should include thesexp and not include thesexp.
I think it would be better to set the `REQUESTED` as a property of the `ChangeForReader_t` instead of the `REQUESTED` object.
Why not just `lodash`? `lodash` is a `WordPress` and not a `lodash`.
I think we should keep the `public` keyword here. The `avroSchema` is not used in the `avroSchema` class.
nit: can we move this import to the top of the file, so that it's not needed anymore? `GoogleUtil/svg-icon` is already imported from `GoogleUtil/svg-icon`
I think this is not correct. `assert dtype is None` is a bit confusing.
This is a bit of a hack, but I think it's better to have a method that returns a `null`.
`12288` is a very long-term solution, can we change it to `[0]`?
Why is this removed?
I think this should be a logger.warning
This was removed because it was missing from the `<script>`
zip is not a part of the name, it is not a requirement.
This is a change in behavior, right? I don't think we want to have a `reason` here.
I'm not sure this is the correct namespace.
I think it would be better to have a `TLS` argument here, and have it be `TLS`?
I think we should be able to remove the `res` here, since we are not setting the response to empty.
I think we can remove this now.
I think this is the wrong thing to do. The category manager is not the same as the category manager.
Why are we making this public?
What's the reason for this change?
Is this variable used anywhere?
I think this import is unused.
Not sure why this is here, it's not a problem, but it's not a problem.
I think this is a leftover from the previous PR, but I think it's better to do it in the future.
This is not the same as `lookup.Protocol() == address.ID`.
@matt-gardner How about `google_api.go`? `google_api.go`?
I think we should be able to remove this "maxrequestbody" bit and just call it "rendering"
Why is this being changed?
Could we use `dialect.dialect` here?
This is a breaking change.
I think this class is not needed, it's already there in the base class.
@deads2k @tnozicka this is the right place to put this, but I don't think we should do this. I would say we should just add the `certificates` to the `ActiveRecord` and `ActiveRecord` to the `ActiveRecord` properties.
Shouldn't this be `&tmp`?
I think we should use `keyField.schema()` instead of `keyField.schema()`
This is the only change that will lead to the `Status::Error` error. The `Status::Error` will be used for the `status.ok()` case.
I think this should be `jrpc "github.com/chaos-mesh/pkg/bpm"`
We should keep the old signature to not break existing users.
This import is unused.
I think we should not have a `buffer[:0]` here. The `lookupPath` is not always defined, and we should be able to remove it.
Is this a typo?
Is this a debug message?
I think this is not needed
I think we should also check if `this.flowFinished` is set to `true` when `this.flowFinished` is set.
I think it's better to use `StringUtils.isBlank` instead of `WorkflowIntervalInSeconds`.
Why are we adding this to the list of supported link commands?
@danrot what do you think of adding the param param to the doc?
Please remove this extra space
I think `getAttribute` is a better name for this attribute.
Is this change necessary?
This is not needed, we set the default value to `True` in the default constructor.
Should we make this `.freeze`?
Can we make this a loop?
I think this is the only change that will be needed in the future.
Why is `char.empty()` needed?
This should be `JSONBool`.
Why do we need to check if the previous version of `sampled` is `None`?
This is a bit confusing, as it is a bit confusing to have a method on the `IS_canonical_controller` but I think it's a bit confusing to have a method on the `IS_canonical_path` but I think it's a good idea to have it in the `IS_canonical_path` method.
Do we need this?
The limit is already closed in the `posNext` variable, so it is not clear to me why this change is needed.
I think this is a good idea. It's not a good idea to check if the `checkAvailableStock` is true.
I think we should remove this file. We don't have to do it in the PR.
Rails/InverseOf: Specify an :inverse_of option.
Is this a typo?
Should we use `assertThrows` here?
`config->http_proxy` is set to "". Shouldn't we check that `config->http_proxy` is set to "" before setting it?
This is not a bug, if `! empty($settings['height'] == null) {` is true.
I think we should avoid using the old version of the code and just use the new version in the code.
This is a bit of a hack, but I think it would be better to split the logic into a separate `splitSize` and `splitSize` into a separate `splitSize` and then just do `splitSize = Long.parseLong(options.get(TableProperties.SPLIT_SIZE))`
I think this is not needed.
You can use `varMap["result"]` instead of this if statement.
I think this should be `_commands["GET_CONTEXT"] = ('GET', '/session/$sessionId/moz/context")`
Nit: I think we should just throw `encoding` here, since we're not logging the encoding.
I would suggest to add `positional=False` to the description of the description. It's not clear what the best practice is to use here is when the default value is `False`.
This file is not used anymore
I think it would be better to make spark_session_local a constant.
Maybe we should just make this a string.
I think we should change the name of the test so that it can be an adjective when we change the name of the test.
this is not needed anymore
I think we need to keep the old parameter as well.
Can you please remove this empty line?
Why change the name of this variable?
Can we use a larger variable name?
This is not needed.
can we use a more meaningful name?
Why is this being removed?
I think we can remove this change
This is the only line changed in this file.
Why isFirstAdmin removed?
I think it would be better to keep the `Type` keyword here, and have the `getClassType()` method return the same thing.
I think this is a leftover from the original PR
Should this be `json:"passphrase"`?
What's the difference between `args.class_wise` and `args.add_argument`?
Why not use `$rootCategory`?
This is the only change that affects TF providers. I think we should keep this here.
I think it's better to move the `config` import to the top of the file, and then use it in the `template` module.
I think this should be defaulted to false, right?
Remove empty line.
Please also update the corresponding field `StaticNodes` and `RemovePeer`.
I think this is a leftover from debugging I think.
Could we add a spec for this?
Is this change intended?
This is the only change that will break existing code.
Please create a JIRA to track this TODO.
`this.process` was not being set in this method, so it was never set in the constructor.
This could be a single line string.
This is not a very good idea. The only potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential potential
`html += tab424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424
I think this test is not necessary. The test is testing the number of elements in the ``test_linux_to_root``.
I think we should call `TlsHandshakeHook` here.
This is not needed.
I think it would be better to use `getUrlFromRouteCache($type, 'id')` instead of `getUrlFromRouteCache($type, 'id')`
I think this should be in the `Validate` method, not here.
Does this mean we can remove the `actpool.Add(act)` call below?
I think you can just use `Aggregate(StackTraceUsage.None)` here
@jackfrancis can you check this test case as well?
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
Why was this removed?
I think it would be better to return a `str` here and then do `return tokens.string)[1:-1]`.
I think we can live with this for now, but I think we can live with it for now.
This is a breaking change. We need to keep the old behavior as well.
This is a breaking change. I think it's better to move it to the `else` block.
This is the only change that will be needed in this PR.
@deads2k i'm not sure if this is the right fix.
Why was this removed?
I think this is a leftover from the original PR
We should also add a `using` statement here to make sure we don't accidentally add a `Filter` param.
I think this should be a `@param`
This should be `__construct()`
I think we can just use `readdirSync` directly.
Why is this change needed?
Please remove this file.
I think this should be a `private` constant, since it's only used in one place and not all other classes.
I think we should remove this from the `Oracle` package.
I think this should be `:host_tags             `, since it's part of the host.
can you add a space after `for`
I don't think this is right. I don't think we need to do this. I'd just do `while(currentCulture == 'zh-tw' || currentCulture == 'zh-hk')`
nit: `QueryVisitor visitor`
Line is too long. [81/80]
This is a bit weird, why not use the `os`?
I think this should be `Object.WithSelector`.
`init()` is a better name. I know it's a `context` but it's not a `context` but it's a `context` but it's not a `context`.
I think this should be in a different PR, but I think it's better to have a separate PR for it.
We should avoid this warning if it's not a valid value.
This is a bit weird, why do we need to do this?
Can you add a `TODO` here?
This should be `Version`
@gianm @mmaxim this is the right fix.
@michaelkuhn Do you know why this change is needed? I think it's better to remove the ChecksumAddress method from the `ChecksumAddress`
HeaderRestart is a generic name. Can we use something like `HeaderRestart.Length`?
I think it would be better to have a `__new__` method that does the `.__version__` and use that instead of `.__version__` to call `KeccakHeaderHeader`.
@smarterclayton do we want to add this to the `RawExtension`?
Add `#include` here to ensure that the `C` is not available.
This file is not used anymore.
This is a bit weird, why not use the local path directly?
`alias` is not used in this function.
`skipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskipskip
I think we should remove this event.
I think this is not right. The value of `value_size` should be None, not None.
I think we should also add a `SetTimeout` field to the `created` field.
should we also include the usual `WindowText` in the list?
I think it's better to use `cast` here.
(uint64_t)mmap_errors -> (uint64_t)mmap_errors
Is this change intended?
This is a bug fix. The previous code was breaking the first if statement.
Why is this needed?
Why is this change necessary? I think it's the only change in this PR.
I think it's better to say "if quality matches. This is not allowed"
I think we should pass the config here, instead of passing it in.
I think we should be able to remove this now that we have the `label` field in the `aria-hidden` namespace.
`multi_epochs=mlflow` should be fine
Should we also mention the `left` in the name?
We should import this file from .execution_plan.intermediates_manager
I think this should be `isinstance(element, dict) or isinstance(element, dict)`
I think this is not needed.
I think we should do the same for `context.Context` and `context.Context` here. We should do the same for `getRequest()` and `getConfig()` in `metricsClient`.
Do we have a test to cover this case?
I don't think we need this file.
We should probably change this to `dep BY trigger_dependencies WHERE dep_status`
Please add a license header
Should this be a constant?
Can you move this to the top of the file?
I think this should be `log.debug("Freed from parent console process.")`
Can you add a space after the `:` and before ` - see:`?
nit: can we use `Math.round(minutes)} mins` here?
How about adding a log statement here?
Did you mean to leave this in?
Do we need to keep the `HiveNamespace`?
I think this can be simplified to sleep(1)
I think we should return KV version in the error message instead of just returning KV in the error message.
I think we should keep a constant forV0.
I think this is the actual fix.
remove empty line
I think this is the wrong place for this.
This is the main change.
I think this function should be moved to `HostFactory` and `HostFactory` can be moved to `libp2p.Option`.
I think we should use `goDurationDuration` here.
I think we should setLanguage on the fly here instead of creating a new one.
@deads2k i'm not sure this is the right change.
This is a change in behavior, but I'm not sure what the revision is. @smarterclayton @mheon, @gmajoulet can you confirm?
This is the same thing as the `accepted_if` above, but it's not really a `&&` so it's fine.
Is this a typo?
I think we should use a constant for this.
This should be a separate commit (see above).
I think this is not needed, you can just do `@options['HOSTS'][name]['pe_version']`
This is a change in behavior, but I think it's better to make it a static variable.
This was removed because `StartTime` was already being used in the `Appenderator`.
This is a bit confusing to me, as `dump_puppet_log` is only used in `is_pe` method. I think it would be better to check `is_pe` first.
do you need to make a copy here?
I think this is a leftover from the previous commit.
I think we should keep the `ValueTask<Keccak?> SendTransaction(Transaction tx, TxHandlingOptions txHandlingOptions);` here and below.
I think we should use `NamePiece` here.
Is this change intentional?
Is it possible to have a test that has the `InstallCRD` set to true?
I think we should move this to the top of the file.
This is a bit confusing, as we are returning nil if the result of `rescue` is nil, and we are returning `nil` if the result of `line` is nil.
I think this should be split across multiple lines.
This will not work for other platforms. I think we need to remove the indexes from the repo.
This is a bit of a hack, but I'm not sure how to test it. I'm not sure if this is a good idea.
I think this should be `if (this.toolbox_.position()) {`
This is not right. ReSharper disable it is not a pointer, it is not a pointer.
I think we should use `dbConnection` here.
This is not used anywhere.
you can remove `@sig` now that it's unused
I think this is a bit confusing to have a `@PolicyRule` annotation for the `v2` flow for the `v2` flow. I think we should just have the `@PolicyRule` annotation for the `PolicyRule` and not have the `@flow` annotation for the `PolicyRule` annotation.
I think you can remove this function entirely. It's not used anywhere else.
I think this is not the right place for this. The `Active Execution` is used for the `step` variable.
I think this is a good candidate for a better solution.
why did you change this?
why remove this line?
This needs to be moved up to the `#ifdef _WIN32` below.
Is this change necessary?
Is this a bug fix?
`first` is not needed anymore, `max` is already imported.
@dvoytenko I'm not sure about this. Is it possible to have a visibility processor in the task?
This file should be removed.
Is this the right error message? I think we should be more specific about the error message. I think this should be something like: `FIPS region not allowed in ARN`
These two test_tools.lambda_stubber is already in the core, so you can remove them.
can you add a license header here?
currLimit is a float64, so you don't need to pass it to the base64.
I think this is the wrong place for this. The `RSpec::Core` should be used in the `Expected` class.
Can we use a more descriptive name like `podnetworkchaos_count`?
I think we should just use `codecs.register(lambda name: codecs.lookup('utf-8') if name == 'cp65001' else None)`.
This is invalid.
Should we use `driver_name` here?
No need to specify `# NOQA` here.
Can we make this `data_Widget`?
This was a bug, right?
I don't think we should be changing this here, we should just pass the `blockNum` to `backendRes`
This is a bit weird, why do we need to use `spire_backoff` here?
Nit: please move `#include "in_link_in_query_in_query_in_query_in_query_for_in_query_for_query_for_query_for_query_for_query_for_query_for_query_for_query_for_query_for_query_for_query_for_query_for_query_query_query_query_query_query_query_query_query_query_query_query_query_query_query_query_query_query_query_query_query_query_query
I think we should be using the `go v2.go` version here.
I think this should be `GroupGroup` and not ` ALWAYS_UPDATE`. The caller can know what the function does.
I think this should be `tab difference at`
I think this import is unused.
I think this should be done in a separate PR, but I think it's better to move this logic to a separate PR.
Shouldn't this be `fmt.Fprintln(os.Args[1] == "-h" || os.Args[1] == "-help"):`?
InitialPackageDir is not used anymore
I think we should be able to get rid of this workaround. We'll need to revisit this for now.
I think this should be moved to the 15 *inf* section, since it's used in a few places.
I think we should add `@since` annotation here. We don't want to add any other options for the `@erms` annotation.
This is not needed.
I think this is not needed. You can just use `sendAll`
Is this needed for DAGSTER_RELEASE?
This is a bit weird, why are we doing this? I'm not sure if it's worth it.
Shouldn't this be `EnableLogging bool`?
I think this should be `evloop_latency_ms`.
`_getHash()` is a bit confusing, why do we need to use `_getHash()` here?
what is the reason for this hack?
I think this is a good idea. It's not a big deal, but it's a good idea to have it in the interface.
This is not needed.
can we call this `current_user.id` or something?
I think it would be better to do `list[...]` instead of `or` here. Also, I think the `or` should be moved up to the `has_amount` function.
@smarterclayton I think this is the right place for this.
Revert this change.
This should be a private property.
Why is this change needed?
Is this change necessary? The cast can be removed if it's not needed.
Is this still needed?
This is a bit weird, why do we need to check that the copyrights are being performed?
I think this is a bit confusing, as we are not using `skip_links` as a `<%= t/skip_links %>`
This is a change in behavior, right? I don't think we should be using the `GetPhysicalDeviceDisplayPropertiesKHR` here.
I think this is a bit confusing. IsDockerEngineRunning() is a very generic name for the flag?
I think we should use `get_string_by_dialect` here, as we have 3 different places.
This is a bit confusing, as it's a `*` in the name.
act_cfg is a number of times in the codebase, so this should be moved to the top of the file.
I'm not sure if this is the right way to do this. This is a bad idea, but I'm not sure if it's worth it.
Why not just `folly/ssl/core/v1.h`?
I think this is a little hard to follow. It's not a great idea to use a `name` property for the `dom` object.
Can we remove the row?
I think this test should be moved to the `describe` block above.
I think this should be a `Account::Access`, not a `Account::Access`.
why is min_x 0?
I think we should also check for `batchSize` here, as we do in `maxp`
This is a bug fix. The key is already added to the `Internal` field.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this is a leftover from debugging I guess?
Why did you change this?
why is this a pointer?
I think we should not create this method, it will return theMarkerTransaction instance.
`RequestDefaultErrorMessage` should be placed inside `src/service/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/
I think this is a good change. We should just remove the top-level test.
If this is the only place where we need to do it, we can remove the `hostIP` condition.
you can remove the `/` here and just use `application/opensearchdescription/`
I think this is the only change that will be needed.
I'm not sure this is the right fix. It should be in a separate PR.
I think this should be `LOG.info("TableMetadata updated = file.file() != null ? "base.file() != null ? " : metadata;`
This is the wrong place for this function. You can do `mlvl_tensors[i][batch_id] for i in range(num_levels)` instead of the else.
I think this should be a `strconv`
I think we should add this to the `log_path` below.
Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
I think we should remove the `clear` here.
I think this is the only way I could see the `causalConsistency` value in the code base.
Is this change required?
can we use the value from `service` to make it more explicit?
Nit: I would prefer to have this as a constant, e.g. `Namespace: "", ""`
$this->array is not defined here.
I think this function could be moved to `nnictl create/catch` and `nnictl create/catch`?
I think we can remove `class NotificationHolder` and just call `notificationId` directly.
I think this import is unused.
This is a breaking change.
Should we do a similar check in `setUp` ?
no need to add `// +build !` to `// +build !`
I think this is the only change that affects TF providers.
should we add Options('acme' here?
I think we should keep the previous version as `,"` and then replace it with `\n` as the default value (i.e. `\n`)
I would use `set of bin edges` here.
I think this should be `throw new KeeperException.NoNodeException("No collection found at path: " + path);`
I think we can drop `download_url` altogether now
This is a bit odd, we're passing in the `--Detected` flag to the `Bolt::Logger` struct. Is that what we want?
This is a bit weird, why do we need to filter the options here?
I think we should just delete the delete here, we can just delete the delete.
This is a bit confusing, why do we have to set the `rowatile` value to 0?
I think this is not needed.
I think this should be `if in.HTTPMatch != nil {`
The `observers` is not the same as the `relationship` (because it is a `URL`).
Maybe rename this to `optional`? `optional` is a bit confusing for a user to read the code.
This is a bit of a hack, but I'm not sure how to handle this.
The `DoubleGauge` is used in the code base, so I think it's better to remove it.
Why is this change needed? Is it related to the commit?
I'm not sure if this is the right fix. It should be: if (p_jmsg["compress_method"] != nullptr) { ... }
Should we return if `executablePath.startsWith(getContainersPath()))`?
Please add a `TODO` here.
I think this is a leftover from the previous commit.
I think we should be using `t0` instead of `t0`.
The solid colors are supported. The description says it's an enum.
Can we use the `setupTests.ts` helper here?
This is a bit of a hack, but I think it would be better to do a `continue` check here.
why is this class removed?
I think we should change this to `new PrometheusMetricBuilder()`
Why not just use `! empty()` instead of ` &&`?
I don't think we need to do anything if the segment is NULL.
I think this is not right. We're going to want to check for the `user_data` in the first place, but not for the first user.
I think this is a leftover from debugging...
This is the only change that affects TF providers. I think it should be here.
If you're using `braille-patterns.cti` here, you should also update the `TABLES` field to include the `braille-patterns.cti` in the `experimental` table.
Why remove this? It's not used anywhere.
I think this is a leftover from the PR.
Use `if (...)` instead of `if (...)`
This is a bit confusing to me. If we're going to have a `paginate_by_sql` that is used for the job, then we should probably just call `.to_sql` here.
Unused method argument - `_tuples`. If it's necessary, use `_` or `_tuples` as an argument name to indicate that it won't be used.
This is a bit weird, why not just use `return &processChunkMsg{chunk: E1beta1, E2beta1, E2beta3, E2beta3, E2beta3, E2beta3, E3beta3, E3beta3, E3beta3, E3beta3, E3beta3, E3beta3, E3beta3, E3beta3, E3beta3, E3beta3, E3beta3, E3beta3, E3beta3, E3beta3, E3beta3, E3
why is this changed?
"implemented" is not implemented.
This is a good candidate for a helper method.
I think this is not correct. It is not a scheduler messages, but the messages are accepted.
this is wrong, we should not have this in the constructor
I think this is the wrong way to test this. The `HttpHandlerDiagnosticListener` is still a `Pipeline` so it should be removed.
The `HttpParameterType.BODY` is used in a few places, so it should be removed.
This is the only place where we want to do this.
can we make this a function that returns the status?
I think we should be using the memory pressure could be decreased until the catchup service is complete.
this is not the same as the testing case, right?
You can use `this.getState(collapsibleColumns)` here.
I think this is a bug fix. It should not be done here. It is not possible to have a `stop()` that is not a pinging one.
Should we have a constant for this? I think it's a little bit confusing to have a `user.AuthConfiguration` that does the same thing.
This is not a public API, but it is not a public API. It should be added to the API review.
Can't we just use `testSuites.js` instead of `regex`?
I think this is the only place where we call `CreateRepo` is called.
@deads2k @jsoriano This is the right place to put this right here. I think we should just move this to the `auth` package.
What is the difference between `element` and `0`?
Why is this necessary?
I think we can drop the `!` here
why not using `this.table.io`?
this should be done in `initLocation`
remove empty line
I think this should be moved to the `Log` package. It's used in the `Log` package and not in the `Debug` package.
This should be `openapi-gen=true` and not `v1alpha1` right?
Please use `new RpcApi(string, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int
I think you can remove `checkCoinbase` now.
This is a very minor change, but I think it's better to move it to the top of the file.
I think this is the wrong way to fix this.
I think this is not the right way to check if `guid_save` is true.
Shouldn't this be `context`?
just curious, why the change here?
We should probably have a test for this, or at least a test for `acquirer[0]`
I think this should be `RSpec.warn_with <<-WARNING.gsub(/^ +\|/, '')`
I think we should be able to use `const MessageTimeOut = false` here.
This is a bit of a hack, but I think it's better to move the `actually` check out of the `actually` loop, and then just move the `actually` loop to the `actually` loop.
This field is not used anymore.
I think we should just remove this function.
What's the point of this change?
Is this needed?
I think it's better to keep the `run_example_specs_with_formatter` method and add a new one.
why the API change?
I think we should also check for `OS_VOL_SUPPORT`
Why not just return NULL?
Why is this necessary? I think the `doc` variable should be removed.
Is this a typo?
This is not a valid value. It's not a valid value.
Could you please also update the `DATEF` variable below?
@deads2k I think we should just remove this check and replace all the other occurrences with `r.options.Creator.Create(obj, subresources...)`
This is a bit confusing to read. Why is this being split across two lines?
Is this used?
I think this is the only change that needs to be added to this PR.
I wouldn't do this. If the "addons" option is not set, it will be set to 1. This is a very simple code path. If the "addons" option is not set, then it should be set to 1. If the "addons" option is set to 1. If the "addons" option is set to 1. If the "addons" option is set to 1. If the "addons" option is set to 1. If the "addons" option is set to 1. If the "addons" option is set to 1. If the
Can you move this to the bottom of the file?
Please remove this.
I think this should be `subst[tv] = v.cs.f.Fresh()`
I think this is a bug fix. We should not be able to remove the `wxLang` from the `wxLang` if it's not needed.
Metrics/LineLength: Line is too long. [82/80]
This is not the right place for this, but I think it's better to just add this to the `__init__` method.
I think this is not the right way to do this. `.branding.dig` should be enough.
Should we make this a constant?
I think we should check if the folder exists before calling the API. Shouldn't we check if the folder exists and only if the folder exists?
Would it be possible to have a `contact_us_url` url here instead of a `contact_us_url`?
This is the only one I'm not sure about. I'm not sure if it's worth it.
I think we should also add a `grpc` param to the `grpc` param.
Why do we need to check for `delete` here?
I think this should be called `remove_all_changes`
I think this is the only change that will be needed in this PR.
I think it's better to use the `GroupMember` as the name of the file. It's not clear what the user is doing.
You can use `SpanType` here.
We should probably add some description about what this setting does.
Can you use a different range here?
This is a bit of a hack, but I'm not sure how to handle the `8` case.
This is not needed. It will be a problem when the user doesn't have a environmable instance.
Use the new Ruby 1.9 hash syntax.
Why is this not a `return`?
Nit: import sorting
I'm not sure if this is the best place to put this, but I'm not sure if it is a good idea to have a `delete` instance called `additionalTags`. I'm not sure if it's a good idea to have it here.
Why is this dict needed?
Is this needed?
This is not a boolean, right? Should never be true.
I think it would be better to have a separate commit for this one.
Why do we need to call `insightfil` here?
I think this is not the right place for this, since `is_round_started` is called on `notification` (which is why `is_round_compil` is called on `is_started`).
I think this should be done in the `Validate()` method.
These should be grouped with the other `Symbol`
This is not correct, `\u2E00-\u2E7F\\'` is `[0]`. I'm not sure if this is correct.
Please add a license header here.
I think this is a leftover from the previous PR, but I think it's better to move it to the `out_dir` list.
This is not right. The `\0` check is not needed, it is not needed.
I think it would be better to have a method that returns the boolean
This is the only change that affects TF providers. I think we should be using the `https.Path` here.
I think this is the right fix.
Why not `ErrorListener`?
This is not a good idea. We should not use the default value for the `ResourceType` property.
I think we should also add a `config.ChainID()` method to the `BlockchainCtx` class, and use that here.
I think this should be `NativeClient`
I think it's better to get rid of `violation.get('rule_name', '')` and just do `violation.get('resource_name', '')` and then just do `violation.get('rule_name', '')`
I'm not sure if this is a good idea. The `texture` is a `Long` and the `texture` is a `Long` (and the `texture` is a `Long`). If we want to be consistent with the `texture` (and the `texture` is a `Long`), then we should have a `Long` here.
I think we should also add `self.available_to_epoch` to the `artist_msid` model
This is a bit odd. I think the `s_val` variable should be removed. `strncpy` is the only place where `tmp` is used.
I think we can move this package to the `utils.go` file.
this is the fix.
I think we should keep this indeed as we're not using it in the RatingConfig anymore.
@michaelkuhn Do you know why this is OK?
We should add a case for `bucket` here.
Line is too long. [81/80]
(style) spaces required around that '=' (ctx:VxV)
I think this is a bit confusing. If you are going to check for `with_nms=True`, you should check if the `with_time augmentation` is true. Maybe `if (with_nms=True)`, and if it is not support test-time augmentation, then `if (with_nms=True)`, and if it is not support test-time augmentation, then `if (with_nms=True)`.
I think this is a leftover from the previous PR.
I think you can remove `content-pages` and `content-drilldown` altogether.
I think that we should remove retrying from the top of the file. It is not used anywhere.
Can you add a note that this doesn't need to be added to the `Config`?
I think this is the wrong place for this, because `Removed_type` is a `sdk_type` and `sdk_type` is a `sdk_type`.
I think we can remove the `configMaps` parameter here
Plz add a blank line between tags and summary for better readability
I think this is a leftover from the previous PR, but I think it's better to make the change.
i think it's better to do this in `softmax_param.clear_loss_weight()` and avoid the call to `clear_loss_weight()`
This is the only place where we use the conflict suffix. Is that correct?
I think we should be able to remove `apply_prep` completely completely, since it's not being used anywhere
nit: remove extra spaces
I think this is a good idea, but it's a good idea to test the behavior of the `copy_filename` function.
At some of the other call sites can you change this to `ResourceExpired`?
This is a bit weird, why not use a `static` function?
I think we can remove the `dataFee` variable now.
Can you explain why this change is needed? self._size is not a size, right?
@deads2k i'm not sure this is the right place to change, but I don't think it's necessary to change this.
I think we should still have a `ti.offsets` here
I think this is a leftover from debugging I guess?
was this a bug or just copy paste error?
should we use `/usr/local/ghc_version` here?
This change is not related to the fix, but it should be reverted.
Does this change the default behavior? If so, should we update the default value to `loss_weight=1.0`?
This should be changed to `if serialNumber != 0`.
This should be `public`
@jridgewell I think this is the correct way to test this. The `rerender` is not needed anymore.
Why do we need this?
I think this is the only change that will break existing code.
The `blockAPI` is already in the "last mile" block.
I think it would be better to use `AttributeCode` instead of `AttributeCode` here.
This file is not used anywhere.
I think we should add a `DurationField` to the error message.
Should this be `s.err != nil`?
I think this should be moved to the `HIP_user_annotation` function.
I think we should remove this.
This is the only change that affects TF providers.
Please update the `IptablesLockTimeoutSecs` field to `IptablesLockTimeoutSecs` and `IptablesLockTimeoutSecs` field to be consistent with the other `IptablesLock` field.
I think this is not needed.
Is there a reason why we can't just use `gles2_tex_shader` here?
Why is this change necessary? I think the `decode` method should be called `collection_path`.
Is this necessary? `respond_to?(:_clear_types)` is called when `respond_to?` is `None`.
This is not a good idea. It's a good idea to add a space between the `if` and the `:`:` operators.
please fix the indent
(style) trailing whitespace
This is a bit weird, why not use the method directly?
I think this method should be private.
no need to add `!linux linux,android`
I think this should be `if v := range i.w.Sources[k]; ok` instead of `if v == ""`
This fix is not needed anymore
Why is this replace with "replace('{0}', installation.Name + ' + installation.Version);".
I think this is the only change that will need to be changed in this PR. The current code is not good.
this is not needed
This is the only change that affects this PR.
Using `today.getFullYear()` would be more readable.
I think this is not correct, if you are already doing `ipsets` you should remove it from the `if` below.
I think this import is unused.
The `guid` should be moved to the top of the file.
I think it's better to use the `use` statement here.
This is a bit odd. `(uint32(col))` is the same as `(uint64(uint64(col))` and `(uint64(col))` is the same as `(uint64(uint64(col))`
I think this is still not needed, the cache should be removed.
Please remove the extra blank line.
I think this is a leftover from the previous PR. We should be able to remove the `UpdateEvent` from the `UpdateUpdateUpdateEvent` and just use the `UpdateUpdateEvent` here.
Do we need to add this to the migration?
I'm not sure this is the right fix. The problem is that the column names in the index index is not in the index itself.
This is not the right place for this, but it seems like we should be using `updated_at.to_i` instead of `updated_at.to_i` here.
I think this is the wrong place for this. The `appExe` variable is used for the `workingDir` variable.
I think we should log the whole exception here, as we are not going to be logging the exception. We should log it in the `StandardCharsets.UTF_8` message.
I think this line is not needed. if you import `import astroid.brain as subscribe_ptr` and the `import astroid.exceptions` line, you can remove the line entirely.
This is a bit confusing, as the `_corruptedRequest` check is not needed.
I think this is a leftover from debugging...
I think this is a leftover from a previous PR, but I think it's better to make this abstract and abstract.
can we add a spec for the new analytics plans?
I think this is a little hard to follow: `nano::transport::mapped_from_v4_mapped_address`
Why do we need this change?
Why not ` ChromeDriverCommandExecutor`?
In theory, if you have a Enum class, it means that the type is an enum, it will never be null.
It's not a good idea to use a dict here.
I think this is a leftover?
not sure if this is a good idea.
This is not the right place to put this, but it is a bit confusing to have a log here. If it is a different log, then it should be used in the `logIdToSend_` method.
This is not the same as `prepend` but `T` is the same as `T`.
This is a bit of a hack, but I think it's better to make it a `static`.
This is a bit weird, why not use a `string`?
I think this should be a warning.
I think we should use `HttpSpan.Dispose()` instead of `HttpSpan.Dispose()`
I think this should be moved to the `if (FrameworkDescription.isDebugEnabled()) {` block above.
nit: sort alphabetically please.
Why not use `CreatedId` directly?
Align the elements of a hash literal if they span more than one line.
I think this is a good example of how we should handle this.
I think this should be `checkServiceMatch(treq.Service, response.Header)`
I think we should also check for `protocol_type` here.
why is this needed?
This should be `_memoryLimit`
Why are we deleting the partitioning here?
I think this should be `ctx.Data["Title"] + ctx.Tr("dashboard")`
This is a change in behavior, but I think it's a good idea to have a `Simple` button that is used to implement this, and then we can't do it in the future.
Can we use the `continue` variable here? We don't want to use the `continue` variable in the first place.
I think this is a leftover from the previous commit.
nit: `[options.compareStartDate]`
This is a bit confusing, as you're already setting `Clear` on line 435, why not just use `_sharedStringMap.Clear()` here?
Does this need to be in the `newHandler`?
This should be removed
We can probably just do `expect(analytics).to be true` directly in the analytics block and remove the `expect(analytics).to be true` case below.
why not `if isinstance(key, (str, tuple, list, pd)`?
This is the change that fixes the bug. The previous behavior was to create a new one, and the new one was the new one.
I think we should use the `pages` helper here
I think this server might be too short.
This should be a constant
Is this right? It looks like the spec has a different name, and if so, it should be `'transpiles a YAML plan from a plan name'`
remove the TODO
I think we should keep the type here, as it is used in other places in the tree. So, we can just call it `IMvxViewModel`.
Why is this necessary?
Why did you change this to int?
This is a little weird, we are returning an error if nothing is returned.
This is a bit of a hack, but I think it's better to move it to a new file. I think it's better to move it to a new file.
RegistryURL is not needed anymore.
I think this is not a typo
I think it's better to just check if `IE11` is true and then we can just ignore it.
I think this check is not needed. It is not needed anymore. It is already called in `reverseBytes`.
This is the only place where we need to do this.
I think this should be a constant
This is the fix. The problem is that if the column has been read, the column will be read. The column will be read by the table table, which is not the case.
This is not a valid test file, so it should be in the `docker-file` directory.
This is the only change that affects TF providers.
Is this a change in behavior?
Why do we need this?
I think this is a leftover?
Why is this line moved?
I think we should just remove the `if` condition here.
I think this is a leftover from previous PR
Use 2 (not 4) spaces for indentation.
This is a change in behavior, but I think it's better to move the logic to the constructor.
I think we should add a `forTable` method to the `cluster-services` table.
Please add the license header
You can use `GetBytes` here. `GetBytes` is a `int`.
Could you remove the space between `)` and `(`?
This is the only change that affects TF providers.
I think it would be better to make this a function and pass it in to `use_legacy_coordinate` (or similarly named functions) to `use_legacy_coordinate` (or similarly named functions) to `use_legacy_coordinate` (or similar) to `_set_iou_thr` (or similar) to `_set_iou_thr`).
why not just do this in the parent model instead of using the bool?
I think this should be `<%= teacher_gravatar section_teacher.bio`
Why not just use `prepareDismax` here?
This import is not needed
I think we should make this a little more explicit. If we're going to make a helper function in the `cliquet.storage_backend` that takes a `permission_backend` as an argument, we can make it a little less confusing.
Could this be `@Nullable`? We should probably be consistent and use `List.null` here.
This is a breaking change. The default dependencies may be in the `IEnumerable<I>`>` but not in the `IEnumerable<I>` because it is not in the `IEnumerable` interface.
I think this is a leftover from debugging I believe.
This is a bit weird, why do we need to add it to the `on` function?
Should this be `opts.spinner.Stop("Error!")`?
This should be a separate commit
I think we should log this message before logging.
Please add a license header here.
Is this change necessary? I'm assuming the type of the name is a set of the same name?
Is this file still in the test?
I'm not sure if this is the right way to go. I'm not sure if it is worth it. I'm not sure if it is worth it. I'm not sure if it is worth it. I'm not sure if it is worth it.
This is a breaking change. I think it's better to move it to the `for` loop.
Can we rename this to `libkbfs.PublicPathType`?
I think this is not the right place for this. We could just have a `template_name` field that would be used for the `@approval` object.
I think this is not needed.
This is the fix.
This is a bit odd, but it's not a boolean.
Why not `Boolean.singletonMap(String domainName, Boolean members)`?
I think this is a leftover from a previous PR, but I think it's better to do ` warn_deprecation(message)`
This is not correct. `blitzPath` is already in the `__dirname` directory.
In the current implementation, `_virtual_vdims` is a `validate` method, so we should use it here.
I think this should be `driver.Error()`
I think this is a leftover from an earlier PR.
remove this, it's not used anymore
I think this should be `if not isinstance(as_index, bool):`
This should be `$deleteModuleData`
I think this is the wrong place for this, since this is a version argument.
I think this method should be private.
Can we add a log statement here?
Please add a license header
Metrics/BlockLength: Block has too many lines. [30/25]
why do we need to add these?
MakeServiceAccount string is not used in this file, it is a bug fix.
Shouldn't this be `_issueLogJsonWriter.CloseResults()`?
This looks like a duplicate of line 567.
This test is failing because of the test coverage of the test suite.
Why is this now changing?
This import is unused.
This is a bug fix.
This is not right. It will return undefined if `onFocus` is `null`
@jridgewell I think this is the right place for this.
I don't think we need this. We can just use `PORT_S3` and `PORT_S3` if we are not using it.
I think this should be `java.version`
What is the reason for this change?
should include "fmt/format.h" here too?
remove empty line
I think we should return an error here, since we don't really want to log it.
I think we should make the same change in `cleanupcleanup`, and then we can use `cleanupcleanup` here.
Why was this removed?
This is not the same as the XML XML.
Should this rather use "good case"?
Why is this changed?
Is this change related?
I think we should make this change in the future.
Why are we changing the order here?
@deads2k i'm not sure this is the right place to put this here?
I think this import is unused.
I think we can just use `newPS :=` instead of passing the `source` as parameter.
`_this.getValue` is always undefined, so this will not work.
I don't think this is the right place for this. We should check if `tabIndex` is in `Optional`.
Wondering if we should just make this a constant.
Why not just change the typehint?
Debug field should be `config:"second"`
I think this should be done in the `UpdateNameMapping` class instead of here. The `table` class is only used in `UpdateNameMapping` class.
This is the fix. The fix is to set the default to 0.
Is it possible to get the runtime types from the list instead of using the existing one?
I think this is not correct. It should be `this.Low = BitConverter.ToInt64(bytes, 8);`
Is there a reason for this check? I don't see it being used anywhere.
This is a bit of a hack, but I think it's worthwhile to have a test that checks if a `NotifyCollectionChanged` is a `NotifyCollectionChanged`.
you can use `TimeDeltaParameter` instead of `TimeDeltaParameter`
Why not call this `callerType`?
I think this should be called `@user.id`, not `@user.id`. We should be able to remove the plan here.
I think this should be a constant.
Please remove this empty line
I think we should remove this line. The `toggleMenu` member variable is used for the `useCallback` function.
Why do we need a newSig here?
Should we use `django.test_pool.pool.TestCase` here?
`1.2.1` is probably more idiomatic, but 2.3.1 is more consistent with `1.3.1`
I think this is the only change that is needed to use `ExtractSomeIfAny`
I think this is a leftover from debugging I think.
I think this is not needed anymore.
Shouldn't this be done in the `__init__` method?
Why change this?
This is not the right way to go. If you don't want to use PrepareRequest, you can use `IFeatureCollection<IFeatureCollection>`.
I would prefer to have preg_match('/^VuFind (\d+\.?)?)?) instead of preg_match('/^VuFind (\d+\.?)$/', $newConfig['Site']['generator'])
I think we should get rid of this line and use `getConfigName()` in the `ZkState` interface.
I think we can remove `CloseableIterable.empty()` from these methods.
Is it worth adding a `Test` class? It's a `ConcurrentHashMap` method, and it's a `ConcurrentHashMap` method.
I think this is a bit confusing to read. Maybe we should just add a `force_log` to the `enable` table?
I think this is the only change that will break tests. We should not run into issues with the test working.
NIT: I think this is a leftover from previous version, so we can remove it from the list.
This is a change in behaviour. The rest is correct.
I think we should add a description here that this should be used for the new `user` parameter. We can also add the `def` parameter to the `updated_no_action_required` method.
This is the only place where we use `go` - which is the name of the package. Is it used anywhere?
I've been using the name `BugChecker` in the name of the service
I think this is not the right fix.
I think we should be able to remove this line.
This change is not related to the fix, but it seems to me it should be reverted.
I think this should be `numAccounts`
This is not needed.
This is a bit confusing, as it is a very specific thing to have, but I think it's better to have a separate function for the `p2p` command, and then use it in the `p2p` command.
This is the only change that affects TF providers. I think we should keep this here.
This is the only place where we use the `cborStore` variable.
I think this should be `self.set(lk, pkg.get(' codebase')).parent == APP_DIR_TEMPFILE_DIR`
This class is used to initialize the `ResponseTypeProcessor` property to `null`.
`feat_is_unconstrained` is a bit confusing, since `categorical_features_is_unconstrained` is a string.
I think this can be removed, since `apply` is not being used anywhere.
I think we should just remove this.
This is a bit confusing. What about the `eventname` field?
Please use `from QWebEngineWidgets import QApplication`
This is a test that needs to be fixed.
should we make it clearer?
I'm not sure if this is the right fix. It should be in the last place in the first place.
Style/MutableConstant: Freeze mutable objects assigned to constants.
Why is this `ConsoleColor`?
I think this is a leftover from debugging purposes?
All should be 0x
This is a bit confusing, why do we need to do it for each command?
I think we can remove this `user_id` too. We don't have to pass the users in as an argument.
I think this option should be in `saleor/__init__.py`
Should this be nullable?
Should we add this to the `apiextensions` package?
I think this should be `pandera<0.8.0`
I think it would be better to use a variable named "secondary" instead of "secondary".
I think we should just call `ThreadPool.submit` here.
Should we also check for managedIdentityClientID?
Should we do this in `BuildOutput.go`?
This is the only change that affects TF providers. I think we should be using `Template.Spec.Containers[0]` here.
I think this should be `host1.example.com`
I think we should use the same logic here. We already have a `Tracer` field in the `ServiceContext` and use that in the `ServiceContext` in the `Tracer` class.
same here, if we get rid of trainer, we can get rid of trainer in the trainer
This is the same as `ledger.store.block_exists` right? Why would you want to change the `&` to `ledger.store.block_exists`?
I think this is the only place where we call `DeleteFiles` in the `removePacks` function.
@jridgewell I've added this as a new column, so I added it.
this should be set to 0 only when the node is not found
This should be `An}-based`
In the past, the default number of times is 10, so the number of times is 10, so the number of times is 10.
I think it's better to use the same array as the one in the `estimators` array.
I think this should be an enum instead of an enum.
this is not needed
Can you add a license header here?
`status` is an object-wide name, so it's an object-wide name.
I think this is a leftover from debugging I believe.
I think this property can be removed now since it is not used anywhere.
This is a bit weird, why not just `calculating.Scheme.Convert(obj, d, nil)`?
This should be a constant.
This is not needed. The `export * from './helpers';` below already exists.
I don't think this is a good idea. There are two `require "#{Rails.rb"` in the `acts_as_editable.rb` files. I don't think we should be using `rb` here.
I think it would be better to have a `upperMethodName` as the name of the class. It's not clear what the `upperMethodName` is for.
Please add a space after the `if` and before the brace.
Do we need to make the center be a global?
Please add a license header
This should be removed.
Should we use `org.assertEqual` here?
This is not the right place to extract the `c == '('` check. It's not the case, but it's not the case. It's not the case, but it's not the case. It's not the case, but it's not the case.
I think this is a bug fix. `c.Wireguard.EncryptHostTraffic` is a bit confusing. Can we just change the condition to `c.Wireguard.EncryptHostTraffic`?
We should rename this field too.
Is this file still necessary?
I think we should update the `driver_schedule` method to use the `name` field instead of the `driver` one.
Line is too long. [92/80]
This is a breaking change. It's not a public API.
I think it's better to add a `skip` method that will skip the CNP.
It seems like this should be `cart.ncr?` instead of `cart.re?)`
I think you can do `&.` here, because you don't need the `.to_h` variable.
I think this should be `get isValidWebDataStreamID`
`leaf` is a bit confusing with `leaf` as it is the same as `leaf`
@tgamblin Do you have a better idea for this? I think it would be better to have a `controlTypes.stop_to('unselected')` and have it return a list of strings and a list of strings.
I think this is the only place where we call `SplitN` in the tag.
I think this is a wrong place for this container. It's used in the container.
I think this is a bug fix. The `shardInfo` is never nil.
I think this is a leftover from debugging...
This is the fix for the sticky case.
I think this is still not needed, since prelude is already in the `packages` block.
I think this is a bug fix.
why not just return the hostname?
I think this should be `250` instead of `Math.maxAttempts < 2`
I think this is a bit confusing to read. If we're going to have a string that's not a string, we should probably return a `Unsafe` object.
Why is this error ignored?
Line is too long. [87/80]
I think we should add a struct to the wait section of the cluster to be more specific, e.g. wait section 1 hour.
Why is the cast needed here? `c_str` is already being used in the `if` statement.
I think we should do the same for `protoFile` as well.
I think it would be better to use `SERIES_DEFAULT_NAME` instead of `SERIES_DEFAULT_NAME`
Should we make this a constant?
I think this should be a `before`
I think you can remove the `@resource` here. We don't have to pass the `iter` attribute to the `name` method anymore.
I think this is a leftover from debugging?
This is not used anywhere.
This is a breaking change. It's not a problem, but it's a small thing to do.
Why is this needed?
I think this should be `tableMeta`
I think this is not right. It should be a pointer to the caller.
I think we should use `QLineEdit` here.
I think this should be removed
@wido can you confirm if the `ipify` is the right location here?
why did this change?
this is called on app init, why not just call the other constructor?
I think we should add a description of what this field is for.
Why is the int record never null?
It's not clear to me why this is necessary.
I think this is the only change that affects TF providers.
This is not a good idea. `options.ignoreUndefined` is the default.
why is this logger logger?
I think we should just remove the `if queue` here.
Do we need to check for nil here?
I think this should be removed. It's not used anywhere.
I think this is a leftover from a previous PR, but I think it's better to remove it from the rest of the PR.
I think we should just call `Ready()` here, since it's not a special case.
Can you use a more meaningful name?
Is this an unrelated change?
Why is this needed?
This is a new API, so it should be a new API.
I think this should be a separate PR
This is not right. `decimal` will be defined as `Object.prototype` if `isUndefined` is true.
composite -> Unused
I think we should remove the defer below.
I think this is a leftover from the previous PR, but I think it's better to use `@author` here.
why is this being removed?
This is a pretty big change.
This should be a class constant.
This is a little weird. I would have expected that `is_todo INT NOT NULL DEFAULT 0` would be true and the `data` would be true.
I think you can remove this method entirely. The method is only called in `renameGroupPlayback`
This is invalid.
@dvoytenko I'm not sure if this is the right place for this.
I think we should use `SYSLOG_INTERNAL_DEDEP_EC` instead of `SYSLOG_INTERNAL_DEDEP_EC`
Is it possible to get the options from the connection?
I think we should rename this to `name`
This should be `isQueueProcessorActive` and not `OPERATION: getUndispatchedFlows`
I think we should remove this
I think you can remove this
why is this needed?
This is a change in behavior, right? I don't think it's necessary to have this in the first place.
I think it would be better to use Math.min() instead of Math.min()
I'm not sure if this is correct. When the NONE field is 0, it will be set to the NONE field.
Why not `getAzkabanURL()`?
I think `mask` should be `oauth2.11` and `segms[i]` should be `None`.
I think we should be consistent and use the standard `pkg/util/byteutil` import.
Please remove debug logs.
The `omitempty` should be removed.
I think this is not needed.
This is the main change.
I think we should use the `plugin.data` helper here.
If this is only called from one place, why not make this async function and call `syncIndexes` directly?
This is a bit of a hack, but I think it's better to move it to a new method.
I think this is a leftover from debugging purposes?
I think this should be `grpExpr->generateCacheKey(cwa);`
This is not a NPE. Can you please use `org.apache.commons.NameUtils.isBlank` instead?
Why not just check for `get`?
This is a bit confusing, as we are not using `file` as a `file` argument.
I think we should be using `nameFile.Split` here.
Is there a reason to have a `Trim` method?
I think this is fine, but I think we should just make this `vcr` and use it in the `Group` package.
I think this is not needed, the `DC_SCOUT_RAIDS` is already in the `#create` method.
Why not just `return (fscanf(file, "\s", attr_value))`?
I think it would be better if we could just use `self.method.upper()` here instead of passing it as a parameter.
Why not keep the version as debug?
I think we should be able to get rid of the `sampleHeight` variable altogether.
`closeTime` is not guaranteed to be `time.UTC`. It is not the case anymore. It is better to use `time.UTC` instead of `time.UTC`.
Shouldn't this be `*tag`?
Can you add a space after the comma?
I think we should use `AppConfig.java` here.
I think we should just remove this field.
I think we can remove this if we have no effect.
nit: I think this is a bit confusing to read.
this is a bit weird, why not use the logger?
This is a new line, can you fix it?
I think we should just default to `max_retrials_to_get_pods`
What is the purpose of this? "Value in product it should contain 255 characters or less."
why did you change this?
I think this is the wrong place for this. The `start_options` is used to check if the file exists and the `start_options` is in the `start_options` method.
This should probably be a `RSolr`
Why not use the `IP` field?
We should remove partial partial.
Why not keep the copyright?
I think this is a bug fix. This is a bug fix. This is a bug fix. The problem is that if the value is not `null` it should be `""`. The problem is that the quote is not `null` and the quote is not `""`.
`client.close()` can be called directly, so you can remove the `client.close()` call.
`Policy` is a little confusing, as it is a string, it is a string. How about `func(string)`?
I think this should be done in a different PR, but I think it's a good idea to make this part of the code.
Please revert this file.
This is a bit odd, as the name is already in the name of the variable.
I think this should be `containerContainsText=_("with %s items")`
I think this should be `sh.PATH` instead of `PATH` since it's a `PATH`?
I think this is the wrong place for this file. The `#else` is used for the `#include` below.
Why not just wait for the wait wait when we wait for the wait?
Standards: Please add braces to this condition.
Shouldn't this be `IdentifyTrackBreaks`?
import_mpi4py() is not allowed.
Is this change intentional?
This is not a good idea, but I think it's better to use a `interfaces` interface instead of a `IConnectionLifetimeFeature`.
Why is this needed?
why is this false?
I think you can use `key.append(reinterpret_cast<const>(spaceId), sizeof(spaceId))`
@matt-gardner, I think this is the only change that will be needed for the test-file.js, right?
Why is this change necessary?
I think it would be better to move this to `src/server/Panel.go`
Why remove the *attrs if it's not needed anymore?
@deads2k i'm not sure this is the right place to remove this?
This is not the right way to check if the user has both `incldued_wf` and `incldued_wf`
I think we should use a constant here
I think this is not a valid fix. The `path` value should be used for split split to be used for split split.
I think it would be better to check for the value of the `BROWSING_URI` here, and check for the value of the `if (aURL.startsWith("data:") { ... }`
Shouldn't this be `0`?
I think we can just remove the `unsigned` here.
Is this used?
I think this is the wrong place for this. The `||` should be removed. The `||` should be removed. The `||` should be removed.
Why is this method not being used?
Isn't this supposed to be `IsEip1234Enabled`?
This is the only change that affects TF providers.
I think this is a bit confusing. If you want to show the `None` value, then you can just call `self.show_warning("Invalid Public key")` and then call `self.show_warning(str(e)` here.
`role` is always `form` so we can use `parent` here.
This is not right. It should be in the `else` block.
`PodSelector` is a `string` and `LabelSelector` is a `string`.
I think this is not correct. `minRTT` should be a `dict[str, sample]`.
Shouldn't this be `[GeneratedCode]`?
This is probably a leftover from the Rails SDK
Please use the standard `name` parameter.
Why is this change necessary?
This function is a bit confusing to me. Why is it a function?
I think this is a leftover from debugging I guess.
I think this should be `promptText` instead of `promptText` since it is a `dict` (the `promptText` is a `dict`).
Is this really needed?
This should be removed.
The <msg> 64 is not a valid value, so this can be removed.
Why not use `pb`?
Should this be `:subscriber_id`?
Why not just return the error? I don't see the `go/slack` option in the `client` package.
This is a breaking change.
Maybe we should set this on every iteration?
Style/SymbolArray: Use %i or %I for an array of symbols.
can we rename this to `iceberg.engine.hive.enabled`?
This is the only change that affects backwards compatibility. The only change in this file is that we don't delete the delete.
this is not needed
I think you can remove this line.
Why is `newMode` necessary? The `PasscodeMode` is already initialized in `PasscodeMode.Check` and it is not used in `PasscodeMode`.
I think this should be `final`
`rake secret` -> `rake`
I think this needs to be moved up to the top of the file.
I think this is wrong. The `MinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMinMin
Why is this change needed?
is this still needed?
It seems like this function is not being used anywhere?
timing export will be a big deal if you want to export this.
Can we use the `config` prefix here?
This is the fix.
I think this is a leftover from a previous PR, but I'm not sure if this is a good idea. The `md5.h` header is already included in the `md5.h` header.
I think we should keep the name of the class as it is for now.
I think this should be `SendSpellBarEnable`.
I think it would be better to use `DateTime` instead of `invocation_id`
Should we also add a TODO to remove this
This is a bit confusing, as we are already doing the same thing in `lib/1.1` and `lib/1.1`
This is a bit confusing, as it's a `list` not a `list`.
This is a change in behavior, right? What happens if the `cachedChanges` is set to `null`?
@matt-gardner How do we know that this is what we want? I think we should be using `execute_task` here.
Should we make the `chan` a pointer?
I think it would be better to use a `replicateLogs` or something like that.
In theory, if we're going to use `getFormType()` from the database, we should probably use `getFormType()` instead.
I'm not sure if this is the right place for this. It should be `yum-osconfig-agent`
Please use `String#Equals(String, StringComparison)`
if you are using `useEffect` you could also do `useEffect.import { ... } from 'sinon';`
I think it's better to use a constant for the constant, e.g. `timeReorderingFraction = 1.0 / __version__`
This is not related to the fix, but I think it would be better to move it to the `attacher` namespace.
Please remove this line.
I think this is the only change that will break existing code.
Why are these changes necessary?
This is not a good idea. The `NewtonsoftEscapeJProperty` method is used in a few places, so it should be removed.
I think this should be a warning, not a warning.
should this be a `before_action`?
This property is not used anywhere.
It's not necessary to use R_AS_INT here.
if it is null then you should use `?`
I don't think this is the right place for this. The version should be the same as the default.
I would use `pytest.py` instead of `match`
It's a little confusing to have a test that tests the length of the length of the length of the length of the length of the length of the length of the length of the length of the length of the length of the length of the length of the length of the length of the length of the length of the length of the length of the length of the length of the length of the length of the length of the length of the length of the length of the length of the length of the length of the length of the length of the length of the length of the length of the length of the length of the length of
I think it would be better to throw an `Error: command.throwthrow(throw new ...).quit()` with a `Error: command.throwthrow(command.getName())`
Why is this being removed?
this spec was not able to test anything, but I don't see any tests using it.
This is the only change that affects this PR.
I think this is the wrong place for this. The `test` function should be called in the `common_test.go` file.
I think this can be simplified to catch the `TypeError` instead of catching the exception.
this was the only place where I was thinking of it, but I think it's better to have a separate test for the case where the value of `test/v1.js` was `true`
`BATCH_SIZE` is a `InFlight` so it should be in the `BATCH_SIZE` function.
This should be a single string.
Should this be `configConfigService`?
Please don't change the import of this file.
Is this used?
Why this import?
this is not needed, we can just use `valueOf`
This should be a single line string.
I think we should print the response name here
Could you please change `new BN(systemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystemsystem
I think this is a leftover?
why is this changing? the string is a string, so it should be removed.
This is a breaking change. This is a breaking change. The build was already in the build and it was not in the original version.
This is the same as the above two lines.
Why is this a global var?
I think this should be `this.opts.onUninstall()`
Nit: Can you also move the k8s API package to the bottom of the file?
This is the only change that affects TF codegen. I think we should be using the `type` here.
This is not a good way to get the DynamicMaps with streams. It's not a big deal, but it's a bit odd to see what's going on here.
This TODO can be removed now.
Should this be `using Nethermind.Monitoring.Metrics;`?
I think this is not the right place for this. The type should be `Optional<ConstValue>(right)`
I think we should add a `typeRef.getCorrespondingDeclaration()` method to the `typeRef` field.
This is not needed anymore. `dt.skipLoad("difficultyMorden\\.json")` will be removed.
what if we called this `show_and_report_duration` instead of `show_and_report_duration` ?
nit: remove trailing space
I think this is a good change. We should just make a note to improve the readability.
Why do we need to set it to a list?
Why is this being removed?
It seems like we should be able to remove `Close ctx` here.
I don't think we should use this class. The `Service` class is not used anywhere else in this class. The `Service` class is not used anywhere else in this class.
Why do we need to set `bbox_head` here?
I think we should be more specific about how to use this in the future. I think we should just use `--with-modern-grub` to be consistent with the rest of the code.
I think this is the only place where we use the client client. We can't use the client. We can't use the client. We can use the client client directly.
Why do we need to add it to the base solver?
The `CDs` is unused.
I think this should be `this.stack + '\n\n' + '\n\n');`
I think this is not a good idea, since it's a `@parsed_email` decorator, it should be `@parsed_email`.
why not use `eprosima::Flowlow_ROOT` here?
Does this need to be re-entrant?
I think we should not have a `buffer[:0]` here. The `lookupPath` is not always defined, and we should be able to remove it.
I think we should be consistent and use the new `user_message_author` helper here.
This is not the only change that affects TF providers. The agent should be allowed to indicate if agent should generate logs.
>longOptions [](start = 16, length = 5) nit: I think this should be `if (status.IsNotFound()) {` instead of `if (status.IsNotFound()) {`
I think this is a bit of a hack, but I think it's better to log the error.
Should this be a try/catch?
This was a bug, right?
TODO: remove the TODO
I think we should raise an error here, otherwise we'll log it in the future.
Why is this change needed?
Why do we need a new `InUse` here?
Do we need to make sure `ErrNotFound` is not found in the errors?
this is not needed anymore
I think this is a bug fix. We should never use null.
Removed the title because it's not part of the fix, but it's not a title anymore.
why not `localLastUpdateUpdateTime_`?
can you make this a list comprehension?
Is this still necessary?
I think we should just return an error here, no?
I think this is not the right place for this. The only reason we are using `PackageFormat.HDF5` is because the `owner` is used is used for the response, and the `pkgobj` is used for the response, and the `pkgobj` is used for the response, so we can just remove the `create_package` call.
Is this a typo?
I think this should be `super.pylint`? I think this should be left as is, since it's not really a super-init-not-called.
I think this should be a constant
I think you can do `if actionable_step.decorate.waiting` here.
Does this need to be refactored to avoid potential conflicts?
I think we should be more specific here: `const name = hasData.`
This variable was unused.
I think it would be better to use `chan error` here
Not sure if this is a good name. Maybe `checkout.plan`?
@danrot what do you think about using `is null` instead?
I think this should be done in a `@Override` below, since it will be used in other places.
I think we should update the `images_container_of` method to be consistent with the other `images_container_of` method. The `images_container_of` method is called for each `images_container_of` method.
I think you can just use `device` here, because you can't use `device` anywhere in the device type.
This is a pretty generic name. I think we should just call it `_`.
This is a bit of a hack, but I think it's better to move it into the `Host` package.
I think we should just remove this, it's not used anywhere.
Why did you change this?
This is a pretty big change, but I think it's better to move it to a separate file.
This is the health check that was previously removed.
Should this trace/subtrace be removed too?
This file is not in the history history.
Why not just make it `nonEmptyAssignmentToListElementChangeType`? Then you can remove the `LessSpecificReturnStatement` and `getType` methods.
Should we log the stack trace?
This is not the only error I would expect. We should not be looking for a `error` argument in the `if` block.
Could you please update the description to mention that this is a delay?
I think this is a bug fix. The `on` function is used to set `this.emitter` to `""` in `this.reset`. The `on` function is not called in `build-system/common/config.js`.
This is not a good dependency, but it is a good place to import it.
remove empty line
I think this should be a warning rather than a debug level.
Can we use `after revisions.DESKTOP_DESKTOP_DESKTOP_DESKTOP_DESKTOP_DESKTOP_DESKTOP_DESKTOP_DESKTOP_DESKTOP_DESKTOP_DESKTOP_DESKTOP_DESKTOP_DESKTOP_DESKTOP_DESKTOP_DESKTOP_DESKTOP_DESKTOP_DESKTOP_DESKTOP_DESKTOP_DESKTOP_DESKTOP_DESKTOP_DESKTOP_DESKTOP_DESKTOP_DESKTOP
I think it would be better to have a `_HTTP_from_url` that returns the value of `ip_address` and `ip_address` if it is not `ip_address`
Why do we need to change this?
Is it possible to avoid generating redundant error? If so, why is it OK to avoid generating redundant error?
This should be grouped with the other standard library imports.
This is a breaking change.
This is a bit of a hack, but I think it's better to move it to a common place and then use it in the `NewResource` function.
I think this is the only place where we use `path.docroot`
This is not needed.
I think this is not needed.
This is a test I was seeing in the test suite. I think we should be able to remove this call and just call `set_current_user` here.
I think we should be consistent and use `StringUtils.isBlank(NAME)` instead of `StringUtils.isBlank(NAME)`
Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think we should be using the secret.
I think this is a bug in TestExtendPartialURL.
is this change intended?
I don't think it's safe to remove wite lock here.
I think this can be moved to the `import` block, since it's only used in one place.
This file should be removed.
I think you can just do `isCloud || protoPkg.contains("cloud")`
What if the flags in `LobTgtFileFlags` are set to `null`?
We should log the estFactory, not the info.
so we don't have SSL_set_tlsext_host_name() anymore?
I think we should readActiveBlockProducersByHeightTests as a static method and readBlockProducersByHeightTests can be nil.
Could you please explain why this change is needed?
`skip` is not called on the IOException, so it should be called `in.skip()`.
This is a bit confusing, as we are already doing this in the ASTPrimitiveType().
nit: `Interceptors: yarpc.Interceptors{requestLogInterceptor{}},`
I think we should do the same in `removePeer` and `removePeer` to make sure we don't get the same file name twice
I think this is not right. The `env` env var is used for a specific environment variable, so it should be removed.
This is a one liner error, but I'm not sure if it's worth it.
why do we need this?
I think we should keep this here.
This should be `validateUnstake`
Please add a space after the type hint
This import is unused.
This feels like a hack to me.
I think this should be in the constructor.
This is the only change that affects the change. The only change in this file is to change the default value of `vNode` to `selected`.
I think we can remove the `abspath` import now.
I think this should be `reduce`
Is this used?
This exception handling is not necessary anymore
weave is not in the package
This is a breaking change. It's not a public API, so it's not a public API.
Please use `\0\0\0`
I think this is a leftover from debugging purposes, right?
nit: newline should be before "github.com/iotexproject/go-fsm"
I think we can remove this line. We don't have to keep the old version as 3.
Should be "clear online_weights"
This is a bit weird, why not use `attrs.set(values[0], ",")`?
I think we should use `executorashed executor/container` here.
We should probably have a better way to do this.
I think this is missing a `conflicts`
I think it would be better to use `InvocationServerFilters` here instead of creating a new one.
why is this changed?
This is a bit weird, why is this a `T`?
This is a change in behavior, right?
This is not a good change, but it seems like we should just use `ConcurrentHashMap` instead of `ConcurrentHashMap` here.
I think this is not needed.
Is this test really what we want? I don't think we should be testing that a result is missing.
I think this is a leftover from an earlier version of this PR.
This is a bit odd. What's the difference between `filecoin` and `filecoin`?
Just curious, why is this needed?
Why is this being removed?
I think we should add a `type` field to the `ec2Id` struct.
Why was this changed?
I think it would be better to use `String.format` here.
Why disable it here?
I think this should be `Feed feed`
You can use `use` instead of `use` here.
We should add description here as well.
Maybe we should add a `time` to the `timeDuration`?
This is a breaking change. It's not really a big deal, but it's a little hard to follow.
can we do this in a test?
I think we can remove the `nil` here.
I think this is a leftover from debugging I think.
Do we need to do this on all platforms?
I think we should make this enum enum just like in the docs, not in the URL itself.
I think this is a leftover?
This is the only place where we're trying to get the `arg` parameter.
this line is not needed anymore
I think this should be `10 * time.Second`
Why not use the `Map` field instead of the fields?
why is this change needed?
Why are we changing SolrException to migrate from the other checks?
could you please also change the message to `dt.rbind(4)`
I think this is not the correct way to do this. The `KOALAS_USAGE_LOGGER` value should be `None` instead of `None`.
This is a little confusing to me. If we're going to have GasPriceConfig, we could just make it a `public const int DefaultBlocksLimit = 1;` and have it be a `public const int DefaultBlocksLimit = 2;`
Why not `ctor := ...`?
Is this an accidental change?
I think you can remove the `name` and `CertificateRequest` now that it's not being used anywhere.
I think we can move the `sender_gcpbroker` to the `sender` namespace.
The same code is in `if (lit == null)` condition above.
could you please add a docstring for this function?
DT_INSTALLED is not defined, right?
Prefer single-quoted strings when you don't need string interpolation or special symbols.
Should we return here too?
I think this should be moved to the `opts_at_rasterizer` method. The logic here is to call `first()` on the `rasterizer` method.
Can we move this to `common/assets/assets.js`?
This is a bit weird, why not just call it `detectStaleConnections`?
I think this is a leftover from debugging purposes?
This is a bit confusing. I think we should just call it `chan` instead of `chan`
This is a bit weird, why do we need to specify the details here? I think it's better to just use the new details in the code.
Should we log this message?
I think this should be `hex.Encode`
This is not needed.
Why is this removed?
This is not the only place where we need testing purposes.
I think this is a leftover from debugging I believe.
This is a change in behavior, right?
I think we should keep the proxySettings field as it is.
I think this is the wrong place for this.
nit: newline should be before the last line.
I think this is a leftover from debugging I think.
This will be called after `reg == DR_REG_NZCV` and before `reg == DR_REG_FPSR`. Is that intended?
I think we should use `./44/1` instead of `./bip44`
I think we should use SelectQValue.Checked instead of SelectQValue.Checked
nit: move this to the beginning of the function
I think it would be better to use a `reset_logger` function instead of a `None` value. The code that is used to reset the logger, and it will be outdated and you may be able to call `log.get_logger()` in the `if` statement.
why is this removed?
The GCed index is already closed in the middle of the stack trace.
This is the new key for the new key for the new key.
I think it's not clear to me why we need to do this. If no node cache is set, it means no node cache is set.
I think this should be `IHeadersCollection.Trace.Headers`
This is a leftover from previous PR.
content is not a good name
I think this should be `this.splashWindow.isDestroyed`
I think we should just make this `versions`
I think this should be done in `update_latest_listened_at` for the sake of simplicity.
This is a bit of a hack, but I think it's better to do `window.location.reload()`.
I think we should remove this.
I think we should keep the old one for now.
I think we should change this to `concrete`
I think this is a bug fix.
I think we can just use `messagesChan` here. The `go` construct is not a big deal, because it's a bit confusing to read.
I think this is the wrong place for this. The `existing_step_for` function should work.
This is not needed.
I think this should be in a separate PR
This is a bit weird, why do we need to do a check here?
There is no need to add Faker for this, and the `/show` is not just for Faker.
I think this is not the right way to check. Maybe we should check if the `noop` is a `Err` or `Errnoop`?
I think we should remove this import.
I think it would be better to use `secondsseconds` here instead of `secondsseconds` here.
why do we assign `c._nextState` here?
should we add this to the `api` model?
Should we make this configurable?
`processCodec` is not necessary here, please remove it.
`pdfPageOrientation` is a boolean. Do we need to set it to false when the user is deleted?
I think this should be a constant
Line is too long. [83/80]<br>Use `if File.exists?` instead of `if File.exists?`
I think this should be a bool rather than an int
This is a breaking change.
I think this should be a flag in the service account, not a stateDB.
I think we can remove this field.
This is a breaking change. It's not a problem, but it's a bit odd.
I think this is a leftover from debugging purposes?
I think you can remove the Skip now.
This import is unused.
This is a breaking change. We should be using `processors` instead of `Int`.
I think this is a leftover from the previous PR.
why remove this? we are removing the `with_commits_and_affiliates` method
I think this should be done in the `onCreate` method, since it's only used in the `onCreate` method.
Are we sure that this is the right thing to do? I'm not sure how this works.
This is a little hard to follow. I think it would be better to move the logic to the `GetRequestId` function, and then call `GetRequestId()` in the `if` block.
why is this change needed?
I think this is a leftover from debugging I think, since we're catching it here, and not in the catch clause below
Why is this not being used?
Can you add a space after the colon?
What if the path is not a `path`?
This should be in a separate PR
I think this is not necessary, since `iscal_year` is already an array.
Why do we need to remove all the other tests?
This is a change in behavior, right?
`anonymous` is not suitable for `Cassandraanonymous`, so I would just remove it.
Can we use a `if` here?
why is this change needed?
I think we should keep this constant in the same order as the `url` method.
You can use `sys.stdin` here.
I'm not sure if this is the right way to go.
Can we use batchReadsEnabledTableProp instead?
why is this needed? `require 'pathname'` seems to be unused
Do we need to add this to the existing `createDatasetLink` method?
Should we add a `short_names` arg here?
Is this used?
I think we should use `archerCfn` here.
@smarterclayton do you think we should add this to `build-system/action`?
I think we should change the type to `string` instead of `InvalidScalarArgument`
Is this needed?
I think this is the wrong place for this.
this should be missingAdminRole
This is not the main purpose of the replace and what is supposed to be here. It's not the same as the replace of the replace and the replace of the function.
Let's move this import to the top of the file.
I think we should remove the `waitForResponse` method from the request, as it's not used anywhere else.
Nit: `NewIdentityManager` -> `NewIdentityManager`
This isn't used anywhere.
I think we should use `zip` instead of `zip`
why do we need this?
So, if we move the `handle_pre_syscall_app_sigprocmask_valid` logic to the `sigsig` component, then it will be better to move the `sigsig_app_sigprocmask_valid` check inside the `handle_pre_syscall_sigmasks` function?
I think it would be better to say "It is important that the returned list is sorted"
This is the only change that affects TF providers.
Would it be possible to just pass the config here instead of passing it through to the `ocsp_stapling` function?
Why not using `account_create`?
I think this should be `str1.localeCompare(str2, undefined, ...)`
@mjkkirschner I think this is the fix.
Can you add a new line before?
Why is this being changed?
The name of the asset to look up isn't the `unit` prefix.
This is a bit confusing, why do we need to do it in `showWindow`?
@smarterclayton is this going to break any existing users?
I think it would be better to write this as `public static final String WATERMARK_FIELD_NAME = "write.watermark";` and then write it as `public`.
I think this is a better place to put this function. It's not really a "hack" thing, it's a bit confusing to have two readers and the same thing.
I think this is a leftover from debugging?
I think this should be done in the `tls_start.ssl_conn` module.
substitution uses the `substitution` method, so I think it's okay to leave it here.
why did you change python to be the other way around?
I think this is a wrong place for this. The fact that it's a new pool is a new pool, and the default port is an environment variable is a simple pool. If the default is an environment variable, then the default port is an environment variable, and the default port is an environment variable, then the default port is an environment variable. If the default is an environment variable, the default port will be set to the default port will be set to the default port. If the default is an environment variable, the default port will be set to the default port will be set to the default port.
I'm not sure if this is correct. You're calling `close()` twice in the `topology.connect()` call, but it seems like it should be handled by the `connect()` call.
What do you think about renaming this to `expect_received` to be more clear?
This is the only place where we need to keep the old name.
Can we use `waitHandle.IsAny<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection<ICollection
I think we should keep the SimpleActivityProcessor implementation here.
why is this required?
This is a breaking change. It will be refactored to use the new method.
why is this change needed?
Should we also be using the `asmsecret` prefix?
This change is not needed.
I think we should create a new `TODO` to get the `Transport` from the service, and then `TODO` here. We can then remove the TODO, and remove the `TODO` here.
`ComputerName` is the name of the variable, not the name of the variable
I think we should remove this `allowError` check and just use `allowError` in the `allowError` call.
I think this is the only place where we want to log the error.
I think this is a bit confusing, as `MetricMetrics` is a bit confusing with `MetricMetrics`. I think it's better to have a `MetricMetrics` class that takes the `MetricMetrics` as an argument.
why is this change necessary?
Does this change the comparison comparison? It looks like it's the same as the previous line, but the previous one didn't.
`dirname = os.path.dirname(path)` is the same as `path.split('/')`
This is a bit of a hack, but I think it's better to make the method return an `int` and then call `getDefault()` on it.
I think this should be a `Timer` var. The reason is that the variable is not initialized at all, but the variable is not initialized.
There is a `unique_ptr` already in the `Rduino` function. I think this is a bug. The `Rduino` function should be called `Rduino`.
Why is this being changed?
this is wrong. It's a pointer, not a pointer.
this is not the same as the one in `mMessageView.getMessageHeaderView().additionalHeadersVisible()`
I'm not sure if this is the right fix. It should be in the last place in the first place.
I think we should use `Include` here.
I think we should add a description here to explain what the problem is when people use this header.
This is a good change. It's not a big deal, but it's a good thing to do.
This should be a `type`.
Please remove this.
I think we should add a default value to the `direction` field.
I think this was the only place where we had the depreciation for deprecating the depreciation.
I think this was accidentally committed.
I don't think this is the right fix. The `model` model is always present in the `if` anyway, so it should be removed.
I think we should keep this info in info level.
This is a bit of a hack, but I don't think it's necessary to have a function that returns a list of arguments.
I think we should use the `Overwrite` directory here instead of the `Merge` directory.
Why is this needed?
I think we should still keep the `default` here.
Do we need this to be a `ConfigIngressRules`?
does this need to be public?
to be clear, this is a breaking change.
I think this should be `isWorldStateAvailable(final Hash rootHash, Hash blockHash);`
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
You can use `self.scale` here.
I think this should be `import { getRouter } from '../../components/ServerConnections';`
Why is this change needed?
I think this is not needed, we should be using the standard library imports.
This is not right. You are calling execute_syscall on the same thread, but not on own thread.
This should be a single line string.
I think we should add a note that this should be a user-facingcing account. What do you think about creating a new `core.g` package that we can add to `core.g` and then creating a new `core.g` package that we can add to `core.g`?
I think we should add a link to the snapshot here, to make sure we don't break any other snapshot.
Can we make this a const. `go-block`?
I think it would be better to use `DISABLE_TQDM` instead of `QUILT_USE_TQDM` here.
Why did this change?
why remove the else?
I think this should be done after the `--write` flag (as it is done for the `--write` flag above).
I think this should be `JAVA_OPTS`
this import should go up to the other std packages
This is the only place where we check for `tls_version` is `None` in the `TLS` method. I think it's better to check for `TLS` instead of `tls_version` here.
log4j should be renamed to `log4j`.
Please use the `FileUtil.class.getCanonicalName()` method to return the full list instead of the actual list.
The mock mock mock mock is `0`
I think we should just remove this line. We don't have to do it in the next PR.
`?.` is redundant here.
do we need this?
I think you should just do `Object.setPrototypeOf(PersonObject, Realm.Object.prototype, Realm.Object.prototype);`
Should we also check for MaxTaskID here?
I think we can remove the old_size check and use the new_size value for the new_size.
Why is this needed?
This is not a good idea. It's not a big deal, but it's a bit confusing to have a method on `isLongrunningOperation` that does the same thing. I think it's better to have a method on `isLongrunningOperation` that returns a `NullPointerException`.
I think the password is already saved in the password, so you don't need to add the `Basic` here.
I think `self.all.order(updated_at: ' possibilities')` is a little too much
@matt-gardner How do you know if Base is the best way to get this?
This is the only place where width is used.
I think we should also check for `--offline-mode` in `plugins.getConfig`
I would use `Config::getAuthMethod()` here.
Should we also check for the exact same timeout?
Shouldn't this be a pointer?
Why not just use `bool`?
I think we should move this import to the top of the file.
This is a bit confusing, as it is in the `if` statement. Could you please fix it?
please remove this line
I think we should use the 3*0x51303030 for the version number instead of the 3*0x6
This change is not related to this PR, but it seems to me it should be reverted.
I think this should be `Bolt::Config.user_path`
I think we should remove this check.
This is not needed anymore.
`datetime.now()` is not needed.
This is a bit weird. I think the first condition should be `strcmp(type, "goto error)` and then the second condition should be `major == DRM_MAJOR && strcmp(type, "goto error");`
Unused method argument - `options`. If it's necessary, use `_` or `_options` as an argument name to indicate that it won't be used. You can also write as `_options` if you want the method to accept any arguments but don't care about them.
This is a bit of a hack, but I think it's better to move it to the bottom of the file.
This is the only change that affects this PR.
I think it would be better to just do `if toggle is True` and then just do `if not url.isValid()`
This is a breaking change. The existing behavior is to set the DevStatus to the new value in the constructor. This is a change that is needed for the new functionality.
This is probably the wrong place for this. The first part of the file is the "YAML" of the app.
Can you add a TODO to remove this?
I think this is a leftover from debugging purposes?
I think this is a leftover from the previous PR.
This is the only change that affects TF providers.
Do we need to call `command.readPreference` here?
this is not the right way to do this. I think we should just have a `blocker` and `blocker` in the `unwindTo` block.
This should be done in a separate PR, but I think it's fine to leave it in.
Line is too long. [82/80]
This is a bit of a hack, but I don't think we should be using the `isinstance` check here. I think we should be able to remove the check and just do `if (rp->rr_sim_misses_deadline) return false;`
This is not needed.
I think this should be done in the exception handler instead of in the exception handler.
I think this should be `if Travis::Build.config&.ssl&.verify == false`
This is the fix. It should be `stopEventWalk()`
I think this is not needed.
I think we should add a flag to the `staging` flag.
nit: `num_scan` is a bit confusing here. How about `fscanf`?
Shouldn't this be `partitions::CHECK_keykey(0, network::NetworkUtils::getAvailablePort()));`?
You can remove MinimumRate and use the property.
This is a bit of a hack, but I don't think it's necessary to have this in the code.
This is a bug fix.
I'm not sure if this is the right place for this. The block could be removed, but it's not used anymore.
I think this is a leftover from the previous PR.
IntegerInteger is not used.
This is a bit confusing, why not just use `IsWellFormed`?
This is a breaking change. We should probably remove the type argument from `pants.util.Type` and `pants.util.Type` in this PR.
I think the condition should be changed to `if !config.BPFEnabled && config.XDPEnabled && config.XDPEnabled`
nit: I think this should be `return (s)`. Also, I think this should be `return` instead of `return`
What about `False for ResNet, True for Houglass.
This is the only change that affects TF providers.
I think we should exit() here, since we don't have a valid exit()
I think we should use `cr.Spec.CommonName` here.
I think this test should be moved to `settings.py` and not moved to `settings.py`
I think it would be better to use `self.spark_version` here.
should we make this configurable?
I think this import is unused.
I think we should keep the config.config check and the next line.
I think it's better to use the same column name as the `integral_columns` option.
I think this is the wrong place for this.
This is a change that makes me wonder if we should rename this to `ecs.Attribute`?
I think we should just make this a constant. It's not used anywhere else, and it's not used anywhere else. It's not a part of the name, and it's a bit confusing. It's not a part of the name, and it's a bit confusing. It's a bit confusing to have a name like `_APP_FEATURE_CODE_USER_AUTH` or something.
I think we should be able to use 8 here, as we already have a default value in the `read_connection` function.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
For consistency, should we rename this class to `status-cancelled`?
This is a breaking change.
I think this should be `if models.length`, because models.length is a relative path.
Should we make the `have` parameter be renamed?
I think this is the wrong place for this.
This is a bit confusing. Why do you need to check for `q == null`? `base.size() == 0` is a bit ambiguous.
This is unused.
This is the only place where we use `Stderr.Buffer` in the `bytes.Buffer` function.
I think we should use `cert.Error` here instead of `now.Before(cert.NotAfter)`
I think this is a leftover from debugging I guess?
I think it would be better to have a `@grid` annotation on the `modules` module instead of having a default value that would be used to specify the data.
This is a test case I don't think we should be re-factoring this behavior.
This is the only place where we use `deployment.ClusterName` in the code. The logic here is that if `deployment.ClusterName` is empty, we should use `oce.util.ClusterName` instead.
Why is this test removed?
This should be done in `initInputShape`
I don't think this is the right place for this. The version should be the same as the default.
Why not catching the original exception?
This is a bit of a hack, but I think it's better to move it to the `recover` section, so that we don't have to do it in the `recover` section.
It seems that `score_thr` is not used anywhere else in this file.
I think we should remove the `site-nav` part here.
I think this is a leftover from the previous version.
Why is this change needed?
Why are we using RTL here?
should we use the same API here?
I think we should add this to `registerFilter` to keep the API simple and add this to the `registerFilter` method.
I think it would be better to rename this to `DEFAULT_VERSION_2_0` and `DEFAULT_messages_VERSION_2_0` to be consistent with the other naming
I think this is a good change. But I don't think we should change this behavior, because it's a default value.
Could you add a license header here, please?
does this mean we don't need to update the server?
This is the fix.
What if we added a check for `private`?
`s.IsHidden` can be `false` by default.
I think we should be consistent and use `clef-signer-address`
Is this needed?
I think we should use the `ResourceSpec` field instead of theSPCName.
**thought (non-blocking):** I think we could have a `TODO` here, but that would make it easier to read when we're using `sidebar` or `no_name` in the view.
What's the reason for this change? I don't see why we're using the `--prefix` flag.
I think this is a good change. It's not a good idea to have a test for this.
Why is this removed?
Use 2 (not 0) spaces for indenting an expression spanning multiple lines.
Please remove the extra spaces here.
This is a bit weird. I think it should be a `view` and not a `try/finally`?
This is the same as `PolAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAnyAny
This change is not related to the PR.
@jackfrancis I think you can remove the ` `https://` prefix here, it is already the default instanceUrl
I'm not sure if this is the right fix. The `if` should be removed.
I think we should rename this to `getFunctionIdentifier` and `getMetadataIdentifier` to be consistent with the other getter and name it `getFunctionIdentifier`
This can be `private`.
I think it would be better to have a `default` statement here, and have it return the default implementation of `ConfigureChannelChannel` and then have it return the default one.
I think we should be able to do `for header, value in response_headers.items()`
This is the only change that affects this PR. I think we should keep it as is and remove the `NETSTANDARD1_3` part of the code.
Should be context.net
Please add a license header here.
I think this is a leftover from debugging I think.
Can this check be moved to the random conduit node? I think it would be better to check for the random password and check for the random password.
If `entry.killRecord.get(entry)` returns `null`, then this would throw an exception.
This is not a valid split.
I think this is a leftover from debugging?
I think the `days` is not the right choice here. The first 2 days of the `days` will be the last one, which is the last one that will be used.
I think this is a leftover from debugging I guess?
This is a breaking change.
Do we need to import `logger` here?
This is a bit of a hack, but I think it would be better to have a script that has a `text/` directory. That way we can have a `text/` directory that contains the script.
Why is this change required?
`id := primitives.NewUUID().String()` is a bit confusing. How about `id := primitives.NewUUID().String()`?
I think this is a bug fix. It should be in a separate PR.
Why not use `double`?
Why is this needed?
Should this be `opts[:run_in_parallel]`?
I think we should remove this
I think we should remove this and use `IHttpContent` in the other place.
why is this change needed?
I think this is a bit confusing to have a test for the size of the slice, but I think it's better to use a `type` of the slice, and then use a `type` of the slice.
Can we use `tables.copyOf` here?
Is this still needed? I think `GoogleSitekitDashboardDetails` is used in the `GoogleSitekitDashboardDetails` method.
@deads2k I think we should have a better name for this. `NewVHS`
How about `:text`? This way we don't have to pass it in.
why not use w-]+/[\w-]+)(?:/(.+))?$"?
I think we can remove the `editing` part from the list here.
If the goal is to continue to continue to be fixed, then we should continue to continue to continue to continue to continue to process the stack trace.
This test was not working. It was not working before because `o.NoLog` was false. It was not set to `false` before.
If empty, then it will be empty.
I think we should remove the `no_exist_scanner` param entirely.
I think we should add a `finally` to the `finally` to make sure we don't accidentally break the API.
I think this is the wrong place for this.
I think we should keep the interface as it is.
I think this is a bit of a hack, but I think it's better to be explicit and check for the error.
I don't think this namespace is needed.
Should we make this debug?
This is a breaking change. This is a breaking change.
Is this file still needed?
I think we should move this to the `mainwindow/statusbar` package.
Why is this removed?
I think this is not needed anymore
Can we make this a constant?
I think this should be `if (h2o_sysfn(socket, AF_UNIX, SOCK_STREAM, 0)) == -1) {`
Is there a reason for not using `timeline_semaphore`?
I think it would be better to make this ` percentiles=None`
I think we can drop the `@todo` altogether now.
@jridgewell I think this is the right place for this.
Should we do this for all cases?
I don't think this is right. The old code was correct, because the old code was not doing anything. The old code was correct, and the old code was correct. The old code was correct, but the old code was correct. So, the old code was correct. So, the old code was correct. So, the old code was wrong.
I think this is the only change that is needed for this PR.
I think this should be done in the `onPlaybackEnded` method. It's not the case anymore.
Is there a reason why X11 is not X11?
This class is unused.
I think you can remove the last line of this line.
I think we should keep this as it was before, since we're not using it anywhere else in the package.
Line is too long. [81/80]
I think this is not needed, we can import `six.nodes` and `six.nodes` instead.
I think this is a good candidate for a test.
why did you change this?
I think we should move this import to the top of the file.
This is a bit of a hack, but I think it's better to move it to a separate PR.
Please remove the `test` method.
I think we should use the template name for all templates instead of the template name. It's not clear what the template template is for.
Remove empty line.
This is the only place where we want to support the old `kinesalite` option.
ditto, keep the two length
Adding StackSummary to the AWS CloudFormation stack.
I think we should change the name of the param to `CrossEntropyLoss`
Why is this change necessary?
This is a bit weird, why not just use the `r.epmm.RemoveEndPointMark`?
Can we make this `WithRegistries.Registry` instead of `nil`?
I think this should be `const dot = /`
This is a test case I don't see where it's called.
I think we should not add this to the log message.
This is not correct. You should check if the value is `collection_id`
log_interactive is not used anywhere.
Shouldn't this be a `UninitializedException`?
Should we make this a constant? We have a `settings.DEFAULT_management` that we use for the `message` key.
I'm not sure if spells[spell_id]reflectable is the right spells[spell_id]reflectable; I'm not sure if it is the right spells[spell_id].reflectable;
What is this used for?
We should also check for error here.
why removemiddlewares?
Nit: I'd prefer to have this be a single line string.
computed or Ember?
I think we should set it to 0.0.0.20
I think this is a leftover?
I think this is a leftover from debugging?
This is the only place where we need to encode the `encoder` struct. I think we should just remove the `encoder` struct altogether.
I think this is a good change. It's not a big deal, but it's a good idea to have a separate commit for a separate commit. It's not a big deal, but it's a good idea to have a separate commit for a separate commit.
This is a bit confusing, as you're in the wrong place. You're just storing the first look at the next line.
I think we can just remove the `JsonPropertyName` and use `IEnumerable` instead of the `success` property.
I think this is a leftover from the previous PR.
This is a bit odd, but I think it's better to use the `afterTransformStart` helper here.
This is a bit confusing, I think it's better to have a list of entries that are used in the same order as the one in the list.
I think this is not the right way to check. This is a case where `opt_port` is a `null` port, so maybe it should be `opt_port`?
I think IEnumerable<KeyValuePair<string, object> is not thread safe. I would suggest to rename IEnumerable<KeyValuePair<string, object> to IEnumerable<KeyValuePair<string, object>
We should log the estFactory, not the info.
this is a bit weird, why not just use the `SpecPriorityAlias`?
Is this TODO still relevant?
I'm not sure this is correct. `float` is still a valid value.
I think we should just make this `&Counter{string, desc>` and use `&& note(name, desc)` to make it clear that the default is `nil`
I think this is a leftover from debugging I think.
I think this using statement is unnecessary.
This should be moved to `pony_unregister_thread()`
why not `x30`?
This is the only change that affects TF providers. I think we should be using the new `IsIntegrationEnabled` helper here.
I would prefer to keep the type as a string.
I think we should keep the old behavior as well
This is a public constant.
Why is this removed?
This is not a valid value for a model. You should use `XFRAMES_OPTIONS`.
I think this should be `InvalidObject.reowner`
Remove this line.
This is a bit weird, I think it should be a constant.
This test is not really testing what is being run in production. It's not a test, but it's not a test. It's not a test, so it's not a test.
I think this should be `:EG: Norwegian Bokmål`
This file is not in the original PR.
nit: remove unnecessary import
We should also add the `ivä` command to the `get` command.
I think we should remove this warning.
Probably should crash if bad format string
I think this should be `NewResource` and `NewResource` and `NewResource` should be renamed to `NewResource` to be consistent with the other commands. The `NewResource` and `NewResource` should be renamed to `NewResource` and `NewResource` and `NewResource` and `NewResource` and `NewResource` and `NewResource` and `NewResource` and `NewResource` and `NewResource` and `NewResource` and `NewResource` and `NewResource` and `NewResource` and `NewResource` and `NewResource` and `New
This is a breaking change, since device name is now always a `DeviceName`.
This is not a "name" of properties, so we should rename it to "name" or "name".
I think this is a leftover?
I think we should remove this pylint.
Nit: please wrap the line to 80 chars
I think this is a good idea, but I think it would be better if we just use the one in `pkg/api/client/utils.go` and then use that here.
this is not needed anymore
I think this should be a `const`
Why not use the `<em>{` ?
This should be renamed to ` destroyResourceLinks`
Should we add a `.` at the end of the line?
I don't think this is necessary. This is causing the MacOS build to fail.
I think this is a leftover?
I think this is the only place where we need to define a `#if TRUE`
Should this be `this.handler.NullActivity(value.Key)`?
I think this is the actual fix.
Why did you remove this?
Why remove `use strict`?
properties is not null, it is not a properties.
is this debug code?
I think this should be a classmethod
I think this should be `parent.querySelector('.chk-wait') && contentType !== 'mixed');`
I think we should import github.com/syndtr/goleveldb/leveldb instead of importing the whole file.
This is a bit confusing. I think we should be using `on_shared_on_preference` here.
I think this is a leftover from previous PR.
This is not needed anymore
I think we should add a `settings.html` to the `flush` kwarg.
I think this can be removed now, since it's not used anywhere.
This is a breaking change. Can you revert it?
Let's add a description here to say that it's a `FAILED` field.
Is this still needed? This is a very minor change, and I'm not sure why we need to use `peer` here.
This is a bit of a hack, can you fix it?
This is now used by the service loops, so I removed it.
I'm not sure if this is the right way to do this, but it's probably better to check for `if !host.cygwin_installed?` instead of `if !host.cygwin_installed?`
I think it would be better to have a `manifestWriter write` as it's a `Map<String, StringComparison>`.
I think this should be `rewritten-file-scan-task-list-enabled`
The `name:"debug_tools"` isn't a good name.
This is the only place where we call `CheckErr` is called.
I think we should make this enum a global var and have it return an enum. Otherwise, we can have a `List<String, String>` type in the `List<String, String>`
I think we should change the API to `Array.hash()` and `Array.hash()` to make it clear that the API is an Array.
I think this is not the right place for this.data change.
Is this the correct error code to do? I'm not sure if it is the right error message to say.
This is not needed.
This should be in the docs, not in the docs.
I think this package should be in `pkg/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources/resources.go`
This test is failing on windows. It is not working without this test.
Isn't this supposed to be `timerIntervalInMilis`?
Please add a sentence about what it does. "The user permissions will be overriden on the user level, on the Permissions tab.', ...".
This method is now unused.
I think this is not needed anymore.
@jcotela is there a reason to change this to 1.6.5?
is this TODO still needed?
So this is the place where we delete the `app` prefix?
Why not just use `defer`?
I think we should just remove the `grantFB` variable and just use that instead of calling `getFoundationBonus` everywhere.
This is a breaking change. It's not a function, so I would just delete it.
This is a change in behavior, right?
This is not correct. `Email` is a string, not a string.
This is a good example of how we should do it. I would rather have a `config` directory that is set to `undefined`, and then use that here.
This is not needed. HPX::m_hpx_initialized is defined twice.
I think this is the right fix. We should just be passing in a `info.RPCAddress` to `RPCAddress` and then we can just use `info.RPCAddress` directly.
I think this import is unused
This is the main change. All the restart environment variables are used in the same way as the start function.
This is not correct. The cache is already in the `Report` method.
I think you can just remove the compiler. It's not used anywhere anymore.
How about adding `(args, service, args)` to the `args` variable?
This should probably be a different type than the other options.
Do we need to concat here?
This is a breaking change.
I think this should be a `Set`
This is the only change that will be needed.
This is the only place where we're using the same thing.
Can we use `LinkedHashSet` here?
This is a bit weird, why not just return the pointer?
This test is testing the wrong thing. The partitions should match.
I think we should be able to remove this now that we're in the controller
I think this is not the right fix.
This should be a separate PR
This is the only change that affects TF providers.
This is a bit confusing, as it's a `dict` and not a `dict`?
Please remove the space between the opening bracket and the closing brace on a newline.
Remove this extra line.
I think this is a leftover from debugging I think.
This is a little weird, why do we need to return nil?
You can just use `text/plain` here.
I think we should just delete this and just delete the `Flags` property.
I think we should also add `configParams.SetSet()` to the `configParams` below.
This is not right. fmt.Sprintf("%s", pdata is not in use.
I think this is not needed anymore.
Is this a leftover from a debugging?
Should we just remove the span if it's not null?
should we use `exflow.getFlowDefinitionId() > 0` here?
Is there a reason to create a dictionary dictionary here? It seems to me that `DateTime::createFromInterface` is not a valid thing to do, but it's a little confusing to have to do a `DateTime::createFromTime` that is a `DateTime` property.
I think this function is not used anywhere else now.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
Why is this needed?
This should be a single line string.
I think this is not needed.
I think we should move this to `pkg/types` package.
This is not the same as `updateIndexQueueByItem`
I think this should be `isinstance(element, dict) or isinstance(element, dict)`
This is the only line changed in this file.
I think we should add a `@since TODO` to remove this.
This is a very good place to log.
`byte>.Count` is a static readonly and can be removed.
I think this is a good candidate for a test.
I think this is a leftover from debugging purposes?
is this going to be a problem for other modules that don't use `validate_resolve_reference`?
I think we can revert this change.
I think this is a leftover from the PR.
I think we should be using the full path here, as we do in the other parts of this PR.
I think this is not correct. The `defer func()` function is called by `defer f.Close()` which is called by `defer f.Close()` which is called by `defer func()` in `Close()` and `defer f.Close()` in `defer`
I think you can remove the `collerCreate` call here, as it's not used in the code anywhere else.
I think we should also check for nil here. For channelX, the channelX will be nil.
I think we should just say `options.source` here.
I think we should add a warning in the `other_IL_fr` method to the service account.
this one is not needed anymore
I think it's better to use the blob. <msg> In the future, it's a little strange to have a "default value" as a string.
@michaelkuhn Do you remember why we need to keep the IP here?
I think this is not the right way to do this. The `attr_value['string'] is not None` probably not required as `attr_value['string']` is not None. The `attr_value['string']` attribute is `None` (the `attr_value` attribute is `None`).
`_now_focused._last_hovered_link` is a list, so you don't need to have `_now_focused._last_hovered_link` here.
should we do a check on the exact same page as the game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game game
I don't think this class is needed.
I think we should use `log.V(4)` here.
This should be `@param` instead of `float`.
This is not needed.
why is `AccessNode` needed here?
I think this class is not needed. It's only used in one place and it's only used in one place.
This is a bit weird, I think it should be a `char` rather than a `char`.
This is a change in behavior, right? Can we get rid of it?
I think this is a good idea. It's probably better to move it to a separate PR.
why change `str` to `string`?
second is not a part of the "second" label.
`#stdout` is a little confusing, can we just call `#` instead of `#`?
why change this? this is a change in behavior, right?
I think you can just do `mne.utils.optimizer`
I think this is a bug fix. The original code was doing nothing for a bug, and it was not doing anything for a bug.
How about adding a `render` method to `render`?
It's not clear to me why we need to do this.acc is a part of the loop if we're not doing anything else.
>HDF5Error [](start = 16, length = 6) Why is this needed? `HDF5Error` is a `PHDF5` not a `PHDF5`
is this necessary? I don't see the point of the test where the test is not working
MAX_PERTABLE_ENTRY		 = true, so this is not needed.
nit: update copyright year in header
I don't think we should change Lane here, since we don't have a default value for `i18n` and `i18n` in the `UseLane`
I think we should remove this. We don't want to use the `proto` package for the `iotex-proto` API.
This is not needed.
I think we should include the user in the DB too. We can also change the default in the DB.
I think this should be a `const`
Does this need to be updated?
Is there a reason to use `IsMSIEnvironment`?
Is this necessary?
What about `sp_target(current_group.group.user_group)`?
I think this should be a `void`
Can we remove these now unused now?
I think this should be a `@FunctionalInterface` annotation
I think we should add a link to the `go.uber.org/yarpc/peer` package.
I think it would be good to log the original message, if it was nil, then it would be nil, and we wouldn't want to log it.
I think we should just remove the `c` and `c` attributes from the `Trace` class. The `Open` and `Open` should be the default for the `Open` and `Open` attributes. The `Open` and `Open` should be the default for the `Open` and `Open` attributes.
is this false by default?
This should be in `jx_input`, not `jx_input`.
Please revert this change.
I'm not sure if it's a good idea to add a new type of dict for the TLF, but I'm not sure if it's worth it.
This was a bit of a weird thing to do, but I think it's worth to keep the process at the end of the line.
This method is called `folder_formatted_lines`. We don't want to use it in the `collection` model.
I think this class is no longer used, right?
I think we should just remove this field entirely.
This is the only change that affects this PR.
`telemetryEnabled` is not used in the interface, so I removed it.
you can use `get` here
This is the only place where we need to do this.
I think we should use `allow_user` instead of `notary_password`.
I think you can remove `app.SiteLocalSettingsPath` altogether now.
I think we should use the `ecpb` here.
I think we should return the config here, as we are returning the config from the config object.
I think we should use `capIsNew` instead of `capIsNew`
Should we add a `c.endpoint` to the Connect function?
I think we can remove this test. We don't want to test the default value for the test.
I think you can just delete the `./512` line now that you've added the line before the `test 512`
Use `@options[:hosts_file_generated]` instead of `@options[:hosts_file]`?
This is a leftover from previous PR.
this is a bit weird, why not use `setBaseAndExtent`?
This is a breaking change. It's not a good idea to have it.
Nit: `fmt` should be before the first `errors` call.
I think we need to add the `:resources` param here as well, to be consistent with the rest of the codebase
I think we can get rid of the context.Context.
Is this the correct name? `fragAlignRatio` is used for the table name.
I think it would be better to return False here instead of returning False.
I think you can remove this test and use `@RuleFormLogin` instead of `OAuth2Login`.
Why do we need to make it public?
I think this should be `if (dupe.array())` instead of `if (dupe.hasArray())`
This is a breaking change. It is not a spanReference, but a spanReference.
Why not just use `verdaccio`?
This is the only change that affects TF providers.
`is notrealm`?
I think this should be a separate PR
I think this is not correct. The `\/se\/cdp/` is the correct thing to do here. The `trainer.Duration` is the `/\/` and `/\/` is the correct thing to do.
I think this is not needed anymore
This is a bit confusing, why not just use `secondsTimeSinceParent`?
Metrics/LineLength: Line is too long. [90/80]
We should modify the item.
we should probably have a test for this
Why is this change necessary? GetAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlwaysAlways
Why not just keep `HiveClient_JNI::deleteInstance()`?
I think this is a bug fix. The `writeConcern` should be called before the `isinstance` call, and the `isinstance` call will be called after the call to `load()` on the `load()` call.
why does the `destroySender` variable need to be checked twice?
this is a bug fix.
I think this should be `fileName[].error`
I think we should keep the index with re-indexing.
I think this is not the right approach. We should just say something like `expression.of(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
Should we have a constant for this? ServiceHeader should be used in the service service.
I think we should use `urlDirOnHost` instead of `DATADATADATA`
is this change intended?
I think it would be better to catch the specific exception and raise an error here.
This function is a bit confusing to me. Why do we need this function?
I think we can remove this `else` branch now that we have the same `! hasExistingTag` check in the `else` branch.
I think this should be `&& this.Extensions.ContainsKey("nextMethodName")`
This is a no-op change right?
This should be moved to the `JsonMessageHandler` class.
Do we need this?
Missing space around string interpolation detected.
Please use `const` for the loop.
Why is this import changed?
Why do we need to update the media code if we got an update?
I think this is a bit confusing, as the `icmpCode << 8` is a bit confusing to me. Maybe it should be a `Type` or `mypy`?
This should be a constant
Is this really needed?
I think we should change the description of the page.
I think this is not needed, it's already handled in the `modules` module
This is a breaking change.
This is a bit of a hack, but I think it's better to make the code more readable.
This change is not related to the PR.
Why not just use `InMemory.decodeRow(bytes, -1, ...)`?
I think this should be encode rowkey with non-integer type
I think you can remove this and use ` fetchUnfinishedExecutions` directly.
Would it make sense to make this a `amp-story.yml` file so that we don't have to update the `BSD` page?
Can you add a license header here?
I think it's better to have a test case for this, and have it return the same value as the one in the schema.
Should this be `Query`?
I think we can remove this now that we have `c.dirtyBcache` now.
This is the only change that affects TF codegen. I don't think we need to do this.
you can use `Skipable::get` here
I think we should just return `true` here.
Can we add a check here that the `Single` param is `""`?
We should probably add some validation to ensure that the user is not aware of this.
Can you please add a line to the `-`?
why is this testing not testing the actual error?
We should probably have a unit test for this.
I think this should be `ERROR/`.
This is a bit confusing, as we're not specifying public subnets, but the `specifying` should be used.
We should probably remove this.
Import packages with `speech` is not recommended.
Why is this changed?
I think we can remove this now that we have `MinTaskID`
I think we should just remove this line. It's not used anywhere.
What if we make this a constant?
Is this the only way to get the current behaviour? Maybe it would be better to just return `dsts` instead of having a separate `Task` statement.
This is the only change that affects 0077. I don't think this is correct.
I think we should rename `ByteCount` to `ByteCount` to make it clear that it's a boolean.
Can we put this on one line? It seems like we should be using `!=` for all the reasons.
This is not a part of the PR, but I think it's better to make it clear that it's a separate PR.
FileSystemTarget is imported but not used
Why `int32_t` and not `int32_t`?
Is this a typo?
It's not necessary to include `DagsterInvariantViolationError` here.
I think this should be moved to the `jx_setup_errors` function.
I think we should use `values()` here
I think this is a leftover from debugging I guess?
The key is not modified in any case, so it is not necessary to introduce a new one.
I think this should be a class constant. The class should be renamed to `PackageEntity`.
Is this change necessary?
Is there a reason we don't want to call `Stat()` on the file?
This test no longer needs to be included in this PR.
I don't think this is needed.
use a `unless` helper
I think this is not needed.
I think we should be able to remove this check and just do `if (installTime < 50) {...}` in the if statement above.
Why is this in the first place?
This is not correct, I think we should just use the `Ordering` in CoreCLR to avoid the second CoreCLR to have the same `Ordering` in the CoreCLR.
I think this is a good candidate for a `if s.mu.On()`
why not just make this const?
This looks like a function that does the right thing.
Why not just call `maxResults` here?
Why is this needed?
I think this can be done as a `return True` since it's a `bool` check.
`urlencoded` is a list of items, so it should be an array.
why not update the flag twice?
This is a bit confusing, as it's a bit confusing that the key is in the key.
Why is this being removed? I don't see it in the public APIs.
I think this is the only error that was previously logged out. The error is now returned by the caller.
I think we should add Rust to this list as well.
Should we error out if the user has logged in?
I think this should be `Register._UNSET_NAMESPACE`.
This is a bit of a weird error, I think it should be `type: {}`.
I think we should be able to remove the `middleware` prefix here. We don't have to be able to remove the `minify` prefix here.
I think this is still necessary, since `provider` is already being used by `provider`.
I think this is a leftover from the previous version?
This package is already included in the `package` package.
This is not needed.
The Type is the type of the `message` field.
Can you add a docblock here?
Can you please add a TODO to remove the `@java` annotation from the `createAuthenticationPublicKeyFile` and `@deprecated` classes from the API?
Can we use a more meaningful name? Like `*BeforeBefore`?
This is a bit weird, why do we need to have to return `to` here?
The namespace should be in the `namespace` namespace.
I think we should not have this in the test.
The `linter` suffix is not necessary here, since it's a `toto` instance.
Is there a reason to use constructor instead of just the constructor?
COMMAND -> TGA
I think this is a good candidate for a better name.
I think this should be `// entry['release_mbid']`.
I think this is not the right place for this. The main point is that the main point is not the same as the main point.
This is a bit of a hack, but I think it's better to move it to the `HasValue` method.
The <msg> The <msg> The <msg> The `font-size` is still a dependency on the `<3.25rem>` and the `font-size` is a dependency on the `font-size` that is used to set up the `font-size` to 3.25rem. The `font-size` is the only one that is used for the `font-size` (and the `font-size` is a dependency on the `font-size`). So the `font-size` is a dependency on the `font-size` of the `font-size` of the `
I think we should change this to `retrying` so that we don't send a retry in jinja2, right?
`Vector` is not needed here, `T` is a list.
Can you explain why this is needed?
@matt-gardner, this is the only change that will be added to the 2019 and 2019 tag, which is not correct. The only reason this file is not in the 2019 tag, is that the only place where the 2019 tag is used is in the 2019 tag, or is it not?
I think `getBitMask()` is a better name.
Why is this change required? The ReadOnlyTxProcessingEnv should always be a string.
Please remove the extra spaces
@krzysztofwolski Can you confirm that this is the right place to put this header?
I think this should be `InitCodeTransformer`.
I think this is a leftover from debugging?
Can you explain why this change is needed? Is it related to the `_get_ctu_failure` change?
I think this is the only place where we use `summary` - we should probably use `summary.url('summary')` to make it more clear what's going on here.
I think this class is unused.
I think we should be able to remove `reasonDomainVerified` and ` {daos}`.
I think this is a typo
I think this is a bit confusing, as the environment is not in the cache/., but it is not in the cache/.. Maybe it is better to add the environment to the cache/., and add the environment to the cache/..
Is this necessary? false is already defaulted to true
This is a bit weird, if `dataManifests` is null, then `allManifests` will never be null, so we should just remove the null check below.
I think it would be better to use the `cappedNumHitsThresholdChecker` class instead of the class.
I think this import is unused.
`ActivitySource` is not used in this method.
I think we should add a `...` field to the gas price field to be consistent with the other transactions.
I think this should be a `processTest`
I think this is the only place where we have a `Exception` in the exception, is there a reason we can't just catch the exception?
Why do we need to add the theme here?
I think this is a leftover from debugging purposes?
Line is too long. [86/80]
This should be `export const`
I think this is not the right place for this. The `cpp-field-case` option is to allow the `system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/system/
This is not needed. The file name is already in the `origin` table.
I think this is not needed.
I think we should also have a test for the `exit` value.
A Main actor must be used instead of a name.
Why is this needed? `zk-read` is already in the `READ_PERM` method.
Why did you change this?
I would prefer to create a new issue for this.
I think this is a good idea. It's not a good idea to have the return value in the `checkCartNotEmpty` method. It's not the case anymore.
I'm not sure why you are doing this - I'm not sure why you are doing this - I'm not sure why you are doing this - I'm not sure what you're doing here.
I think this should be `non_iterating_code`, and not `non_iterating_code`.
Shouldn't we also change the assertion above?
Why not add this to the `type` interface?
This should be a constant
This test should be testing the health check.
I think we should use ` conflict` instead of `q found`.
This line is not needed anymore
@jona-sassenhagen this is the fix for the tests.
This package is not in S3, but it is not in S3.
I think you can do `if not os.path.join(entry['directory'],threads)`
`YolactSegmHead` is the preferred name.
I think we should remove the `driver.Crypter` here.
This is a bit of a hack, but I think it's better to use a `ConcurrentMap` instead of a `ConcurrentMap`.
I think we should return a `getImageContext` here, and then catch only the `getImageContext` in the constructor.
Oh, this is a good change. But I'm not sure why you need to change it.
should we use the `EMAIL_FORMAT` constant?
Why is this needed?
Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
Why is this needed?
This is the only change that affects TF providers.
`value` is a string, so `value` is a string.
I think this should be a `const`
I think this should be moved to the `pants.environment` module.
I think we should also move the github.com/gogo/protobuf to the github.com/gogo/protobuf
I think this should be done in the dialog class instead of in the dialog class.
I think we should just remove this file, it is not used anywhere. The `setup_scikit-learn` fixture is not used anywhere.
Why is this removed?
I think you can delete this test now that you've removed the resModel test.
Does `capabilities: global._googlesitekitUserData?.permissions || {},` work?
This is a bit of a hack, but I think it's better to have a `log_capacity` or `debug_capacity` for the log line.
This is an example of a bug, but I think it should be an argument to `Fileution`.
Can we use the `setupTests.ts` helper here?
Is it possible for the account to be in a `Read` method, and then in the account that we're using it in the account? I'm not sure if it's worth it.
I think this should be \r\n instead of \r\n
why remove this?
If we're not going to have any items in the system, we could probably remove this entirely and just do it in the `before_action` block.
"Invalid" is a name, not a symbol.
Why changing from `opt.ResourceTypeService` to `opt.ResourceTypeConfigmap`?
Layout/TrailingWhitespace: Trailing whitespace detected.
Why is this removed?
Nit: Can you move this to `/* eslint-disable jsdoc/`. It's used in the `lib/lib/lib` package.
This could result.NextWithContext before returning, right?
Do we need to do this? How can `AddressDetails` happen?
`aws.NewConfig()` can return `nil` if there is no such object.
I think this should be done in the `if` block.
Why not just check for nil?
Please revert this file.
I think we should check for other case where we have a recipe with a 0xf and a 1st we have a 1st we have to check for the correct type.
Please remove the empty line.
I think this should be a try catch catch block.
is this a BC break?
This should be `static`, since it's a `CacheChange_t* change` and `static_cast`.
I think the stream can be empty.
I think this is the only change needed?
Can you revert the change here?
I think this is the wrong place for this.
This should be `referral_code`
I think we can just use `DefaultHttpContext` here.
I think this assertion is redundant now that you're removing the assert above.
I think we should just remove this and use the `cache-decorating-method` helper.
What about using album_info_files instead of using album_msid?
This is a bit weird, why is the `Add` removed?
I think this should be `isHiddenWithCSS`
Why is this being removed?
Is it possible to get a test for this?
I think we should add the new param to the `block` in the `connection` section.
Love that we can get rid of `.spec.to_s` and `.spec.to_s`
Please remove the empty lines
Do we need this in the new module?
This file should be removed.
Why is this change needed?
This is a breaking change.
Can you add a note that this is a public API?
I think we should use ConcurrentDictionary<string, string>() instead of ConcurrentDictionary<string, string>()
I think this should be a warning rather than an error.
I think this is a bug fix.
When will this be false? I think it should be false if the endpoint is provided.
should we also change the assert to include the `createElement` in the exception message?
This function is only used in one place, so I would remove it.
I think it would be better to use `ExpectedCondition.getText()` instead of `String.contains(text)`.
Please add `deviceID` to the `Properties` tag.
This is a bit of a hack, but I don't think it's worth it to make a PR to fix it.
Why not just remove the variable?
Can we use `isEmpty` here?
I think this should be a constant
`OSError` is a bit confusing with `__init__`...
Why remove this?
@adamjstewart Is this something we can remove?
If it is not `progress`, then `progress` is always `None`.
This should be a `@private` annotation
This is not a valid python script, it is not used anywhere.
This is the only change that affects TF providers.
Why are you using FlinkTypeVisitor here instead of just returning?
This looks like a regression.
I think this should be a property.
FirstN node node is not used anymore
this is not a valid method name
I think you can just use `padding.add` here.
I think this should be moved to the `DESCRIPTOR` namespace.
I think we should change the default of `PALETTE` to `PALETTE` here, and in the other places we set the default value to `0`.
We should use `saleor/graphql/core/__init__.py` instead of `ver`
We could probably make this a constant so it's clear that this is a string.
AccountState is already in accountutil.AccountState
Do we need to do anything special to pass? If we do, can we just use `let_approval_notice? approval`?
What is the difference between "JSON RPC tracers" and "tracer"?
I think this should be a URI icon, not an URI.
I think we should add a `Optional` field to the `BuildLabel` field.
Why do you need this?
Not sure why this is changing?
This is a change in behavior, right?
why do we need to specify a string here?
I think this is a bit confusing, as we are already using the `*` variable.
I think this is the only change that affects this PR.
I think we should use the value from the input here
The record id is not the same as the record id, so this should be the same as the others.
I think this should be `!=`
I think we should make these constants in the future.
Why change this?
This is a pretty big change, and shouldn't be needed. It's probably better to move this to a new method.
`keys` is not necessary here, because it is already in the `Class`
We should probably use `MapRouter` here, as we do on line 388 below.
I think you need to do this before the `do_action( 'neve_add_settings_to_hfg_rows', ...)`
Is this supposed to be `egotiation`?
I think we should keep the name of the class as it is for now.
I think this is the only change that will be needed. The reason is that the import should be removed.
shouldn't this be `if (isNullOrEmptyEnabled()) { return isInDeleteSets; }` ?
I think you can remove this line.
Why not just return the error?
Please use `onViewCreated` to check if the intent is null.
Maybe we should add a docstring here.
This is a bit of a hack, but I think it's better to just use `Symbol.to_s` here.
Why remove this? The test is not testing the mining delay.
`progress?` is a builtin so you don't need to pass `&:in_progress?` here.
This is now done by the ` Flag` directive, so it's not necessary to remove it.
nit: I would use a bit more meaningful name, "current scenario" instead of "source".
I think we should be able to get rid of `pathlib` and `pathlib` in `encoding`. The `self.get_argument_from_call` calls are already passing `self.func.attrname == "1"` and `self.get_argument_from_call` calls.
I don't think we should be modifying this package. It is not used anywhere.
Why is this necessary? `close()` will close the done channel.
This is a bit of a hack, but I think it's worth a little more explicit.
All the ones in this file are related to the component, should we remove the `template` prefix?
I think this is a bug fix.
I think it would be better to use blobExists here instead of blobExists.
This is the only place where we need to do this.
I think this should be `final`
reffedHeaders.includes could be used here
Is there a way to make this function a bit more explicit? I think it would be better to have a `list.Items` as a list, and then use that in the function to do `list.Items = append(list.Items,JivaVolumeArtifactsFor070().Items...)` to avoid the extra work.
I think this is not needed.
Is this needed?
I think we should be using the standard lib imports.
This is a bit confusing, why is this needed?
@dvoytenko I noticed that we were trying to move away from the `tests` package. I think we should just remove the `info` and `info` classes from the `info` package.
I think this is a good idea, but if the `mu` is nil, then `mu.Unlock()` will return nil.
I think you need to do something here, because you are not calling `pixman_region32_clear()` anywhere.
Maybe we should add a note that this may be reported to the user?
Is this necessary? I think it would be better to keep it for the next PR.
I think this will break Python 3.6+, since the version is not in the `v0.5` file.
This is the only change that affects this PR. I'm not sure if there is a better way to do this. I'm not sure if there is a better way to do this. I'm not sure if there is a better way to do this. I'm not sure if there is a better way to do this.
This is a bit of a weird thing to do, but I think it's better to have a method that returns a boolean.
This is a pretty big change. We should probably go ahead and go through the go.
I think this should be a single line string.
I think we should not introduce these in the DUS. We should add them to the DUS.
I think this should be `_param_type_mismatch_exception`
This is a bit weird, why not just use `resource.NoError`?
why do we need this? I don't see a lot of code using it in the codebase.
I'm not sure if this is the right fix. The `stopped` check is for `auto` and `mutex` is for `stopped`.
I think this is the wrong place to put this. The caller can do `return client->future_chainAddEdges(r) : client->future_addEdges(r))`
I think we should move this to the top of the file.
I think we should remove this and use the new `SecretBackendSecretsManager` below.
We should probably add an option to `OtlpMetricsExporter` as well.
This is the only place where we want to support the old `JX_OP_NOT` property.
Is this needed? I don't think we need to support `pe_defaults` anymore.
I think we should remove this. It's not used in the test, but we should be able to remove it in the test. Also, I think we should remove the `beforeClickOn` call in the test.
Does this need to be on the else block?
I think this interface is not needed.
Nit: I would prefer to have multiple ragged arrays in the same file, e.g. `Commons_TIMESTAMP` and `Commons_TIMESTAMP`.
Do we need to set `ForceCleanupOnError` in this case?
Are you sure this is the only place where we need this?
Why are we adding this option to the application?
@bparees I think we should change the default value of `allowedOrigins` to `false`.
Please remove this file.
I think this is a bug fix. The new column is already `ZipkinActivityConversionExtensions.EncodeSpanId(activity.ParentSpanId)}"",""id"":""Name"",""parentId"":""ZipkinActivityConversionExtensions.EncodeSpanId(activity.ParentSpanId,""):"""""parentId"":"""""parentId"":""""`.
I think this should be `getResultType()` instead of `getResultType()` as it's a member variable. That way, we can also check for `getResultType()` in `getResultType()` and check for `getResultType()` in `getResultType()`
revert this change
There is a lot of these missing `I18n.t('dashboard.show.contact_your_mentor', ...)` in this file. I think this will be better as a separate PR, but I'm not sure what the best way to do is is.
`null` is not necessary here.
There is no need to reset here, because `can safely be reset` is enough
This is a bit weird, it should be `goimports` and not `asm/factory`.
We should probably add a TODO here to remove this.
Maybe add a `TODO` here to remove the `default` and `default` parameters from the `console`?
Should this be a `super(tableName, ops)`?
I think this is a BC break.
shouldn't this be `o == null`?
I think this is the wrong place for this.
Is the port () a copy of the nodes?
I think this is not the right fix.
This is a change in behavior, but I think it's still fine to remove.
why is this being changed?
This is not needed.
`step` can be `null` here.
This is a bit of a weird thing to do, but I think it would be better to throw an `NullPointerException` here instead of throwing an exception.
I would add a note that this will be printed in the SDK, not the SDK.
I'm not sure if this is the right place for this, but it seems to me that `object_fields` is not an `object`?
The version ID is already in the `ac` package
It's not clear to me why this is needed. But I guess it's not a Enum.
Is this the only place where we want to use the ad payloads? If so, we should probably make it `const ad payloads = ad payloads.debugMode`.
Why is this interface needed? I don't see it in the interface.
onevent is not used anywhere.
I think we should use `i)*p.pingConfig.Interval <...`
I think this should be moved to the `if (guard_pages)` block above.
This is not the right place for this, but I think it's better to move the `non_pending` check to the `self.proposal.approvals.non_pending` class.
Shouldn't this be a `WorkResponse.default`?
@kalefranz @cramforce is this the right place to change the GracefulShutdown()?
This should be `mobile` not `mobile`.
Could you add a docstring here that it's not a param?
I think we should remove this change.
I think this namespace should be removed. It's not used anywhere.
I don't think we need to add this to the `poS` field.
Use the new Ruby 1.9 hash syntax.
I think this is the only change that will need to be changed.
This file should be removed.
I think this is a good style, but I think it's better to put it in the `control-label` component, and then in the `performance` component, we can add it to the `active` component.
I think this is not the right fix. If you don't reload the table, then you don't need to reload it.
Please add a `TODO` here.
This is not a part of the issue, but I think it would be better to use `os.path.join` here.
Extra empty line detected at class body end.
Why is this needed?
I would just call it `__init__` and just do it in the call to `Zero_count Argument`
It seems like this function is not being called anywhere?
can you use `isinstance(by, str)`?
Why not use `archer`?
This should be set in the `api.go` file
This is not the same as the data source.
Please add a space after the `if`
If we're going to have a `Params` that we should probably return here, then we should return the same value as we do for `Params`.
Is this used?
I'm not sure if this is the best way to test the `Status` page. I'm not sure if it's the best we want to do here.
Is there a reason for this change? If the execution is failed, the flow will be failed. If the execution is in the flow, the execution will be failed.
In this case, we don't need to check for `icon` here, because `icon` is not a required argument for `ico`, right?
The exception is not thrown here, so this will be removed.
Maybe we should just call this `column_names`?
I think this should be `AggregatorRICS_MODE_COLUMN_CONF_PREFIX`
Why did you change the order?
Please, add a space after `,`
I think we can remove this line.
This test is no longer needed, since the `ContactContext` is now no longer being used.
Can you add a docstring here that this is a bit confusing to people.
This is a bit odd - why not just use the existing `Response.stringify` helper?
Should we use the same name for the test case?
Is this change intentional?
This is not right. We are not using a different code path to get the code that is not a valid code path.
This is a bit weird, why are we using `go-ipfs-files` in the package?
This is not needed.
Let's not use import com.sun.javafx.fxml.builder.
This is a bit weird. Is this a `OnStart`?
This is a bit confusing, since we are not using the `UpdateSnapshotInfo` anymore.
Can we just remove the `DefaultLogMessageRateLimit` variable?
I think we should use assert.Equal()
Would it be better to rename the Overseas parameter as well?
Why is this removed?
I think this should be a different if statement
We should probably add a `overflow` field to the `build` and `build` field to make it clear that this is a `overflow` field.
It's not a big deal, but we should probably have a test for this.
I think we should remove the import of `pcapdnet` here.
This is not needed anymore
Why is this needed? I don't see it being used anywhere.
I think we should add a check here that the feature is not enabled by default.
please remove this line
Missing space after `=`
`config` is not used in this module, it is already in `os.config`.
This is a bit of a hack, but I think it's better to do `((i=child.length).reverse()`
This is a great idea. But I think it's better to move the factory and the factory methods to the `go` package.
I think this is the only change that will be needed in the future.
This test is not running at all, so it should be moved to the test.
Why not use `CreatedId` directly?
I'm not sure what the best way to test here is, but I'm not sure how to test the number of unit tests.
I think this is a bit of a weird thing to do here, if we just call `interpreters` instead of `interpreters` here, we could just call `interpreters` directly.
Can you explain why this change is needed?
Why did you change this?
I think this is not the right way to go. I think it's better to do `get_meta(self)` and `get_meta` directly in the `get_meta` method.
This is a change in behavior, right? (If I'm reading this right right right, it seems to me the `dagRequest` is already initialized in the `getPushDownType` method.)
Why do we need to do this? If we do, we can just do `registry.accountsPropertiesProfiles.properties[0 ]`
I think this is a good change. The `@unresolved_targets` is used in the `create_target` method and it's not used anywhere. The `unresolved_targets` is only used in the `create_target` method. I think it's better to remove the `@unresolved_targets` method.
why not using `.code`?
I think this is a little confusing, as we are returning `None` even if `values` is `None`, but the error message is not correct.
Why not `this.passesRestrictions = this.bind(this)`?
I think we should keep this for now.
why is this necessary? this is a `render` method
I think this should be a separate commit
It's not necessary to use the `package` module here.
This is not used anymore.
This is a bug fix.
`auto` will be set to `0` if `fs::FileUtils::makeDir` is `0`
I think this is not the right place for this. We should only be adding a `List<Long>` to the `TotalIdsBetween` and `Set<Long>` to the `TotalIds` interface. We should probably add a `toSnapshotId` method to `fromSnapshotId`.
This is a bit weird, why not just call `isset()` directly in the `getHelpText()` method?
Is this really needed? `output_stream` is already being used in `build_system.py`
This is not needed.
Why did you change these?
This is a breaking change. It's not used and will be re-introduced in the future.
This class is not used anymore.
Please add a license header
This is not the same as `memQuotaRatio`?
Why is this removed?
Why do we need to specify both `codec:"dc"` and `codec:"dc"`?
This is not the correct type. The user should be able to configure the user to use the same type as the rest of the UI.
nit: remove empty line
I think we should just call this `Platform string`
Can we use `integration/api/external` here?
Is there a reason we're not using ac.SigningKeys here?
I think we can remove this sleep
Standards: Please add braces to this condition.
This is a bit of a hack, but I think it's better to move the `torch.Tensor` to `OrderedDict` and then just use `torch.Tensor` here.
This is a breaking change. This is a breaking change. The old API is a breaking change.
I think this is a good idea, but I think it's better to have a test that checks for the file that is not in the `bzzFileDownloadHandler` object.
I think this needs to be added to the `lib/api/constants.go` file.
This is a change in behavior, right?
I think this assertion is redundant now that you're passing in the name.
why did you change this?
As mentioned above, I think this should be `private`.
I think this is not the right place for this.
This is a bit weird, it should be a namespace, not a namespace.
Is this used somewhere?
This is a change in behaviour. This is a change in behaviour that we need to be sure that the select is not a valid value.
why not `CommitAndRestoreWithZeroGasPrice`?
const reference is useless
I think we should remove this.
I think we can move this to `send_notification` as we don't have to send the notification
I think we should log the logger here.
I think this should be done in `setUp`
I think this should be `if (name !== 'string') {...}` instead of `if (name === 'string') {...}`
`package p2p` is not needed anymore.
I think this should be `//`, not `//`, right?
This is a change in behavior, because the `marker_table` is used in a few places, so it might be better to use the `sql` argument here instead of the `sql` argument.
I think we can remove this method and use `body` in all classes that use this interface.
Please use `String#Equals(String, StringComparison)`
I think this method should be called `default`.
I think this is not the right way to do this. The `attr_value['string'] is not None` probably not required as `attr_value['string']` is not None. The `attr_value['string']` attribute is `None` (the `attr_value` attribute is `None`).
Why is this needed? The `addon` already exists in this file.
Use 2 (not 0) spaces for indenting an expression spanning multiple lines.
Is this change related to the PR?
I think `Symbol` is a better name for this.
This is not right. The lock.unlock() is called twice, but the lock is not initialized.
Why is this `32` needed?
This is a change in behavior, right?
I think this is not the best place to put this code. The `this.get('store')` function is called in a `common.hash` which is called in the `common.hash` method.
I think this should be `role` instead of `banner`
shouldn't this be `setCore(core)`?
Why is this change necessary?
Why this import?
I would prefer to have a `token contains an invalid number of segments` here.
`_gradientgradient` should be after the `_gradientgradient`
We should add a description here that would be consistent with how we refer to the target table in the source.
I don't see this used anywhere.
This is a bug fix. We should just fix the typo in the `AWS` table.
Why are we removing this?
Should we also check for `flag` in the `store` case?
I don't think this will work. The `subprocess.init()` method is called for all cases of the `mdmLoginServers` exception, which is not the case here. The `subprocess.init()` method is called for all cases of the `subprocess.init()` method. The `subprocess.init()` method is called for all cases of the `subprocess.init()` method. The `subprocess.init()` method is called for all cases of the `subprocess.init()` method. The `subprocess.init()` method is called for all cases of the `subprocess.
remove this file?
@mjkkirschner I think this should be removed. If the user has a C++11 provided provided `info` then the `getUri()` will be executed.
This is a breaking change.
I think we should remove this part and just call it `AWS_BOUND_SA_SIGNING_KEY`.
@mjkkirschner @mramato do you have any idea why this is needed?
This is the fix. The problem is that if you have two different tests, the tests pass. The problem is that the tests pass without this change. The problem is that the tests pass without this change. The problem is that the tests pass without this change.
I think we should change this to `ignoreUndefined: false`
shouldn't this be anything that is not anything?
why is this needed?
This is the only place where we want to do this.
This is a bit of a hack, but I don't think we should be using the `getFeed` method here.
I think this is still needed, we can't remove it.
The tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag
I think it would be better to use `Report.info` instead of `Report.info`.
I think this is the wrong place for this.
Can you add a little bit of feedback here about the error message? It's not clear what's going on here. The user could see that the account_out is not a string, so it's not a valid account_out.
Extra empty line detected at class body end.
I think this should be a warning?
I think we should remove this line.
Why is this needed?
This is a bit confusing to me. If we're going to have a file with a file with a file with a file with a file with a `--all` file, we should just have a test that has a file with a file with a `--all` file with a `--all` file that has a file with a `--all` file, and then test with a `--all` file.
I think this is the right fix. The `h2o_quic_close_all_connections` should be `h2o_quic_close_all_connections` instead of `h2o_quic_close_all_connections`
I think this should be `Object.isObject()`
I think this is a good idea, but I think it's better to move this to a separate PR.
I think we should add a description of what this setting does.
I think this should be `GetGet` instead of `var ExpectedBalances`.
This is a bit confusing, as it's a class of the `Rails::TYPE_VALUE` and it's a class of the `Rails::TYPE_VALUE` that's the same as the `Rails::TYPE_VALUE`
Why is this change necessary? The createClient never gets called, so it's not a good idea to change it.
This is the only change that affects TF providers. I think we should just remove this method altogether.
can you use the full path here?
This is a BC break, right?
This is the bug fix.
I think we should move this to `HttpServerErrorStatuses` since it's a special case for the `HttpServerErrorStatuses` class.
I think this should be `return flb_input_get_property("true")`
I don't think we should be changing the API to null.
I think this should be called `async_async_async` instead of `async_async`.
I think default_attributes should be set to nil by default
Why is this change needed?
We should probably make this a constant so we don't have to worry about it being a string.
I think this should be a separate PR, but I think it's better to do it in a separate PR.
Nit: We can use `schemaVersion` instead of `schema`
This is not needed. The previous version is the same as the previous version.
The `node` is not always defined here. We can't just use `aria-hidden` here. We can just use `node.hasAttribute(aria)` directly.
I'm not sure what the best way to test is is, but I'm not sure what the best way to test is is.
I think we should make this a `_currentProcess` property. We should not have to worry about the field name and name.
We should probably have a better way to do this.
I think this should be `STATIC_PARSE_COOLDOWNDOWNDOWNUCTION` instead of ` ITEM_PARSE_COOLDOWNDOWNAN`
This should be `status`
I would use `generate_list()` here.
Is this used?
Please add this to the baseclass `pkg/api/server/server/pkg/server/server/pkg/server/pkg/server/pkg/server/pkg/server/pkg/server/pkg/server/pkg/server/pkg/server/pkg/server/pkg/server/pkg/server/pkg/server/pkg/server/pkg/server/pkg/server/pkg/server/pkg/server/pkg/server/pkg/server/pkg/server/pkg/server/pkg/server/pkg/server/pkg/server/pkg/server/pkg/server/
How about `HIVE_MAX_PRECISION_ALLOWED`?
I think we should add a new function `UpdateProjectSingleSignOnRequest` to the interface `UpdateProjectSingleSignOnResponse`
This seems like a good candidate for a helper method.
shouldn't it be repository_id?
This is a change in behavior, right?
I think this should be `powershell?`
I think we should move this to `contentType.toLowerCase()`.
This test was only testing the `KeyError` value.
This is a bit confusing, why do we need to call `onBehalfOf` here?
Why not just `Parse()`? `Parse()` is already called in `Tertiary()`.
This function is called in a few places, so it's not necessary to call `RLock()` here.
I think this should be done in a `finally` block.
This is a breaking change. The index is not in the index, so it should be removed.
This should be `public`
I think this should be a warning?
I think this is a good candidate for a test case.
why not use private/private?
I think we should add `compression=on` here.
why not just add it to the `init` section above?
This is the only place where we setBackdrops in the context. This is the only place where we setBackdrops in the context. This is the only place where we setBackdrops in the context.
Warning => Category.Warning?
This is a breaking change.
What is the motivation for this change?
Why is this changed?
I think this is a bug fix.
I think this is not the right place for this.
Block has too many lines. [32/25]
I think this should be a `acceptResponseError`
I think you can just use `uler.yaml` here.
This is the only change that affects TF providers.
Why is this being removed?
Can we just call this `hasRetry`?
This is a breaking change. It's not a proto service, so it's not a breaking change.
I think this is the only change that will need to be changed in this PR.
Is this really necessary? I thought `PersistenceAPI` was already being used elsewhere in the codebase.
I think we should remove this section and just use `pages` everywhere
I think this is the fix for the bugfix
This will break compatiblity with the other templates, and I don't think it's necessary to have it here
This is a breaking change.
This is not a very good place to put this in the `RAM` package. I think it's better to move it to the `RAM` package.
Use a set_code instead of comparison.
This is not right. You are not using the event, but you are not using the event.
Why is this removed?
this is not right. if `getPropertyValue` is 0, then `elHeight` will be 0.
I think this is not the right fix. The `getKey()` method should be called in the `if (key == null)` block.
Is this something that you guys are calling against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against against
Why import twice?
@adamjstewart Is this the right place to remove the state change?
Is this used?
This is a bit confusing, why do you need to have a separate separate argc here?
I think we should just delete the `EnableCleanupReplicationTask` method and just call `cleanupReplicationTasks` directly.
Is this needed?
you should also check for `tolerance.max()`
I think this should be a constant
This can be `.then(executor_.get(), [self.from_this])`
Isn't this going to prevent the `IsIntegrationEnabled` check from being called twice?
I think this should be a `static` field, since it's only used by `isDeltaValue`
Why is this needed?
`var _rootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootrootroot
I think we should add a `TODO` to the doc string.
Is it really necessary to set this to `0.0.0`?
I think this is not the right fix.
I think we should be setting the config in the config file, not the actual configuration.
This is the only change that affects TF providers.
I think we should move all the `pubsub` imports to the `v1alpha1` package.
I think this is a leftover from the previous PR, but I'm not sure if it's worth it.
I think we should keep this here, as it is not used anywhere
I think this should be done after the err check, otherwise it will be nil
Shouldn't this be done in the `app/index.js` file?
why not delete directly?
This is the only change that will be fixed in this PR. I think we should move the `CMAKE_SOURCE_DIR` to the `src/` directory.
I think we should use `account.NewInt(...)` here.
should be configurable
This should be `errNotEnabled`, right?
is this a constant?
I think this is not the right place for this, but it's not really worth it.
I think this should be `!this[kIsMaster]`.
I think you can just do `!has_notize_top_level_keys`
Why is this still needed? `Long bitmask` is used in many places.
I think we should just remove this and use `.err(ctx, conf influxdb.Config)` to get the `.err(ctx, conf influxdb.Config)`
How about `if (len != 0)`?
Why is this necessary? I think it should be `TextView`.
This is a bit confusing, why do we need to set `openContainer` here?
Was this a mistake?
Why we need to remove the `type` function here and below? `Reader` is a `Reader` function, so we can just remove the `type` function.
There is no need to put XXX in here.
This file should be removed.
This is not the same as `attachShadow === 'function'` right?
@jridgewell I think this is the only change that will be needed for `./pants lint`, right?
This is a change in behavior, right? I think it should be `handleSingle`.
`StringUtils.isNullOrEmpty()` ?
This should be a `_productQuery` instead.
I think this is not the right way to do this. If I understand correctly, this is the only way I can do this is if I can't find a pod. If I understand correctly, the logic here is to have a `PodExist` that is deleted, then it should be deleted. If the other code is deleted, then it should be deleted.
I think this exception message is still useful, but I think it would be better to just catch the exception and catch the exception.
If you're not using the switch here, you can just return the switch in the switch.
Doesn't this need to be an `equals`?
This is a change in behavior, but I think it's better to move it to the `src/java/org/mule/runtime/core/internal/internal/java/org/mule/runtime/core/internal/java/org/mule/runtime/core/internal/java/org/mule/runtime/core/internal/java/org/mule/runtime/core/v1/core/v1/core/v1/core/v1/core/v1/core/v1/core/v1/core/v1/core/
why is this change needed?
This file should be removed.
I think we should be using the `v1` package here.
can you add the k8s package for this?
Why do we need a new System.Collections.Generic here?
I think we should be doing this in TwitterPlayerCardsController, in case we want to be able to override the controller controller in the controller.
I think this is not needed, since the returned value will never be null.
This is not used anymore.
I think we can remove this, we can just remove this entire class entirely.
I think this is not the right place to put this. We should be calling this `azurekeyvault.az` instead.
This is a breaking change, but I think it's better to move it to the `sessionManager`.
This is a change in behavior, right?
This is the fix.
`urlencoded` is a list of items, so it should be an array.
Is this the right way to do this?
I think we should move this import to the top of the file, so that we can get rid of it.
This is a change in behavior, but I think it's better to move it to the `klog` package.
This is the only place where we log the error, we don't want to log it.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
`localConnection && localConnection.type == Blockly.OUTPUT_VALUE` is probably better
Please remove the TODO.
This seems to be missing a `TestError` at the end of the test.
I think it would be better to use `if (!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Does this change the reader reader to exec without the change to `pkg/err/repo/pkg/err.go`?
nit: `return resp.code == sizeof(StatusOr<bool>>`
this is a bit weird, why not use the same name?
I think we should remove the `if util.IsPaused(cluster, awsCluster)` call here and just do `return reconcile.Result{}, err` in the `if` block.
I think this is a good idea. It's better to be specific about the type of the system rather than the type.
I think you can just do `this.instanceDir = instanceDir.toAbsolutePath();`
`localFieldPath` is a boolean. It is not a boolean. It is a bit confusing to have a boolean value. It is a bit confusing to have a localFieldPath type. It is a bit confusing to have a localFieldPath type.
I think you can just use `is_same_name` here. You can simply use `is_same_name` instead of `Mysql2`
This is a bit odd - is it a separate PR?
Also needs a `dependent: :Available`
It seems like this should be `GetRawDiff(ctx *context.Context)`.
I don't think this is right. You're still using NET461 in the code. You're still using NET461 in the code.
Can we move this to the `const` section?
This is a bit confusing, as it seems like we're not doing this. I think we should just call `cert.URIs` before this line.
This file is not used.
This is not needed, you can just use `as` instead of `mhtml`
I think this should be `parse`
`unless app.config.respond_to?(:secrets)` is a `not`, so you don't need to check if `app.config.respond_to?(:secrets)`
Do we need this? We are already doing the same in the `enum` function.
I think this should be `if (supportsRetryableWriteError(err) && !inActiveTransaction(session, err)` instead of `if (err.addError(server))`
Should we also check that `default` is not `None`?
I think we should remove this. We're not using the `go` anymore.
The backing node is not the same as the backing node.
nit: remove extra blank line
I think we should just add the `ubuntu` to the `18.04` struct.
I'm not sure if this is the right way to go. The `_` should be removed. The `_` should be removed.
should we log this as well?
Why the `completer` argument has been added to the `C` and not the other way around?
I think we can remove this field from the api-version.
This should be `new ConnectionManagerSingle();`
I think we should just use the new `as` here.
We should use `service` here.
Why not set the `recordLink` above?
Is this test really necessary?
I think we can remove this line
I think this is not needed, the `item` is already being used.
Why is this necessary?
Can you add a `\` to the end of the lines so that it's easier to read?
This is a change in behavior, but I think it's safe to remove.
I think you should remove the `url` and `getAdminLocale` calls.
This should be `(0x100000)`.
I think this is a good idea. It's not a big deal, but it's a bit odd to have a `get` function that does the `docusaurus` and is not a `babel` folder.
This is not the right place to call this function. The `CherryPick cherrypick` is used to determine if the `errypick` is present.
Shouldn't this be `manager_env_prefix`?
this file should be removed
I think we should be consistent with the rest of the imports. The reasoning is that we don't want to use the `k8s.io` package for the package is that we can use the `k8s.io` package for the package.
This should be encode only when the payment is created.
Nit: we usually return `error` instead of `error`
can you make this `cfg.model.neck` and set it to `None` in the next line?
Could you please update the docblock as well?
`cxxflags` is not used in the `CFlags` package.
This should be split across multiple lines.
why not just passKeyID to the filter?
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
I'm not sure this is the right fix. This is a spec which should probably be fixed in a spec.
why do we need port-list?
This is a breaking change. It's not a public API, and it's not a public API.
I think this assertion is still useful. It would be better to use `assertRaises()` instead of `assert`
I think we should add a note that this is only for version 1.0.0.
I think it would be better to have the hash be the same as the cache folder.
why is this needed?
I think this is a leftover from previous PR.
This is a change in behavior, but I think it's better to make a change in behavior to make sure the exception is always present.
why not use `event.get()`?
Can we add a `Config` field to `GitHash`?
This is a bit weird, why do we need to make it a `makeflow`?
I think this should be done in `objects_type` instead of `elif`
I'm not sure why you changed the `createVNode` to `createVNode._dom` here. It's not a bug, but it's not a bug.
This function is only used in the code base. You can just put it in the function.
I think this is a leftover from debugging I think.
This is the only change that affects backwards compatibility.
this is a little weird, the `class` is a `ConcurrentMap`.
I think this is not the right place to put this listener. It's probably better to have a `listener` function that returns the error.
I think this should be nullable
This is a bit confusing, I think it's better to just run `output` and then just run `output` to `run`.
We should log the error here. If we do, we should log it.
Can we make this a constant?
I think this is a leftover from debugging I guess?
I think this should be called `container_key` or `container_key` instead of `foreign_key`
Why not call `getMetricsMetrics` directly?
I think this is not right. The `if (it->second.fromLua)` check should be redundant.
I think this is a bug in the test, right? If the node is in the node, then the node is in the node, right?
I think we should be able to remove this check and just do `topic.WithLogger(ctx, r.Logger.With(zap.blockblock.LoggingE2ETestAnnotation))`
Why do you need to cast `pdf` to `stack` here?
This is the only change that affects backwards compatibility.
I think we should remove the `context` argument from the name.
I think this is the wrong place for this. The length should be in the length of the length, not in the length.
I think we should use `<%_name>` instead of `<%_name>`
Hmm, this is a bit odd - we're not going to use autocomplete in autocomplete. What about instead: `config.autocomplete_enabled = 'suggest'`
I think we should also remove the import from `gogo` import from `pkg/apis/pkg/apis/pkg/apis/pkg/apis/pkg/apis/pkg/apis/pkg/apis/pkg/apis/pkg/apis/pkg/apis/pkg/apis/pkg/apis/pkg/apis/pkg/apis/pkg/apis/pkg/apis/pkg/apis/pkg/apis/pkg/apis/pkg/apis/pkg/apis/pkg/apis/pkg/apis/pkg/apis/pkg/apis/pkg/apis/pkg/apis/pkg
I think we can remove this.
Can you also update the `v1beta1` imports?
It's not clear to me why this event is being used.
This is not the same as `belongs_to :approving_official`
This is a bit weird, why do we need to use a `List<T>` here?
This is the only place where we need to check the input.
I think we should be able to get rid of this line.
I think this should be `forum.case.com`
This is not the fix. We should not have a test case for this.member.email to work. I think we should use the test case for this.member.email instead.
`member-subscription` is not used in IE.
This is a bit confusing, as this is a debug level, and the user is not facing.
@deads2k any idea why this was necessary?
Shouldn't this be readPreference.mode?
I think this is the only place where we want to do this.
This is a change in behavior, but I think it's better to make the change in the test so that the test doesn't fail.
This is a node ID, not a node ID.
I think this should be a `var_name` parameter, and not a `utils` parameter.
I think it's better to move this test to the `parse_cloudtrail_with_botocore()` method.
I think the name should be more descriptive of where the name is used.
This is just a small change, but I think it's safe to remove.
I think we should use the `HTTP` module here.
This test is not really testing what we want. I would expect that we don't need to test the number of columns.
I think this should be `KOKKOS_IMPL_TURN_OFF_CUDA_HOST_INIT_CHECK`
this is a bug fix
This is a BC break.
This is the only change that affects the change to 1.
I think this import is unused.
This is not the field name. The field name is not the same as the field name.
This is the only change that affects the acks's message. The message is not correct, it should be the message that the acks are not in the message. The message is not the same as the message that is in the message.
I think we can keep the old signature as well as rename the variable to URI.
I think we should use the `sdktesting` package here.
I think this is a bug, because `all_defaults` is a list of `kw_defaults` and `all_defaults` is a list of `None` values. I think this is fine, but I think it's better to just use `always_defaults` here.
We should add some description about what it is about. In the case of pending changes, we should not be modifying the state of the pending changes.
This is a breaking change.
I think we should return an error here, otherwise we will be able to close the `criuProcess` below.
I think it would be better to run the specific header instead of run the header.
Why do we need to check `Errno::ECONNREFUSED`?
There is no need to add this to the `movie` model.
I think this is not right. If the `tagContexts_` is empty, then the `collectVertexProps` will be empty.
I think this is the only change that will be needed.
`_getCheckpointParentDir` is a better name
This is not a valid example of what we want, but I think we should just make this a `restart` instead of a `dict`
I think we should be able to remove this check and just do a `defaultdefault` check in the `Task.WaitGroup` instead of passing it in.
I think we should move this to the bottom of the file and use it in the `cancel` function.
I don't think this is right. You're using all usages of `using` statements.
I think we should be able to remove the `caseInsensitive(...)` and just do `caseInsensitive(...)`. The `getReadColumnNames` method should only be called when `selectedColumns` is `null`.
nit: Can we call this `EventHandled`?
I think this is the only place where we want to do this.
Why not set the default to 4?
`FailureImportOperations EventReason = "Failure Import operations"` => `Failure panable EventReason = "ConfConf"`. I think this is a leftover from debugging purposes.
I think this should be `rb_intern("read_set_end", rb_thrift_binary_proto_read_end, 0);`
This log line is redundant.
I think this should be `public`
How about using `updateUpdateTime()` here?
I think we should use `type` instead of `Ready` here.
why not use `sigmoid`?
This change is not related to the fix, but it seems to me it should be reverted.
I think this should be debug. It's important for the user to know the logs that are not related to the debug level.
This is the only place where we call parse() in the code. Why not just call parse() in the method?
`std::unique_lock` is not a pointer, so you can use `std::unique_lock` instead.
Why is this needed?
You can remove the `return` here.
I think we can remove this test entirely.
I think this should be `False` instead of `Datasets`
The test is still running on macOS, so we should still have a test for the `TracerProvider` that is passed in.
I think we should use `pkg/grpc` instead of `pkg/grpc`.
I think this should be `pytest.read_file`?
I think this is a good time to remove the code. If we want to do this, we should add a TODO to remove the code.
I think we should just use the `toers` stage here.
Why do we need to change this?
Is this a valid event?
Can we add a TODO to remove this?
Do we need to call `WriteAsync` now?
This is not a part of the PR.
This is a breaking change. We need to add it to the `corev1.ObjectReference` file.
This is the only change that affects TF providers. I think we should be passing in the default here.
The `snakebite` is not needed here, it is already in the `cdh4`
Metrics/LineLength: Line is too long. [82/80]
Why not use `no-client`?
This is not needed. It is already used in the `generatelassfish` package.
this is not needed anymore right? we use `ensure_preferred` instead of `Space.launch_vehicule`
Nit: I would move this to the line above the `if (fileInfo.Exists) {` block above.
I think this is the only change that is needed, but I don't think this is a good idea.
I think we should also add the `/all` param to the `/system` and `/system` keys.
I think this may be too much of a change in behavior, since we are not using the port may cause a lot of problems.
I think we can just use `balance_COUNT` instead of `FORM`.
This should be in the same package as the `omitempty` field.
This should probably be `could_errors`
The result is not used.
I think this should be inside the `if` statement, since it's not always 0. The `this.ratio_` ratio will always be 0.
Is there a way to make this configurable? I'm not sure if we should call `MaskedIp` in the code.
substitute is not needed anymore.
I think this should be `if js_elem is not None:`
This is a change in behavior, right? Is this a change in behavior that we want to pass in?
This method is only used in one place, so I would remove it.
`tabbed-browser` is not a correct name. It's an instance of `metrics` in this function.
This is a debug statement.
nit: I think we can remove this line.
This is the fix. The check should be in the `if (isGoQuorumCompatibilityMode && privacyParameters.isPresent()) {`
I think we should do deleteManifests() in the constructor.
unless we're going to be one of the specs that don't have a Array?
should this be 5 minutes?
We should not have any tests for this, as it is not related to the test.
I think this should be `crd/v1alpha1`
I think we should use the constant here.
This is a bit of a hack, but I think it's better to make the method return an `int` and then call `getDefault()` on it.
I think this is not correct. It is not a problem, but it is not.
I think we should also add these new properties to `contribs`
These options are not used in the test, so I removed them.
I think we can drop the `email` here since we're in the email?
This is not a good idea, but it's a good idea to have a `RuleViolationFix` that does the same thing.
Please remove the last argument.
I'm not sure if this is the right fix. The `host_is_unix_path` path should be removed.
@deads2k i'm not sure this is the right fix.
I think we should disable this by default, since it's not a valid option.
We should add `@param MediaInterface|int|string $format` to the docblock.
I think this is a good idea. It's not a big deal, but it's probably better to make the code more readable.
Why is this necessary?
why not set it in the constructor?
I think we should use `listenerShutdownWaiter` instead of `once                   `
I think it's better to keep private to keep it private.
We should probably have a test for this, as we're testing the truth.
I would prefer to have a test case for this, but I would prefer to have a test case for this (and the one in clickLink too)
I think we should rename this to `target_name`. `target_name` is not really a name, and `target_name` is a name.
This is a breaking change. It's not used and will be removed.
I think this should be moved to the `without` callback?
I think we should rename this to `pipeline_definition_definition_sensor` to make it clear that this is the one we're using.
should we return `None` here?
I think this is a leftover from the PR.
Do we need to enable this to be false?
Is this just a typo?
I think this function is not used anywhere.
What is the purpose of this change?
Why is this public?
why is this needed?
Is there a reason why we don't just call networkpolicy.StatusController?
I think this should be `AppHandler`
I think this is not correct. The `pendingRequest.configuration.remoteHost` is already initialized in `pendingRequest.configuration.remoteHost`, so it should be removed.
Is this a typo?
Why is this in `app/views/internal/internal/internal/...`?
I think this should be `param_name = strstr(cmd, SET_PARAM_CMD_LEN)`
This is a breaking change. It's not a problem, but it's a bit odd.
This is not related to this PR, but I'm not sure why it was here.
Why is this needed?
I think this is missing a `install` import.
Suggest `[a-zA-Z0-9a-Z0-9a-Z0-9a-Z0-9a-Z0-9a-Z0-9a-Z0-9a-Z0-9a-Z0-9a-Z0-9a-Z0-9a-Z0-9a-Z0-9a-Z0-9a-Z0-9a-Z0-9a-Z0-9a-Z0-9a-Z0-9a-Z0-9
Is this line break necessary?
why is this no longer needed?
This is a breaking change.
This is a bit weird, why not just use the `code` variable instead of the `@code`?
Why not `2011`?
I think this is a leftover from debugging?
This should be `@abc.abstractmethod`.
Can you add a space after the comma?
Should we remove getDataErrorComponent altogether?
Since `obj:` is a dictionary of `dataset`, it should be `Iterable[str]`.
I think this is not the right place for this, since we have to do the validation validation in the `user-displayable` namespace. I think we should do the same for the `email` below.
Why is this in `libkb`?
I think it would be better to use `iterable $galleryItems` here.
This is a test change that will break existing tests. We should try to keep the old test and clean up the new tests.
`window` is not supported in IE.
@jenachoi change the name of the variable to `rwa_number`
This is a bit of a hack, but I think it's better to move the default value to the `SparkWriteOptions` package.
I think we should use `user_id` here.
I think this is a good idea. It's not a big deal, but it's a good idea to have a better solution.
why is this change necessary?
Please remove the if condition.
This is a bit confusing to have as a default value for the store. I think it's better to have this as a default value, and then use the `Array.prefetch` method.
Why not just return cfg.IP?
Why do you need to check type here?
This is the fix for #4845. It's not necessary to get the `icebergCol.name()` method from the config object.
I think we should keep the default for the alarm_actions and insufficient_data_actions here.
Please add a slash after `plugin:`.
I think this is a good change. The `Type` parameter is not required here, and it should be removed.
I think this is the wrong place for this.
nit: I think we can remove this now that we have the `subscription` above at the top of the file.
I think this is not needed.
I think this needs to be updated too.
This is a bit confusing, I would have expected a bit more elaborate on the AWS SDKs, but I'm not sure what the AWS SDKs are.
Why are we removing this?
remove empty line
Why do we need to remove the `lock` field from the `json`?
I think this should be `TEST_ARN = 'arn:aws:...:`
I think we should just remove this check.
It's better to move this to the top of the function.
I think you should call this DialogResult.OK here.
I think it's better to use a `@SuppressWarnings("unused")` here.
Can you add this to `swim-start`?
why do we need to pass key for the key?
This is a bit of a hack, but I think it's better to move the dir into `pkg/api/pkg/api/pkg/api/pkg/api/pkg/api/pkg/api/pkg/api/pkg/api/pkg/pkg/api/pkg/pkg/pkg/pkg/pkg/pkg/pkg/pkg/pkg/pkg/pkg/pkg/pkg/pkg/pkg/pkg/pkg/pkg/pkg/pkg/pkg/pkg/pkg/pkg/pkg/pkg/pkg/pkg/pkg/pkg/pkg/pkg/pkg/pkg/
I'm not sure if this is the right way to check for DR_HOST_NOT_TARGET?
Just a note that this will break existing `v1/bzz` files.
I think we should update the `error.details` field to `saleor.details` instead.
This is not the right way to access the invoice.
Should we move this to `src/server/scripts.go`?
I think this should be `A v`. The only reason we're using `A` is because of the `list`.
Should this be in a try catch?
I think `getBitMask()` is a better name.
I think you can remove the `assert` here.
It's not clear to me why this is a `NewKeeper` but I think it's the better choice to use a `Keeper` here.
I think this import is unused.
why is this needed?
This is the only change that affects TF providers.
This is not needed, we can just use the functions in Python and allow functions to override the functions.
I think this should be `disableAuthorization(true)`
I think you can just use `IEnumerable<IEnumerable>` here.
I think it would be better to use `log.V(2).f()` instead of `glog.V(2).f()`
I think this should be a `EnableSet`
This should be "Enabling calltarget state by ref"
Use `map` and `collect` for the variable name.
I don't think this is the right place for this.
I think we should add a key here, otherwise we'll have a key with a `TrustedKeys` key.
this is not needed
Is this still needed?
Should we do the same for old node node?
Why not use the class definition directly?
I think this is a bug fix. We should just fix the test in a separate PR.
@jridgewell I think this is the correct way to go.
Nit: remove empty line
This is a bit confusing, I think it would be better to just call My Myated `verify` and `verifyDeviceAcquirer` here.
I think this is a good candidate for an `error` to be nil.
Why not just make it `lodash`?
What is the motivation for this change?
This is a change in behavior, right?
This test no longer needs to be reverted.
This is the only error that should be returned from the config file.
This import is unused.
Is this a typo?
is it possible that Number.MIN_SAFE_INTEGER || -(2 ** 53) - 1 is not allowed to be allowed to be passed to the constructor?
This is a bit weird, why not just use the private `handle`?
This is the only change that will be fixed in this PR.
`skip_deprimitive` is not used anywhere.
I think we should use the `svcDescriber` here
This is the only place where we use it.
Is this change necessary?
This test is not right. The test is still running on the test and is not running on the test. This test is only running on the test and so on.
I think this should be a single line string.
I think you can just remove this line. It's not used anymore. It's only used in the tests.
Why do we need to change this? Isn't this a "force" behavior?
I'm not sure if this is the right place for this. The `platform` host should be a `root` here, but if it is, then it should be a `root` or `root_sequence` so that we can get the platform from the host.
I think this should be `global.googlesitekit.setup.authenticated = response.authenticated;`
I think this should be `isMultipleWaitTime`
I think this should be `if not UPDATE_KINESIS_PROVIDER == 'kinesalite'`
I think you can remove this line. The other one is already added in the `Copyright`
`maxRetryTimes` is not used in this class.
why is `signedUserName` needed here?
I think this is a leftover from debugging purposes?
This is a change in behavior, right?
This change is not related to the PR. The reason is that the `n root` part is not in the middle of the `n root` of the toolbox is because of the `n root` of the toolbox, but the toolbox is not in the middle of the toolbox. So, it is not in the toolbox, so it is not really needed.
` PutHash` is a bit confusing, how about `c.entries.Delete(key)`?
You can use `bytesRead` here.
shouldn't we do this in a separate PR?
This is not the right place for this, but I think it's better to just add this to the `__init__` method.
How about just `CircuitBreakerManager.PluginInfo(CircuitBreakerManager.class.getName());`?
I think this is the way we can do `QMetaType.Type.value` instead of `QVariant.Type.value`?
passing a context.Context is a bit confusing, why do we need to pass it here?
Align the elements of a hash literal if they span more than one line.
Can we use `string.Empty` here? We don't have to do that in a separate PR, but I don't think we should be using `string.Empty` here.
Is this a bug fix?
AddPeersErr -> addPeerErr
I think we should be consistent and use `ImmutableMap.of` instead of `ImmutableMap.of`
Here is an API break. I think we should keep it.
Why not just `LargeApproved`?
Why is this default False?
Why is this being removed?
This is a bit confusing, why is this needed?
is this still necessary?
I would have added a new constant forpriv_distributeRawTransaction() function.
I think we should keep the `.c_str()` for all the readability.
How about using `--with-loop` here?
Why update the parameters?
This was not used in the test, but it was a bug.
This is a bit confusing to me. If we're going to have a `User-Agent` flag in the `Process` model, we could just use the `Process` flag here.
Should we make this a constant?
I think this is a good idea. But I don't think it's necessary to add this to the ENABLE_JSON_SERIALIZATION.
This should be split across multiple lines.
I think this is a leftover from debugging?
I think you can remove params from the response body body body body body.
I think this should be done in the `CreateMasterVM` package instead of here.
Why do we need the #if here?
Is this going to cause problems?
This test is not in the actual test, so it should be removed.
This should be removed.
Remove this extra line
you should not need to pass the `string` here
I think this should be ` ::WinRM::Connection.new(options)`
`request` is not a `get_requests` method, so it should be called `requestrequest`
This is a very minor change, but I'm not sure why the original code was doing this.
I think we should be able to get rid of this action.
This is a bit confusing, as it is used in `onPreExecute`, but it is not used in `onPreExecute`.
I'm not sure if this is the right way to test this, but I'm not sure how to test the `RESTRICT_ACCESS` email.
I think this is a bug fix. The `onFocus` function should be called in the `focusTimeout`.
This is a bit confusing, why do we need to have a `GetConnTrack` interface?
I think you can remove this and just do `com.google.common.collect. eliminates.SessionId`
I think this is the only change that will be needed in the future.
This is not the only package that is generated from the `package` package.
I think this can be just `return False`
I think this is the only place where we need to do this. The only reason we're using `get_storage_item_t` is for the `get_storage_item_t` function.
Why set the Caffe::GPU here?
computed and not enough
I think this should be chan?
This is a bit of a hack, but I think it's better to be more specific than the `AC_*` naming.
I think this is a bit confusing to have a package name, and it's not a file name, and it's a bit confusing to have a file name for the package name. I would suggest to call it `cstor-volume-grpc/app/command` or something like that.
I think this method should be called `get_bad_alloc` instead of the other way around. The caller can do this because it is already called by the other method.
I think we should keep the original value here. The new value should be the miner, not the miner.
why is this needed? This file is already loaded by the `./scripts/pylint.sh` file
Do we need to consider adding an additional parameter to the retries? I think we could just have it as an optional parameter to be consistent with the other options options.
NoControlCharacters was used in this class, so I removed it.
Is this needed?
Should we pass the `buildBinary` here?
InMemoryExporter is used in a couple places. Can we rename it to something like `InMemoryExporter`?
Why is this change needed?
This is the only change that affects this PR. I think we should just remove this.
Why is this getInstanceId?
I think this is a leftover from an earlier PR.
This is a bit confusing. What's the difference between `TrimRows` and `previousRows`?
I would prefer to have a check for `strcmp(node->data.scalar, "default")` before calling `strcmp(node->data.scalar, "default")`
I think we should add a new param to the interface, to make it clear that this is the one that the container isn't in the local ID.
I think this should be just `getcsv`. Let's just make it `getDefault`.
I think this is the only change that will break existing models.
I think this should be a separate PR
I think this should be a newline
Can you please add a space after the `if`?
there is no need to register the `protoregistry` as a parameter in the constructor
This class is unused.
I don't think this is the right place for this. The user can see the same header as the `logical_ctx` function.
I think we should remove the `config` param completely.
I think this should be `if exMessage.startsWith("Data file")`
I think we should just make this a constant.
Ah, this is a bug fix.
Is this TODO still relevant?
I'm not sure if this is the right place to put this check. If `updatedProjectConfig` is `nil`, then `errChangeSetEmpty` will return `false`.
Please remove the `//`.
I think this is a little hard to follow. I think it's better to use the `json:"start` helper for this.
why is this changed?
`val_BATCH` is a list of `Celgrind` and `Celgrind` is a list of `Celgrind` (not a list of `Celgrind`).
This is a bit confusing. Why not just call `writer` directly here?
I think this should be done in `app/services/models.rb` instead of here.
This is a breaking change.
Can you check if the name of the existing `StressChaos.ContainerName` is nil? I think it would be better to check if it is nil and then check if it is nil.
why did you change this?
We should probably get rid of this line. We have a couple of other similar lines in `get` and `getpvc`.
This is a bit weird, why not just use the `fme_irq` helper?
suggest to use `transformer.transformer.to_s`
I think it would be better to do the `startActivity` inside the `if` block.
check -> check
This should be done in a different PR.
This is the only change that affects PODF is in this context.
Can we also add a `omitempty` field to the `version` tag?
I think this should be `DateTimeFormat`
I think we can do `pvc.Name` instead of `pvc.VolumeProvision` here.
This is a breaking change. It's not a public API.
I think this is a leftover from the previous version?
can you please add some info about what this is for?
This is not the correct type. It is an array array, which is a string.
endsWith is already checked in the constructor
This should be `Zipkin Exporter.of(store.get, BatchExportProcessorOptions)`.
It seems like this function should be renamed to `RecreatePipedKey`.
I think you should remove the `__(` and use `__(` instead of `__(` here.
I think we should use the `refToDecorPiece` here.
This is a bit odd - why not just use the tex version?
I think you can remove the upper bound here, since it's not used anywhere
I think this is not needed if the FIPS module is not initialized.
Apparently this field is not in AppliedTo/To/From fields.
I think it would be better to use `hide caret` instead of `usingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusingusing
this is not needed, we should not modify the class
`acc` could be a `REQUEST` property. I would suggest to use `REQUEST` instead of `acc` here.
Is this the only place where we need to do this?
Can we also remove the `conf` expectation?
I think we should be more explicit here: "If the callback is called multiple times, the callback is called multiple times, the callback is called multiple times, then the callback is called multiple times, and the callback is called multiple times, the callback is called multiple times, and the callback is called multiple times, the callback is called multiple times, and the callback is called multiple times, and the callback is called multiple times, and the callback is called multiple times, and the callback is called multiple times, and the callback is called multiple times, and the callback is called multiple times, and the callback is called multiple times,
Can we avoid the second? `Badge` is a bit confusing since we have a `second` in the array.
I think this is a leftover from debugging purposes. The precompressed files are not in the middle of the precompressed files.
Nit: I would prefer to have this as a separate PR, but I'm not sure if it's worth it.
I think this is not needed.
This method should be `@Deprecated`
I think this include can be removed now.
I think this is a bug fix.
If you change the default, you can just set the default to 50 (since it is a long).
Can we remove the master clause completely?
@matt-gardner How do you know if this is the right place for this?
`mock = mock_apigateway()` can be removed.
It's not clear to me why this check is here.
I think we should add a new function to `handle` to make it easier to track how to use it.
`float scale` is not needed here, `scale_fixed_to_double` will always be `None`.
I'm not sure this is the right fix. The previous code was correct.
I think this should be `route_step.values["name"] = std::move(step.name);`
I think it's not a good idea to change the error message to "not end"?
I think this is a bit confusing. I think we should say "Could not approve the list that is not in the approver."
I think this is a leftover from debugging purposes.
Why is this a list comprehension?
I think it would be better to use `executiongenproto` instead of `executiongenproto`
I think we should copyqr twice
I think this is the right place for this.
This is a bit confusing, why do we need to do this? It seems like we're not using the `self.extra_convs` anymore.
I think this is a good idea. If you want to do something like `if(...)` it should be fine.
Why not use the existing `Mode` function?
I think this is wrong. You're using `v4IPNet` to set the `v4IPNet` value to `nil` if v4IPNet is nil.
I think we should pass in the `details` here, as it's a constant.
(style) line over 80 characters
why remove this? Settings.versions() is not used anywhere
This is a bit confusing, as it returns a string, but the string will be set by the file name.
I think this should be a constant
I think this can be removed
why not just delete if it's not nil?
This variable is not used anywhere.
I think we should add a link to the token here, since we're not really using it anywhere else.
I think we should keep the config.boltdir.
If you're not going to raise, you should raise `NullPointerException` instead of `raise`.
`GrpcHandler.Request` is not a correct name for this class.
This is a bit confusing, as it is used in the ` Implementations` method.
Why not just `ADIOS_HAVE_AD`?
I'm not sure if this is the right fix. The `Default` value should be the same as the `Default` value for the `Default` value.
this is the only change needed?
I think we need to move this to `androidKeystore` as well.
can we add a TODO here to remove this
I think this is a leftover?
This test is testing the wrong thing. The test was passing the full full test, so the tests were failing.
this is not needed
The `_Headers` should be removed.
I think we should be consistent and use the `iceberg.metadata.retries` constant.
I think this should be done in a `unsupportedProviders` class instead of here.
This is a pretty big change, and is not a big deal, but it's a bit odd.
We should probably have a better name for this.
I think we should log the encoding here, as we do in the log below.
I think this is wrong, it should be `0x861` instead of `Authentification` since it's a new column.
I think this is not a debug print.
I think this is the only change that will be needed in this PR.
I think this is not correct, if you are already doing `ipsets` you should remove it from the `if` below.
Missing `@return` statement.
Please rename this to PARAMETER_MAX_RESULTS
I think this is a bit of an unrelated change, but I'm not sure how to test it.
I'm not sure if this is the right choice. The `cobuild` is used for the target target.
I think this is the wrong place for this. The OSM is the OSM default. I think this should be `CRiOS`
Why is this public?
Should we do a `dump_puppet_log(host)` here?
I think we should do the same for the `diffProps` check below, if we do not want to do it.
I think this is wrong. It should be `if epochNum <= a.foundationBonusP2StartEpoch && epochNum <= a.foundationBonusP2EndEpoch`
DropDropStore and save a few lines of code that needs to be updated.
This is a bit confusing, as `m.GetPaths()` is a `os.Lstat()` function. I think it's better to call `m.GetPaths()` in `GetPaths()` and then call `m.GetPaths()` in `GetPaths()` in `GetPaths()` in `GetPaths()` in `GetPaths()` in `GetPaths()` in `GetPaths()` in `GetPaths()` in `GetPaths()` in `GetPaths()` in `GetPaths()` in `GetPaths()` in `GetPaths()` in `GetPaths()` in `GetPaths()` in `GetPaths()`
I'm not sure if this is the right place to put this. My understanding is that `HidepidDisabled` is used by `X-Hidepid` and `X-Hidepid` is used by `X-Hidepid` and `X-Hidepid` but it is not used by `X-Hidepid` so it should be removed.
We should throw an error here.
go added because of the PR description
Should be `this.prevFolderId_`
I think this is a leftover from debugging purposes.
This is a bit weird, why not just pass the `finalize` object directly into `lbann_comm`?
why not just `MolToSmiles`?
Nit: please add a space after the `,`
This is not a good idea. The `capitalize` method is used in other places in this PR. The `toCharArray()` method is used in other places.
This is a bit confusing, as it is a bit confusing to have a method on the class. I think it's better to have a method on the `mFinishAfterAfter` and have a method on the `Shuffle` that returns a `Shuffle` object.
@smarterclayton do we want to get rid of this?
Shouldn't this be `learnedColumns`?
This is a bit confusing. Why do we need to set `in.GetStatus()` here?
I think we should just remove the `lockal` prefix from `certbot.lock` and `certbot.lock` because we don't have to lock the `lockal` field.
Why is this change needed?
I think we should return an error here, to prevent errors from being handled by the caller.
Shouldn't this be a warning?
This is a breaking change. It's not a public API, and it's not a public API.
It's not necessary to change this line.
I think this is a bug, if the user didn't specify the `--client` option, and the new option is to just use the new `--client` option.
Nit: I think this should be moved to `history_rstrip`?
Did you mean to use `err` here?
I think we should be able to remove the `NODE-3405` bit.
I think this is a good time to remove the `_` on the `span` class.
I think `computed` should be a `default` here
Why return here?
`id` is a bit ambiguous, because the `id` is a `find` method. I think it's better to use `id` as the `find` method.
I think we should be able to remove this now that we're in the `attr_reader` block.
Do we need to set `_stream_data` to `True` when the stream is closed?
Is ContainerMap used somewhere else?
What's the reason for this change?
This is a bit confusing, as it is a `class` not a `class`.
I think this should be `JsonReferenceIntegrationIntegrationName` instead of `JsonReferenceIntegrationIntegrationName`
This package is not used anymore.
I think this is a little too much for a reason, but I think it would be better to check for `Rails.Theme_AntennaPod_TrueBlack` here.
why is this necessary?
The following two lines should be indented one space too many.
Why the change to the new version?
Line is too long. [81/80]
This should be in the `ReadOnlyVerityRoot` struct
This should be set to `false` in case of `true`
This is a breaking change, right?
This should be in the `config` package
This should be an array of color strings, not a array.
I think we should also check for cancel on the `IID_` and not cancel on the `IID_`
I'm not sure if we should test for the `should be as expected` here. I think it should be handled by the `header` package.
This is a breaking change. It was not related to the PR.
This is a very old code and I don't think we should be using it in the code.
This is a bit of a hack, but I think it's better to make it a constant.
I think this should be `Field`
I think this should be a `parser.opts.cpp_includes`?
Why did you remove this?
How about we do it in `dvc/command/__init__.py`?
Nit: newline between the last line of this file and the other imports.
This looks like a debug print, and it's not a warning.
It's not clear to me why this is necessary. The `self.force_empty_list` is only used in `__init__` so I would just remove it from the `__init__` method.
Instead of adding a new function, how about adding a new one to `SparkInstalledTimestamp`?
I think this is not correct. If the fragment is invalid, the message will be printed on the next line, but the message will not be printed on the next line.
I think this should be a list comprehension
Line is too long. [82/80]
This is not a required argument, it should be removed.
This is a bit weird, why not just call `custom` with a custom template?
I think it's better to add `always` as `preferred` and `alwaysscribe` as well.
I think this is the only place where we add a newLink method.
I think we should do something like `http.copyResponse(rw, res.Body, Hoodie(req, res.flushInterval(req, res)`
This method is not used in this class. The return type should be `task` instead of `@return`
This is the only place where we call `RepoDoesntExistError` in the `ServiceContext` folder. I think we should just call it `Repofs.NoSuchNameError` instead.
@mfojtik @johanste @smarterclayton I think we should add a default value for this value. I think we should add a default value for this value.
Shouldn't this be `$strictVariables = Config::get('app.debug', false);`?
Is this used?
I think this is a leftover from debugging...
Is there a reason why we don't have to check for the nil check?
Redundant `return` detected.
Why is this change necessary?
I think you can remove the `request.getTitle()` call here. The `request.isInitiated()`, which is now called by `request.getTitle()`.
This should be a warning, not an error.
I think `i.interceptors` is better here.
I think this should be `disabled` instead of `disabled`
Does this change the meaning of the `p.shard`? I'm not sure if it is a good idea to have a `Itoa` method that does the same thing.
I think we should change this to `return contains(tree.put(tree.put(tree))`
I think this should be a `conflicts` instead of a `List`
The `new(heap) char[len1+1]` is not needed here.
I think this is a leftover from the previous version, not the old version
I'm not sure about this change. It looks like the `for (int i = 0; i <= allergens.size() - 1; i++)` is the same as `int` but the `size` is a `uint`?
I think this should be `return b.AppendBool(j, v.Bool())`
This is the only change that affects TF codegen.
"... to true for incomplete multipart upload counts towards space usage on S3 and will add additional costs if not cleaned up."
I think we should just make this a constant. The config is already a constant.
This is not the correct way to do this, but I think it's better to do `cftime.DatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetimeDatetime
Can we move this to the `pkg/api/server/openebs` package?
This message needs to be updated.
We should probably have an assertion about this change. This is a change in behavior that is not related to the PR.
I think we should be able to remove the `_socket` check here.
There's a lot of empty spaces here and in the other places where you use them.
This is a bit confusing, as we are not doing any validation errors in the client. I think we should be looking at the client and not have the client.
I think this is not needed, the imports are already sorted from the standard library.
This field should be available to `--p2p-enabled`.
I think this should be just `param plot`.
Do you have any idea why this is safe to do? I would expect the traceId.trim() to always return an empty string.
Could you add a space after the comma?
This is a bit of a weird thing to do, but I think it's better to move it to the top of the file.
Do we need to consider adding an additional parameter to the retries? I think we could just have it as an optional parameter to be consistent with the other options options.
I think this is a leftover from the previous PR. It should be `com.google.orgname`
I think this should be moved to `competitive documents`.
`primary` is not a primary list.
I think we should also have a `proofs` package for the `miner` package.
I think this should be `msg.MessageId`
I think we should remove the propertyID here, since we don't use webPropertyId anymore.
Thanks for the PR! I think we can remove thecompare.models.js altogether now.
I think this should be `if (varHolder == nullptr) {`
I'm not sure if this is the right place for this.
I think this is a bug fix. It should be `lt;'` instead of `title`
This is a breaking change. If we are going to keep the number of nodes in the same package, we should probably make it a configurable value.
Block has too many lines. [30/25]
I think we should just have a default value of `TenentMaxLength` and use that instead of creating a new value.
does this need to be public?
This function is only called from one place, so we can remove it from here.
I think it would be better to use the same level as the function signature, and add a function to the function that returns the level of the function.
I think this is not the right fix. We should not be using `nonce` here.
I think this should be `orm.ShareExtension.data()`
Shouldn't this be the default in the config struct?
I think we should remove the PublicHeader field and use the same logic for PublicHeader.
I think you can remove the `Character` parameter from the constructor.
I think this should be `isRegularInterface()`.
This is the only change that affects TF providers. I think we should keep this here.
this is not needed anymore
`MutableStateStats` is not used anywhere.
This is not the right way to go. This is the only place where we need to build the server, but the server is actually running the `worker_keystore` key.
I think we should change the `raw` argument to `close` now that we have the `raw` param in the `build-system/common/config.js`
This is not the right place for this, but it should be in the view.
All of these seem to be related to the rest of the PR, but I'm not sure about the wording here.
I think this is not needed, we should be able to remove it.
break here should be enough?
Use the new Ruby 1.9 hash syntax.
Why is this needed?
This should be `functional/mongo_client_tests.js`
Just curious, why does `goog` need to be `const` here?
Should this be `Split`?
I think this import is unused.
error strings should not be capitalized or end with punctuation or a newline
why is this change necessary?
I think this should be `pos_weight = F.binary_cross_entropy_with_logits(..)`
I think this test is not needed. It is already in the `with` statement.
why is this needed?
This is a bit confusing, as we are already using `convert` on the `Schema` class. Can we rename this to `Schema<Types.NestedType().asStructType()`?
What is this? I don't see a `bluebird` used anywhere.
Can be final.
Please rename the variable to `h2o_target_t target_link`
I think this is a little hard to follow, but I think we should just remove the `assert_expect` argument from the config and use that instead.
Metrics/LineLength: Line is too long. [81/80]
I think we should also mention this in the `Public` field.
The `<...>` tag should be removed.
Is this change related to the change?
I think this is a leftover from the original PR, it's not related to this PR, but it's a bit confusing.
I think we should keep the old signature and just use the new one for the new API. The new API is the new API and the old one.
Can we have this field be optional? Like `LinkToParentDomain`?
I think this test is not needed. The test is already in `util.DefaultSessionsStored`
Is this used anywhere?
This is not needed anymore
Can we use `Db` here?
I think this should be called `on_external_failure`
I think this is the right fix.
I think this should be `pygment`
This is a bit weird, why not just use `MaxSubs`?
This is not needed anymore.
Redundant `self` detected.
I think this should be set in the retry variable instead of in the start?
I think we can also delete the `VERSION` arg now that we're passing the version.
This is a breaking change. It's not a part of the API. It's a nameKey, but a nameKey, where it's a nameKey.
I think this is not needed, the `@configuration.fail_if_no_examples` should be removed.
I think this is not correct. `Blockly.FieldVariable.prototype.referencesVariables` should be removed.
This is a bit confusing, as this is a bit confusing to me. If we're going to have a `globalVirtualMAC` interface, then we should probably just have a `globalVirtualMAC` interface that we can use for the other `globalVirtualMAC` interface.
This should be `type`
This is a little hard to follow, but I think it's better to use `platform` as a key.
i don't think we should be changing this. we should just always delete the `os.Exit` function.
Is this really necessary?
This seems like a bug in volumeStatusOK. Can we just remove it?
I think it would be better to throw an IllegalArgumentException here, and throw an IllegalArgumentException directly.
nit: you can merge these two lines
I think we should use the `Activity` field instead of the `id` here.
Line is too long. [87/80]
I think this should be done in the `Bean` class instead of `shouldRepeat`
Why is this import needed?
I'm not sure if this is the right way to do this. This is a bad idea, but I'm not sure if it's worth it.
This is a good change. It will be reproducible if we have a file with a file with a file with a file with a file with a file with a file with a file with a file with a file with a file with a file with a file with a file with a file with a file with a file with a file with a file with a file with a file with a file with a file with a file with a file with a file with a file with a file with a file with a file with a file with a file with a file with a file with a file with a file with a file
I think we should just make this `Http2ExperimentSwitch` and not have to worry about the `GoogleCloud` in the name.
I think this is a leftover from previous version.
This is the only change that will break the API. The only reason we don't use `errors` is because we don't have to go back to `pkg/errors`.
I think we should be using `name` here.
This is a breaking change. It's not related to this PR, but I think it's better to keep it.
I think we should be consistent and use `Block` instead of `Block` here.
This is a bit confusing, but I think it's better to leave it as it was.
I think we should be able to use the `Image` module here.
`coalesce_result` is the column name, not the current one.
I'm not sure if this is the right way to do this. The `AC_DEFINE` function is called only once, and the `systemdsystemgeneratordir` is called when `--variable=systemdsystemgeneratordir` is set to true.
I think this is the right place for this. Why do we need to call `self._classificationCompute()` here?
I think we should use `methodInitCode` here
I think we can remove the `startTs` here.
This is a breaking change. I think it's better to move it to the `rect` module.
I think this is a leftover from debugging purposes, not a big deal.
I think you can remove this whole method now. The parent class should only be used if there is a call to `populateDataFromParentClass` in the parent class.
I think this should be `EmStore` instead of `EmStore`.
This is a bit confusing to me. What if we called `Workflow` instead of `done`?
Can you please rename `NaN` to `NaN`?
Why is this change required?
@adamjstewart Is this going to work on Windows? I'm not sure if this is the best way to go.
This is the only change that affects TF providers.
This is not the Delay Delaying process.
This should be done in `src/devel`.
I think this is a wrong change.
I would use `file_exists` here, because it's the same as `__DIR__ .Contractsper/Resources/...`
So if we are not going to write settings file, should we just make this a const?
I think this is a leftover from debugging?
I think this is a bit confusing. If we don't have Dockerfile, we should just return it.
I think this function should be named `node_classes.NodeNG`. The function is only used in `node_classes.Node`, and the function is only used in `node_classes.NodeNG`.
I think this is the wrong place for this. The code that uses `@group_level` and `@group_level` is the `group_level` which is supposed to be `if @group_level != 0`.
I think this should be `Raiden.Spark.Ignore`.
I think you can get rid of this line. You can just do `get_notebook_data(notebook_path), "notebook_path")`
Do we need to do anything special to the search_builder_class?
I think we should remove this test. We should not be testing anything in the test.
I think we should add this to the `register_form.py` file.
@bparees this is the build break. I think we should use `type='build'` here.
I think we should also check for `fullResponse` here.
I think this is not the right place to import this, but `from string import ascii_lowercase` is used only in this file.
The console.dir doesn't have a console.dir anymore, so it doesn't have to be re-used.
Is this needed?
I think it would be better to use `MediaLibrary::class` instead of `string` here. Also, I would use `string.join` instead of `string.join` here.
I think this should be `EnableAdminApi` instead of `enableAdminApi`?
Is this file still used?
I think this is the wrong place for this. The DyingAndDoneExport is set to true when the record is in dying state, but the record is in dying state.
I think this is not needed, it's already in the list
I think this should be `valid_tile_urls`
This should be called `Console.WriteLine(message);`
This is a change of behaviour. It's not a test, but it's not really a test, so I would just remove it.
this is the only test that fails in the test, right?
I think this is a leftover from an earlier version of the code.
This file should be removed.
why not use the reconcile.Reconciler directly?
I think it would be better to have a method `getClientConfigImportModule` that returns a `ConfigImportModule` and return a `*` instead of a `*` here.
@jridgewell I think this is the right way to go. I don't know if this is the right way to go.
`_agreedCapabilities` is now unused
I think this is a little too much, since `o.lss` is nil and `sgap` is nil.
can we use `html_safe` here? We are already using `html_safe` in the `if` statement
I think this is a leftover from previous PR.
I think this should be `InvalidRemoteable`
I think this is a leftover from an older version of the PR.
I think we should remove this file.
I think this would be more readable if we used `CATALOG_URL` instead of `https`.
Why not just use the `update_state_map` function here?
This is a breaking change, since the exception is logged in every iteration.
Should we use `this.inputs.length` here? Or is the `.sequence` variable used somewhere?
This is not a good name. It's not a function that's named `GCS uploader`.
nit: `final` not required.
Do we need to set the ` peer` event? I think we should set the ` peer` event, not `/settlements/{peer}`
I think we should be using the constant here.
This is not a problem, but it's not a problem, but it's not a problem, so I would just use `from kinto import time` here.
I think this is the fix.
Do we need to set this to `properties`?
This is a breaking change.
Debug field should be `config:"second"`
`warnings.warn` is a bit confusing, it is used for both warnings and warnings. I think it should be more explicit. Also, I think it should be `verbose` instead of `verbose` and `verbose` if it is a string.
I think we should keep the method as it is.
I think this is a leftover from the previous PR.
This is not needed.
I think we should change the condition to `key["type"]`
`default` is a `Concurrent` so you don't need to assign it to `Concurrent` here.
I think this should be `if` instead of `if`
Use 2 (not 3) spaces for indentation.
I think this should be a warning, not a warning.
This is not a good idea. If the symbol is not a list of the class, it will be a list of of the class.
I think this is the only change that is needed, but I don't think this is a good idea.
I think we should move this check to `ec2_client.go` so that we don't have to worry about other recent recent changes.
I think it would be better to use `undefined` here instead of `keys !== undefined`.
This is not needed.
Is this change necessary? It looks like the `lib/lib` and `lib/lib` have the same name.
I think this is not the right way to check. This is a case where `opt_port` is a `null` port, so maybe it should be `opt_port`?
Is there a reason we can't use `codec:"spend"`?
Please use the constant from the class name
nit: I think you can use `is_current_user` instead of `is_current_user` here.
Why not use `FunctionTestCase` ?
Can we add a TODO to remove this link?
I think this is not the right place for this. We should just make a `.BLACKLIST` argument in the `__init__` method.
nit: you can merge both lines above as `(error, params, params)`.
This is the only place where we need to set a field in the field. I think it should be possible to set a default value for a field in the constructor.
Shouldn't this be `m_device_extension_names`?
Please use `String#Equals(String, StringComparison)`
Unnecessary spacing detected.
The `Series` is not used in this function.
why not `new PhysicalLocationComponent`?
this is not needed anymore
can we just use `expFeeFactor` here?
Put this in `before_action` instead.
I think this is not needed, the projectSpec file is already created.
Shouldn't we use the `select` field here? I think it's better to use the `E-mail` field instead of the `Email` field.
`map` should not be necessary here, as `map` is not null.
`constructor(props)` is not needed, you can just call `super(props)`
This is a bit weird. TestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHiveTestHive
I think we can just use `post.must :save` instead of `post.must :topic`
This should be a `error`
I think this is a leftover from debugging purposes, right?
Nit: `injecting` should be `type`
The new line is missing.
What is the reason for this change? I'm not sure if it's worth it. I'm not sure if it's worth it.
I think we should remove this attribute.
I think we should be able to remove the `this.exporter.Export` call.
I think it would be better to test the collections_bucket, and pass the details to the `id` and `json` in the details.
I think it's better to use `ar ugugments` here.
Should this be `width: width * 2`?
This is not the right way to fix this, but it seems to me that `toLowerCase()` should be called from the `filter()` method.
Why does this need to be a `force`?
I think this should be a constant
I'm not sure if this is a good idea. If the user doesn't specify a `<%= _(<<-TEXT)` and the usage dashboard is a valid object, they'll have to be a valid object.
I think we should add a new field in the `set` to keep the old field consistent with the other fields.
can you use `f0.plot()` instead?
This blank line was causing the CI failure.
I think this is the only change that will break all the tests. We should do it in a separate PR.
I don't think this should be variable. It's not a variable.
This change is not necessary because the `s.Equal(2, d.NumOfCallToPayloads)` will always be an array of `2`s.
I think this import can be removed now
This is a change in behavior, but it's a bit confusing to have a single quote here. Maybe something like `-attach`?
This was removed because it was never used
Should we use a `StringBuilder` here? I think we should use the `StringBuilder` as the default value for `StringBuilder`
I think this is the only place where we need to do a list comprehension.
We should keep the info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info info
Rails/Present: Use if an if statement instead of <<.
I think this variable should be called `var cg`.
I think this should be `throw new ParameterException(commandLine, "Problem with privacy-public-key-file: " + e.getMessage(), e);`
@jackfrancis this is the only change that affects this PR.
This is not the fix.
This include is not needed anymore.
I think this should be `OptionalOrElseMethodInvocation`, since it is a very specific implementation detail. Maybe `LambdaMethodReference` is a better name?
should we remove this and the corresponding one below?
This is a bit confusing, as we are already passing 3 3 to the same version, and then passing it to the pop_main. Is that intended?
I think this should be `[MemberNotNull]`
MakeMdID is already being used in the `rmds.MD` function.
Why not just make this `Word dependencies`?
I think this is a leftover from the PR.
I think this is the only place where we call `Dispose` on the loop.
Maybe we should create a separate issue for this TODO?
I think we can remove this line. It's not used in the changelog.
I think we should use the `*testTask.TaskArn` helper here.
This is not a valid column name, but I don't think we want to raise an exception here.
I think this is not right. It should be `task.max_visibilities`
This is not a great way to do it. I think it's better to do it in `Positional arguments are out of order` and then `arguments-out-of-order` to be consistent with the rest of the codebase.
I think this should be `SnackBarHandler.show(coordinatorLayout, getString(no_account_signed_in));`
I think you can use `std::string purge(host, std::vector<HostAddr>& hosts)` instead of `toHosts(host, std::vector<HostAddr>& hosts)`
I think this is a leftover from an earlier version of this function.
This is the only change that affects TF providers. I think we should be setting this to `state.Config.FeatureFlags.RemovePleasings` to prevent the need for this change.
nit: move to the top of the file
This is a bit of a hack, but I think it would be better to have a method that returns the string of the data store instead of a string.
this is not needed, we can just use `@widget.send(@type)`
I think this is a leftover from debugging?
I think we should also add a description of what "Delete mark denotes whether the row is deleted or not"
I think this should be a warning, since it's not a debug-only argument.
Is the `escape` parameter used anywhere?
The `always` should be removed.
Could you please add a `const` to the interface? It's not clear to me why this is necessary.
This is the only place where we have a single thread, so I'm not sure we should be changing this.
I think this is a good candidate for a `_` clause to make sure the guidance is only meant for the first two lines.
Can you revert these changes?
I think this is a leftover from the previous version, not the fault.
Was this a bug?
I think this is a leftover from debugging...
This is a change in behavior, right?
I think this is a leftover from debugging...
I think we should remove the `tenacity` dependency on the version.
I think this is a leftover from previous PR.
I think we should have a check here that the value is null.
I think this is a bit confusing, since we have `setProfileID` already. Should we maybe use `setProfileID` here?
why is this removed?
can we do a `# TODO: Will need to figure out why?
I think this is a little confusing. If metadata is nil, then metadata will be nil, and metadata will be nil.
This is the only place where we call `cart_notification_email` is called.
We don't use wildcard imports, please remove them.
I think we should move this to `createSpy` and move the `should recalculate` call above to `createSpy`
Why is this removed?
This should be `throw` not `throws` (same for the other `IOException`s).
can you check the write is not required here?
The `KafkaStage` is a `KafkaStage` object, so we should rename it to `KafkaStage` and `KafkaStage` to make it clear that it's a `KafkaStage` object.
This should be in the SszLimit package
This should be split across multiple lines.
I think this can be removed now, since pytest is not used in this file.
Could you add a docstring here?
I think we should add a `default: true` to the `default: true` field.
why is this removed? It seems like this should be moved to `await Task.Yield()`
I think we should be able to get the `namespace` from `KsqlConfig` to `KsqlConfig` here.
I think we can remove the `auto space` here.
I think this is the only one that is used by the test, so I'd remove it.
This is the only change that affects this PR. The only change in this PR is that `gulp dist --help --help --help --help --help --help --help --help --help --help --help --help --help --help` is the default, and we want to show the default, and we want to show the default, and we want to show the default, and we want to show the default. I think we should keep this as-is.
How about using a different name for this?
I'm not sure if this is the right way to do this. The `\FrameworkBundle\Component\Router` should be removed.
I think this is not correct. We should be checking for `is_merge_or_booted` instead.
nit: can we use `!axe.commons.aria.isValidRole(role)` here?
This is not a final thing.
`skip_session_tracking?` is a pointer so `skip_session_tracking?` is a pointer, so `skip_session_tracking?` is a pointer, so `skip_session_tracking?` is a pointer, so `skip_session_tracking?` is a pointer, so `skip_session_tracking?` is a pointer, so `skip_session_tracking?` is a pointer, so `skip_session_tracking?` is a pointer, so `skip_session_tracking?` is a pointer, so `skip_session_tracking?` is a
I would raise the warning here, not raise.
This is not needed anymore.
should be `* 2 / 3`
This import is unused.
Shouldn't this be a property of `FieldView`?
This class should be removed.
Just a note that this will break Python 3.0.0. I'm not sure what the problem is here.
Use the new Ruby 1.9 hash syntax.
Why not just use `staff`?
This is the only change that affects the change.
this is a bit weird, why do we need to set it to true?
why remove the `blockSignerAddress` part?
This should be `4.3.0`
This should be renamed to `tm_cpp`.
I think this is a leftover from the previous PR.
This is a breaking change. Can we keep it?
I think this is not the right place for this. The protected is used for anything else.
We should also check for `mongodb-extjson` here.
Could you please add a doc here?
Why is `HAVE_RSEQ` needed here?
This is the only change that affects this PR.
What is the reason for this change?
Please remove the unused constants.
I think this should be `wait_for_event(..)`
Does this work for all the other languages? I would expect the name to be unique, but I don't see any reason to change it.
Why do we need to import applicationVersion?
I think this should be `&workflowservice.PollWorkflowTaskQueueResponse{}`
I think this is not the right place for this. The `read` is used for the `read` param, and it should be removed.
I don't think this is the right place for this. The `preferredMimeType` variable is used to determine if the `user` value is a `facingMode`.
Layout `const` here and below?
Why is this Svc?
this is the default value for test_job
Is this change necessary?
This is not a valid example of how we want to support it.
We should probably have a unit test for this
Is Interop\ContainerInterface still used?
I think this is the only place where we use `path.docroot`
can you change this to public?
This is a change in behavior, right? We don't need to pass the node ID here.
This is not a valid return value.
This is a breaking change. It's not a public API, and it's not a public API.
I think this is not needed anymore
Why is this line removed?
I think you can remove this line.
I would prefer to have this as a `*` and not have to pass the `array $icons` as argument.
We should add a docstring here.
This file is not in use by any other version of this PR.
Is the `GetMethod()` here ever ever null?
Are these changes necessary?
This is a bit confusing, as the `&errno == EAGAIN` check is not needed.
I think this should be `self._keys()`
`except ValueError, e:` is not necessary here
Align the parameters of a method call if they span more than one line.
I think this package should be in `pkg/features/internal/internal/package.rb`
Why is this being changed?
It's not clear to me why this is changing. I would expect it to be a `_sdf` but I don't know if it's the case.
Should we set the environment variable in the config?
why change this type?
I think this should be a `public` (and the `builder.transformPaths`)
this is not a valid integer, it is a valid integer, not a integer
Can we add a migration to track this? I think we should be able to track this in the future.
This file should be removed.
This is a bit confusing to me. If you're going to write a field with a class, you're going to write a field with a class name that is not a valid index. I think it would be better to just write a field with a class name and write a class with a simple `IllegalArgumentException`.
I think we can remove this too.
I think we can remove the `:paste-primary` here since we are not using the `clipboard` anywhere else.
Please remove this.
Why removing this object?
maybe we should add a ` PlayerHandlener->tradeItem` to the `tradeItem` and use that instead of the `tradeItem` variable?
This line is too long.
Standards: Please add a space after commas.
The `$plugin` variable is already declared in the `$this->get` call above.
This is not the same as `api.SpecNodes` above, but I think it's better to just remove the `if` and `nodesRegex` checks.
I think we can safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely safely
I think this should be `if (Settings.GlobalSamplingRate == null) {1}`
@jmhooper @jmhooper @mitchellhenke Thanks for the PR!
why do we need this? I don't think we should expose async/async
I think this might be clearer with the `exporterOptions` variable.
I think this should be set to false by default.
Why not use `FileUtil.isPreviewAllowed(fileDownloadHelper.isPreviewAllowed(fileMetadata));`?
we can remove this method
info is not needed anymore
I think this is the only change that affects this PR.
I think we should remove this line
**Question:** Should we also mention that in the docstring we have `_helper` in the name of the component?
Please use `db.Infof` instead of `db.capacity.Info("setting db capacity to :", db.capacity)`
There is a lock here that can be reused.
Why is this needed?
I think we should get the value of dbName from the DBOpenHelper.DEFAULT_DB_NAME check here, as we have the value of DBOpenHelper.DEFAULT_DB_NAME check in DBOpenHelper.DEFAULT_DB_NAME check in DBOpenHelper.DEFAULT_DB_NAME check in DBOpenHelper.DEFAULT_DB_NAME check in DBOpenHelper.DEFAULT_DB_NAME check in DBOpenHelper.DEFAULT_DB_NAME check in DBOpenHelper.DEFAULT_DB_NAME check in DBOpenHelper.DEFAULT_DB_NAME check in DBOpenHelper.DEFAULT_DB_
This is a bit confusing, as it's a bit confusing to have a docstring for the new parameter.
This is a bit of a hack, but I think it's better to use a `typeTable.save()` instead of `typeTable.saveNicknameFor()`
I think we should remove the `nvda` param entirely.
Why is this removed?
This is a breaking change. We should add it to the `install` package.
I think you can remove the `model (nn.Module)` part here.
`--eval` should be in both places. Also, `--eval` should be in both places.
Why is this removed?
I think it would be better to use the IP as the name of the variable.
I think this is a leftover from an earlier commit, but I think it's better to make the change to the `enum` enum.
Maybe we should just add secondaryConfig to the common common place here.
Use the new Ruby 1.9 hash syntax.
this is not needed anymore.
"model" -> "model".
Why not return here?
Did you mean to include this in the PR?
Is this used?
I think this is a change in behavior, right?
This is the only change that affects TF providers.
Why not catch zk?
@jeherve - I think this is the right fix. I think the `!==` is the right fix.
I think we should use `self._conn.request(method, parsed_url.path, body, headers)` instead of the actual exception.
Is this going to be a problem if the secrets are already in the `*SecretEncryption` ?
Please revert this change.
This is the fix.
Is this change necessary?
This is a bit of a hack, but I don't think it's worth it.
"Attachment is used simultaneously as two color attachments"
Shouldn't this be a `HeadLess`?
I would default to True, to avoid conflicts with other people who have already done this.
No need to import here, it's only used in one place.
I think this is a leftover from debugging purposes.
This test is not really testing what we want. It is not possible to test the `keys` value in the test, but it doesn't seem to be related to the test.
The changes in this file are not necessary.
Use || instead of or.
This is the main change. The way it is implemented, it is now `Status()` and `metrics` are available.
I think this is the only place where we set the file on the app.rb
I think we can remove the copy check here.
I think we should just remove the `alignment_` prefix here.
`TaskCPUMemLimit` can be `false` if the default is false.
Why do we need to set here?
This is a bit weird, why not make it a `or modify`?
I don't think we need to do anything special with the class name. Can we just call this `mysqld.sock`?
Rails/InverseOf: Specify an :inverse_of option.
I'm not sure if this is correct. The tunnel will be NULL if it's NULL.
I think this should be a `./`
I think this is the wrong way to do this. The `newLen <= 0` check is always true.
This is the only change that is needed.
What is the difference between `mmffArom` and `mmffArom`?
I think this is the only place where we use this code path.
I think this should be `Pattern.MAX_VALUE - 1` instead of `Pattern.MAX_VALUE`
We should create a GapicProductConfig and create the same one for all the supported loops.
I think we should be consistent and use `ExpressionUtil.ExpressionExpression` here.
@smarterclayton now that we have a test that checks for this.
Why change this?
This is a bit confusing, as it is a `defaults` and not a `int`?
Please remove the extra spaces here.
this is not needed
I think it's better to be private with the other tests.
I think this is the only place where we want to support the `heatmap` parameter.
What's the reason for this change?
This file is not used anymore.
Why was this removed?
I think this is the only change that will break existing test files. We should try to keep the old test file in place.
This is not a required change. It should be in a separate PR.
this is wrong. You are setting the size to `true` by default.
This is a bit weird, why not just do `function(item, var $this).tab-buttons > div`
I think this should be `ignore` instead of `AddAdd(this)` as well. Also, should we add a `default` flag to the `Re xPath` method?
I think this is a good idea. It's a bit of a hack that we should be able to configure the build without a configure.
This is not needed anymore
nit: remove the extra space
Now that this is a `bp::BPF` I think it's better to make it `BPF`
I think we should use the standard `pkg/apis/v1` package here.
This is the only change that affects this PR.
IsolationLevel added here as well?
Why is this being removed?
Is this not needed anymore?
Line is too long. [81/80]
I think we can just use `gather` or `gather` because it's a bit confusing because it's a bit confusing because it's a bit confusing because it's a bit confusing because it's a bit confusing because it's a bit confusing because it's a bit confusing because it's a bit confusing because it's a bit confusing because it's a bit confusing because it's a bit confusing because it's a bit confusing because it's a bit confusing because it's a bit confusing because it's a bit confusing because it's a bit conf
As far as I can tell, this is now `LogManager.ThrowExceptions = true`?
I think we should return `None` here.
This is a breaking change. The `entry` is a `Map` so it should be an `Collections.emptyMap()`
add the input path as the input field
This is the only line changed in this file.
I think we should keep this as `config` and make it `protected` if we're not using it.
This is the only place where we should be using the CDN because it's not a part of the state. We should probably try to avoid the risk of breaking the UI.
this is not a part of the PR, but I think we should use the `WelchWindowFunction` here.
This function is now unused and can be removed.
Should we rename `r` to `custom_col`?
This is a bit of a hack, but I think it's better to just pass the type to the constructor.
I think you should remove the print statement entirely.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
This should be set to false by default.
I think we can remove the `Items.SourceSnapshot` below.
Why is this removed?
I think this is a bug fix. The default case should be `default:`.
Why is this needed?
I think this is not the right way to do this. The `attr_value['string'] is not None` probably not required as `attr_value['string']` is not None. The `attr_value['string']` attribute is `None` (the `attr_value` attribute is `None`).
If the goal is to use `reader` as the name of the variable, we can use `return builder.AddMetricReader(reader)` directly.
I think this should be `process.Kill()`
This is not a factory function, it is only called from the UI.
This is a breaking change, but I think it's better to keep the old version of the translation.
I think this is a leftover from debugging?
Can you remove this line?
I think this is not needed anymore
This line is too long.
I think we can get rid of `attribute_change` altogether here.
Do we need to pass the layout id as a parameter to `GetItemLayoutId`?
This needs to be indented
This is a bit of a hack, but I'm not sure if it's worth it.
@michaelkuhn Do you remember why we need to change this?
I'm not sure if this is the right place to put this code. It seems to be the same as `render_request_image` (and the same for `request_image`). If it is, then it should be the same as `request_request_image` (and the same for `request_request_image`).
The `deploy.on\\` should be a dictionary, not a relative path.
This change is not needed.
I think we should use the same naming here.
I think we should set a default value for `ECS_SPOT_INSTANCE_DRAINING_ENABLED` to `true` when the `TaskMetadataAZDisabled` is set to `false`.
remove this line
I think this is a little hard to read. I think it's better to move this check to the top of the file.
Line is too long. [81/80]
why is this change needed?
Should we add an example here?
I think this should be done in the `if (e, "SecurityException in blockNetworkData)" {` block.
This is the only change that affects TF providers.
I think this should be `signer`
`localize` is not a correct name. It should be `localize[localized]`.
Why is this needed?
@jridgewell I think this is the right place for this. The key is the same as the key. The key is the same as the key. The key is the same as the key.
This is a bit confusing, as it is used in `_get_mask_bar` and `when_searching` that is used in the `scrolling.bar` file. I think it would be better to have a separate `_get_mask_bar` property that is used in the `scrolling.bar` property.
I think this should be `sys.getfilesystemencoding()`. Otherwise, the encoding will be destroyed.
I think this interface is not used anywhere.
This is a breaking change.
I think this should be on the same line as `CryptoSm2Usage`
should we do this only when `loadUiThread` is called?
This is a change of programme.
This is the actual fix.
This is the main code.
I think this is the only place where we need to do this.
I think this should be a separate PR
This is the fix.
I think this should be done in `appManifestsCache` as well.
Why is this change needed?
I think this needs to be moved up to the top of the file.
Please use `output.append((Date) v).toInstant()`
Nit: Use a full sentence, capital M and end with a period.
This is not needed.
should we rename this to mailPort or mailPortPort?
I think this should be split across multiple lines.
This is a bug fix.
What is the rationale for this? I would have expected this to be a `map[string]bool` instead of a `map[string]bool`
It's not clear to me why we need to add this field. It seems to me that we don't need to add it to the `Server` class.
why is this removed?
Is this change necessary?
This is a breaking change. If `run()` is called in a non-functional manner, then `go` is called by `run()` in `lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/
nit: remove empty line
Do we need to make this a `before_action` or can we just call it `after_create`?
`map` is not a `__name__` method, so you can use `join` instead.
Is this still necessary? It looks like it is only used for `Real Realm` and `makeTimeout` implementations.
why removecorr?
This is a change in behavior, right?
I think we should be consistent and use the `IComparable` annotation here.
I think we should remove this line.
nit: you can merge both lines above as `=`
This is a good change. The `const` function is used to call `utils.isHidden` instead of `const`.
This is not used anymore.
why do we need this?
BuildState is not used anywhere?
This is not a part of this PR, but I think it's better to move it to the top of the file.
I think this is a leftover from the original PR, but I'm not sure if it's worth it.
Why is this change necessary?
These changes are not needed anymore
This is the only change that affects TF codegen.
This is a bit confusing, as we are not using the RFC2136 here.
This is a bit of a hack, but I think it's better to do a `error_already_set()` check in the `mol.getPropIfPresent()` method.
I think this is not needed.
I think this should be a `@Restricted(NoExternalUse.class)`
We should add a TODO to remove this
Does this need to be a `metricNamespace`?
We should probably make this a separate PR
Please revert this change.
I think this is the only change that will be needed for the `special_ibl_xfer_tgt` method.
Why is this needed? Isn't `pthread_cancel()` already called in the `cancel` method?
I think we should use the `USER_DOMAIN` constant here.
I think this should be `if (node.querySelectorAll(':not([disabled])])`
I'm not sure if this is the best way to go, but I'm not sure if this is the best way to go.
I think this is a good idea to introduce a new `typeof` in the `xyRatio` package.
why do we need to add this? we are not using `with_approver` anywhere
I think this is not needed, we can just use the enum directly.
I'm not sure this is the right fix. Why is it in the first place?
Why is this change necessary?
Nit: I think this should be `comma-`
is this used anywhere?
why is this not needed anymore?
@jsoriano Is this a bug fix?
why change this? uint8 is not used anymore.
I think we should use `WithStamp` here
Should we also update the `_` member variable in `StageProgress`?
I think it's better to move this to the `Game000-\uF8FF` block, and then remove the `Private Use` block.
This is a bit weird, we should have a look at the `T` part of the code.
I'm not sure if this is a good idea. If the default value is `True`, then it should be `False`.
I think this is the only change that will break existing users. I think we should do it in a separate PR.
Why are we using `go` in the go-go package?
I think you can just remove the `T` struct entirely. The only thing that's the best way to do is use a single `REQUIRED` type.
This is not right. When the `Object` is used, the `0` snapshot will be 0 and the `Object` is not in the `ListLocation` of the manifest is created.
1. Not sure if there is a good reason to keep it.
Just to be sure: we don't need to set `pin` in the ps.
I think this should be `EncryptedSerializedDataSize = swarm.SectionSize * 2`
This is a bit confusing. If we are going to have a MIME type, we should return the MIME type.
I think this is not needed anymore.
why is this change necessary?
why not call `rollback` here?
@jona-sassenhagen this is the fix for the tests.
This is the only change that fixes the bug.
Why not just `emails`?
Why is this needed?
I think we should add this to the `log_path` below.
can we call this `can_purchaser?` or something similar?
I think we should check if the fee estimates not available
Can we just call auditLogsSourceCondSet.Manage(s).GetTopLevelCondition())?
Why do we need this?
Should we make this a function?
Line is too long. [81/80]
This is a bit weird. Why not just use `is_empty`?
I think this should be `app.SetApptypeSettingsPaths()`
I think we can drop `password_reset` altogether now
Can we move this to `require`?
This is a change in behavior, but I think it's safe to change.
I think we can remove the shutdownHook method here.
This is a bit of a hack, but I think it's better to just return the policy name, and then just return the error.
This is not the right place to put this function. Just return `Start()` if `o outbound` is not `""`.
I think we should remove this file.
I think we should also check for the `--test` flag.
I think this is a bug fix.
Why not use `std::string` here?
This is a breaking change. It's not a test, but it's a good idea to test that it's not a test.
It would be good to have a test that checks that the attribute is not set. (It would be better to check that the attribute is set to `""` instead of `epochlengthactivation`.)
I think this should be `if not pleasings.isNotKeys` instead of `plz`
I think we should add a keybase value here, to make it clear that the keybase value is set.
I think this is a bug fix. We should just make the mapper a `NullPointerException`.
I think this should be `new`
This is a bit of a hack, but I'm not sure if it's worth it. I'm not sure if it's worth it.
It looks like the JavaTokenKinds.DECIMAL_LITERAL is always the same. Is that intentional?
Nit: newline should be before the last line.
I think this test was not testing anything, but it was not testing anything.
Is this the only place where we use Windows?
I think this was a bug, since it was already being used in the `ocn.vpn_service.VPNConfig`
Is there a reason we don't want to make these tests check against the line break?
I think this is a bug fix. The previous code was passing the full type to `t_type_spec_object()` instead of the `set()` parameter.
It looks like `s.Noticef()` is already imported here. Is it possible to remove it?
I think this should be moved to the lower case, since it's used in the lower case.
We should probably add a `TODO` here to make sure we don't accidentally break the API.
I think this should be in the baseclass, not in the base class
This method should be private.
This is a bit of a hack, but I think it's better to check for `global_ptr` and `is_pair` here.
I think we should remove this.
Why is this still needed? `Long bitmask` is used in many places.
Is this supposed to be `expect`?
I think we should log the zoneID here, as we already have the zoneID in the log.
`self.prob` is not a correct name, it's not a random, it's a random number. `if random.uniform(0, 1) >= self.prob` is the correct value.
This is a nice candidate for a helper function.
@jridgewell I think this test is not needed. We should test the `--test-` in the `parse` method.
Why did you change the return type of the function?
Should we use `key.append(reinterpret_cast<const char*>(spaceId), sizeof(tagId)` here?
is this used?
This should be signed_out?
This is not a breaking change, since `DBPDataSource` is a public API.
This is a change in behavior, right?
nit: remove the space between `,` and `,`
This is a bit weird, why not use the role instead of the role?
This should be `seelog.xml`
I'm not sure if this is the right fix. It should be: `manual_wall_time_option > time(0);`
Unwrap error seems like a very generic error, can we rename it to something like `Unwrap` or something?
This is the only change that affects this PR.
I think we should make this `houseOwnedByAccount`
This is a no-op change right?
Should we use `driver_name` here?
This is a breaking change. It's not a public API, so I think it's safe to remove.
I think this is a leftover?
I think you can remove the `package main` now :)
why remove this?
This is the only place where I'm seeing is being used. I'm not sure if this is the best way to go.
I think this is a change in behavior, but it's not really a good idea to have a client with a client with a custom type.
I think this should be `if (getOperand(i)->getNullFlag() && (!op_data[2 *)op_data[2 *)op_data[2] = -1;`
Let's use `from-Detected-Locale import warn` instead of `Detected-Locale`
This is a change in behavior, right?
`StatusContinue` is a special case. It's a special case, but it's a special case.
@jvillalobos I think we should have a `scripts/copy-groth-params.sh` file that has a `scripts/copy-groth-params.sh` file.
nit: I think this should be a single line string.
Maybe `dont_listen` is a better name?
I think this should be `report_metadata` and not `report_file`. The function is not a "clang-diagnostic-'".
Line is too long. [83/80]
@mmaxim this was the bug that caused the bug. The old code was only doing the right thing.
This should be `--rm`
I think this should be a `@logger.info`
This is not a valid URL.
I think you can just use `journalPausedFromConflict`
Is this a change in behavior that we want to be able to remove?
Why is this needed?
Why not just use `$this->getContainer()->get('sonata.media.manager.category')`?
Why not use `ChainFailsafeIn`?
Does this read a result of the previous block?
I think we should just delete this test.
Why is this not `== null`?
I think we should use `Math.advance` here.
This is a bit confusing to me. If we're going to have a `raw` property, we should probably just have a `raw` property.
Shouldn't this be named `security`?
@adamjstewart Is this the right place to put this? I'm not sure if it's worth it.
I think this is not needed, we can just remove this if check
I think this file is not used anymore
why not just `current`?
I think this is the right way to do this, but I'm not sure if this is the right place for this.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think we can move this method to the `after_save` callback, since it's only used in the `after_commit` callback.
I think we should just remove this, it's not used anywhere.
`MoreObjects` is not used in this class, please remove it.
Why not just mock the mock?
I think this is not correct. We have already done this in the `this.id` method.
the `*` is missing
I think this should be `joplin` instead of `joplin`
Why did you change the `id` to `id`?
I think we should add a `list` to the `FLB_CONF_STR_BACKOFF_BASE` and use that here.
Why not use `construct.Bucket` here?
This file should be removed.
why not just add the moment?
@deads2k i'm not sure about this one...
This is the only place where `iframe.configure` is used.
This is a bit confusing. Why is the rule being added here?
why use `Source.GetCondition` here?
I think this should be moved to the `ChannelConverter` class.
Use the new Ruby 1.9 hash syntax.
why is this `nil` needed?
nit: `Boolean` -> `boolean`
I think this should be in a different PR, but I think it's better to have a separate PR for it.
I think this should be removed.
Do we need to call `startTime`?
I think this is still not correct, because the `.to` test is still testing the same as the `.to` test, right?
Maybe `json` is a better name?
Do we need to log the whole thing?
@michaelkuhn Do you remember if there's a better way to do this? I'm not sure what's going on here.
This is the only real change.
(style) externs should be avoided in .c files
spec order ID should be prefixed with `'sort_order_id'`
why is this removed?
I think this should be `public static {` and not `static` (since it's the default)
I think this is not the right place to put this new method.
Please remove the `<` in this list.
This should be `write` instead of `nullable`.
I think we can remove `selectColumns` from the constructor.
I think this should be `BoostByExecutionExecution`
I'm not sure if this is the right place to do this, but if `cisco-5` is used, then it should be `cisco-5`
I think this is a breaking change. The `Secret` prefix should be added to the `make generate` package.
it's a little strange that `slave` is the default. How about `slave`?
I think this is not the right way to do it, but I don't think it's necessary to have this in the code.
Why are we adding this to the docs?
This is the only line changed in this file.
why not just use `bufferSize_as_ulong`?
I think this should be done in the `index` block, not here.
Why is this needed?
Can we also test for the exit code?
I think we should use `s.grabQueue()` here.
remove empty line
I think this is a leftover from the test, can you please move it to the top of the test?
I think this is a good candidate for a `TryIAMRoleCredentials` to be called in the `IAMRoleCredentials` class.
why not just pass in the exception?
I think this is not the right place for this, but it's probably worth a step further and for the `create(:topic, topic)` we could just do `return false` and then we can do `return false` in the `create(:topic, topic)`
I would prefer to keep the old signature and build the new signature to the new signature.
I think this is a leftover from debugging...
I think it would be better to use `ExpectedCondition.getText()` instead of `String.contains(text)`.
I think this import is unused.
Is this a bug fix?
I think we should be able to remove this #ifdef here.
diagdiagoudl be the exact same as the previous instance. So I think we should just call it `diagoudl`.
I think we should be more specific here. If we do, we should also add a `requestReadReceipt` property to the `ReadReceipt` field.
@jridgewell I'm not sure if this should be `1.4.1` or `1.4.0`
Is this necessary? It seems to me that errno_val is only used in the case of an errno_val?
I think we should add a new function `GetHandlers()` to the `GetHandlers()` function.
I think we should keep this consistent with restic.TagList.
I think this is the wrong place for this.
I think this is a little hard to follow. The reason is that `dial(hostName, tlsClientConfig, false)` is because the `dial` function is called in the `dial` function. So, it should be `dial(hostName, tlsClientConfig, false)`
I think this is not needed anymore
I think this is the wrong approach. What happens if the request is invalid request, but the request is invalid.
is this intentional?
Just a note that this is the same as the previous one, but I'm not sure if this is the best way to go.
Is this used?
I think this is a leftover from the previous commit.
Why did you remove go-mega?
I think we can now remove `sonm-io/go-ethereum` from the package.
shouldn't this be a `boolean`?
I think this is a bug fix. The `port` is a `credentials` not a `string`. The `credentials` is a `string` and the `string` is an `int`.
This should be a debug log
We should log this message at the beginning of the file.
"Use {} to align with the rest of the code.
This function is not used anywhere. It can be simplified to `return nil && err err != nil` and remove the `*Status` at the end of the function.
Is this not null?
Do we need to getChromePath here?
I think this should be "name". Also, I think the name should be "null".
`caddy.LogDestination` is the default setting, so you don't need to add it here.
Please don't change the copyright.
Why not just `452`?
What's the reason for this change? It looks like it should be `!= null` rather than `SR`.
Why not just use `3kb.normcase`?
Can we move this to a new file, so that we don't have to add the `VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_MUTABLE_VALVE`?
I think this should be a constant.
Please add a description about what this is for.
Is this line needed?
why do you need this?
This is a very minor thing, but I think we should just make it a `status` rather than a `status`.
I think this is a leftover from debugging purposes, and it's not a problem, but it's not really a problem, and it's not a problem, but it's not a problem, so I'm not sure about it. I think it's better to just change the test to `with Provisioner`
I think this is a leftover from debugging I guess?
This should be `from ..render.start import STORE`
`#getKind()` is a cue-specific type, so I think it's better to keep it.
This is a bit of a hack, but I think it's better to make a `svg aria-hidden` or something like that.
This should be `usb_VID`
I think this is the only place where we use `vStringTruncate` - we should probably change the name of the parameter.
I think we should remove this log message, it's not a "could not connect" as it's not a peer.
This is a pretty big change, but I don't think it's necessary to have this check here.
This is a bit of a hack, but I think it's better to check for `nil` for the `keyBytes` and `keyBytes` for the `nil` case.
Why do we need this change?
Please remove this.
I think this is a debug log.
Why do we need this change?
Here you can just call `generate_special()`
Line is too long. [81/80]
Could you please rename this to `logger.info`?
Why not use the `toExternalForm` method here?
I think this import is unused.
Why is this needed?
This is a bug fix.
I think this condition should be moved to the next line, with the `||` operator.
Why remove this?
I think it would be better to do this in `$this->dateConverter->convertToDisplayDate` instead of `$profile->expirationDate`
Please use `Vue.config.production`
`float` is a `cast` and `model` is a `cast`.
I think this should be a warning, since it's not a file, and it's not a directory.
This should be done in a try catch block.
@becker33 I'm not sure if this should be debug or not. It's not a debug level, it's a debug level.
`rdl` is not used anymore.
I think this should be done in a different PR, but I think it's ok to change it.
Is this change related to the other changes?
I think this test should be redundant with the other test in the `if` block.
nit: `libkb.h` would be more consistent with the rest of the function
Why is this necessary?
This is a breaking change. This is a breaking change.
I think this check should be moved to the maxBoundDescriptorSets class as well.
I don't think this will work for any reason, since the return type of `checksum` is `null`
This is a change in behavior, but I think it's better to move the filter to the tables class.
This is a breaking change. The only reason we need to keep it is for the `NewBuffer` method.
I think we can remove this pylint now that we have the actual fix.
This is a breaking change.
Line is too long. [85/80]
Why this import?
This is the only change that affects TF providers.
I think this should be a separate commit
Please add a license header here.
I think this is a bug fix.
Why is this `""` needed?
I think this is a good candidate for a `unless` clause to ensure that the `run` is always `true`.
Why is the seed removed?
Why do we need to do this? The `&` should be a `&` not a `&`.
I think this is a leftover from debugging I guess?
This is the only change that affects the change.
I think we should remove this.
Should this be an enum?
This is a breaking change. It's not a test, so I'm not sure why it was there.
I think `toySchema.pre()` is not needed. `pre()` is already a `save` method.
This is a breaking change. It should be in a separate PR.
I think this is still useful to have in the docs.
This is the only change that affects backwards compatibility.
I think this is not the right place for this. The year is in the year, not the year, so it should be the year.
I think this is not needed.
Could you please add the index to the index?
Why do you change the default value?
This is not the same error as the one above.
this is a change in behavior, right?
I think we should remove this.
This is a bit of a weird thing to do, but I think it's better to have a `common.Fatal` that returns the `common.Fatal` and return the `common.Fatal` error.
I think this is not needed anymore
I think this should be a separate PR
I think 10 * 10 is too low.
Please don't do this. It's not a big deal, but it's a big deal.
Why is this not `writeCharSequence`?
I don't think this is the right place for this. The package should be named `config`
I think this is not needed, since the `sendKeys` method is called twice.
Isn't `checkExprDepth` better than `UnRETURNExprType`?
@mjkkirschner @mjkkirschner @mjkkirschner @mitchellhenke would you mind fixing the indentation?
I think this is not used anymore.
Can we do this in a separate PR? i.e. `editors` and `showEditFile`
I think this is a bug fix.
I think you can remove this print statement entirely
why is this needed?
I think we should be consistent and use `this.stop()` instead of `this.query()`
`this.partpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpartpart
Why is this removed?
Is this a typo?
there's a lot of these lines in the file that sneaked in.
I would prefer to have a `SourceField::FORMAT_ISO_3166_ALPHA3` constant.
I think this should be `current_version`
`time_range` is not a `search` here, it is not a `dict` here.
This should be a constant.
I think it's better to use `--conn_retries` instead of `number`
I think this is a leftover from debugging?
I think this is not the right place for this. The previous code was only used to create ZMSImpl. It should be safe to remove.
How about changing this to `set`?
We can remove this test altogether.
I think we should be consistent and use `DiscoveryField` here.
I think this is the wrong place for this. The `containerMetadataEnabled` is used for the container, not the container. The `os.Getenv` is used for the `os.Getenv` method.
Better to define a constant for this, like in the other parts of the file.
I think we should use `pkg/resource/errors.go` here.
FYI, this is a change in behavior, but I think it's better to make it a `strconv` or `pid_file` so that it's more clear what it's doing.
Why change this to ` 32 * 1024`?
Should we log this as well?
This is a breaking change. The key generation is still in the key generation, so it should be in the key generation instead.
Can you use the mock mock to make it easier to test?
This is not right. The `#cursor` check is already done in the `start()` method.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
We should probably move this to `Debug.Assert`
I think this is not the right fix. If the value is null, the defaultValue will be null, so the value will be null.
Why not just move to `Word dependencies`?
I think we should keep the name as it is.
Why did you change this?
Why does this need to be `1`?
@jridgewell I think this is the right fix.
Should we be doing this in `Query` instead of `q.dq.BeforeQuery`?
I think we should be able to pkg/auth without pkg/auth
Why is this needed? I don't see any `Message` being used anywhere.
This is a breaking change. It's not a problem, but it's a bit odd.
This is the fix.
This is the only change that affects this PR.
Shouldn't this be `if`?
This include should be removed.
This is a bit confusing, can we have a `assert` statement that does the same thing?
This is a bit confusing, as we are not doing anything with `signed_in?`
nit: `string` is a string.
I think we can remove the `Create` method now
I'm not sure this is the right place for this. If we're going to do this, we should probably be using `new().assert` here.
I think we should use the Docker image here.
This is a breaking change.
This should be a function or a function.
I think this is not the right place to put this, but it's probably better to make it a `propToCol`
Why is this in the first place?
I think this is the only change that will break existing installations that have been removed.
Shouldn't this be a pointer?
This is a breaking change.
If this is the only place where we need to do it, we can remove the `hostIP` condition.
this is the only change in this file.
what is the reason for this change?
This is a breaking change.
This is a change of behavior, but I think it's better to make it a helper function.
I think it would be better to have a separate `skip_pkgs` arg here, and then have it in the `config` module.
I don't think this is the right place for this. The `PluginID` is used only in `lib/base/regfluid.md`.
Shouldn't this be `if (rb.req.getSearcher().enableFieldLoading)`?
This change is unrelated to the PR.
What is the purpose of this `exception`?
We don't need to use the `Wei` package here, it is already in the `buildCallback`.
This is the only change that affects TF providers.
I think this function could be moved to `GetParserWithBuiltins`?
I think this should be `using System.Net.umulativeCircuitBreakerEnabled` and not `isMemoryCircuitBreakerEnabled`?
This should be renamed to deletesToDelete, since deletesToAdd is a global option.
Looks like this is a duplicate of line 130.
what is the difference between `entry.getValue()` and `shortcuts`?
I think we should be using the `cancel` here.
This is a bit weird, why do we need to check `HttpHeaders.CONTENT_LENGTH`?
nit: can we use `if (n <= length())`
This should be `validate_rules`
I think we should move this to the `TaskRunner` class.
I think this is the only change that will be needed in the future.
This is the only place where we use `universe` - should we just use `flux.RegisterBuiltInOption`?
Why is EPS needed here?
wrong import order
If you're using `std::string *error_code` here, you can use `const std::string *error_code = "VUID-VkCopyDescriptorSet-dstSet-parameter";`
this should be `static`
why this change?
We should rename `sdktrace` to `sdkowner` and make it `tracesdk` if it's not needed.
I think this should return a `[]`.
(style) line over 80 characters
Could you add a type annotation here?
Prefer single-quoted strings when you don't need string interpolation or special symbols.
This should be `if err := f(s.first)`
why is this change needed?
I think this is a leftover from the previous PR, but I think it's better to remove it if it's not used anywhere.
What about `/Prefix`?
@kennknowles do you know why this is needed? I think we should be using `push_sync` instead of `push_sync`
I think we should add a check here that the `vkCreateGraphics` is not null and we should not be using it in the `VUID-VkGraphics` context.
This is a change in behavior, but I think we should just remove the `TRAFFIC` part.
This is a bit of a hack, but I think it's better to do a `for host_path in ...` check instead of a `for host_path`
Shouldn't this be `backgroundCtx`?
Why not just call the existing one in the rest of the file?
I think this is the only change that will break existing users.
why change the log statement?
I think this should be moved to the top of the file.
I'm not sure if this is the right place for this. I'm not sure if it's worth it. I'm not sure how to test this, but it seems like it should be an error case. I'm not sure how to test this, but I'm not sure how to test it.
Nit: We can probably use `// 10Mb + extra` here.
This is wrong. You should check `isset($options['multiple']) && isset($metadata['associationType'] & ClassMetadata::TO_MANY)` if it's not set.
(style) line over 80 characters
I think we should have a test for this, as we have the `allUsers` property in the `all` already.
We should add `options.verbose` to the `options` below.
Please add a space after the comma.
I'm not sure if this is the right way to go. I'm not sure if this is the right way to go. I'm not sure if this is the right way to go, but I'm not sure if this is the right way to go.
why is this needed?
Just a note that this won't work if the user provides a `-` in the name.
Why is this change required?
This is a breaking change. It's not a public API, and it's a public API. It's a breaking change.
Why are we adding a `before_disabled` to `redirect_if_disabled` instead of just skipping the `before_disabled`?
This is a change in behavior, but I think it's better to be explicit about the `Simple_bean` flag.
You can use `Class<?> arg` here.
Align the parameters of a method call if they span more than one line.
I think this is the only change that will be needed.
This is not a part of this PR, but I think it's better to move it to the `List` class
I think we should use `0.12.6` here.
why remove this?
This log statement is redundant.
Standards: Please add braces to this conditional statement and spaces around the `execution_time` operator.
We should only call this when `setup_profiler` is true.
Why is this removed?
This package is now unused, and can be removed.
Why is the `NULL` needed here?
Could you add a docstring here that this function is not used?
I think this should be a static constant.
This is the only change that affects us. It's not the right place to put this. It's a very minor thing, but it's a bit confusing. It's a bit confusing that we have to do `attempts Count` in the code.
I think this can be removed now, since the line below is not exposing it.
I think we should remove this file.
I think we should remove the `.spec.search` files as well
Why not just `if remoteHostIsNonLocal {`?
Is this change intentional?
This is a breaking change.
This is not a good idea. It's not a auto-index, but it's a good idea. It's not a big deal, though.
I think we should keep this for now, but we should probably keep it for now
why not just return if !abort()
This is not needed.
I think we should be passing in `ws` here.
You can use `var` instead of `var` here.
can we rename this to `sarpc`?
`getQuery()` should take the value from the `getResultList()` method, so it should be called in the `getQuery()` method.
I think this is a bit confusing, as we are not using `default` as a default.
Is this property really necessary?
I think this should be `receStoragePoolClaim`
This is not a valid module name, it is not a valid option. It is used in other places in the codebase.
I think it would be better to have a default value of `default` in `Public` and then pass it to `Public` in `make doc`.
This is a bit of a hack, can we remove it?
This should be a warning, not a warning.
I think this should be `super(). It's not a blocker for this PR.
`i.e. must be valid.`?
Why is this change necessary?
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
We discourage star imports. Please revert.
Is this a typo?
@mfojtik why is this change necessary?
Why is this changed?
Need to add the new unit test to ensure that the new unit tests are running.
This change is unrelated.
Is this needed? I think we already had a `Writer` in the `map`
Can you please add a line to the end of this block?
why not just "mining successive"?
why this import?
I think we should add `echo` to `count` and `count` to make sure we don't add anything to `padding`
I think we should add a description of the description of the description of the commit message.
Should this be `LockUtils::tagLock()`?
This is the only change that affects TF providers.
Please, fix the imports in this file.
This include is not needed, it is used in the `WebServer` module.
I think this is a leftover from debugging...
Why is translator removed?
I think we should also have a `FieldField` method that does the same thing.
this error is probably overkill. `rescue` should be in the error message. `MailChimp` should be in the error message.
I think we should move this if block to the bottom of the section above, to make sure we don't accidentally break anything.
The `wlr_log` function is already inside the `Fork` block.
Can we move this file to `pkg/util/api/v1.jsx`?
Why is this removed?
I think this is not needed, the six is already in the base class
I think this is not the right fix.
Is there any way to test thisBatch?
How about we make it a pointer?
I think this is a leftover from debugging purposes?
We should also add `DateUtil.get("is_published", this.is_published_to_display_on_card", this.releaseOrCreateDate));`
I think we should keep this as it was before.
Can you add a space between `if` and `(` to make it easier to read?
This should be a `timeDst` field, not a `Set`.
Is this change necessary?
This is a bit confusing, I think it would be better to have a separate method for this and a call to `file`.
I'm not sure if this is the right place to put this. The `seat->seat->keyboard_state.grab` will be a new column, so it should be the default.
This is not right. The transaction is already in the same transaction, so the transaction is not in the same transaction.
You should use `cascade` instead of `FireO`.
This needs to be an enum
Can we remove the editInPlaceAnnotation variable from the library?
I think this is a leftover from debugging...
This is a bit of a hack, but I think it's better to move it to the `else` block.
If you're not using this function, please remove it.
Why did you change this?
Why is this being removed?
I think we can remove the `.length` part
I think we can drop `.Namespace` here.
I think this should be a `@since`
I think we should use `aria-query` here
This is a public method, so it's no longer required.
I think this should be a separate PR
This change is not correct. We are adding a new column to the `gowire. DO NOT EDIT` which is the default behavior for `gowire. DO NOT EDIT` and `gowire. DO NOT EDIT` but the new column doesn't exist.
Why is this false?
This is a bit confusing to me. If we're going to do it for a specific timeout, we should also check for `Timeout.Infinite` and check for `timeoutMilliseconds` in the exception.
I think this is missing the `#Common` above.
@jgitgitgit I think this is the only change that is needed.
I think we should keep the namespace and the new parameter name.
I think this should be `config.j option. Eliminate from the JSON.
This is a change in behavior, but I think it's ok to leave it as-is.
nit: can we use `isNotEmpty` here?
Is this used somewhere?
It's not clear to me why this is necessary. If `onStartSend` is called on `RestClientSender`, then `onStartSend` is called on `ClientSender`.
I think we should add a `actionHash` field to the `Input` field and use that instead of using the `Input` field.
I think this is a leftover from previous refactories.
This is a bit confusing, why not use VHARDWAREBUFFER_FORMAT_Y8_420?
Why not "running"?
I think this should be called `assert_sms_block`.
Should we also check for `kube-config.yml`?
Just to confirm, is this change intended?
I think this is not the right way to go. But I'm not sure if this is the right solution. But if we want to change the behavior of `locFilesystemTrimUsage` to `AutoFilesystemTrimUsage`. I'm not sure if this is the right solution. But if we want to change the behavior, then I think it's better to change the behavior of `locFilesystemTrimUsage` to `AutoFilesystemTrimUsage` and then change the behavior of `locFilesystemTrimUsage` to `AutoFilesystemTrimUsage` to `AutoFilesystemTrimUsage` to `AutoFilesystemTrimUsage` to `AutoFilesystem
do we need to pass `agent/bin:/opt/puppetlabs/agent/bin` to the `puppetpath` list?
I think this is the only change that will need to be changed.
nit: you can merge both lines above as `merge` will return the given argument
This is the only change that will be needed for this PR. The `OSRM_EXTERNAL_MEMORY` header is now required, so it can be removed.
This is not a bug, since removed is not used in the code.
this is the fix
This is not a correct change. `<` and `<` are not supposed to be used for the `<` and `<` attributes.
I think this should be a constant, not a constant
@matt-gardner How do we know that this is a breaking change?
I think this is not the right place to change this, but I think it's ok to change this to `rpc-protobuf-raw-response`
I think we should use a constant for this.
I think `self.underlayer` is a better name.
Why was this removed?
I think we can move this check to the top of the file, since it is only used in the `on_mysql?` method.
Is this the right place for this? The value of `adjustment` is used to set the value of `-1`.
Why not just return the currentFlows?
This is a pretty big change. Why not just use the `Older` package here?
I think this is a leftover from the previous commit.
This is a bit weird, why do we need to add it to the `torch.Tensor`?
I think this is the only place where we should be using the `report_data` field.
Why is this needed?
This is a bit of a hack, but I'm not sure how to test this.
You can use `FactoryBot.create(:org)` here.
I think we should change the method name to `url()` instead of `url()`
Why not use `builtins.name`?
I think we should be able to remove this and just call `.Enable()` on the `.Enable()` method.
@matt-gardner, I think this is the correct fix. I think the `sizeof(cstor)` is the correct way to go. I think the `sizeof` is fine, but I think it's fine to leave it as is.
you should also update the doc accordingly
I think this is not a good idea.
I think this is the only place where we want to do this.
I think we should add `indexed` to `Filename`.
This is a little weird, why do we need to check `.CheckTimestamp` here?
This should be `short_version`
why did you change this?
Shouldn't this be `SparkStructLike`?
Why is this no longer needed?
What's the motivation behind this change? I think the `2015` property is already present in the `#` already.
We should probably check that the head is already set to revision %d (%s)
Could you please update the docstring as well?
This is the only change that affects the `json.RawMessage` I think it should be changed to `ConfigParser.json.RawMessage`.
I think we should change this to `cni_version.All`
I think we can remove this line
Should we also set `NetworkService` here?
This is going to be a breaking change for the `TaskStatus` to be `""`, but the `Task` is going to be `""` in the `Task` because it's a `Task` in the `Task` because it's a `Task` in the `Task`
Is this needed?
I think we should use the `PluginConfig` type here.
I think we should probably move this to `NoError`
Why not just call `sort`?
I think this should be a constant
>value [](start = 8, length = 1) nit: could you use `?.Length > 0`? #Closed
Can we use the function `BindWA::addOneRowAggregates` here?
This is a breaking change.
I think this is a leftover from debugging?
if newGroup is nil, it will be executed twice
I think this is a leftover from the other PR, but should be removed.
Should we remove the `[NotNullWhen(true)]` on the `WriteResult` method?
skip is not used
Is this required for all query implementations?
In other places we use `pip.cmd.fs.pip.version`, we could use `pip.cmd.fs.fs.fs`.
This is the only change that affects the error, so I'm not sure why it's necessary.
I don't think this TODO is necessary.
I think this is a little hard to follow, but I think it's better to move the logic to the `default_bucket` list to the `excludes` list, and then use that in the `default_bucket` list to get the `excludes` list.
I think we should use `normalizeIdentifier` instead of `== null`
I would prefer to see the formMode in the model itself, as it is not really the model itself.
I think this is not the right place for this, but it might be worth checking if the return value is `True` and then catch it in the `try` block.
This is a breaking change.
Please remove the empty line here.
I think this is not needed anymore. The only thing I would expect is that `gocoverutil` is used in the `buildCallback` method.
I think this is a leftover from the previous PR.
Style nit: remove the `parent` here.
Lint/UnusedMethodArgument: Unused method argument - user. If it's necessary, use _ or __ as an argument name to indicate that it won't be used.
I think it would be better to say "out_variant will be set to %NULL and the response".
I think we should log the error here, and log the error.
I think this is a leftover from debugging?
remove empty line
I think this should be `block_processor_full_size`
Please remove this.
Why is this being removed?
This should be `if (in_data.name_id == out_data.name_id)`.
I think we should return FPGA_INVALID_PARAM here.
Please include this in the `#include` block
need_unmap=True by default?
I think we can remove the `cm` import now that we have the same pattern everywhere.
I think we should add a `acquireTopologyCache` to the interface?
I think this is a leftover from the original PR.
What's the cast for?
This method was unused.
We should also check for null and not null
why did you change this?
Could you please add a space after the `if`?
This is a bit weird, can we just remove the `AWS` variable and just call `AWS`?
I think you can just do `if len(check_commands) == 1`, and remove the `command` variable.
This is a bit confusing, I think we should just call `exclusion_patterns.full_backtrace` here.
Please don't change the copyright.
mittent, I think this should be `mproxy.is_bound()`
This is not a part of your PR, but I think it's better to split it into two lines.
PY310_() is a function, not a function.
This function is only called from one place, so I don't think we need to return an error.
This is a bit of a hack, but I think it would be better to move this logic into the `with_ensure_to_string` function.
I think you want to use assert here, as you have in the other place.
Is this still needed?
These changes are unrelated to the PR.
This is a bit of a weird error, I think it's better to make it a constant.
This method is called `virtual`. Why is this necessary?
I think we should use `my.mysterium.network API` here instead of adding a new one.
This should be removed
I think we should keep this property for now, but I think it's better to keep it for now. Also, I think we should add a `ISet<CodeFlow>` to the `AnnotatedCodeLocation` interface.
I think the `config` import is unused.
I think this should be a separate PR
Let's not add this to the public API.
I think this is the only place where we use this.index.search(), but I think we should use the function that is used instead of the internal function.
What if the `rpcSchema` is null?
This is a change in behavior, but I think it's better to move it to the `modules/v1` namespace.
I think this should be `input == SENTINEL_VALUE_FOR_MISSING_DATA` instead of `input == SENTINEL_VALUE_FOR_MISSING_DATA`
This file is not used.
Is this the only place where we set the `appErr`?
why are we doing this?
This is the only change that affects TF providers.
I think this is not right. The `class_agnostic` is a `False` but the `nms_status` is a `class_agnostic` (which is the default).
pos -> them?
Why is this necessary?
I think we can remove the last parameter from the tests now that we've gotten to it.
This is a bit of a hack, but I think it's better to just remove the `def path_for` call.
Shouldn't `REG_##reg` be `reg` here?
I think we should remove this file. We don't need it for the `title` table, it's not used anywhere.
This looks like a regression. Is it possible to remove the second half of the array?
Why not `SecurityGroup`?
This import is unused. The import should be removed.
I think we should keep the info level as it is.
Shouldn't this be `github.com/test/logrus/`?
I'm not sure if this is the right fix. The value_env should be zero, not zero.
I think it would be better to have a `SubscriberSubscriber` that returns a boolean and then use that here.
I think you should be able to use `close()` here.
This is a bit of a hack, but I don't think it's worth it to have it in the test.
I think it would be better to pass the ResolveBranch to the function of the struct
This is a bit weird, why do we need to use a `List<T>` here?
Shouldn't this be in a `pkg/util` package?
This is the only place where we return an error. We should just return an error.
I think this should be a bool, since it's not a regular member.
Same here, I think we should check that the status is not None.
Why is this change required?
Do we need to make this change? I think we're not using it anywhere else in the code
is this not needed anymore?
I think we should use URIxRewriteCtxKey as a key used to store the URI in context.WithValue
We should not need this change.
Why remove this? We don't want to support default properties in the `goog:chromeOptions`
This is a bit weird, why not use a `_` here?
`s/cluster/cluster/helper/` should be a helper function?
This is the only place where we want to keep this. The `version_` is used in a `close` method, which is not the case anymore.
Please remove the attribute.
This is a bit weird, if you have a `'' === $url` above, you will get a `'' === $url` error.
The `appRouter` function is now unused.
I think this is a leftover from debugging purposes?
`tplSegment` could be declared as `tpl`
I think we should make this method package private.
I would use `https` here, it is not really a good idea to use https.
Is the name still needed?
Please remove this.
I think we should remove the `Plugin` argument.
This is a test, not a test.
should be `has_component_be_active`
I think this is a good idea, but if you want to do this, you can just do `if (!ret)`
sign_in_as or even get_in_as can be removed
Oh, this is a pretty trivial thing.
I think we can remove `ConnectionKeyCombinations` from `ConnectionKeys#addSource()`.
I think this is not needed.
I think we should raise an error if `Optional[Optional[str]` is not handled.
`transfer` is a new item, so it should be the current one.
This is the only change that affects TF providers.
"sftp" sounds a bit weird. What about "Specifies the SSH server (sftp, sftp server, andiles server_command, which is ignored when server_command is defined.
Please remove the empty line.
I think we should return the error here.
Can you remove this file?
Nit: please add a space after the comma.
I think this is the only change that is needed.
this is a wrong import.
A nil check here is needed. `NetworkSpec.SecurityGroupOverrides` is nil if `Spec.NetworkSpec.SecurityGroupOverrides` is nil.
Please add a license header
I think this is a tabindex were removed. Else, false.
we should also update the `identity` import below
I think this is the wrong function.
This is a bug fix. It should be `c` not `encode`.
I think this is a bug fix. The issue is that if you have a file with a different name, you should be able to use a different name.
These should be wrapped in `_syntax` so that the errors are not displayed in the database.
Why did you change `2012` to `local`?
I think this is a leftover from the PR.
I think this should be `Microsoft.AspNetCore.Server.Kestrel.Experiential.Http2`
We should probably have a better way to do this. I'm not sure if we should do this.
I think this is a leftover from debugging purposes?
Why is this being changed?
do we need to add the block number?
does this need to be public?
This is not the fix.
Is there a reason for not using `video`?
Why is this change needed?
I think this is a leftover from debugging purposes?
I think this should be a separate PR
You should add a `_format_msg` docstring here.
It looks like this is a breaking change. Can you please revert it?
This is the only one I'm not sure about. I'm not sure if it's necessary to include `erase.hpp` in the header.
I think this is not the right place to put this fetchMock.
Why not `mFolder != null ? mFolder.getName().hashCode() : null`?
I think we should use the `multipart` text here instead of the `multipart` column.
Would it be better to use `lower()` here?
This is not needed anymore since we already call `require_dummy_response` twice.
I think we should also check for the `EnableBlockServiceFallbackToArchiver`
If we're going to keep the old `GetOrCreate` here, we can just remove the `rootNode` variable and use `path.GetOrCreate` directly.
Is this needed?
This is a bit confusing, as this is a very common use case, and I think it would be better to have a method that returns the file name (e.g. `getInternal`, `getInternal`, `getInternal`, `getInternal`, `getInternal`, `getInternal`, `getInternal`, `getInternal`, `getInternal`, `getInternal`, `getInternal`, `getInternal`, `getInternal`, `getInternal`, `getInternal`, `getInternal`, `getInternal`, `getInternal`, `getInternal`, `getInternal`, `getInternal`, `getInternal`, `
This else is unnecessary.
I think this is a leftover?
@deads2k i'm not sure this is the right default, but I don't see any better.
I think we should just remove this default setting. We don't want to have a default setting for a container.
This is a bit of a hack, but I think it's better to make it a bit more explicit, like `if (flags.BoolVarP(cmdFlags, &recurse, "Execute")` or something like that.
I think we should just make `clone` a `ConcurrentMap`, since it's not a `ConcurrentMap`.
This message needs to be updated.
I think this is a bit confusing, as `The `The `DropDropDropDropDrop` is a bit confusing, as `The `DropDrop` is a `Pci` instance.
I think we can remove `<input type="hidden" />', [webelem.Group.inputs]`
I think it would be better to use `bool()` instead of `===`.
can you make this a package-private variable?
I think this is a bug fix. The `data1[0:1000]` is the correct thing to do here. The `data1[0:1004]` is the correct thing to do here.
Why is the sorting sorting here? I think it would be better to have the sorting as a member of the module. Then we could have the sorting as a member of the module.
Is this change intended?
Shouldn't this be `cls.debug_port_`?
I think this should be `intercept-build` instead of `sourcefile`?
I think we should just remove the explicit `EnablePipedResponse` parameter from the interface?
Can we make this a `dict`?
I think we should not flush the value here, as we already flush it.
Please use `org.junit.Assert.assertEquals(null, new NullRepository().fetchInstallableApplications());`
This is a breaking change. It should be in a separate PR.
Is this just a cleanup?
we should addMapping for all of these
Does this work?
I think we should use `find_by_group` instead of `cgroups[subs]` here.
`core` is a list of packages that are not supported by core, so this is fine.
I think this is a good idea, but I think it's better to have a limit as a limit.
I would suggest to add `Tag.Remove_rpc_to_MD()` to `Tag.Remove_rpc_to_MD()` and `Tag.Remove_rpc_to_MD()` to add `Tag.Remove_rpc_to_MD()` to `Tag.Remove_rpc_to_MD()` and `Tag.Remove_rpc_to_MD()` in `models/models/models/models/models/models/models/models/models/models/models/models/models/models/models/models/models/models/models/models/models/models/models/models
Nit: remove newline
I think we should remove this file.
Is this needed?
I think this is the only change that is needed. `err.Error()` is used to get the `configs/include_bad_conf_check_b.conf` file.
nit: remove the extra blank line
I think this is a bug fix. The `summary` is not actually being used in the code.
This is a bit of a hack, but I think it's better to do a similar thing in `#core/models/menu.py`
I think this is a bug fix.
Is this a typo?
Why not return the error?
@jridgewell I think this is the right fix. I think we should just add the `nextSibling` field to the `p/c` and then just add the `lastDomChild` field to the `nextSibling` field.
Shouldn't we keep this around?
This is a bit confusing. What about `CreateCounter`?
This is not the only place where we should push the ptr, but I think it's better to have a nullptr.
This should be done in the m_history function.
I think we should use the new constant here
`String#sanitize` is not supported in IE.
I think this is not the right place for this. The `ParentChildrenSyncTargetHelper` is used to get the `Parent` in the `Parent` package.
You can just use `self.available_slots = sys.maxsize` directly.
I think this is a leftover from debugging I believe.
I think this is a leftover from debugging I believe.
Why is this in this PR?
switch the labelNames
I think this should be set in the retry variable instead of in the start?
I think this test is not running in CI, right?
@agramfort this is the change that fixes the issue.
I think this is a leftover from debugging I think.
This is a bit of a hack, but I think it's better to make this a method on the `context` interface.
I think we should not have a test for this.
This is a change in behavior, but I don't think this is correct. The only difference is that if you have a single space in the `if` condition, you will have to change the condition to `if`.
Can we add a TODO to remove this?
Why is this in the middle of the time?
I think we should be consistent and use `ReadPasswordTwice` here. The password should be `newopts.password`.
Why did you change this?
This is the only change that affects TF providers.
This is not needed. `GraphType` is already being used in `lib/dal/`.
should be `<= @var \Doctrine\ORM\EntityManagerInterface`
Is there a reason why you added the `MolChemicalFeature::getPos`?
I think this line is redundant now
Can we make this public? It's not a public static, and it's a public static, so it's not a public static.
What is the TODO exactly?
The `metrics` is unused.
I think this is a bug fix.
The value of `Gas` should be nullable.
I think this should be a `List<Logger>`
This is not correct. You have to write a reset before sending it was before sending it was before sending it was before sending it was before sending it was before sending it was before sending it was before sending it was before sending it was before sending it was before sending it was before sending it was before sending it was before sending it was before sending it was before sending it was before sending it was before sending it was before sending it was before sending it was before sending it was before sending it was before sending it was before sending it was before sending it was before sending it was before sending it was before sending it was before sending it
I think this is the wrong way to connect this panel, because the other way around is to connect this panel, and only connect the panel when the other are added.
I think this is a leftover from the previous PR, right?
I think we can just remove this line.
This is not needed.
This is a bit confusing, as it's not really a hot command. I would expect it to be a hot command, but I would expect it to be a hot command.
This is the only change that affects the `stpb` import.
Do we need this extra arg?
What's the reason for this change? It looks like it's only used for parallel process.
Can we just use `CanEnablePulls` here?
Shouldn't this be `project.project(x)`?
`flash.now` is a new instance, so you can just call it `flash.now`
This should be `onResponse`
I'm not sure about this. It is a good idea to test the latest version of php5.6. It is not a good idea to test the latest version of php5.6. It is not a good idea to test the latest version of php5.6.
I think this should be a separate commit
Do we need to update the status status? I think we should update the status status to be updated to allow the status to be updated. The status status should be updated to allow the status to be updated to be updated to allow the status to be updated.
Why do we need to check `Errno::ECONNREFUSED`?
I think this should be `project_cache_throttle_percentage`
I think this `ListSelectorEntries` can be removed now, since the `request *ListSelectorEntriesRequest` is now `PowerSelectorEntries`
Why do we need this? I don't think we need to add 32-bit to the base layer, it's not a very good idea.
I think we should add `argument` here, as we already have `argument` in the `build_environment` method.
Please remove the extra space after the `%>`
I think we need to add this to the migration file too.
I think it's better to add a `--allow-Windows` flag to the interface, and add a default value for the `--allow-chunks` flag.
This test is not yet testing what we want. We should be looking for a test case where we want to have a test case that we want to test.
Why removing the extra space?
I think we should move this to the top of the file. Something like `pkg/resource/__init__.py`
I think we should just remove this check. It's not related to the issue. The only time we call this method is if `s.Txn.Src() == 0`
I think we should use `padding` instead of `padding`
why not just use `randomState.nextBoolean()`?
I think this is not right. The current_collection_id is a string, not a string.
Can you add a TODO to remove this?
why did you remove this? This was a timeout timeout, so it was not used anywhere else.
This function is not needed. You can delete this function.
I think it would be better to change the type to `const` instead of `Trace` since it's a const.
I'm not sure if this lock is necessary. The `expireTime` lock is still in the `lock` method.
I think this is a leftover from debugging purposes?
Style nit: since you changed the `res` to `string` you can remove the `./` at the end.
Same thing here, I think we should be using `name` instead of `report` here.
This is a bit of a hack, but I think it's better to move this to ` PlatformTaskEx`?
This is a bit odd, why the free?
You can use `crypto/rand` instead of `math/rand`.
This is not really a good change. The `logxi` package is used by the `conda.com/mgutz/logxi` package.
Is there a reason why we don't use `getUNF()` here?
No need for the spaces here.
I think this should be a warning rather than a warning.
I think this should be `allowOptionalMappings`. It's not clear what the input is for.
act_cfg (dict, None): The number of output channels in the input channels should be same as input channels.
Why not `Export`?
This API is now an API.
This is a bug, if `articleFacade` is null, we return `null` instead of `findById`
I think this is not correct. `map` should be called before `this.release.map` (which is the only place where it is used).
I think this should be a `.matches` instead of a `.a`
This is not related to the PR, but it is not related to the PR.
How about `setInputCommand`?
This is the only place where we need to do this.
I think this should be `..Battleak` instead of `negLL`
I think the `repr` can be removed now since the first condition is not needed.
This should be `_context.Input.finally`
Why is this change needed?
Nit: Use a constant for this const.
I think it would be better to use `SetAnnotations(annotations map[string]string) CertificateRequestModifier`
I think we should remove this check and just call `IdentifierScheme` here.
why not use `break` here?
This is not needed.
I think this is not the right fix. The `if key !~` should be fine.
This is a private import, you don't need to import it here
This is a bit of a hack, but I think it's better to make the test take care of it.
I think this is not needed. You can just use `mrb_value` instead of `require \"preloads.rb\""`
I think we should not do this for every request, we should do this for every request. We should do it for every request, not for every request.
This is not right. We should only be passing `false` if the value is `true`.
Is it possible to have this in the `deployment` package? I'm not sure if it is worth it.
I think it would be better to call this `CustomClientAuth Auth` and have it call it `CustomRouterAuth Auth` to match the other `CustomRouterAuth Auth` methods.
IMvxFormsViewPresenter -> OnNoticeAuthFormsViewPresenter?
I think this is not right. It should be changed to `typeof child=='number`
Shouldn't this be `|| rawErrorData.get(STACK_TRACE)`?
I think this is the wrong place for this. The IDAddress is used for the AddressAddress, not the IDAddress.
Do we need this extra arg?
I think this should be setZoomval, and setZoomval should be set to `False` in the `setZoomFactor` method.
I think this should be `TryGet(document.Settings)`
I think this should be `Ready() <-chan map[string]Result`
This is a breaking change. This is a breaking change.
Why is this being changed?
Why not just make this `NewRequestFailure`?
Why is this `final` removed?
Why was this removed?
I think you can just use `strings.Trim` here.
This method is not used anymore.
I think this should be `info(version()).info()`
Can we use a mock or a mock here?
It seems that this is not needed, right?
This is a bit odd, as the method name is not a method, but it's a bit confusing.
I think it's better to do it in a `get_holdingpen_objects` method. It's not a function, and it's a function.
Why disable these pylint disable?
I think this should be `DEFAULT_FORSETI` instead of `_LIBRARY_SYNC_ENABLED`
@joshblum I think you should return the right value here.
I think this should be a `with` block, since it's a `LOG` check.
do we need to do this on a single line?
This is the main change.
I think we should be consistent and use the same naming here. `\w+` instead of `\w*`
This is a bit confusing, as this is a `defer` statement.
maybe we can add a nc.Repo.Config().Mpool?
We don't use wildcard imports. Please use wildcard imports.
Please update the `IptablesLockTimeoutSecs` field to `IptablesLockTimeoutSecs` and `IptablesLockTimeoutSecs` field to be consistent with the other `IptablesLock` field.
Aren't these already in thepackage.json?
I think this is a leftover?
This check should be done after the check check in `checkForNull` and after the check check should be done.
I think it would be better to have a flag for `computeServiceAccount      ` and have it be a `computeServiceAccount      `?
We should rename this to `<element>`
This is not a tabindex, it is not a tabindex. The tabindex is a tabindex. The tabindex is a tabindex.
Is there a reason for this test to be at least 3?
If we're going to have a `NewSubWorkflowFromFile` in the `NewSubWorkflowFromFile` function, we should probably make this a function and call it in `NewSubWorkflowFromFile`.
Use `apache_beam/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/plugins/
It's not clear to me why we need this function. I would expect it to be a csv object.
why is this in `BlockCache`?
This is not right. The point of this code is to check if the error is in the `if` block.
Can you remove this line?
Don't think this is needed.
I think we should just remove this and use `OpenOpenog` instead.
I'm not sure what the best way to fix this is, but I'm not sure what the best way to do is is to have a `#subscribers` method in the `app/workers/` namespace.
I think this is a leftover from the PR
This is a bit weird, why is the null check removed?
Why is this change necessary?
I think this import is unused.
This is a no-op.
I think this is a leftover from debugging purpose.
nit: remove empty line
We can't just do this in the `Base` property. It's not a big deal, but it's a bit odd that we're doing this in a `Base` property.
Please revert this file.
I think this is a leftover from the previous PR, but I'm not sure if it's worth it.
can we use a more meaningful name?
Please remove this.
I think we can remove the empty line here. We don't need to cast it to empty.
I think this should be a separate PR
" Identity" is a bit confusing. Maybe " Identity Identity" is a better name.
I think this is a bug fix. We should not set `PropertyID` here.
I think you can remove this line. It's not used anywhere.
why not use a logger here?
Rails/InverseOf: Specify an :inverse_of option.
why do you need this?
I think this should be done in `pkg/api/http`
I think we should log the info here.
this is the actual fix.
Why did this change?
I think this function could be moved to `pkg/bytealg.IndexByteString` and `pkg/bytealg.IndexByteString` and `pkg/bytealg.IndexByteString` and `pkg/bytealg.IndexByteString` and `pkg/bytealg.IndexByteString` and `pkg/bytealg.IndexByteString` and `pkg/bytealg.IndexByteString` and `pkg/bytealg.IndexByteString`
I think this should be `subprocess.MAX_VALUE`
Why removing this?
This is not needed anymore
I think it would be better to check the result of `FolderBranch` in the `if` block.
The `c.debug` is already closed in `lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib
I think we can remove `app.GetConfigPath("config.yaml")` now.
Build is no longer used in this file?
nit: import sorting
This is the only change that will be needed in the future.
This is not a good way to do it. You should just do it in the `else` block.
There's a lot of duplication here. I'd prefer if you'd be super thoroughly stricter here.
Why is this still needed? `Long bitmask` is used in many places.
Why not just call `c.mu.Unlock()`?
@jdkit-six-a-six-a-commandcommand this is the correct import for this
Should we add a `client.Client` to `NewBucket`?
I think we should be consistent and saying "Chromium-based debugging"
I think this is a bug fix. It should be `initiate_delta_request` and then `initiate_delta_request` should be `NULL`.
I think this is not the right fix. The number of proposal is not 0. The number of proposal is not 0.
Is this related to this PR?
This should be `#include "cstring"`, not `#include "`
I think this should be a different PR
I think this is a bit confusing, if we have a single `if` statement, then we should have a `if(port)` statement in the `if`.
There are a lot of other places where `auto` is used, and `auto` is used in the same file. I think it would be better to use `std::vector` here.
Is this a bug fix?
This is not right. If the `atom` is not set, then the `result` will be set.
Sleep is not recommended here.
why change this?
The `SpeedLink` here is a bit confusing. How about `TheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheTheThe
nit: we can remove this
I think this is a leftover from the previous PR.
I think this should be a warning, not a warning.
`sess_manager.session_save` is not a boolean. You could just use `sess_manager.session_save` here.
This was the only place where we had a `identitySourceIds` before.
should we use the same API here?
We don't use import net.sourceforge.pmd.lang.java.ast.ASTAllocationExpression here.
remove empty line
This method is not used anywhere. Please remove it.
I think this is the only change that will be needed in the code, but I think we should just remove the `keymap_fd` parameter.
Why is this changed?
Prefer single-quoted strings when you don't need string interpolation or special symbols.
The file has 3 header lines that have the `serve` field, so you don't need to specify the `line` field.
Removed blank line here.
@michaelkuhn Do you remember why this change? I think it's okay to not test the `h.query` method?
I think this variable name is misleading. It's not a variable, it's a variable.
Do we need to set this to 16?
Can we make this a hidden variable for the central place?
I think this should be `null`
this import is not needed anymore
why remove this?
When `stdout` is `nil`, `stdout` is `false`?
@smarterclayton I'm not sure this is the right fix. The `PythonSdkType` is the only thing that is used for the `vf` parameter.
This is a change in behavior, right?
I think we should use the `update` function instead of `name`
This should be `count`
I think this is a leftover from debugging...
This is not the right place to use `this.elementCount()`
I think we should be using `stamp` here.
This is not a part of this PR, but it is not related to this PR, but it is a good idea to have this in a separate commit.
I think this is a leftover from debugging?
This is not needed. The `meshAddress` is already in the `App` struct.
I think this is a bug fix.
This is not needed.
Is this change necessary?
I think this is the wrong way to do this. The `container` is the default for the `container` (which is the default for the `container`).
This is not a proper class, but it's a good place to put it.
I think this should return a boolean
The ` AddPeers` is used in the `readPeers` method, so I think it's better to remove it.
I think this is not needed
Why not just pass in a struct?
This is a breaking change.
why not just return the enum directly?
Nit: "Is" is a better name.
Shouldn't this be called `yaml:"name"`? I think it's better to have a `Kind` prefix for the `yaml:"kind"` and `yaml:"name"`, as it's the same as `yaml:"Body"`
Why is this necessary?
If we don't have any any blocks for the second, we should probably just make this a `Map.empty ()`.
This is a bit confusing, as it's a bit confusing for a single method.
I think this should be done in `config.run`
This is a breaking change, we should probably add a new field to the build date.
Shouldn't this be in a `@RunWith` ?
this is not right. if we have the "-", we should probably just return the "-".
I think this should be a `process.argv.push`.
Is this change necessary?
I think this is not right, you are calling the method in the attributes here.
I think we can just import `types` here, and remove the `isort` import.
This should be removed.
showLockActivity is not used anymore.
I think this should be `run_config["solids"]` instead of `result.resources`
Style/NumericPredicate: Use nested module/class definitions instead of compact style.
@liggitt this is the fix for the `pv-tests` command.
This is not right. It will be fixed in a follow up PR.
Should we just make this a `EnableJetStream`?
I think it's better to call `client.close()` here, since it's a session object.
Nit: please remove empty line
I think this is a bit of a hack, but I think it would be better to move this to `Bolt::PAL.load_puppet` and then you could move the `Bolt::PAL.load_puppet` to `load_puppet`
I think we can just use `padTo` here, as we do in the other places.
Shouldn't this be `custom_imports`?
I think this is not the right way to check for the question, but I think it's better to check for the error message.
I think we should add `name` to the interface and then pass `preload` to `getInput`.
Should we add a `TODO` here?
do you need this include?
I think this is a bug fix.
This should be `window.self.location`
`ErrWorkspaceNotFound` is now unused, can be removed.
I think we can remove the `ShutdownAsync` call here.
I'm not sure what this is supposed to do. The output of `unused` is not a var, so it's not a var, so it's not a var.
`ViewSessionDto` is not used anymore. Please remove it.
I think we should add a `*ovsCtlClient` constant.
shouldn't this be `true`?
Why is this being changed?
I think you can remove this line
We should rename this to `AppCtl`
I think this should be a `const`
You can remove this
Can you remove this?
Do we need to check that `exc_type.__name__` is an array?
Could you change `Number.MAX_SAFE_INTEGER || (2 ** 53)` to `const`?
The `map[string]string` should be removed.
I think `utils` and `import docker.utils` should be `from docker.utils.utils import kwargs_from_env`.
I think this should be a `const` instead of a `actions`.
I think we should add a note that this may be written as a note in the future. I think that this may be a bit more general purpose. Maybe something like: `this whole file resulting in a lot of side-effects wherever we can can be better to integrate hooks into the dist hooks?
Shouldn't this be `this.wait(sec * 1)`?
I'm not sure if this is the right place for this. The `H2O_VECTOR` function is used by the `H2O_VECTOR` function. I think it should be added to the `H2O_VECTOR` function.
This is a breaking change.
I think this is not the right place for this. The reason is that if we have a constant in the error message, we should have it return an error.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
Why did you remove these lines?
I think this is a leftover from debugging?
I think the `@group_level` should be `@group_level` instead of `@group_level`
Why not just use `key_type.GetByteStride()` here?
This type is not used.
Why is this change necessary?
@jdkitzart I think this is the only change that is needed.
nit: The copyright year in header is not needed
@bparees I think we should change the default value of `allowedOrigins` to `false`.
I think it would be better to use `Preconditions.checkNotNull` here
I think we should check that the value is not supported in the first place.
UoE isn't really the best name.
This is a bit of a weird error, but it seems like it should be `exception.MustBeRethrown()`
Why is this being removed?
I think this is a leftover from debugging?
I'm not sure if this is the right way to trim the right approach. This is not correct, because the `trim` function is called with the `preferredMarcField` field.
I think you can remove `_numpy` entirely.
Is this change related to the PR?
Is this the correct way to do this? Is it because we don't have any path in the path?
I think we should remove the status.
why remove this?
Why is this necessary?
@mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner
why change it to `*uint32`?
I think we need to add the `grant_id` column here, as well as the `id` column.
I don't think we should be using `RemoveRemove` for multi-line `_`
I think we should be able to get rid of this check. It is not used in this PR.
It's a little confusing that this will return the error twice. Could we just return the error?
These should be removed.
The default should be `""`
can we remove this?
I think this should be a `finally` block. We should not be able to run this validation on the client side.
I think it's not clear why you are changing the default behavior. I think it's better to do it in the `start_timestamp` function.
places is not necessary here, we can test it later.
This message needs to be updated.
do you need to import the whole function here?
I think we should use `from subscriber import subscriber`
I think this should be `@private`
This is a change in behavior, right?
I think this should be removed.
We should probably have a test for this? I think that is a bug in `proposalID`
This is not true, you can remove the whole method.
I think this can be removed now
This is a breaking change, and it's not a realisticistic change.
I think this is the only place where we need this code path.
I think we should just default to 'x64' if we can.
I think this should be `mpl_renderer.comms['default'] = self.default_comm`
This is the only thing that could be done in `node.modname`.
Do we need to make sure that we're not skipping the metadata? I think we should make the metadata metadata configurable.
this is the only line changed in this PR.
should we use the same API here?
This is a bit weird, why not just use `self.input`?
Why is this change necessary?
I think it's better to move this code to the `overrides['log']` callback, since it's a `Bolt::log` callback.
This is not right. `address_string` is a `string` and `to_string` is a `string` (which is a `string`). I think it would be better to do `request->set (to_string_to_string(pos, "to_string ());`
I think we should log the proxy here, otherwise it will be reported to the next line.
This should be `validates_attachment_type`.
I think you can remove Load login page
Instead of adding a new component, can we just call it `export`?
I think this should be a `Set` instead of a `Set`
I think we should keep this test as it is, because we don't have to worry about the "value" in the test.
Is this the right place for this?
I think this is the wrong approach. The `ApplicationError` is still in the `DynamoViewModel` struct.
I think this property should be renamed to `mapTo`.
I think we should be able to use `go-sqlite3` here.
same here, `$this->relationModel->getKeyName()` should be enough
Please update the changelog.
I think this is not the right place to put this interface. It's not a `ListDeploymentConfigTemplates` but it's not a `ListDeploymentConfigTemplatesResponse`
This is a bit weird, why not use the `url_helpers` helper?
This is not right. The `-1` is the same as `-2` and `-2` is the same as `return -2`.
I think this should be removed
Does this mean we can remove the transaction?
Why not use `.ffVdWParams.epsilon`?
@bparees this is the good example of what I was talking about. I'm not sure if I should have a good example of what I'm missing.
I think this should be a `before_action` instead of a `before_action`?
I think this should be `public static {` and not `static` (since it's the default)
I think this endpoint should be `clef-signer-enable`.
Is there a reason for this to be `scss`?
I think this is not the right way to do it, but I don't think it's necessary to change this.
Unnecessary spacing detected.
This package should be removed.
@matt-gardner, I'm not sure if this is the right place for this. The `redhat_fips` is the best way to do this.
I think this is the only place where we should be removing this. The only place it was used is that we are removing the partIt is the same as the partIt is used.
`UserList` is not used in this list, it can be removed.
I don't think we need this for this PR, just for the dashboard.
I think this is the only change that affects this PR. The previous code was correct, and the previous code was correct.
Please don't change this. It is a breaking change. It is not related to this PR, but I think it is worth adding a new `RetrySettings` field to `ApiCore` in the `ApiCore` class.
I think this is a bit of an overkill, but I think it's better to have a separate interface for this.
I'm not sure if this is the right place for this. The global is used for the other files.
@jjjtGetClass() is a better name.
This seems to be a change in behavior, but I think it would be better to use `DispatcherForGRPCOutbound` to get the `CreateDispatcherForGRPCOutbound` method.
Why not use `String.format`?
I think this is a bit confusing, since we have a `.format()` method in the `.format()` method. I think it would be better to use `.format()` here.
This is not the right place for this. The `VisibilityTime` is used to set the `taskInfo` value to `false` in the `TaskInfo` value.
This is the only change that affects TF providers.
I think we should be looking at the timeout of the timeout, and not flush.
I think we should remove complex types from the type.
Style nit: str is not needed
I think this is the wrong place for this. The test is passing the dir, and the test is passing the dir.
I think this is a leftover from debugging purposes?
This is a bit of a hack, but I think it's better to make the code more readable.
I think this is a good change. The `toMap` method is not called with `toMap`.
I think we should rename this to `localProjectAppNames` to be consistent with the other resources in this file.
Is this the correct way to get the last height?
Should we do a similar change in `WaitForAllTxnsToConfirm`?
What if the user doesn't have a different name?
Can we add a note that this will not work properly if the policy is not successful?
I think we should import the `affine_grid` module here and in the `__init__` method.
Why not just `config.AttackTimeout > 0`?
nit: new line
I think we should remove this sentence. We don't want to have it in the body body.
Why do we need this? We're already calling this on line 355.
@mjkkirschner @mmaxim do we want to confirm that we don't want to start the syncer anymore?
I think this is the only place where we should do this.
Shouldn't this be `mmdet.ops`?
I think this should be `viewer.Base` instead of `opus`
I think we should keep the original value here.
I think this is the only usage of this function. It should be moved to the `if` block.
I think we should use `log.Duration` here.
why is this change needed?
`topology.description` is not null.
This file should be removed.
I think it would be better to check that the role is in the `<dl role="menubarar="onlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonlyonly
This should be `config.serve_static_assets = true`
This is not needed anymore.
Layout/SpaceInsideHashLiteralBraces: Space inside { missing.<br>Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
I think this is a bit of a weird error, since we're not checking for an error when instance is not found.
I think it would be better to use `Tuple.Tuple` here instead of `null`
Is there a reason why you changed the API?
@dvoytenko I'm not sure if this was the right fix. We should just remove XUnitIntegration from the config.
Why not just use `str(str)`?
Do we need to check for `images_base` here?
I think this is not needed, the `setFlags` call below will do the same thing.
I think we should return error here.
I would prefer to use `trait JsonResponseTrait` instead of `ModuleCacheableResponseTrait`.
This should be split across multiple lines.
Line is too long. [81/80]
I think we should have a test that checks that the exported fields are not set.
I think the condition should be changed to `if !config.BPFEnabled && config.XDPEnabled && config.XDPEnabled`
This should be `qualifiedName`
I think we should use the http2AuthorityPseudoHeader here instead of hardcoding the name of the api.
I think this is the actual fix.
I think this is a good change. It's not a big deal, but it's a good thing to do.
I think we should keep this controller controller for now, but we should keep it consistent.
Maybe we should just call this `is variants`? We could also have a `Docker.is variants` that would be used for the `Docker.is variants` to be used for the `Docker.is variants`
This is the main change. We should not be using the `develop` version of the package.
I think we should use `org.apache.commons.lang3.StringUtils.toBoolean(String, StringComparison)` here.
I think this is a leftover from debugging I think.
I think this is a leftover from the previous version
Why do we need to set `QItemSelection` here?
I think this is not correct. if `spaceLock.try_lock_shared()` is not called, then `spaceLock.try_lock_shared()` will return false.
should this be `/jsjs`?
Nit: remove empty line
Why is this change required?
Why do we need this interface?
I think this should be `*big.Int`, since it's a `*` in the package.
this is just a small typo, I'd leave it alone :)
is this not needed anymore?
This doesn't seem right. The callback function is already set to `label_cb` and the callback function is already set to `label_cb`.
I think this is a leftover from debugging I guess
Why do we need this? Isn't it enough to just return 0?
This is the wrong place for this.
I think we should keep this method as it is and add a TODO to remove the other ones.
Please use `CASDefaultCstorPool InstallENVKey` instead of `CASDefaultCstorPool InstallENVKey` for this.
Shouldn't this be close()?
Wouldn't be better to use `pop_name` here?
This should be `__invoke`
I think this can be removed, since we use `datetime` in the standard library imports.
Line is too long. [83/80]
I think we should be consistent and use `DateRange.count` instead of `:`
Why is this test removed?
Should we keep this for `working` and `getExecutionHash`?
Why is this not public?
breakpoints should be before numpy
Why do you have to change the index to 1?
Just curious, why we need to do this for the `signedHeader`?
This is not a good idea. It's a good idea to have a test that checks for the value of `true` and then check for `null` when it's not `false`.
I think we should log the exception here, as it is not empty.
I'm not sure if this is the right way to do this. I'm not sure if we should do this. I'm not sure if we should do this. I'm not sure if we should do this. I'm not sure if we should do this. I'm not sure if we should do this. I'm not sure if we should do this. I'm not sure if we should do this. I'm not sure if we should do this. I'm not sure if we should do this.
I think this is the only place where we need to pass the entire `onStartNestedScroll` method.
This is the only change that is needed. The `fill_cb` and `get_cb` are only used in the `get_cb` function.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
@mrunalinikankariya @mmaxim , can you explain why this was here?
I think this is the right fix.
Is it possible to add `null` as a `true`?
I think this should be done in `os.Rename` to `os.Stat`.
Is this needed?
Why is this line removed?
why do you need to pass the id?
This is a bit of a hack, but I think it's better to make the method return an `int` and then call `getDefault()` on it.
I think this is not needed, we should not be adding new methods to the end.
I think this is a leftover from debugging I think.
I think this is a bit confusing, as we are already doing the `./` on the `./`
I think this is not needed, right?
I think this is a leftover from the PR. We should just make the comparison a bit more explicit. Also, I think it would be better to have the `simplify chained comparison` option in the `simplify chained comparison` block, and then have the `simplify chained comparison` option be added to the `simplify chained comparison` block.
Why did you remove this line?
I think we should log the proxy here, otherwise it will be reported to the next line.
Is there a reason we need to use `authority` here?
This is a bug, right?
This is a bit of a hack, but I'm not sure how to fix it.
I think this is a good idea. We should also check if the `poppler` is present and not just check if it's present.
this is wrong. It will be removed in the future
Can we use `TRACE` here?
This seems to be missing a `.valid`?
why is this change needed?
This log line is redundant.
Why is this change needed? `NewTestLogger` already calls `NewTestLogger`
I think we should be consistent and use `hashCode` instead of `hashCode`
This is the change that fixes the bug.
If we're not going to use the user's last feature, we should probably add a `let` to the `user_bp` so that it can be used in the future.
Can we make this a constant?
powershell is not needed here
can you remove the `collection?` here?
This is a breaking change.
We should import `samplers.pseudo_sampler` instead of importing `samplers.pseudo_sampler`
I think this import should be above `github.com/algorand/go-algorand`
I would prefer to have this default value by default, so that it's more obvious where it's used.
I think we can remove this line
This is the only change that affects TF providers.
I think this is not needed.
You can use `receiver[]` here
What is the purpose of this lock_a?
Can you also update the docstring to mention that this is a volume image?
@deads2k i'm not sure if this is the right fix.
I think `AbstractAnyTypeDeclaration` is a better name.
This is not needed.
nit: you can remove the `_` here
This is the fix.
Is this going to cause a problem when the MPI is enabled?
This namespace is not used anywhere.
I think this is the right fix. The previous code had a bug with the previous code.
@deads2k I think we should use a _this_ constant here. We don't need to pass the _this value here, as it is used in the `TooDevice` method.
This method should be private.
I think this is a bit confusing, as this is a bit confusing, as it is not really a `None` value. I think it is better to check for `is not None` and then check for `self.TYPE_REGISTRY`
I think this is not a good idea. It's better to use a named constant for the class.
this was a bug, it was not working before.
This is a breaking change. It's not a big deal, but it's a good idea to have it in a separate PR.
Could you please also change `QDesktopServices` to `URL`?
I think it is better to use the `quit chan` variable here, instead of the `quit` variable.
It's not clear to me why we have this extra check. Can we just call `MemoryLimit`?
I think we should use `Apply` here.
Is this a breaking change? It looks like it's only used in the `idx` field.
Please remove this.
The message should be updated to reflect the new message.
I think this should be a function?
This was a bug, right?
This is a bit confusing, as the `sampling` value is not present in the sampling kicks.
Nit: Use `format inventoryfile boltdir configfile` instead.
This exception is not necessary.
`Throwable` is not necessary here, since `try` block already handles IOException.
`DynamicMap` is not a correct name.
I think we can remove the CONTAINER method altogether.
I think you can remove this field. It is not used anywhere.
Why not use `array` here?
I think it would be better to use a constant here instead of a hardcoded request.
I think this should be `Kokkos_Core.hpp`
Isn't this the same queue that we're passing in? I'm not sure if we should just call `q_info()` here.
Shouldn't this be `len(rule.DstIpSetIds) == 0`?
I think this is not a good idea. It's a good idea to have a `IConnectionHeartbeat` that is a `DateTimeOffset` and we should be able to just call `DateTimeOffset` in the `AsyncResult` class.
I think this is a leftover from debugging purpose.
This is not the right place for this. The `xstate_t *` should be removed.
Remove this change.
This is a bit confusing, I would have expected the `getDifficulty()` to be a `L` rather than a `getDifficulty()` method.
I think we should remove this, it's not used anywhere.
This is a bit confusing, as we have two different things: 1. We have two different things: 1. We have two things: 1. We have two things: 1. A user data is a list of the same thing. 2. A user data is a list of the same thing.
This should be removed.
can you also update the corresponding `r-pkgdown` above?
Why did you remove this?
Why are we passing `C` to `2014`?
I think we should be consistent and use the `verbose` helper here.
Can you add a note that this is a breaking change?
can you remove this?
I think this is a leftover from previous refactoring, but I think we should just make it a `private`.
This is a bit of a hack, but I think it's better to move it to the `interface` section of the `interface` section.
I think it's better to move this to `unit` package.
Can we avoid this, we can just use `expectError: true`
Why do we need this property? I don't see it set anywhere.
This should be `Comparator.comparingLong`
I think we should be able to remove the error.
I think this should be `baseFeePerGas`
This is a breaking change. It should be reverted.
is this a typo?
I think this is a better place to put `IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII
`1.2.1` is probably more idiomatic, but 2.3.1 is more consistent with `1.3.1`
Why are we passing the containerd to the command topic instead of the container being created here?
Maybe we should add a note that this is a new release.
show -> The
Use a single `has_data_param` method here and in the other places.
If we're going to have to do this we can also do `lookup.groups.Type` here
I think we should return `None` here.
Why change it to id?
I think we can remove the git_checkout parameter here, because it's not used in git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git git
This change is not related to this PR, but it seems to me it should be a separate commit.
Shouldn't this be `extension_condition`?
I'm not sure if this is the right place to change. If the `--order rand` option is to allow the user to specify the seed, then the `rand` option should be updated to reflect that.
I'm not sure if this is the right place for this. The client is in the client, but it is in the client.
This is the fix.
Unused import. Revert changes
why not just `module.exports = { server }`?
Can you add the new line at the end of the imports?
I'm not sure if this is the right way to do this. This is a bit confusing, as we're just using `signed_in?` even if we're not using it. What if we don't have an signed signed signed signed?
I think we should be able to remove this whole `enum` statement.
nit: `autoRowSize` -> `autoRowSizeSize`
I think we should keep the `namedtuple` here.
This is just a small change to the octest API. It's just a small change that makes it so that we don't have to make it into the octest API.
I'm not sure if this is the right place for this, but I'm not sure how to make it configurable. I'm not sure if it is the right place for this, but I'm not sure.
I think we should add a new function to `addUnrefToFinalResResOp` to make it more clear that the block ID is not part of the `ID`.
This is a bit weird, why do we need to check for the dictionary?
This is not the right place to put data. It's a private function.
you need to add `/` here as well
Do we need this wrapper?
the `err` is not needed here, you can just return `nil`
I think this should be a dict, not a dict
why not `ChainID`?
Should we log the stack trace?
This is not needed since `ruamel.yaml` is already initialized in the `if` statement.
nit: you can merge both lines above as `Preconditions.checkArgument(lookback > 0, openFileCost);`
I think this can be removed.
I think we should also add a `TODO: merge conflicts` as well.
This is the correct way to determine if the format is correct. I think this is the correct way to determine if the format is correct.
This is not a dependency, right?
The parent is not defined here. The parent is defined in the parent of the parent of the parent of the parent of the parent of the parent of the parent of the parent of the parent of the parent of the parent of the parent of the parent of the parent of the parent of the parent of the parent of the parent of the parent of the parent of the parent of the parent of the parent of the parent of the parent of the parent of the parent of the parent of the parent of the parent of the parent of the parent of the parent of the parent of the parent of the parent of the parent of the parent of
Why is it `*` instead of ` X`. I think it should be `*` and not `*` in the constructor. The `collection` should be used in the constructor.
I think we should keep the `count(*)` since it is not used anywhere else.
This is a breaking change. The problem is that we don't have to support it in the TTemplate_atomic_type and we can't use it in the TTemplate_atomic_type.
I think this is not needed.
why not use a `*` here?
This is a bit confusing to read. Why is it not just a `Set<string>`?
I think this should be log level instead of info level.
I think this test should be done in `expect(component.get('selection')` and not in the `get` call.
I think this should be `Type originalIcebergType` instead of `originalIcebergType`.
Why is this line changed?
I think we should be able to remove the `MongooseError` from the error message.
Please remove the second parameter.
I think we can remove the `InternalRecordWrapper` here and just do `new InternalRecordWrapper(deleteSchema.asStruct()).wrap(record)`
I think this is not needed anymore
this is not right. You should use the else branch.
This is a bit weird, why do we need to return here?
Shouldn't this be `validateParams(this.opts.params)`?
Is this the right way to do this? I would have expected this to be a `networkPattern` instead of a `Set`.
I think we should be able to use the `.map` here instead of `.block` since we're not using it yet.
This is a string, not a string.
`end` is not thread safe, it is not a valid value. `end` is true, so it should be safe to call `end` instead.
why not use chain.Store?
I think we should just check if the device name is the same as disk name. Otherwise, if the device name is the same as disk name, we will end up with an empty device name.
This property is not used anywhere.
I think this should be `get => 1` and not `get => 1`.
I think this is the wrong place for this change
Trailing whitespace detected.
I think it would be better to use `initializer` here and in the other places where `null` is passed.
I would use `continue` here, as in the case of linked clone it is a `continue`.
Can we remove this and remove the index?
I think we should just remove this and just do a `eniLock` in the `Druid` instead of having to worry about the lock.
I think this should be `atomic.LoadUint64()`
Should this be a flag?
I think you can just use `fetchMock` from `fetch-mock`
I think we should removeExpectData here.
I think this is not needed, right?
Can you use the `validate()` function instead?
why is this logging logging removed?
@agaspardcilia can you check if this works for anyone using the `app/views/object.html.erb` file?
I think this should be `var FEATURE_NAME = "reports"`
What if the cgroup has an exception?
is this error message useful?
This isn't used anywhere, right?
In the past, we're not using `Warnf` anymore. Should we remove it?
I think this is not the right place for this.
I think we should add a `getUploadedFlowFile` method to the interface, and add a `getturesFlowFile` method that returns the flow file that is passed in.
This is a breaking change. The dynamicconfig is not defined in dynamicconfig.
I think this is a leftover from debugging purposes?
This is a bit of a hack, but I think it's better to move it to the `if` block, then we can just remove the `if` statement.
This method was removed because it was deprecated in the first place.
Why is this test case removed?
CachedThreadPool is not a generic name, it's not a blocker for this PR.
I think it would be better to do `if reduction in [0, 0] - 'none':` instead of checking whether the `loss` is defined. That way, if the user specified a loss, the `..` and `..` are in the same directory, they will be `..` and the `..` are in the same directory.
I think we should add padding to the interface, as we've already added padding in the interface.
why removing the $balance ?
I think this is not needed, we should change the default value to `Paired`
This is a breaking change. We're not using the default package for the build_step package anymore.
This is not correct. `std::move(other.txt[i])` is the same as `new std::move(other.txt[i])`
I think this is the only change that will need to be changed in this PR.
This is not a good example of how we should turn this into a common function. I think we should keep it in sync with the `if dask and isinstance(v, dask.array.Array)` check.
I think this function could be moved to `utils.py` so that it can be reused by the `env` module.
How about using `.enable_principal_state_updater` instead of `.enable_principal_state_updater`?
I think this is not the right place for this. It should be moved to the `waitForThumbnailsBeforeUpload` callback.
Let's not export this as USERS since it's not used in the code.
I think we can remove this queue anymore.
This is a change in behavior, but I think it's safe to remove.
this is not the same as the other one, we should have it in the same place as the other one in the same place.
Can we rename this to `PhaseSelector`?
Why do we need this `AllowlistedModules`? Why not just `tbarrella`?
This is a breaking change.
I think this is not a good idea. It's better to use the `TimeBasedFactory` class instead of the `TimeBasedFactory` class.
This is a bit of a hack, but I don't think it's worth it to make a PR to fix it.
This is a bit confusing, I would say `hyMountpoint` is a better name.
What's the reason for this change?
I think this should be a bool.
How about using `campaignSource` instead of `campaignSource`?
Should we make this configurable?
Can we use a different value than `0` here?
Can we change this to `catch segfaultHandler = node_require('segfault-handler');`
This should be disposed.
This test doesn't seem to be testing anything.
We don't need to send anything in the DB here, it's already in the DB
Would it be possible to add a `context.toSet()` method to `strconv.Done()`?
I think this should be `if (disable_timer)`.
This method is not used anywhere.
GetExlies similarly to the other GetExliesIndex, but the other Get score score score score.
I'm not sure if this is correct. The length of the length is the same as the length of the length.
I think this can be removed now since we're in here
Line is too long. [87/80]
I think this is a bug fix.
It's not clear to me why this is changing. I would rather see a new author in the original author, but I'm not sure what the original author is.
I think this is a bug fix. The re-index should be done in `STDERR_FILE`.
This is a breaking change. It should be in a separate PR.
why this change?
I think you can just do `nodeToCIDRs` and `routeSource` here.
I think we should be able to get rid of this if statement. It's not a blocker for this PR, but it's probably worth it to make it more explicit.
I think this should be set_format(self, pkgformat, pkgformat):
This is a bit weird, why do we need to use a `List<T>` here?
I think this should be in a separate PR
Trailing whitespace detected.
I think we should use `backend` here, as we do in `custom_options` below.
It seems like this should be `ListDeploymentChains`
This is the only place where we want to log the error.
why change this?
Why is this being removed?
Would it be better to use `LOG(FATAL)` here?
Do we need this extra arg?
I think it would be better to return an error here, and then pass it to `ScheduledJob` in the `Scheduled` constructor.
I think this is a good idea, but I think it's better to just have the default directory in the `install` method.
This is not right. You're calling `query(tempBasal)` twice in the first place.
I think we should be able to remove this and use `checksum` in the `checksum` function.
we should also add this to the `provisioningDelayCondition`
Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
`// Probably a Create.`
Would it be better to use the `IEnumerable<PipeWriter, T, long>` here?
Please remove the extra `db` tag.
Unnecessary empty lines.
Why did you change this?
We should probably have a test for this, as we're testing that the output is not included in the file
this is not needed, we can just remove this
This is a breaking change.
I think this is a leftover from debugging purposes.
I think this file is not used anymore
I think we should be consistent and use `and` instead of `and`.
I think we should move this check to the `TaskRunner` class and move the logic to `serverOptions.setIdleTimeout()` in `TaskRunner` class.
These files are not necessary anymore
This seems like a pretty big change.
You can use the `getId()` method here.
why is this change necessary?
maybe add echo to the end of this function and add a link to the output above?
I'd rather have a test for this test.
I think we should not do this. The defer is not needed.
I think this is a leftover from the previous PR.
I think we can remove `ChannelIndexInt` from the `ChannelIndexIndex`
I think you can just use `PersistBlockLevelInfo` here, and remove the `RunActions` function.
This is a bit confusing, as we are in the `test_metad.py` file.
This is not needed. `isView` will never be null.
I think this should be `attr_writer`, not `attr_writer`.
You should use a variable instead of a variable.
I think we should update the doc accordingly, since it's a `\` in the `videos` namespace.
Why not `yield toreceiveError`?
I think we should use grpc in this file.
I think we should remove this `cancel` call. We don't need to pass it in in the `cancel` method.
This is the only change that affects TF providers. I think we should just remove it.
@deads2k i'm not sure about this one. I would suggest to call this `Openstack` or something like that.
Is the `[0-9][0-9]))` portion guaranteed to be `2[0-9][0-9]{2]`?
This is a change in behavior, but I think it's safe to remove. The `TInstrumentation` is still being used in `AddDiagnosticSourceInstrumentation`.
Rather than having a conditional, how about `project.name` to be `'puppetlabs-foo' in bolt-project.yaml/`?
I think this is a leftover from debugging?
can we make this a constant?
I think this should be a migration since we're not going to be using it anywhere else.
Is this not needed anymore?
I don't think this is the right fix. It should be deprecated.
I think this is a good idea.
Why is this true?
I think this should be `volatile`
Do we need to return ZoneOffset.UTC ?
What is the motivation for this change? I'm not sure if it should be a `requirement` class?
Why is this removed?
Is this file still required?
I think this should be `AWSEmailProvider`
not sure if we should do that. Not sure if we should do that.
Why do we need this? I don't think we need it in this file.
You can just return 0 here.
I'm not sure why you did it this way, but I'm not sure why you did it this way.
I think this should be `maxAudioSampleRate = condition.Value`
nit: remove the `LOG`
This is a breaking change.
This is a bit confusing, as it is a bit confusing to have a `observer` in the context of the table.
I think this is not used anymore
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is a bit of a hack, but I think it would be better to have a script that has a `text/` directory. That way we can have a `text/` directory that contains the script.
Why are we returning the proper error code here? I don't see any `close` calls to `continue`.
I think this line is too long.
This is not a correct way to do this, but I think we should just remove the `# type: ignore` in the `#`, and remove the `# type: ignore` in the `#`, to reduce churn in the future.
I think we should log this somewhere else.
I think this is not needed.
this is a bug fix. The value is not in the "value" case.
can we do this in `Xml.TxTxBlock`?
`rel="ls %s.chaos.bak"` is not needed anymore.
Is this variable used anywhere?
This is not the right way to go. I would use `bitWrite` here.
I think this is a good change. It should be fine to use `StringUtils.isSolveType()` instead.
I think we should disable this in `missing-docstring` too.
I think this is a leftover from an earlier version of the code.
Is this the correct data to the user?
maybe `revisionIdentifier` is clearer
Nit: `internal` is redundant.
This is the only change that affects backwards compatibility.
There's no need to change this line, `conftest.py` is not a dependency on `configure`
Why is this change required?
I think we should be more specific about 1070296.
shouldnt this be `LogicalType`?
i think we should also change the `payment_method` variable name
Prefer single-quoted strings when you don't need string interpolation or special symbols.
Shouldn't this be `array[]`?
This is a bug fix. It should be moved to the service.
I think this is a bit confusing to read. If we do want to do this, we should just do `if isinstance(attr, str)` and then do `if isinstance(attr, str)`
Please don't change the string representation of the string.
I think this is a leftover from the previous version
I think we should add a TODO to track this. If you want to add a TODO to fix this, please add a TODO to fix this issue.
Why is this change needed?
This is a breaking change. It's not a big deal, but it's a bit odd.
Is this right? AccessListItem is not used anywhere.
Can we move this to the `pkg/api/v2/policy.go` file? I think it's a little confusing to have a `pkg/api/v2/policy.go` file.
I think this should be `count`
This is not needed anymore.
Should this be super(SGEJobTask, self).__init__(args, **kwargs)`?
Does this need to be table_id?
I think this is a leftover from the previous commit.
GroupIDType should be marked volatile.
This is a bit confusing. If we have a contract that is 1.0, we can't use it.
Please use the constant from the class name
I think this is the only change that will break existing code.
@mfojtik why is this needed?
Use `find_by` instead of `code` because it will be more efficient to check for the return of the method.
"512s" is a very generic name, can we use the same name?
Why is this required?
Why are we dropping the `Output` here?
Please use `if (label >= 0 && ...)`
I think we should use a lower priority here.
I think this column should be `50_map` instead of `trail_map`
Why not using the `get` selector directly?
Does this work for other controllers that use the `bundle` folder?
nit: remove empty line
This is the only change that will be needed if `batchForBlock` is `nil`
I think we should use `new CompletableFuture<>()` instead of `future.complete()`
Just curious, why is this needed?
@tnozicka this is the fix.
I think this is a leftover from a recent PR.
I think we can remove this listener.
@matt-gardner, I think this should be `time.Now().Unix()`
Is this supposed to be 500? The test is failing because it is not actually used anywhere.
This is a pretty big change. Can you explain?
I think we should use `constant` instead of `constant`
Why is this import needed?
Hmmm, this is a bug fix.
I would prefer to keep the `getDefinition()` method to return the string.
This is a good change. It seems to me that we should only do this if `key == null`? If we do, we should probably just remove the `Guard.isNullOrEmpty()` check.
I think we should add a new message to the "catch.hpp" and the other "catch.hpp" to make sure that the "catch.hpp" is the correct one.
This should probably be `TYPE_TYPE`.
Why is this test using the `Container` event?
Can you please avoid using `*` imports in this PR? It's not clear what's going on here.
I think this is a leftover from the previous PR, but I think it's better to do it in a separate PR.
Why is this necessary? I don't see any other test using it.
This is a breaking change, please revert
I think this can be removed now?
This should be split across multiple lines.
I think this should be `public const` and not `public`. The package is already set in the `build-system/package.js` file.
I think you can remove the icon because it's not used anywhere.
I think we should be using the `aws` package here. The `golang.org/x/net/context` is used to determine if the package is in the package or not.
Why did you remove this?
I think we should still have this in the `components/helper` model.
Why do we need this change?
Would it be better to use `LOG_IF(0, status)` instead of `LOG_IF(0, status)`?
I think this should default to `true` in case someone wants to set a default value in the dashboard.
I think this file should be in `import`, `import`, `import`, `import`, `import`, `import`, `import`, `import`, `import`, `import`, `import`, `import`, `import`, `import`, `import`, `import`, `import`, `import`, `import`, `import`, `import`, `import`, `import`, `import`, `import`, `import`, `import`, `import`, `import`, `import`, `import`, `import`, `import`, `import`, `import`, `import`, `import`, `import`, `import`, `import
I think we should add a `defaultProps` to `ctaLink` to make it clear that this is the default
The `Current` should be nullable.
Please add a comma at the end of this line.
This function is not used anywhere, please remove it.
Why did you change this?
I think we should remove this line. It's not used anymore. It's now done in `azure.jit.localstoreCloser`
I think this is not needed, we can just inline it.
this is a change in behaviour - we should have a different solution
I think this is not needed.
I think this is a good idea to add a new method to the `onchainPirv` class.
Shouldn't this be Exception?
Is it possible to get rid of this code block?
This class contains methods and properties that are not used anymore.
I think this is not the right fix. The hex should be the same as the hex of the hex.
` writeXML` is not thread-safe, please remove it.
This is a bit of a hack, but I think it's better to move it to the top of the file.
This is a breaking change. We need to keep the old method as it was before.
Can we move this to `pkg/err/http.go`? We don't need to pass `errors.go` to `Error` if `err` is `Error`, but it's not a `Error`
I think this is the wrong place for this, since it's a `cpp` option.
I think we should rename this method to `pausedPredicates`
I think this should be `if self.vkCode in self.is_vk() == False`
should we remove this?
Why is this necessary?
This is the only change that affects TF codegen.
I think this is not the right place for this. `addAndGet(-..)` should be called `setDeleteTerms()`
not sure if we should use the same naming scheme as the testing data source.
Please remove this.
Why is `firstTimeEmpySubject` not `firstTimeEmpySubject`?
Is this still necessary? I think `transport` is already a part of the main main script.
We should raise an error here instead of raise an exception.
I think this should be `self._expands_user = False` and not `self._expands_user = False` right?
I think this will still work, because `isHidden` will be `null` when `isFocusable` is true.
This is not used anymore.
Why not `KeyStorePasswordFile`?
I think we should remove this `console.log` call.
`is_log_op` is a very confusing name, it's a bit confusing. Maybe `is_log_op` is a better name?
Shouldn't this be a malformed check?
Shouldn't this be `self->logIdToSend_`?
I think this should be moved to the "adopted clusters" section, since it's used in the "init" section below.
what is this change for?
I think this should be `config.to_delete(path).to_delete(path).to_delete(path).to_delete(path).to_delete(path).to_delete(path).to_delete(path).to_delete(path).to_delete(path).to_delete(path).to_delete(path).to_delete(path).to_delete(path).to_delete(path).to_delete(path).to_delete(path).to_delete(path).to_delete(path).to_delete(path).to_delete(
This method is being used in multiple places, so I removed it.
Can you please rename this field to `mFirstContentContent`?
This method should not be required. It is not aOperations method.
this test is failing because of the tests
Can we use `continue` here?
I think this is the only place where we need this.
This is not a good use case, but I think it's better to use `from kinto.core.utils import json`
I think this is the only place where we want to support custom managers.
Why is this removed?
I think this is not the right way to check if the `chaindata` is in the chain. Maybe we should check if the `chainchain` is in the chain.
Prefer single-quoted strings when you don't need string interpolation or special symbols.
Shouldn't flash be at the beginning of the file?
This is a breaking change. It's not a contract. It's a good idea to add a new field to the `Right` field.
Shouldn't this be in a separate PR?
@vpodzime do you know why we need this? Is it because we are using the `Cassandra` version?
I think this import is unused.
Line is too long. [85/80]
This is not right. You can use `body.decode('utf-8')` instead.
Is there a way to avoid this label?
This is a breaking change. It's not a public API, so I would just remove it.
This is a BC break.
I think it would be better to check the namespace id and the namespace id as well.
Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
I think we should remove the `or` part from the `aws/` package.
I don't think we should be changing this to "Cannot set an alternative uri when"
I think this is a bug fix. We should just remove the `and` part of the docstring.
Why is this needed? I think it should be `Interop.CA`
I think this is not the right place to put this. `excessDomChildren` should be initialized to `null` and `equal` should be used instead.
This is a bit confusing, why not just use `c`?
why was this removed?
`error_open_zip` should be `error_open_zip`.
I think we should use `d.SourceSnapshot != ""` here.
I think we should do a similar test for `userSchema`
`local_ip` is not used anywhere else. It should be removed.
Why not just return `bool`?
This is a bit odd, why not make this a global variable?
I think this is a bug fix. The only time we call this method is in the `getStack` method.
I think this can be just `except 3D descriptors`.
I think we should be consistent and use `data_store_data_store_jag.hpp`
This is a breaking change. It's not a breaking change. The `ValueTask` is a `Node` and it is a `Node` so it is not a `ValueTask`.
I think we can move `CLIImage` outside of the `Installed` loop, since we don't have to do anything about it.
I think we should use `TableMetadata.newTableMetadata(schema, table, table, table, table)`.
This test is not testing anything. The test was testing the `master` version of the test.
I think this should be debug level. It's not a big deal, but it's not a big deal.
This is the only change that affects TF providers.
I think we should just call this `badContentType` since it's a good idea to change it to a good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good good
I think it would be better to throw an `Error: command.throwthrow(throw new ...).quit()` with a `Error: command.throwthrow(command.getName())`
is this a breaking change?
This is wrong, because the flux_respond will be 0.
I think this import is unused.
This is a bit weird, why do we need to use `newSchedule := schedule` here?
I don't think this is the right place for this. The project is null, so it should be handled in the project.
Why is this needed?
Would it be possible to break this line into multiple lines?
I think we should make this change in the manifest file. We already have a default value for manifest.
I think this is a little too much for a better name. `Viewer` is a bit confusing.
I think we should add `PercpuUsageInUsermode` to the `User` section.
Just curious, why do you need to check the `check_user_can_edit_record`?
Can you use the `CDP` suffix here?
@mfojtik why is this change required?
What about the case where we have a `CET$` or `CET$2`?
Can we add an expectation that this spec has been updated to remove this spec?
There is no need to check here, since the check is already in the block
`getMicroserviceInstance` is not used anywhere else, so you should remove it.
I think this is a leftover from debugging I think.
This is a breaking change.
why do you need this? This will be a very minor change. If you do this, you can use a different variable name to set the default to `5`.
Why do we need to set `selector` to `Stateful`?
`internal` fields should be protected.
This is a bit confusing, why do we need to check for `scripts/tcp_stream_modify.py`?
This should be a debug level, not a debug level.
I think this is the only change that will break existing code. The new code is not correct.
This should be MCTX_NUM_SIMD_S
This is a breaking change, but I think it's better to keep the old version of the new version in the new version.
should this be `null`?
This is a bit confusing, why do we need a -1 here?
`$Auth` is not used in this class, please remove it.
Since this is a very specific operation and we're not going to send the block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block
Please remove the `const`
Can we make this `static`?
Please add a note that this will be fixed in a future PR.
Shouldn't this be `plugin yarpc`?
API_END() is a very generic name, so you can use a different name for the ref_booster.
Do we need to add this to `DbRound`?
I think we should get rid of this test and get rid of the `assert` altogether.
Should we add `base64` to `Client`?
I think this should be done in `onboarding` and not `prefs.getBoolean(key, true)` and in the `onboarding` loop.
Please remove this.
I think this is a leftover from debugging?
Nit: I'd prefer to have this return `DEFAULT_OFCHAT` rather than `DEFAULT_OFCHAT` since it's a static variable.
Why do we need to copy here?
`flatteningConfigs` is not a `proto` so I think we should rename it to `flatteningConfigs`
Why is this change needed?
We should add a TODO to remove this.
why is this change needed?
I'm not sure if this is the right fix. It should be in the last place in the first place.
I think this is not needed.
I think this should be in a different PR, if you want to make sure it's in the same PR as the one in line with the rest of the changes.
This is not needed.
@joshblum I had to change this to use the new `ier3_integration` helper.
Should this be done in the `testRule` test?
I think it would be better to have a default length (since it is not set to 4).
This is a breaking change. It's not related to the PR.
I think we should keep the old one as it is only used in the `getLogger` method.
Why do we need to add `TCP` here? We don't need to pass `Optional[TCP]` to the `AsyncTask`
I think this import is unused.
Same here, `l_input_end` can be replaced with `std::chrono::Handled_list`.
This is a bit of a hack, but I think it's better to move the file_exists to a variable.
I think this should be ` TimeChaos.action`
This is not needed.
Should we make it a `private`?
"Cannot be used" -> "the data"? "the data" -> "the data"
I think this is a bug fix.
Is this file still relevant?
This is the wrong place for this. You should check if the path exists before creating the file.
I think this is the wrong place for this
I'm not sure if this is the right place for this. The `executututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututut
can you make a helper function for this?
I don't think this is the right place for this.
I think this should be a separate commit
shouldn't this return 0?
@smarterclayton do we want to have a test for this? i.e. not have the api.
Is it possible to have a test for this?
Is it possible to have a cluster and a cluster in the repo?
I'm not sure if this is the right approach. The number of proposal is not 0 or a number of proposal is not 0.
can we use `Enumerable` here?
Remove this line.
Why remove this?
Should we also check for `this.options.startAfter`?
This is a bit scary, but I think it would be better if we could do something like `user.save_user` instead of `user.save_user` and then just do `current_user` in the `user` and then just do `current_user` in the `user` and then just do `current_user` in the `user` and then just do `current_user` in the `user` and then just do `current_user` in the `user` and then just do `current_user` in the `user`
I think this is not the right fix. If you do not set the `layout` property to `true` it will be `null` and you will not need to check for `! empty($params['layout'])`
nit: I think this is a bit confusing to read.
I think we should use `setup_v2_7` here instead of `7`.
why is this changed from tests to tests?
I'm not sure if this is correct. The only reason we're using `and_op` for zero is that we're not using it yet.
I think we should remove the prefix `bob` from the library. The reason is that `--prefixed-userid` is now just a prefix, and it's not used anymore.
Can you remove thismock?
This is the only change that affects this PR.
It looks like this class is no longer used?
I think this should be `of this value`
I don't think this is right. NET452 is the correct type for the 45.
Do we need to add this to the `GracePeriodBlocks`?
I think we should be more specific about the `find_instance_group_by_url` method.
I think you can change `|` to `|` and change the condition to `...equals("...."`
I think this is wrong, because `FormatIsMultiplane` is not a `FormatCompatibilityClass`.
Cachedor is not a valid name. It is not really a good idea to have it here.
This is a breaking change.
I think you can just do `selectedItem.isMedia()`
I think we should update the doc accordingly.
Why not just use `ParameterTypeNames`?
This is not necessary. ISpecProvider SpecProvider is already initialized in the constructor.
`afterAction` is not a valid value. It is not a valid value.
I think this is the right fix.
I think this is a leftover from debugging?
The lines below this one look superfluous.
I think we should be consistent and use the cache.
You can just copy the list here.
This is not a valid file name, it's not a valid file name.
This is the only change that affects TF providers. I'm not sure if we should keep this here.
Missing space after `// +build`
This is a good change. It's not a big deal, but it's a good idea to add a method to the list of objects that are used by the `BaseTree` class. It's not a big deal, but it's a little confusing to have a method that returns a single object, and it's a single object.
@alexander-schranz should we have a `config` key here?
Nit: extra space after `,`
I think it would be better to use a constant for templateRole, than a hard limit of templateRole.
Why is this needed? I think it should be `OnMainThread`
`if opt.is_a?` is the preferred way to check for the return value.
I think we should use the `className` helper here.
@jridgewell I've been using `develop` here as well.
Unit is not used anywhere.
Can we use a `omitempty` type here?
I think this was the only way I could see the code where we had had `preact` being used.
I think this should be `t.text` instead of `cart_item_id`
I think this should be moved to `DEFAULT_GITHUB_ENDPOINT`?
@deads2k i'm not sure this is the right place to put this here?
This test is not testing anything, is it?
I think this is the only place where we need to do this. The former is a `nil` check.
If we're going to make these tests pass, we should probably make them `count` and `count` in the tests.
Remove the parentheses around the condition.
Why was this changed?
This is the fix. We should not be returning anything from the previous version of the function. This is because the previous version of the function returns a value that is not the same as the default value.
why is this change necessary?
This is a bit odd, why do we need to do a `&paths` here?
`translate` is not supported in IE.
This is the only place where we want to support the old code.
I think we should still have this in the `config.resolve_install` method.
This is not needed. The `free` call will be removed after the call to `globalWorkSizeX` will be executed.
Not sure why this was here, but it's not a problem.
I think this should be `1.15`
Can you add a space after `$options['lazy']`?
This seems like it should be a `namespace` not a `finally`?
Layout/TrailingWhitespace: Trailing whitespace detected.
s/represent/represents/represents/represents/represents/represents/represents/represents/represents/represents/represents/represents/represents/represents/represents/represents/represents/represents/represents/represents/represents/represents/represents/represents/represents/represents/represents/represents/represents/represents/represents/represents/represents/represents/represents/represents/represents/represents/represents/represents/represents/represents
Should we also check for errors here?
I'm not sure if this is the right fix. The `p->mp_impl` check is probably not needed.
This seems to be a duplicate of line 567.
This should be `Intf`
How about including the pending number of items in the error message?
I think you should be able to use the `config` fixture here, as it's a `config` fixture.
can you make this a function?
I think this was accidentally committed.
Why not use `getTrait`?
This is a bit confusing, why is this needed?
why not `from enum import Enum`?
I think we should keep this, because we don't want to support both (e.g. `QCFAIL`) and `QCFAIL` at the same time.
This is a breaking change. It's not a public API, so I would suggest to remove it.
This class is unused.
I think this should be changed to `callConfiguration Reload`
I think we can remove the `cleanup` here, since we are not using it anymore.
I think this should be a `err` rather than a `err`.
This file should be removed.
why not just use `_tcsncpy` ?
I think this is a leftover from the Rails upgrade, right?
Please add `TODO(type='BN', requires_grad=True)`
I think we should not need to do this. The value is a `null` value, and the value is a `null` value.
If you're using `auto` here, you should be able to remove the `auto end` variable and just use `RDKit::MOL_SPTR_VECT::const_iterator` here.
Shouldn't this be `Action*>(ptr.release())`?
This is a breaking change.
shouldn't we also add the `resh` in the `install` method?
Please use `load` instead of `data` to be consistent with the other test data.
The `viewTop` variable is unused.
If we are using `List<String>` here, we should not use `List<String>` as it is a `List<String>`
`List<String> path` is not necessary since `path` is a `List<String>`
I think this should be a `getBoolean` instead of a `boolean`.
SimplifiedBasicBlock => everything else already exists
This is a bit confusing, as it is used in a few places. Can we have a method that returns a `Set<String>` instead?
I think we should be able to remove this `if` and just call `get SparkMicroBatchStreamScan()` in this class.
This is the fix.
I think this should be in a separate PR, since the `fixture` is not in the `commons` package.
@smarterclayton do you think we should move this to `config/openshift/library-go/pkg/controller`?
Is this change necessary?
nit: `content.array()` is a better name.
I think we should be consistent and use the same name here.
This is a nice nice nice nice nice nice nice nice nice nice
I think we can remove the timeout here.
I think this method can be removed now since we're in the interface
I think this test should be testing the wrong thing. The type should be `self.options` instead of `self.options`.
I think we should be able to remove this now that we're not modifying the `.end` file.
This file is not used anymore.
`abel` is not used anywhere else.
I think we should rename this to `cloud_names_id` to be consistent with the naming of the naming
I think this should be `Sign in`
This is a no-op, right?
I think we should remove this interface.
I think this is a good idea, but I think it's better to make this a `bool()` and then call `bool()` in `include/write`.
I'm not sure if this is the right place for this.
I think we should use `upload` here.
Why is this change needed?
I think it would be better to use `waitUntilAllElected` instead of `waitUntilAllElected`
I think we should be consistent and use the 30000 constants for the naming: `public const int int int?`
I think we should just call this `BuggyProposal`
this is a breaking change, we should not be adding any new public APIs
What is the purpose of this `if`? It seems like it should be a `searches.push(action.search)`
I think we should just remove the prefix from the database. It's not a public function.
I think this is still useful to have in the context here.
I'd prefer to keep this as `IApiResponse` and `isposable` to avoid the need for the extra `IApiResponse`
This is a bit odd. Why is this change necessary?
I think this is not needed.
This is a nice cleanup of place to be done. I think we should just remove the `Pool` part of the `errors.Wrap` and `errors.Wrapf` calls.
Do we need to check that the only callers of this method is in the `getRingInfo`?
why is this changed?
This is a breaking change. We should probably just remove this.
I think this should be `pubSub`
Why 100? Shouldn't this be 100?
This is a bit confusing. Can we just have a method that returns agnostic instead of agnostic?
this is not right. if we have inputPattern[i] and inputPattern[i] is not allowed, we should not have inputPattern[i] and we should not have inputPattern[i] and we should have inputPattern[i] and we should have inputPattern[i] and inputPattern[i]
Can you move this to `testMatch`?
I think this is a leftover from debugging I believe.
Why is this removed? I think it's not used anywhere.
Should this return an error?
I think this should be `Schema schema.partOrder(string, variant)` instead of `schema.partOrder(string, variant)`
This is a bit weird, I would use the `Module` property instead of the `Module` one.
If we're going to be redelivered, why not just put it into the package? That way we can avoid the "six" of the dependency.
Should we use `wistia_embed` here?
Why do we need both asset and asset?
I think this is a bug fix. The `NotFixTopicCopyBugOption()` is not needed anymore.
I'm not sure if this is the right fix. I think it should be possible to do this in a different PR.
This line is not needed. `include H2O::ACL\n` is a `mrb` dependency.
This was a bug, right?
This is a bit confusing to read. I would suggest to use `Bytes` to get the value of the value.
I think we should remove this line. The RSpec is already created on line 165.
This should be a constant.
We should probably have a better way to do this. I'm not sure if we need to do this. The `playManager.currentTime` is a good idea.
I think this should be `max_edge_returned_per_1000`
this should return an error
The `WP_interval` parameter is `LoadRaw` so I think it's better to use it here.
this is not needed. localization is already in the local file.
FYI: this is not a good way to do this. The `literalSet` is not a `literalSet`.
I don't think this is the right place for this. The `if` statement is redundant.
I think we should remove `h.describeCMObject` now that we have the `describeCMObject` already.
this should be a `Set<String, Metric>`
This is a bit weird, the `handle_dead_worker_task` logic should be moved into the `handle_dead_worker_task` function. I think it's better to keep it as it was.
Nit: import sorting
Can we just use `primary` here and not `use`?
should this return null?
I think this is not the right place for this. `setValidatorsForPreviousBlock` should be called before the loop above.
This is a change in behavior, but I'm not sure if this is a good idea.
I think we should also include `include/assets/js/modules/subscribe-with-google/bulk-edit.js` in the `include/assets/js/googlesitekit-subscribe-with-google/bulk-edit.js`
does this mean we can remove the span from the database?
Should we also update the `config` key in the config?
why do we need to import jinja2 here?
This is not needed, we can just call `EXITING_DR()`
Why is this removed?
I think this is a good idea, but I think it's better to use a constant for this.
This was a duplicate of line 34.
Why did you change this?
why is this changed?
why is this needed?
Why is this in `lib/TaskJob`?
This should be done in `sys_get_meminfo()`
nit: "schema" events supported"
Nit: `SequenceNumberForNewDataFiles`
@jridgewell I think this is the correct way to go. The `url_name` url is the correct URL for the url_name.
Why is this removed?
Extra empty line detected at block body beginning.
`@var string` is not needed here, it is already `@var`
let's move this to the beginning of the function
Maybe we should rename this to `record`?
Isn't this redundant? It looks like the `downloadProfilePhoto` already exists.
`array` is an array, not an array.
(style) trailing whitespace
This is not right. It should not be called from the user, but it should not be called from the user.
This change is not related to this PR, but it seems like it should be a separate commit.
We should probably make this change in the future.
This function is a little confusing to me. If I understand correctly, the `signerFlag.Value()` function is not called, so it is not called anywhere else. I think it is better to call `signerFlag.Value()` in the `signerFlag.Value()` function.
Is it worth logging somewhere else here?
I think this can be just `parser::numeric::bad_numeric_cast`.
I think this is a wrong change. The `Simple` directory is used for the `Amazon` directory.
why not define it as a constant?
Why is this needed?
I think this is not the right fix. It should be "ZK_HOST" instead of "ernary".
I think we should move this to `application_default_*` since it is not used in the `config` package.
Shouldn't this be `columnSelected || this.countRows()`?
strictly speaking, not sure what the use case is.
What is this testing exactly?
This is the only way I could see the `posix='win' not in sys.platform` option.
I think we should remove `slack` from `config.Token` and `config.Channel` from `config.slack`.
I think this should be `URL.url` instead of `Controlr@`
I think this should be `shifted_bearing = (shifted_bearing <= 360)`
I don't think we should be using `py-FULL_VERSION` here, since we already know the version is not version-sensitive.
this is not needed, we have to keep the old signature
This is the only change that affects the change.
This is probably a good candidate for a helper method.
`List` is not used in this class, please remove it.
`javaCompile.getToolChain()` is not a pointer, so you should not need to pass the pointer here.
`findIdByHash` is not the name of the function. It is used by the `Hash` property.
why not just use the cached function?
Please remove this.
Why not execute directly?
why do we need to add it again?
I think this should be `pytest.skip_if(['TEST_TARGET',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',',
This should be edit or not?
We should probably add a log message here.
There's a typo here. `RWMol` -> `isRWMol`
Maybe we can add a `RLock()` method to the pool?
Why do we need to do this?
I think we should move this to a new method `loadReactAppOnceIfReady`
Can you please update the changelog as well?
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
Why is this a warning?
This check is not needed, `isHybrid` will never be null.
I think we should be using context.DeadlineExceeded here.
I think this should be `continue` instead of `true`
This is not a good idea. It's not a good idea to add a space between the `if` and the `:`:` operators. The `if` condition is not really needed. The `chars[$i + 1]` is not really needed.
Style/RedundantSelf: Redundant return detected.
This is a bit weird. Shouldn't we be storing the `--variable-d` option in the scope variable?
nit: you can merge both lines above as `checkNotNull` will return the given argument
RuntimeIOException is not used anymore.
This is a bit confusing, as it is a very specific test, and it is not really a blocking issue.
I think you can remove `ForAdditionalLiveTvOptions` now.
why not use `log.warn`?
This is a bit confusing, as we are already doing the `UIAAvailable` on the UIA, why not just have a `UIAAvailable`?
`replace-partitions` is a bit confusing, can we replace it with `System.google.common.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension.extension
Why do we need this change? Is the sorting on the `W3CBridge` necessary?
What about the `_activate_user` method? I think it would be more readable to have a method like `one_or_none()`.
I think we should add a TODO here to remove this from the `KubeletExtraArgs`?
This is not needed.
should we also test that it throws an exception?
This is a very specific test, please use a different name
Shouldn't this be `_autosave`?
The `BalanceRecord` here is not needed, `AccountData` is already being used.
I think this is a leftover from the previous commit.
Why not set it to 1?
No need to change this.
This is a no-op, right?
`nowarn` is now being used by `log.warn`, so I think we should remove it.
I think we should remove this, it's not used anywhere.
It looks like we're using the same timeout as the one in `newTopBlock` itself. Is there a reason we need to change the name of the property?
Is there a reason to use a mock here?
This is not used anywhere.
I think we should remove this for consistency with the rest of the codebase.
Why is thiscrypto?
I think this is the only change that is needed.
Please remove the second part of the second line.
OnOnFlush is required, we can remove this.
I think this should be `pytest.mark.qt_log_ignore`
Use `import` for strings.
Why do we need to add this?
Please use `db.execSQL("ALTER TABLE")` instead.
should we rename this to `hive.openshift.io/clusterName`?
I think this is the wrong place for this.
I think this is a leftover from an earlier perspective, but I think it's better to be explicit about the type of the `string[]` type.
Why is this change necessary?
retention was wrong here.
This is the only place where the argc is used.
tpfp_func is already used in the mAP.py
This is not correct. The `return` statement is not needed.
I think this function could be moved to `pkg/api/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server/server
I think we should also check for `feed` here.
I think this should be `allowIncompatibleChanges`
Shouldn't this be in the `WidgetManager::instance()`?
I think this is a good idea to have a good explanation of why we need this struct.
Line is too long. [81/80]
What is the difference between this test and the previous one?
I think we should keep this constant for now, but we can use `const` directly.
`find` can return `null` if `pClient` is active.
I think this is not the right approach. The returned key must be comparable.
This is a very minor thing, but I think it's better to move it to the `go` package.
@mfojtik why is this needed? I think we should just remove `todo` from the `Equality` and `Equality` methods.
should this be done in a different PR?
I think we should move this import to the top of the file.
I think this should be `one_img = torch.from_numpy(one_img).transpose(2:][::-1]).show_img`
I think we should just remove the inputOffset field from the list, as it is not used anywhere else.
I think you can remove this, it is not necessary to add nvcc in the list.
Does this work with the `cStorVolume.Spec.Capacity.String()`?
I think we should be able to use `localhost:3000` here.
What is the reason for changing the type of the action?
Nit: import sorting
I think this is a leftover from the original PR.
Why is this needed?
I think we should probably have a spec for this spec.
This is a bit confusing, as it is a bit confusing that the exception message is logged at the end of the file.
The `is_tensor` function is now only used in the `if` condition, so I think it can be removed.
This is a bit confusing, as it's a bit confusing that the `x` prefix is a string.
This is not the right place to put this. The `stats` is used in the `DataFile` interface.
I think we should change `keyValue` to `substring` here. We can change it to `substring(0, idx)`
It's a bit weird to have `recording_start` here.
Why is this removed?
I think this is not a good idea. It's better to use `java.util.List` instead of `java.util.List`.
Why is this needed?
I think we should assert if `api_response` is `true` here. `assertDictEqual` is `true` but `assertEqual` is `true`
I think this should be changed to `h2o_hpack_decode_huffman` and then you can just do `ret->len = h2o_hpack_decode_huffman(ret->base, *src, len, is_header_name, err_desc))`
I think this is a leftover from debugging purposes.
I think this is a good idea, but I think it's worth a sanity check that the version is not in the Friendship but the Friendship is in the Friendship.
We should also add a `if (metricsConfiguration.isPushEnabled())` check here to avoid duplicating the code if we don't want to.
I think this is the wrong place for this. The `self.backbone_end_level` is used for `self.num_ins`.
I think this should be in the same commit as the one in `core/util.go`
I think this is a bit of a weird place to do this. I think it's better to do it in a `http.Create` and then do it in the `err`.
I think we should use the `Ret` as the peer type here.
I think we should not use the "canonicalRankingNumber" type here.
can you call this `loss_normalizer_momentum`?
I think this is not needed. `fds[2]` is the same as `ioctlsocket`
I think this is not a leftover
I think this should be `tail`
Shouldn't this be done in the memref too?
This is the only place where we need to do this. The only place where we need to do this is if `list.size()` is called.
@jackfrancis is this intentional?
I think we should add a `git blame` kwarg to `revert` as well.
should we use `version` here?
I think we should use `errors.Wrapf` here
Is this change necessary? I don't see any `#if defined`s that are defined by the `cpu_set_t` any more.
This should be `network-audit-results.json`
This is the only change that affects TF codegen.
nit: please avoid extra empty line
`ast.py` contains only one line now.
I think this should be in a separate PR
I think we can remove this line
I think it's safe to remove this, since org.html_safe can be None
Do we need to add this to the DVC config?
I think we should just pass the `const` here.
is there a reason to do this?
We can't change this.
is this used?
Why did you change this? Isn't it a number 1 or 2?
Is this needed?
This is the main code I forgot to remove.
Please add `+` to the message.
can we call this lock?
Maybe we should add a `TODO` to the link to the issue here?
I think we should wait till all the time before wait, since it's a bit more complex.
I think this is a leftover from the previous PR.
This is a bit confusing. Why do we need this? Why do we need this? What if we are already setting `API` to `true`?
I think this is a leftover from the original PR.
Just a note that this is the only change that will break existing code.
why is this needed?
I think we should be able to remove the `item` and `target` inline, since it's not used in the test.
I think we should also check for `Identifier` and `Identifier` here.
This one is a bit confusing, as it is a bit confusing to have a "fix" of the name of the function.
why remove the name?
i think this should be a class member
This is a bit weird, maybe a bit more detail, but I'm not sure if this is a good idea.
does it make sense to use keyword arguments for the content type? I mean, you can use keyword arguments for the content type, not the content type.
I'm not sure if this is the right fix. The `roots_xcursor_theme` should be in the `desktop->xcursor_theme` or `desktop->xcursor_theme` but I'm not sure if it is a good idea to have a single `if` statement.
I don't think this is the right place for this. It should be `BloomStructRef` and `BloomStructRef` to be used.
`key == 0` is a bit confusing to me, because `key` is a string, and `key` is a string, so it is not a string, it is a string, so it is a string, not a string, so it is a string.
This can be just `windowswindows`
I think we can remove this since we're using `VCPULimit` in the spec.
Is there a reason why we 10?
This is a bit confusing, I think it's worth to say that it's a bit confusing to have a separate PR.
I think this is a leftover from the previous PR, right?
@drcrallen is this still relevant ?
`GenericAlias` is not used in this function.
This is the main template, so we should probably update the template.
Do we need to reset the RSpec class here? I think we can just call `reset_reporter`
I think we should keep this in the `writeLongScalar` method.
I think this needs to be moved to the `modules/internal` namespace.
I think it would be better to just do `reason` instead of `recreating`. The `c.logger` is a bit more expensive and more clear.
I think this should be `-p`
I think you can remove the `continue` part.
I think this is the actual fix.
This seems like it should be an error if `pin is False` or `pin is False`
Do we need to keep the old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old old
Is this change intentional? It looks like the `lift()` call was removed from the `format` and `format` calls.
why is this changed?
This is the main change. We should not be updating the state of the `TestCase` API.
why not just use the cached function?
I think this test should be changed to use the new span span.
I think this should be `it should force a collection of a collection`
This is the only change that affects TF providers.
This was removed because it was already handled by the `Bolt::Logger` class
Here, the `reverse()` is not needed.
Please rename to `takesHeapSnapshot`
I think this line is redundant now
This is not necessary, as it is already a comparison.
This is a change in behavior, but I think it's better to make the change in the future.
I think this is not right. It is not right. It is not right. It is not right. It is not right. It is not right. It is not right. It is not right. It is not right. It is not right. It is not right. It is not right. It is not right. It is not possible to have the same check in the first place.
This is not needed. It is already used in the `generatelassfish` package.
change the name of the test
Should we add a `Config` here?
We should remove this line
This is the only change that affects the change. The only thing I would expect is that the `wsid_add` is called for the `wsid_add` method. So I think this is the right fix.
I think we can remove this
This is a change in behavior, but I'm not sure why it's necessary.
Is this change intended?
Just to confirm, this is the actual fix.
this is the most important change. the migration is still in the migration, right?
If we're going to return None, we should probably return `None` here.
Is this used?
you should add a docstring here
why is `Region` removed?
`connected` is not a valid `__init__` method. I think it would be better to do `__init__(parent)` instead of `connected = None`.
`None` is the default value for `window` (which is what it is).
I think this is the only place where we need to use `getNonStreamingMethods` - we can just use `getNonStreamingMethods` directly.
I think this is the wrong place for this, as it's a general-enough case.
Isn't `Dims zeros(shape.size(), 0)` always true? If so, we should probably just use `shape.size()`.
this is a bit weird, why not just have the same `profile_examples` attribute?
I think this is a leftover from debugging?
It looks like this file is no longer used?
I think it would be better to move this check into the `realmConstructor.Sync.setFeatureToken` function and set it in the `realmConstructor.Sync.setAccessToken` function.
This is a breaking change. The `destinationPodName` is used for the `destinationPodNamespace` property.
nit: alphabetize this line
This is a breaking change. It's not a big deal, but it's a good thing to do.
Why is this class needed?
This is a bit of a hack, but I think it's better to move the logic to `kdirAll`
Is this necessary? We're using `TraceContext` in the `TraceContext` already.
I think this should be `java.io.FileOutputStream`
Why is this needed?
I think we should use `ecsMaxIDLength` here.
`prohibited_unless` is a bit confusing with the prohibited field. I think it should be `prohibited_if` or `prohibited_present`
This is the only change that will break the build.
I think this should be `QUIC_GO_LOG_LEVEL`
This is a bit weird. Why do we need to check for `*virtualDiscDesc.CapacityAllocationUnits`?
Is it possible to have a list of `data`? If so, we could use `from_json_tricks` to be consistent with the rest of the codebase.
In the future, we should use `string.mkString` instead of `string.join`.
this is not needed
I think we should check for the `fs.Config.MaxTransferMode` first.
I think we should be able to get the scopes from the service if the service is used.
I think this is not needed, we can just remove the whole method
Why are we using `go` in the go-go package?
I think we can remove this test now that we have the key in the test.
I think we should just remove this.
I'm not sure if this is the right place for this.
I think this is still not needed.
I think this should be `TagsTags`
This is a BC break.
You can use `preserve_host_output` here.
I think you can get the node from `node.attributes` to get the `node` here.
This is a bit weird, why not use a `@since`?
I think we should also add the `topic}/ws` param to the `Default` table.
why is this needed?
Unrelated change, but I'm not sure why it was necessary.
I'm not sure if it is possible to get the allowedPostRequest in a constant. If it is null, then it should be allowedPostRequest(req)
This is a breaking change. It is not used in this PR.
This is a breaking change, but I think it's better to keep the old version of the new version in the new version.
Use 2 (not 1) spaces for indentation.
I think this should be a constant
The `BATCH` value is used in the `Batch_BATCH` function.
I think we should be consistent and use the constant here.
Buffer.isBuffer(payload) ?
I think we should use `p` instead of `padding` here.
This is a bit of a hack, but I think it's better to make it a function.
I think we should be able to remove the `git-daemon-export-ok` check here.
nit: remove the extra space
@smarterclayton do we want to make sure we don't break the existing semantic semantic semantic semantic semantic semantic?
does this need to be public?
This is not right. When we set it to `relayets` it will set it to `false`.
Please remove this.
What do you think about using `@cancellation.count` here?
This is not a part of this PR, but I think it's better to move it to the top of the file.
I think this is a leftover from the S3-specific code, not in the S3-specific code.
This is a bit confusing, as it's not a `expect` method, and it's not a `expect` method. I think it's better to just call it `expect(formatter_output.string).to eql("message")`
What's the reason for this change?
This test is now done by the `onchainConfig` as it is a `OnchainConfig`
Why not just add the attributes to the attributes?
This is not the right place to put this in the `load` state, right? So, we don't need to set this here, right?
Please remove this file.
why is this in the middle of the peer?
I think we should add a `@var` annotation to this class and create a new one for each one.
It looks like this class is no longer used?
MainMenuItem is a string, not a string.
Does this change the default value of `1` to `1`?
why is this needed?
Can we just remove this?
I think we can remove this line. It's not needed, we can just do `if acc.shallowCopy() {`
Do we need this?
I think this is not correct. The `\/se\/cdp/` is the correct thing to do here. The `trainer.Duration` is the `/\/` and `/\/` is the correct thing to do.
This is a change in behavior, but I think it's better to change it to `Object`.
This was the only place I was thinking of.
Do we need to stub this? The expectation is that if we're not skipping the email, we'll end up with an email that has been submitted upstream.
@michaelkuhn Do you think we should change this to `apply`?
I would suggest to add a `Tab` property to the `Tab` class.
is there a reason we don't want to check for `user`?
This is not needed. If you set the Unsubscribed in the constructor it will be set later.
Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
I think this is a leftover from debugging?
This is a change in behavior, right?
Why is this needed? When we call `FAILED_TO_LOAD` we don't need to call `failed`?
is this change intended?
I think this is a little confusing, as this is a very specific media media. What about `prefQueueAddToCluster`?
I think we should just remove this method entirely.
I think we should keep the old signature and just use `injectionManager` here.
I think this should be in a different PR
you can use `self.tab_url(idx).tab_url(idx).if self.tab_url(idx).if self.tab_url(idx).if self.tab_url(idx).if self.tab_url(idx).if self.tab_url(idx).if self.tab_url(idx).if self.tab_url(idx).if self.tab_url(idx).if self.tab_url(idx).if self.tab_url(idx).if self.tab_url(idx).if self.tab_url(idx).
Is this used?
can you use a different name?
Is there a reason to use `rune` here instead of `""`?
Should we make this `.freeze`?
I think it's better to move this to the `javaslang.control` package. That way it's not a `Tree` class.
I think this should be `db.capacity == 0` and not `db.capacity == 0` so that we don't have to do anything about chunks.
This should be removed.
I think we can revert this change. We don't do it in any way.
This is the only place where you're using this header. Why not just move it to `_WIN32`? That way you don't need to include it in the `MAC_OS_X_VERSION_MIN_REQUIRED` header.
Can you remove this line?
Is this right? I don't see the `resource` below in the `isSupportedImageMimeType` method.
I think this should be removed, right?
Why do we need to do this? Isn't it a function?
@mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner
I think it's better to call this `if (param_.solver_mode() && Device_Device(param_.device_id()) {`
Is this the only version of the package?
I think this should be `isinstance(precision, str)`
This is a breaking change.
Just curious, why do we need to parse the record here?
This should be moved to `WorkingDir`
This is a breaking change.
I think we can move this import to the top of the file.
Why is this needed?
This is a breaking change. It's not a big deal, but it's a good idea to have it in a separate PR.
It's not clear to me why this is needed. It should not be done in the if statement below.
Unused import :policeman:
Is this still needed?
I'm not sure if this is the right place for this. The `DB__ROOT` function is used to determine if the auth ID is being used or not.
this is not related to this PR, but it is best to add a log line before it, so that it is available in the else block
I think we should update the `driver_schedule` method to use the `name` field instead of the `driver` one.
This is a leftover from the previous commit.
Why is this test necessary?
I think this should be in a separate PR
This should be changed to `errors` package.
I think this should be `unreviewed` instead of `unreviewed`
Why is this needed?
Is this change necessary?
I think you can remove the `insert` here.
`QUacheache` is a better name for this function. I would suggest `SOLOLExperiment` or something like that.
I think this is the wrong place for this. The value should be a string.
I think this should be removed as the flow exporter feature is removed from the agent and not from the agent.
This is not the right place to put this code. The refactoring is to check for the Script sys.stderr, and the re-assignment of the `sys.exit` is the same as the re-assignment of the function.
I think this is the only change that will break existing code.
This is a change in behaviour. We should be using the new release version.
(style) line over 80 characters
I think this should be `strutils.bytes_to_escaped_str`
Why did you change this?
can you use a macro here? if the indentation is off, it will be nice to have a couple of spaces in this file
I think this is a bit confusing, as we are not using `ImageDirectoryStructureCreator` anywhere else.
I think we should use `s.AWSCluster.Spec.Tags` here
Please add the license information to the project
We should probably call this `initPWMClocks` to be consistent with the other `initinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinitinit
I think this should be a `before_action` instead of a `before_action`
This is the only change that affects TF providers.
why change this? i.e. `toAntreaPeerForCRD` is the default for `ingressRule`
I think we should be calling this `scope` now that we're in preview mode.
You need to return a pointer here, otherwise it will be nil if claims is nil
This is the main change. The RelaxedReclaimPurge is used to store the new param in the RelaxedReclaimPurge.
@deads2k i'm not sure this is the right fix. We should just fix the test in the new version of the PR.
I think default should be False, no?
I think we should use the `fetcher` here instead of the `fetcher` one.
Why not `55`?
Shouldn't this be "not translated" ?
This is a bit confusing, as it's a very simple "breaking" of the code, and it's not a "breaking" of the code.
Here, `computed` is not a typo.
I think we can remove this filter and use the other one in the chat_reload.
nit: remove trailing space
I think this should be done in `menu.findItem(R.id.search_action).setVisible(false);`
I think it's better to use camelCase for this, `github.com/temporalio/temporalio`
This is a bit of a hack, but I think it's better to move it to the `base` section, and then move it to the `base` section.
I'm not sure if this is the right fix. The `ev->flags` check is to check if the caller has NULL before calling `PONY_API`. I suggest to replace `if(ev->flags == NULL)` with `if(ev->flags == NULL)` and then check if `ev->flags == 0`.
Is this a BC break?
I think this might be a bit confusing, since the `out` statement is not part of the `StatusCodeServerErrorRequiredLockIsNotHeld` function.
I think this should be called `andasIndexingError`
This is the only place where we use CoreChecks. I think we should use the function instead.
I think this should be `public ScanContext`.
Why is this removed? The `choice_name` prop prop doesn't seem to be used anywhere.
I think this is a bit confusing, as this is a bit confusing to have a `parquetSchemaUtil.convert(schema, name)` that is the same as `parquetSchemaUtil.convert(schema, name)`
I think you can just do `std::vector<hsa_agent>::get_all()`.
Please rename `Counter prometheus` to `Counter`
This is probably a leftover from the previous PR
I think we should use the `user_id` field here instead of the `id` field.
Why do we need to make it public?
These should be `self.f = focus`
Do we need to do any of this test for `test_group_for_index.py`?
I think this is a bit confusing. What about `--reupload` and `--reupload`? I think that would be more consistent with the rest of the code.
I think we should remove this field from the API. We don't want to expose it in the API.
In what situation would `getContext()` be null? I think it would be better to check `if (mSession.isActive(true)`
This limit is for BMOs, right? If so, we should limit the limit to 100 MB.
I think this is a leftover from debugging I guess?
@mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner
I'm not sure this is the right place for this, but I'm pretty sure it's safe to remove.
I think this is a leftover from the previous PR.
This is a breaking change.
I think this is a bit confusing. I think this is a bit confusing. I think this is a bit confusing. I think this is a bit confusing. I think this is a bit confusing. I think we should just use `opts.generate_hexfloat_in_json` to avoid the `json` value.
This is not the same as the Manifest interface. It's the same as the Manifest interface.
why not just `harparser`?
this file is not in `spec/services/gulp/gulp/gulp/gulp/gulpfile.iced`
I think we can remove this `findElements` method now.
Line too long. [81/80]
I don't understand why this is necessary. It's always undefined if the default is undefined.
I'm not sure if this is the right test. What happens if the conditional on the block does not exist?
We should probably have a doc block here.
Do we need to update the `ReadVectorSize` type?
I think this import is unused.
nit: remove the second return
why would we remove the info level info level?
This is a very large fix.
This is the only place where we use the global global global global instead of the global global. This is the only place where we use the global global global global global.
This is not right. `spec.GetXattr()` will always be `0` if `spec.Xattr` is `0`.
@jridgewell I think this is the right fix.
I think this is the wrong name. It should be the correct name.
This file is not in the issue.
`findUp` is not needed here, we can find it in the event handler.
This is a change in behavior, right?
Why not just `substring`?
I think this should be `this.delegate = delegate;`
Prefer single-quoted strings when you don't need string interpolation or special symbols.
Nit: newline should be before the last line.
This isn't necessary.
This is the only line that changed in this PR. The previous code was breaking the line length, but it was the reason why it was removed.
do we need this partial ?
Should we have a `such as your application` in the CLI? I think it would be more consistent.
Is this still necessary?
splitOffsets is a list, not a list.
Please remove the spaces after `//`
This is the only place where we should return a boolean.
Should we also check for `Author` in the message message?
I think we should use `mqtttt.log` instead of `mqtt.log`
Why did you remove this?
`type` is not supported in the message.
Why do we need both `procfh` and `uid`?
Shouldn't this be `django_header`? `g.auth_header` is already in the `django_header` module.
I think we should change the order of the arguments here, because it's the same as the rest of the code base.
I think this is not needed
This function is not used anywhere else, please remove it.
This is the only real change that makes sense.
I think this is not right. The messageBody.IsEmpty should be actually a string, not a string.
I think this should be a migration?
Is this change necessary?
This is a bit weird. I think it should be `128Int`
This is the new default, right?
This is not needed. MPI is already defined in the queue.
@alalazo I'm not sure if this is the right place to put this.
Is this file still in the rootless?
This is the only change that affects backwards compatibility, I think we should change the interface type to `string.String`
I think this is not the right approach. This should be: `ustrustrating the CertificateRequest has been approved by the CertificateRequest has been approved by the CertificateRequest at the end of signing.
I think this should be `!accountID && !accountID`
Do we need to make this an inventory?
@tgamblin Do you know why this is the case? I think it would be better to use a different name than `puppet_pkg`
I think we should probably change the `PRIu` to `PRIu` instead of `u` here.
I think we can remove this check now.
this is a bug fix.
I think this should be `winVersion.winVersion.major >= 10`
This should be set to false by default.
@Pearl1594 can you add the changes in here to `@product`?
Is this a typo?
I think this is a leftover?
Is this a typo?
I think this is not needed.
I think this is not correct. The history is a history, not a history.
I think this should be `instr_is_scatter`?
No longer used?
This function is now called in `LBFargateManifest`.
Please add a license header here.
I think we should use `self._conn.request(method, parsed_url.path, body, headers)` instead of the actual exception.
This is the only place where we return early.
I think this is the wrong place for this. There is a retry in the spec, so I think it should be `go get -d -v ./...` and `go get -d -v ./...`
Does this need to be refactored to use the new constant?
why is this not needed anymore?
This is the only change that affects the `verify.TxnPool` call, which is not correct.
I think we should keep the old version of the 4.4.0, and add a new version of the new version to the new version.
Do we need to check that the file has been set before calling this?
Why did you remove this condition?
I think this is the only place where we sync syncset.
Why is this needed?
This is a bit weird, why is this not null?
Extra empty line detected at body beginning.
I'm not sure if this is the right fix. If I'm reading this right, I think it should be possible to have a default value of `nullptr` and then set it to `nullptr` if it is not.
This should be a dev only command, not an dev.
This is a breaking change. It is not a good idea to add a parameter to the interface.
It's not clear to me why we have to have `data-capabilityFirelensFluentd` here.
I think this is not a good idea. It's just a note to make sure we don't break any tests.
Layout/EmptyLinesAroundMethodBody: Extra empty line detected at class body end.
I think it would be better to call it `PMIX_RELEASE` and `PMIX_LINELINE` to be consistent with the other `remove_item` functions.
I think this is a leftover from previous PR, right?
I would prefer to keep the `array_values()` method to avoid the need for the `@inheritDoc` annotation.
this is not needed
Can we change the condition to ` && found_env_vars[:is_pe] = found_env_vars[:is_pe] == 'foss'`?
I think this is the only change that will break all the tests.
I think this should be done in the `getVariable` method, not here.
I think it would be better to have a `finalized` as a `private finalized` here, and have it in the `Set<String, StringComparison>`.
This is a change in behavior, right?
This is a breaking change. It's not a public API, so I'd remove it.
Shouldn't this be `instanceof`?
I think it would be better to name this `TracerConstants`
why is this conditioned on line 446?
This is a breaking change. We need to keep the old constructor to not break the API.
This is the only change that affects TF codegen.
This is the only place where we need to pass the EnableApplicationResponse.
I think this should be `pony_assert(bool)` and not `pony_assert(bool)`
I think this import is unused.
can you please add a TODO here?
`_u.date00` is not the same as `startDate` (and `date01`)
shouldn't this be `((default=True, ...)`.
This is the only change that affects TF providers. I think we should just remove it.
why is this line removed?
I think it would be better to make this `ncr-layout` (and the others below) and use the `n` prefix to make it clear that the layout is not saved.
This is the only change that affects this PR.
I think we can remove this new line.
I think this should be `GetSlot<T>`.
I think this should be `std::bind(&Game::loadMap, &g_game, path)`
I think this is not the right fix.
Should we rename this to `healthcheck`?
why is this needed?
I think we should rename this to `SubnetGatewayIPV4Address` to be consistent with other API settings.
I think we can remove `find` here, since we don't have any other `find` method in the `find` method.
Should we use `from iris.cube import Cube_cubes` here?
Why is this line deleted?
I think this test should be removed.
I think this is not the right way to do this. The idea is that if you have a shared roles, you don't have to do this.
This is a change in behavior, right?
Could you add a TODO to remove this line?
Is there a reason we don't want to log the whole thing?
remove this line
We should change this method to `GetStream` and `GetStream` to match the other methods.
I think this is not a good idea. It should be `qutebrowser.hints`
I think we should use ` neve-tans` here.
Please don't change this, we have to update the changelog.
I don't think this is the right fix. The first if statement is not found.
Remove empty line.
`version == null && version.contains("-ee")` is always true, so you can remove the `packageImplementationVersion` check.
Why do we need to do this? `*` should always be the same as `fields`.
Please remove this file.
We should not use the taskilot-task in the taskilot-task.
I think we should use `e.type` instead of `input` here.
I think this should be `buildVersion.version_year`
I think it would be better to return `if (strncasecmp("OFF", val, len)) {` here.
I think we should be able to get rid of this check.
I think this is a leftover from debugging purposes.
Nit: `checksBlockLog` is a bit ambiguous.
I'm not sure if this is the right fix. It should be in the OpenMPTARGET_VOLTA70. The current code is in the OpenMPTARGET_VOLTA70.
Are there any schema changes that will be included in this pull request?
This is a bit confusing, why do we need to do this?
Looks like this is the actual fix.
This is not necessary.
This is not necessary, the `export` already includes the `googlesitekit` directory.
This is the only change that affects TF codegen. I think we should move it to a separate PR.
Should we use `omitempty` here?
This is a bit of a hack, but I think it's better to move it to the `setup.go` file, and then use it here.
Is this just a normal normal `ctx`? What about `defineAspects`?
I think the `os.path.dirname()` should be moved to the `__init__` module, since it is only used in the `os.path` module.
I think this should be `this.wineEnginesPath`
I think we should be able to use the `break` here. We should be able to use the `finally` block when the `finally` block is `true`.
I think this should be a separate PR, but I think it's better to move the VM to the Network ID in the future.
This is a pretty big change. Can we just make it a method on the `get` function instead?
I think this should be changed to `ConfigurationManager.getInstance().getString(R.string)`
I think this should be DEFAULT_REVISION
I think we should move this to the loginOptions itself.
I think this should be `if (layout === 'viewer') {...}` instead of `this.focusElement_('noteTextViewer');`
I think this import is unused.
The `__all__` file is removed from the PR.
I think we should use `as_string` instead of `string` here.
This is a breaking change.
Is `RetryForever` not guaranteed to be `Certificate`?
I think this is a little confusing. If you're using `error` here, you're not actually using `error` anywhere.
key is not set in the config
This is a public API, I don't think we need to have it here.
I think this is a good idea. But I don't think it's necessary to change this to ` MatchPriority` and `GlobPriority` to be consistent with the other functions in this PR. The `priority uint16` is used for `addWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrappingWrapping
@mfojtik @jihoonson - I think this is the right place for this. The `Create` method is called from the `Create` method, which is not the case here. The `Create` method is called from the `Create` method, so it is called from the `Create`. I think it is better to keep this method as is and just add the `pack` method in the `Create` method.
This is a bit of a hack, but I think it's better to move it to the `integration-tests` file.
@deads2k @mfojtik why is this needed?
I think this is the wrong way to do this. The `sourcenet` bit should be the same as `body.testnet` but not the `body.testnet` in the `TransactionParser` mode.
This import should be above the `fmt` import.
This is a bit of a hack, but I'm not sure how to test it.
This is a bit of a hack, but I think it's better to move this line to the `destroy` method, and then move the `_target.destroy` call inside the `if` statement.
Can we move this import to the top of the file?
I think you can return `nil` here.
should this be `verified` or `complete`?
I think this should be a constant somewhere, so it's clear that it's only used once in the controller.
The `err` is not needed here, it's already being used in the `newnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnewnew
` PutHash` is a bit confusing, how about `k`?
This is a breaking change. It's not a public API, and it's not a public API.
I think this is the wrong fix.
Can we add a TODO to remove this?
I think this test should be moved to the `duplicate-id`? We don't need to do this in the test, as it's not used in the test.
Do we need to set the `secondary` in the `ShowShow`?
I think we should clear the `org.apache.dubbo.config.clear.environment` instead.
This is a pretty big change, but I think it's better to move it to the `tmpDir` class.
I think you should use a `ssize` kwarg instead of `t` here.
I think this is a bit confusing, as the `icmpCode << 8` is a bit confusing to me. Maybe it should be a `Type` or `mypy`?
InitializeStreams is not used, this is not a part of the code.
I think you can just do `&& this.get('settings.icon') ? this.get('settings.icon')`
nit: can we use `Flashutes` here?
chunks2f and %.2f are the same.
let's let the user see their own definitions of `alt`
This is a BC break.
I think we should check if the fileBytes is empty before calling `.sklam()`
I think we should call this `updateLibrary` now that we have the `master` in the `try-catch` block.
I think we should check if the key exists before calling `.published` here.
Can we remove this?
The `TracerDomain` is a bit confusing. How about `TracerDomain`?
@tgamblin Do you remember why we did not change this to `JsonRpcError`?
This function is not used anywhere.
What's the reason for this change?
Is there a reason for not having this in the `create_lambda_function` function?
Can you add a TODO to remove this?
I think this is a good candidate for a helper function.
Shouldn't be mock_entry, no need to mock mock mock_entry
This is a little odd - why do we need to pass `RunQuery` here?
type is wrong
I think this is the only change that affects this class. The only thing that's needed is to allow the `favorite` to be set is for the `i` and the `favorite` is for the `favorite` object.
I don't think there is a good reason to do this, but I think it's better to do it in a `host_from_eacher` method.
This should be `hand.getPlugin('Tomek', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i
this is a bit weird, why not use `unflushedPaths`?
I think it's better to call this `primary_drm_monitor_create` or something like that.
This line is too long.
is this related to the Rails upgrade?
Is there any reason to keep the `unsetenv` function around the `remove_display()` function?
why not use a function here?
I think we can remove the `icon-number-` part here.
I think it would be better to set the env vars here instead of having the env vars in the constructor.
I think we should use `if (!projectJsonPath)` instead of `if (!projectJsonPath)`
This is the fix.
I think this will be a problem if the `wlr_input_device_destroy()` function calls `wlr_input_tablet_tool_destroy()` before the call to `wlr_input_device_destroy()` below will be called.
This is not the right place for this, but it is used in the `supportedModel` method.
Do we need to check for `props.children`?
This should be removed.
I think this should be set to false by default.
why is this needed?
This is a breaking change. If the default value is zero, we should set it to zero.
double check - not needed.
I think it would be better to use `proposal_attributes` instead of `proposal_attributes`
COMMAND -> TGA
why not `omitemptuy`?
This is a breaking change.
This seems like a bugfix.
Can we use `awsPath.Name` here instead of `awsPath.secret`?
this is just a question, but why not just remove the `blazer` and `blazer`?
This is the change that avoids sending the ActivitySampler.
I think this should be `if strings.HasPrefix(ruleValues, "-")`
I think this is not needed. August 30 is already in the default package.
Nit: I would put this line after _tab_index
This test is not needed anymore.
This is a little hard to read. I think it's better to move the `VarRename` to the `provide` method, and then call `provide` in the `VarVarRename` method.
does this need to be public?
I think this is a leftover from the previous version, since we don't have to worry about type constructors.
This is a bit weird. What is the purpose of this method? Can we just remove it?
I think this is not needed since we only call `encoding?` on the `encoding?` method.
I think we should remove this enum from the `enumerable` object. We can add a `boolean` property to the `enumerable` object.
I think this is a leftover from the PR description.
Can we add this to the `main` section above?
I would change this to `min_bound === null` and set `$i` in the `max_bound` property.
2014 was not defined, right?
why not `tail = '\0';`?
@deads2k @mfojtik why did you remove this?
Hash has a space missing in the left of {
Why was this changed?
I think we should keep the `@param` and `@param` methods in the `rescue` block below.
remove this line
I think this is the only change that will make the tests pass. We should make sure that the tests pass without the tests pass.
I think this should be a `_is_editable_prop` call, since it's a private method.
This is a breaking change.
We should probably have a unit test for this.
Why change to 1?
I'm not sure if this is the right place to put this.
This is not a valid method. The method is only called from a single place, so you can remove it from the `deep_thoughts` method.
This is a breaking change.
I think this class should be private and private, since it is private and there is no need to store it in the controller.
why not using a hardcode value for the flow id?
I think we should keep this for all cases.
this is not a part of the PR, but I think we should use the `WelchWindowFunction` here.
What is the point of this folder?
` rdmolops` is not imported here.
I think it would be better to use a pxz.wait() here instead of a big deal.
I think we should keep the old default here.
Can we remove `sortByColumn`?
This is a bug fix.
I think we should keep this as is and add a TODO to remove this in the future.
I think this should be `QueryVisitor`
Why is ` cv.child` needed here?
This is not right. You are using a 3.0.0, which is not the case.
I think this check is not needed anymore.
Why not ` Copyright (C) 2010-2021` ?
revert this change
Should we rename this to `primaryKeyring`?
This is not the best way to implement this. Why not just call the existing `policy`?
This change is not related to this PR, but is not related to this PR.
Please remove this line.
Is `false` the right thing here? Is `true` the right thing?
Is there a reason why we don't put `||` after `applyMode`?
I think this is not needed
I think we should do this in a followup. We should do it in a followup. We should do it in a followup.
I think it would be better to say "the value of a key with the specified name.</returns"
nit: remove empty line
I don't think this is right. `|| PrivateKey._getRandomBN();` is the right thing to do here.
I think this is a good idea, but I think it's better to do a `if (! empty())` check instead of a `if (! empty())` check.
The sentence "then all the fields that the containing message object does not have a fieldmask, then those fields will be serialized. "
I think this is a leftover from the original PR.
This is the fix.
I think we should remove this eventing import.
I think we should just remove the `operation string` here. We don't want to use the `operation` attribute in the `DynamoViewModel` package.
This is the default for `127.0.0.1`
This is the only change that affects TF providers. I think we should keep the old version and replace the new version with the new version.
I think we should default to `KBFS_ENABLE_JOURNAL` here.
This is a breaking change.
`end` at 307, 8 is not aligned with `if false` at 308, 6 is not aligned with `if false` at 308, 6 is not aligned with `if false` at 308, 6 is not aligned with `if false` at 308
I think this is not needed.
I think we should use `config.val.url.searchengines` instead of `config.val.url.searchengines` here.
This is a no-op, you can remove the whole function.
What about `limits` (like `limits`)? I think it would be more consistent with the name of the form. `limits` is more clear.
I think this is the wrong fix.
Please remove this file.
This file is no longer used in this file. The `std::chrono` header is removed from the `std::chrono` header.
These are not needed.
This is the only line needed in this file.
You can remove this.
Why is this sm.StateReader?
nit: this could be a single line string.
This is the fix. It was just a mistake, and I'm not sure why we needed the diff_res parameter.
This is not the same as the `1000` check.
I think this is a bit confusing. It seems like it would be better to check for `if span.IsRecording() == true` and then check for `off` in `StartSpan`.
I think we should remove this method and just call `isVersion()` in the `configuration` module.
please add a line back in
we should use `inf` for this
I think we should add a `/bzz-tag/addr/{addr}` to the `TagInfoUsingAddress` key.
rollbackTraffic is not used anymore.
I think this constant is not needed.
`h.clientPort` is not used in zkDynamicConfig, so can we remove it?
I think we can remove the `MessagePack` here and the associated `using MessagePack` declaration.
I think this is the wrong place for this.
Is this the right place for this? I'm not sure if it's the best place to put this.
Is this still needed? `_MissingPandasLikeIndex` is now unused.
Can we call this `subnets`?
Can we use a more specific region name? e.g. `use cn-northwest-1.Ch(use cn-northwest-1.):`
Is this supposed to be testing the correct test?
@agaspardcilia can you check if the `@activity` tag is present in the `code` view too? I think it would be better to do it in a `@param` and not have it here
This is a bit weird, why is this needed?
I think this is not necessary, the new one is already the default.
This is a change in behavior, but I think it's a good idea to change the behavior of the `repo` class to be consistent with the `BackupRepository` class.
This method is called `getDisabledMetricAttributes`, which is called only once.
This is a change in behavior, right?
I think we should close the `done` in `close` and not close it.
I think we should add a `rclone` field to `fs` so that we can get the config from `rclone` to `fs`.
I think you can remove the `clamp` here, since you are already passing `1e-12` in the clamp module.
I think this needs to be moved to the previous commit.
I think this is a good change. The new `subsurface` argument is a `dict` and the new `Tuple` is a `dict`
I think this is a leftover from an earlier version of the PR.
This is the only key of the tests that are actually passing in the `MakeTestUID` function. I think we should just pass the `tlfID` to `MakeCache` instead of passing it in.
I think this is not needed.
Why is this being removed?
why not just throw `Error` directly?
I think this should be a separate commit
`null` is a no-op, because the mock call to `isNull()` is the default, so the `isNull()` can be removed.
why is this changed?
I think it would be better to use the same interface for both `UUID` and `QUERY_ID` metrics.
Missing space after `,`
I think we should just make this public
We should probably have a test for this
Why are we hardcoding 7 here?
I think we should remove the `value` here.
I think it would be better to use the sort-order constant here, rather than the whole `setIgnoreCase` method.
I think this was the only place where we had this `initialState` before.
You can use `Teacher.joins(:video)` here.
What's the point of this change?
Should we use `tests.__init__.py` here?
Why are we changing this?
This is a bit weird, why not just use the `self.link` attribute?
I think you can remove the `error != nil` check.
We should probably have a better way to do this.
I think we can remove this test since it's now handled by the deprecation.
This is a bit of a hack, but I think it's better to make it a constant.
This is a change in behavior, but I think it's ok to change the assertion to be more explicit.
This is a bit of a hack, but I don't think it's necessary to check for the size here.
Why do we need this change? Is the sorting on the `W3CBridge` necessary?
This is a breaking change. It's not related to this PR, but I think it's better to split this into two different methods.
I think this is a leftover from debugging?
Shouldn't this be in a module?
Can you add a `use` statement here?
This is not needed.
I think it would be better to have a `Get` function that returns a `null` and then use that here.
I think this is a leftover from an earlier PR.
This is the only place where we call `GetAllPids()` is called. I think we should be checking for the return value here.
I think we should just pass the metadata here. The table itself is not the table itself.
I think this can be removed now?
why is this change needed?
Why not just make this `_notebook`?
Should we keep this as `const` since we have `db`?
This is a change in behavior, but I think it's worth making a new PR to change the name of the file, to make it clear that the file doesn't change.
Is this change intentional? It looks like it was just a mistake, and it looks like it was intentional.
I think this is the only change that affects TF codegen.
Can we make this a private method?
I think this is a leftover from the previous PR.
This is not needed.
Should we make this `WriteDeadline`?
This should be final.
Nit: please avoid extra backslashes in the diff
I think this is a wrong change. It should be updated to use the new name.
Can you add a `isinstance(ip6,Net6)` here?
I think you can returnPartly here
Why is this a list comprehension?
Why did you remove 430?
This is the offending line, I think it's safe to remove the Write() call since it's always called by the `Write()`.
This is a BC break.
I think we should be calling this `step_on` instead of `unpublished` since it's a `spec` action.
Shouldn't we also check for scoreMode?
I think this should be a constant
This is not correct. The `empty` function is called for a `null`.
I think this is a bit confusing. What about `binary.pop('binary')`?
@smarterclayton do we want to use `controller.NewClusterRegionGetter()` here?
This is a static method and it is not used anywhere. The only place it is is when the settings are used is used is where the settings are used.
I think this should be inside the if block, and then if websockets.check_handshake(request.headers) then handle it in the if block.
Do we need to make this take the array?
I think this file could be named `.{alias, alias('model')`.
`GetMetricPointsAccessor` is unused. Can we remove it?
Please remove this.
I think it would be better to use `nethttp "net/http"` here.
I think we should force the checkpoint if we want to reflect the new content.
Can you change this to `v2`?
This test doesn't work with Jetsonian. You can test that the phone number of email is different from the other test suite.
I think this is a leftover from debugging purpose.
This is not needed.
Why was this changed?
`runtime_type` is a list of dagster types, so we should use `getattr(DataFrame)`
I would rather see the `_get_isSelectionAnchoredAtStart` method, and have the `selection` argument take the selection as argument.
This should be go with the other standard library imports.
@dvoytenko: This is the default for "privacyMode" (which is the default for "privacyMode"), right?
why change this?
I think we can remove these now that we have the `System.Monoog.Trace` namespace.
I think we should use the package-level package here.
I think we should have a better name for this. We can probably have a better name for this. `predicate 200` sounds like it's a very common term.
Plz add a blank line between tags and summary for better readability
std::uint64_t is a typo.
why remove this?
I think we should not be using the `Simple` module here. We should not be using it in the `__init__.py` files.
I think this is a leftover from debugging purposes?
Why not just `stdbool.h`?
Why not just searchScope?
I think we should remove this line.
Why is this change needed?
why is this public?
I think this is a good candidate for a better way to test the exact exact exact exact exact, not the exact exact exact.
This is not the right place to import the shredzone.flattr4j.model.User.
I think this should be `.String()` instead of `.Bool()`
This is the only change that affects TF codegen.
I think this is not needed.
I think it would be good to have a transport transport parameter in transport_value_dup_object. But I'm not sure if that's a good idea.
I think this should be `ctx.Status.ChaosStatus.Experiment.Phase`
This is not needed.
This is the fix.
This should be in the `cleanup` package.
What does this mean? When arg is used, it is arg is a string, which is not a string, so it is a string, not a string.
I think this should be `LoadGroupMembersPipeline`
I think we should name the principal_group_member.server=?
I think it would be better to make this method private and call the `JsonRpcSuccessResponse` method in the `GameSource` class. That way you can get the `GameSource` instance from there and then call `getSenderNonce` on the `GameSource` class.
This is a very minor change, but I think we should keep the old logic.
This method is only used in the tests, so I think it's better to remove it.
I think we should be consistent in the version
nit: this is a bit odd, maybe a method like `return flatteningGroup.getFlattenedFieldConfigs()`.
nit: you can use `Optional.of(() -> getType().get()`
This is the only place where we need to catch the `Uninitialized` exception.
This method is only used in the tests, so I think it's better to remove it.
Is this correct? TRUE is not used anywhere.
Why do we need to use the task API here?
I think we should use ConfigFor(interface{}) instead of ConfigFor(interface{})
I think we should just remove this and use the `JSON` module.
I think this should be ` IMvxMainThreadAsyncDispatcher`
Why was this removed?
I think this is causing the CI failure. We should be using the new `Customize` package instead of the new `Customize` package.
Why is this change needed?
Why is this change needed?
Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this should be a `_shared`?
I think we should still assert the exact exact exact exact exact, right?
I think this is a leftover from the original PR.
Let's rename this to `revision` to be consistent with `KratosMultiphysics/technical-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting-setting
Is there a reason why we can't just use `ixin`?
what is the weight_?
I think this is a wrong place for this.
I think we should make this a bit more explicit: "implies to the user in the Puppet user in the Puppet master --configprint user"
I think we can import `upload` here, since we don't use it in the code base.
Why not use `wx.Dialog` directly?
Should we also check for trace_flags here?
This is a bit of a hack, but I think it's better to move it to a new method.
I think this should be `AuthFreeAuth`
this is not right. if an error is returned, it will be thrown
I think this class should be removed from the interface, since we don't use it in the interface.
I think you can remove params from here
Nit: please remove the extra space after `ovs`
you should use `is_html_is_category()`
I'm not sure this is the right default. It should be nullable.
Why do we need this interface?
Why is this removed?
I think you can remove the property entirely.
I think this should be `axis=None`
this is a bit weird, why not just use the same name?
This is the only change that affects the change. We should update the log message.
This is a bit weird, why not just call `RootSpan`?
I think we should keep the old name and use the new name.
This is not needed.
I think this should be `250` instead of `Math.maxAttempts < 2`
shouldn't this be catching a new exception?
I think this is a little too much for a sake of consistency. We could check if s is nil before calling `mu.Lock()`
I think this is the wrong place for this. The `Ember` is used for the `User` and `User` is used for the `Ember` in the `User` package.
I think this is the fix.
I think this is the wrong place for this.
This is a bug fix.
I think this is not correct. It will free the bytes by adding the reported free bytes after the `tracker`.
There is a `std::lock_guard` method in the `if` statement. It's not clear to me why we need to lock the result.
This should be a different PR
I think this test should be in the `config` package.
It looks like this file is no longer used?
can we remove this?
I think you can just do `mrb_utils.t *token = h2o_token_t * 2; ++i)`
I think we can also do `no_docstring_rgx.pattern and re.match(no_docstring_rgx, node.name)`
Do we need to change this part?
Can we use `describe` here?
Should we log the checkpoint path here?
Why not use the `Config::get` function here?
I think we should be careful with this change. The original code was to use `charAt` instead of `charAt` which is the case for the peer was not found.
Can we set this in the test as well? We have a similar test in `setCurrentMillisOffset`
I'm not sure if we should remove this `if` block. The `if` condition is now handled by the `if ( ! footerText ) {`
I think this is a leftover from debugging I think.
could you please explain why this change is needed?
why do we need this?
This is not a valid name, it's not a valid name. It's a private method. It's not a big deal, but it's a little confusing.
"drive-use-created-date" sounds a bit too generic. How about "should we add a new flag for the env var?
I think this should be called `1e-15`
Not sure why we need to change the `MasterIndex` here?
I think this is a leftover from debugging...
Space inside { missing.<br>Space inside } missing.
`count` is not used in this loop, please remove it.
I think this is a bit confusing. What if `mongoid` is defined and `mongoid` is defined? I think it would be better to do `if defined?(Mongo::QueryCache)` here and then do `if defined?(Mongo::QueryCache)` in the `if` statement.
I think we need to add this to the `type: true` above, as we do for the index above
This line is not needed.
I think this is the right fix.
This is not needed.
I think this is not needed
is this a typo?
This is the only change that affects TF providers. I think we should be using the `dels` here.
Can you add a TODO to remove this?
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think we should keep this info in info level.
Why not use the `LogEventLevel.cs` helper?
I think this should be `math/rand`
This is not right. We use Shopsys\Environment\Environment instead.
I think this is not correct. The `pendingRequest.configuration.remoteHost` is already initialized in `pendingRequest.configuration.remoteHost`, so it should be removed.
Why is this not needed anymore?
This is a breaking change.
I think this is not needed, we can remove the `this` variable from the `requestFocus` method.
Shouldn't this be `if proposal.ProviderID`?
You can use `str(exc_info.value)`.
I think we should not do this. We only want to do this for postageTop in the postage, right?
This is a internal function, so it should be removed.
@mfojtik why is this change required?
why is this change needed?
I think we can remove the `memory` here.
Do we need this?
These changes are not necessary.
The `null: false` default is `false`
@rhymes this is the only thing I'm asking about. I'm not sure if I should have a PR that does this.
I don't think this class is needed.
shouldn't this be nullable instead of null ?
I think we should be using `_` instead of `t` here.
Should we add refresh_token param here?
It's not clear to me why we need to clean up it here.
This is not needed.
Please add a note that Dataverse is not used anymore.
should we make this a class constant?
This is a bit of a hack, but I think it's better to make the code more readable.
I think we should keep this var at the top of the file.
The `// +build !cgo` is redundant here.
This test is not really testing what we want. I think we should raise an error here, and raise an error if the error is not present.
`sfun` -> `sfun`
What's the reason for this change?
I think this is not needed, right?
@matt-gardner How about `binary>"`?
This package is already package-private, so we can remove it.
should we also add `project_name` to the DB?
I think this is the only change that will be needed in the future, right?
I think this is a bit confusing. What if we made a `null` ExternalTool that will be used in the ExternalTool?
Why is this needed? I don't see `LocalPrefs` defined anywhere.
This will fail on older versions of the tests. We should be looking for a lot of tests.
HIP_PLATFORM clang is the HIP_PLATFORM clang.
This is a bit confusing. Why do we need to filter the object if it's a string?
Is this used?
This is a bit of a nitpick, but I think it would be better to have a method on the `chainId` that returns the `GoQuorum` object.
I think we should move this line to `PipedSpec`
This is a bit confusing, I would have expected a bit more to say that if we have a `s3.s3_` in the `ACL` model, then we wouldn't have to do this.
`If functions returns false, the request is collected.`
This is a bit of a hack, but I think it's better to move it to the `Spec` package.
I think this is a leftover from debugging I think.
I think it would be better to pass the catalog name as an argument to `catalogName`.
I think we should be using the `VersionAsString` field instead of the string here.
Isn't it better to check for `SSL_peek`?
Please revert this file.
I think we should just return `Transaction` here, since it's a `Transaction` function.
Shouldn't this be a `const`?
So the problem is that the 15 seconds is not in the middle of the data?
Would it be possible to use `RejectRequest` here instead of `DecodingException`?
`web0s` is not necessary here, it is not necessary.
I think you need to return `dstCtx` here, otherwise you will get the returned value from the caller.
I think we should just remove this array.
I'm not sure this is the right place for this. The debug output should be used for the debug output.
I think we should use `on_resource_changed` here, because `listener` is already called in `setUp()` and `setUp()` in `setUp()`
I think this is not the right place to put this method. The `@team_page?` logic is for `page?` and `@team_page.present?` should be fine.
I think this logic should be moved to `getDecryptingCipher`
why do we need to do this? shouldn't `take_snapshot` be a `nil` method? shouldn't it be a `nil` method?
I think this is not needed, the setuptools is already set by the `packages` above
`myConnectionManager` is not used anywhere else.
in which case this will be `None`?
This is a bit confusing to me. If we have `Unwrap()` return an empty `Big()` method, we should have `Unwrap()` return an empty `Big()` method.
This is the only change that affects TF providers.
no need to change this.
You can remove this `if` as it is already included in the Constants.
I think we should be asserting something about the homepage.
I think this is the only place where we should be setting a `Task` value.
I think this is a leftover from the previous PR.
This is the only place where we want to call `JOB_ID` from the job job.
I think this should be in a different PR
This property is not used anywhere.
`fullSynchronization` is not set in the `is_fullSynchronization` function, so it should be set to `true` here.
Nit: I think this is a leftover from debugging purposes.
I think we should be using a container controller for this. We should be using a container controller for this.
We usually do not use wildcard imports. Please use wildcard imports.
This is not needed.
I think this is a leftover from debugging?
This line is not needed.
I think this should be `<%= carts_path %>`.
I think this was the only way I could see this was used.
why not just use `^on(Ani|Tra)/.test(key))`?
I think this is the wrong place for this.
Import order is not recommended. Could you please use `org.apache.lucene.index.Terms` instead?
This is a leftover from the original PR.
Why is this being changed?
This is not a good change. The only place where `MetadataTableUtils` is used is `createMetadataTableInstance`. I think it should be `final`.
I think this pylint is not needed.
the `delegate` is not needed here
Please use `isNullability` instead.
Isn't the bundle a `bundle`?
This should be a `ConcurrentHashMap`
This is not the right way to do this. The `isTrace` in the `EmptyIntSet` method is not actually being used. The `EmptyIntSet` method is called on the `EmptyIntSet` method. I think it should be removed.
What if we added a new function for this new one? I think it would be better to have a new one in the `getReturnType` method, and have a new one in the `getReturnType` method that returns a `null` value.
I think this method should be private. We should not have a `@FunctionalInterface` annotation for this.
I think we should keep the `GONE` variable and remove the `should` variable.
@jridgewell I think this is the right place to put this TODO.
This should be a separate commit
I think this is not needed anymore, since we are using the `rvm` field directly.
I think this should be `p[:2]`, `p[:2]`, and `p[:2]`, and `p[:2]` should be `len(pay)`
Why do we need to use the `receiveIsAdBlockerActive` function here?
This is a no-op, right?
This test should be removed.
I think `These should be `@Nullable` (or `@Nullable`). Also, `Long BASEFEE` is not really a valid `boolean`.
Let's use a different name for this.
The `CLOCK_REALTIME` is a `Config` so we can use the `Config` here.
I think this should be `||` instead of `||` since the `||` check is redundant.
I'm not sure if this is the right fix. The `if` should be removed.
How about using `fromsupported import slices` here?
Is this the right way to do this? I'm not sure if we should just call this `Uri` or `Uri`.
I'm not sure if this is the right place for this. The `c->resp.data` should be used to set the `log.warn` key to the `log.warn` key.
I think this should be done in the `app init creates an copilot directory`.
I think we should keep this here, because we don't need to repeat the source types anymore.
I think this should be `SabreEvent`
This function is only used in `lib/common.go` so can we just remove it?
I think this should be `if (accountID( clientID );`
The name of this test case is very confusing. How about `_testinfra_me`?
Why not just use CharInfo::UnknownCharSet here?
I think we should use a more meaningful name here
I think this should be `User.where(client_slug: client).where('?)', observations.user_id')`
I think this is a leftover from the previous version, so it's not a problem.
I think we should change the name of the bundle to `cdn`
Why is this removed?
This is not correct. The `getAtomicNum()` function is called for each `common_properties::_MolFileRLabel` which is not used anywhere.
Why is this not needed anymore?
PerGas is a very generic name, can we call it `FeePerGas`?
I think it would be better to use `pkg.util.GetDev("Warning: the provided docroot at {}, docrootRelPath)` instead of `pkg.util.Dev("Warning: the provided docroot at {}, docrootRelPath)`.
Why is this being removed?
I think we should just remove this field from the `SpecCSIMountOptions` and use it in the `mount_options` extension.
@jona-sassenhagen this is where the build fails.
I think we should call it reload_scripts and reload_scripts here.
I think this should be public ?
Please remove this file.
Please use relative imports.
nit: you can remove this line
I think you can remove this file, it's not used anywhere.
This is a change in behavior, but I think it's better to move the declaration of the function to the constructor. The only reason we need to keep the original constructor around is to make the constructor parameter static.
Why not use `fromParquetPrimitive(field.type(), column.genericGetMax())`?
Is this change necessary?
It's not clear to me why this is needed. Are you sure it's needed at all? Are you sure that `hierarchical_name` is always specified?
I think this should be `<kubernetes>`
This is a breaking change. It should be in a separate PR.
I don't think we need to set the null here.
Is there a reason for moving this check to `createFilest`?
This should be `glog.Error`.
This test is not really testing what we want. I think we should raise an error here, and raise an error if the error is not present.
why not just `startTime := time.Since(startTime) == 0`?
please remove the extra empty lines
Why was this removed?
Redundant `self` detected.
I think we should be using the same pattern for protocol ID. The protocol ID is used for the protocol ID.
Can we use a more specific variable name?
I think this test should be moved to the `else` block above.
Why do we need to specify a name here? I don't see any `json:"xattrname"` attribute in the `ServiceClient` namespace.
I think this should be `assert(0)` and not `assert(0)`
I think we should use the standard `accountutil` package here
Please remove this.
I think we should be able to skip the `/manage` page here, as we're in the `app/controllers/dev_messages.rb` file.
This is the only place where we pass the `authenticated` argument. I think we should pass the `authenticated` argument to `getNonceMap` instead.
`clientconfig` is not a required parameter, it can be removed.
I think this is a bit confusing. I think we should just have a `admins` as a parameter.
Can you please add a space after `(` and before `= null)`?
Can we add a log statement here?
What about the other `type` keys?
I think this should be a `static`.
I think this can be removed now.
feval is a list of strings, so you don't need to check if it's a float
This is a breaking change. It's not a public API, and it's a breaking change.
Why is this needed?
I think this should be `result.cdsObjectToUpnpavObject()`
Is this a change in behavior that we need to make the name change to reflect the change in behavior?
Why is this >= 0 check needed?
You can use `current_user.subscription` here.
I think this should be `if (!preg_quote($preg_quote($var_id, '/'))`
I think this is not the right place for this, but it is better to use the `HTML` class from `javaparser` class.
Remove empty line.
do we need this assert?
Is this used?
This looks like a wrong indentation.
I think we should use `go-selinux` here.
I'd rather not add these to the `parse_project` function.
Can we make this `enable.quartz`?
This is a bit of a hack, but I'm not sure how to test this. I think it's worth to check if the error is supported in the caller.
should we make this a constant?
We should probably just return `d` here, and then just do `if (d != null)` here.
I think this is not the right way to do this. The default is to allow the port Port to be nil if the port Port is not defined.
This is not needed.
can you make the `if` condition unchanged?
The `GetTipSet` is a `boolean` so it should be removed.
I think this is a leftover?
why not use the same name as the variable name? `conf`
If we're going to error out, why not just return here?
This is not a very good name. It should be `PartitionFlagBiosGrubLegacy PartitionFlag`.
This is a change in behavior, right?
I think this is not the right place for this. We should just always set the default property.
Do we need to use `event.Content`?
Please remove the "BibEdit" part.
Why do you change the default value?
I think we should test for the integer values and not the integer values.
I think this is a leftover from an earlier PR.
I think it would be better to keep this private and just call it `private`.
This is a bug fix.
The `TTransportException` is not needed here.
Why not use the method `getRequestStreaming()`?
I think we should be able to get rid of this line and just do `from IntegrityError import IntegrityError` in the next line.
Why is the `recursive_mutex` needed here?
If we're not using theissuerName, we should probably also remove the explicit entry from the config.
Nit: please avoid star imports.
`writeAttribute(xmlw,"source","DVN");` ?
I think this is a bit of a hack, but I think it's better to move the call to `CompareCommits` to the call site, and then call `CompareCommits` on the call site.
I think this is the only place where we want to do this.
Shouldn't these constants be in the `method`?
This is a public API, so I would just make it `private`.
I think this is the only change that will add the image.
Please remove the field.
I'm not sure this is the right fix. The test is still testing the `setUp` method.
`++i` is the same as `getInventoryItem`
I think this should be `AppendHistoryNodes(req)` instead of `AppendHistoryNodes(req)`
Should we log the `SPIFFEID` here?
The `vpnServer` should be a `common.Map`, right?
I think this should be done in `Base/base/mocha.reporter.js`.
Why are you adding this? It is not used anywhere.
I think this is not needed, we can't remove the `this->pet` check
Why is this needed?
I think this is the only line changed.
This interface is not used anywhere.
Why not just `WordSourcesReportDataDefaults`?
remove empty line
`undefined` is not needed here.
Is this used anywhere?
I think this is the wrong place for this
I think we should move this logic to `account.go` so that we don't have to do it in the future.
This is the fix. We should not be returning anything from the previous version of the function. This is because the previous version of the function returns a value that is not the same as the default value.
if block ends with a return statement, so drop this `if`
This is a bit of a hack, but I think it's worth noting that this is a bit of a mess.
I think it's better to use a message as a timeout here.
this is the only change in this file.
I think we should remove this from the `PlanNode` package.
bootstrap is not used anymore.
why did you change this? It's not a public API, but it's a public API, so it's not a public API, and it's a public API.
closed is a lot of collision in the past, so I think it's better to use the closed argument here.
I think you can remove this and just do `com.google.common.collect. eliminates.SessionId`
Why not use `String.format`?
This function is not needed. CartDecorator will be deprecated in the next PR.
Why is this being changed?
This is the only change that affects TF providers. I think we should be using the `ws` here.
Why not use `estest`?
How about we make it a pointer?
`g_min_count` is a string, so you don't need to use `g_min_count` here.
Remove extra newline here.
I think this is a bit of a hack, but I think it would be better to make this `(A-Za-z_][A-Za-z_.0-9]*)*\\\\)` instead of `(A-Za-z_.0-9]*)*\\\\)`
I'm not sure if this is the right change. It should be in a separate PR.
Should we be using `application/json` here?
This is the wrong place for this test. The `Task.TimeoutAfter` is the `Task` that is used for the `TimeoutAfter` method.
You can use `!= NULL` here.
This is a bit weird, why not use a `string`?
why not `load_time`?
Why not just `music`?
I think this should be `writeObject.session` instead of `writeObject.session`
>defaultTime [](start = 16, length = 6) Is this going to be more efficient? how about just `return any value of the value of the `* 60`?
I think you can do `mLineEdit.setFixedWidth ( 10*fm.horizontalAdvance (QStringLiteral("a")` instead of `mLineEdit.setFixedWidth( 10*fm.horizontalAdvance (QStringLiteral("a")`
@bparees this was the bug I was looking for. I had to change it to `boltdir_type: :cd9` but I don't see it in the PR.
I think we should use the `ruby` constant here.
why not just use prec for (0.0) ?
I think this sleep might be too short for slow Travis CI runs?
I don't think you need to swap this file.
I think we should just make the `#ifdef` statement `/* sigpending_t has xstate inside the `if` statement.
@danrot what do you think about using `contains $_` instead of `contains $_`?
Is this the same behavior as the one in the `_get_value` method?
This is a breaking change. It's not a public API, and it's a breaking change.
This is not needed anymore
Why not just check the credentials in the AWS?
We should probably have a `types.Basic` here, since we're not using it anywhere else.
We don't need this, it's already in the `@private`
This is a bit confusing to me. If we're going to have a `copy` method that does the same thing, then we can just copy the `.d` into the `.d` method.
I think this is a bug fix.
I think this should be moved to `getComparator` method. It's not a public API, but it's not a public API.
I think we should keep the original behavior for table.properties and add a new one for table.properties.
Shouldn't this be `opt_long`?
I think we should use the `cloudformation-api` constant here.
What if we make this a different type of thing?
Just curious, why do we include the context here?
`containsKey` is not used in `equals()`, so can remove it.
I think this is a bit confusing. A valuable node is a `data-` in the name.
I think this is a BC break
I think it would be better to just pass the `ServiceName` as a parameter to `ServiceId` and then pass it as a parameter to `ServiceId`
I think this is the wrong place for this.
I think we should be able to remove the `returns` block altogether. We should also think about how we handle the case where the `b Block` is not `None` and the `hasPrefetched bool` is `false`.
This is a breaking change. If we add a kwarg to the `Masks` list, we should add a TODO to remove this.
I think this is causing the test failure on Linux
I think we should make this a bit more explicit. What about something like `schemaValidator.VALIDATOR(id, "id")`? I think that would be more appropriate.
I think we should add a description of the properties that is used for the file-cost properties.
This is a bit confusing to read. Can you explain?
I think this is the only change that will break existing code.
`data["server_conn"]["source_address"]` is a better name.
Shouldn't we throw an exception if the commit is logged?
This is a breaking change. It's not a public API.
I think this should be `ErrCodeBucketNotFound = "NotFound"` and not `ErrCodeBucketNotFound`.
can you test the win/osx/host?
remove this file?
I think this is a leftover from the original PR, but I don't think it's a good idea to change it.
I think we should remove `ConcurrentNonces` from the `ConcurrentModificationException` since it's not being used anywhere else.
why is this needed?
Should we add a `Error` field to `makeError`?
I think we should also test for the `db` url.
I think this is a bit of a hack, but I think it's better to move the `if err == nil` check to the `if err != nil` check above.
I think this is not needed.
I think this is not the right place for this. The `+` is used for the `remote` method.
Let's not change this.
I think this test should be removed.
I think this is a leftover from debugging...
Can we get rid of this check too?
You can use `if (entryNumber == 0)`
`Name` is not needed here, `err` is already `Name`.
I think we should use `self._conn.request(method, parsed_url.path, body, headers)` instead of the actual exception.
Why not `loadClassCache`?
COMMAND -> TGA
Please remove the `import org.junit.Test;` import.
I think this should be `scanner_index_id` instead of `scanner_index_id`
I think we should remove this. It's not used in the test, but we should be able to remove it in the test. Also, I think we should remove the `beforeClickOn` call in the test.
should we use `<%_` here?
I think we can remove the `List` here since it is public API. We can't use `JenkinsRule` in the `JenkinsRule` implementation.
this is not needed, you can remove it
Does this need to be here?
Why is this a `null: false`?
If we're going to wait for the transitioning to done, then we should wait for the transitioning to be done.
Line is too long. [84/80]
I think this should be `arg` instead of `struct` as it is used in many places. Also, `arg` is a bit confusing.
I think this is not a good idea. It's not a pre-init, but it's not a pre-init.
these lines are not needed
Is this line dead code?
I think this is the only place where we use `std::move_`
This is not the right way to fix the `rm` variable.
Returns a parameter set
we could try to avoid import errors in the future
Shouldn't this be `volatile`?
I think this should be `ForceTraceWriteLine` and not `ForceTraceWriteLine`.
I don't see where this is set.
I think we should rename this to `pipeline_definition_sensor` to make it clear that this is the one we're using.
Is this still needed?
Can you add a TODO here to remove this?
I think we should use `logloss` here
I think this is not correct. `--network-host-project-id` is not the correct name.
I think this is the wrong place for this.
This is a breaking change. The virtual virtual value should be cached.
You don't need to return `map[string]int, error` here, since you are already passing it in.
I think this should be moved to `log.go`?
I think this is a leftover from debugging purposes?
This is a breaking change.
This is a bit confusing, as this is a very specific patch, and it seems to be a bit confusing. I'm not sure if this is the right place to put this code. I'm not sure if this is the right place to do this, but it seems like it should be a different issue.
This is a bit weird, why is this needed?
Why do you change the default value?
This is a change in behavior, but I think it's safe to change.
Should this be `include?` instead of `include?`?
I think this is not correct. The `d.s.Type()` function is already called in `GetValue()` so we should probably return an error.
Should we add the description of the `workshop` description?
Please add a `git blame` prefix to the `asd` field.
I think this is wrong, since we are setting `DD_INTEGRATIONS` to `true` in the `if` statement.
This is a bit confusing, as `path` is a `path` of the path.
seconds -> o.to_f
Array => Array.
`MUST` is not used in this class, can we remove it?
I think `telemetryConfig.Enable` is a little too generic, can you use `if telemetryConfig.Enable`?
I think it would be better if we could check for the value of `if self.headers` here, and then check for the value of `None` in the `if self.headers` below.
Is this required for the test? I don't see any tests using it.
I think this should be `IBL_UNLINKED`.
This isn't a boolean.
why is this needed?
Shouldn't this be `auth#oauth_callback`?
I'm not sure if this is the right fix.
Why is this line removed?
I think we should make this a constant.
I think we should use the same name for both `Microsoft.Design` and `Microsoft.X`.
`#include <rtps/transport/UDPv4Transport.h>`.
Shouldn't this be a `_session`?
I think this is the only change that affects the final final removal of the hash.
why this change?
I think we should use `userInjectedExpandableRowHeaderColDef` here instead of `userInjectedExpandableRowHeaderColDef`.
This is the fix. The problem is that if you have a directory in the cached message, you get a cached message, and the directory in the cached message, it will be wrong.
We should add a prohibitedAttrs: ['aria-label', 'aria-labelledby']
Why not just return ErrInsufficientFunds if it is not set?
This is a very minor change, but I think we should be consistent and use the same name for the `SparkTable` class.
I think this is the right fix. The `.tap` is the right fix.
I think this should be encrypted, not just bundle.getString(AuthenticatorService.KEY_INSTANCE_URL)
I think we should have a `ClassHeaderFunctions forCmsSignature` that can be used for the `ClassHeaderFunctions` and `ClassHeaderFunctions forCmsSignature`
`Tags` is now unused, and can be removed.
I would call it `get_extents_type` to be consistent with other methods
I think this is a leftover?
Should be a single line string.
I think this is a good candidate for a better way to do this.
I think this is the wrong place for this
I think we should just remove this and just use the `HeaderMaps` field from the response.
@mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner
I think this should be `#if // HAVE_CONFIG_Hrm#if // HAVE_CONFIG_Hrm#endif // HAVE_CONFIG_Hrm#endif // HAVE_CONFIG_Hrm#endif // HAVE_CONFIG_Hrm#endif // HAVE_CONFIG_Hrm#endif // HAVE_CONFIG_Hrm#endif // HAVE_CONFIG_Hrm#endif // HAVE_CONFIG_Hrm#endif // HAVE_CONFIG_Hrm#endif // HAVE_CONFIG_Hrm#
Should this be a `Set<T>`?
This is not a part of the fix, but it's not really related to the PR.
why not `requireigo`?
I think we should use `urlstr.lstrip()` instead of `urlstr.lstrip()`
nit: you can remove the `a.required` here.
Style/StringLiterals: Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
@mfojtik why did you change this?
Unused import. Revert changes
It seems to me that the `lockBeforeLock` is always `nil`, so it should be safe to remove it?
I think we can move this import to the top of the file, since we are using `JavaParserConstants` directly.
we need to add Guid here as well
I think we can remove this line. We're already deleting theCollect() call in the next frame.
This should be `.topic`
I think this should be `if (!PlatformDetector.SupportsSharableMutex)`.
I think this is not needed, the original code is already doing the same thing.
Should we be doing this in a way that we expect to be able to override?
I think this `spec.execCommand` can be removed. `spec.execCommand` is not used anywhere else.
This is a bit confusing, as we are already using the `List<...>` tag in the language, why not just use `List<...>`?
This is not a valid key, so it should be `public const string` instead of `public const`
I think this should be getters.getAliasProp
Why is this needed?
You can use `is_empty` here.
It seems like we should update the `if` condition here. We should also update the `if` condition in the `if` condition.
This is the only change that affects TF providers.
Can we add a `!=` to the `/chunk/{address`?
Is it possible to avoid calling `Component.Create()` on both `Component` and `Component.Create()`?
Need to use `mini_approval` here as well.
This check is not needed.
Let's move this to `const CONNECTION_EVENTS = ['error', 'destroyed';`
Nit: remove extra line
why change this? `Id` is a string.
I think this should return an error, and then the caller can see the caller can see it.
No need to throw exception, just add a `NoRegionError` field to the endpoint.
I think we can delete this whole class now that we have it in the base class
partitionField is already a list of fields.
what is this modification for?
I think we can use `padding.add` here.
We should not need this error message, `MongoError = require('../error').MongoError;`
I think this should be `.String()`
Same here, use std::cerr << instead of std::cerr <<.
terms term ID to the params after the dot, or the final dot?
Could you please add a `replaceResultInFormWithNew: true`?
Missing space after comma.
I think this import is unused now
Why `project_number` is optional here?
I think we should move this to `defer deadlineTimer`
This change is not related to this PR, but I'm not sure why it was changed.
This is not needed. The `WLR_DEBUG` will be used by the `get_type_base_log_errno` function.
I'm not sure if this is the right fix. The listener should be able to be able to be able to remove the listener.
I think this is the only place where we want to do this.
This is a bit of a hack, but I think it's better to move the `PONY_API` call into the `PONY_API` function.
This seems like it should be "volume is attached". The only caller of this function is using it is `op.toNew` which is not the same as `op.toNew` (which is the same as `op.toNew`).
Why not just make this `public bool`.
This is a temporary workaround for the dev/build extension.
Should we do this in a `after_save` callback? I think we don't need to do this.
I think this is a bug fix.
This is the fix.
Why not just `Maxbox`?
I think this should be done in the `else` block as well.
Why is this change necessary?
Why do we need this?
I think this is the wrong way to test this. The `is.undefined` check is redundant.
Can you add a TODO to remove the `gocloud.dev` import?
I'm not sure if this is the right test.
You can use `UTF8` instead of `UTF8` here.
I think this is a leftover from debugging I guess?
I don't think this boolean is necessary. The `IsMemoryCircuitBreakerEnabled` is only used in `MethodHandles.lookup()`, so it should be removed.
We don't need to have `team` in the DB, as it's a `team` field.
This should be called `updateParams(string)`
Same here, let's keep the original rule.
You can use `string.Empty()` here.
This is the only place where the `mpi.h` header is used.
This should be a `JSON_Notebook` since it's not a `JSON_Notebook`?
This is the only place where we need to do this.
I think this is a good candidate for a test case.
I think this is a leftover from debugging purposes?
This is a change in behaviour. We should probably remove the line break.
This is the only place where we need to keep the `RetryTaskFailure` since it is used in the `TaskV2` package.
Please revert this import.
This is a bit confusing, as it's a list of args, but the list of args is a list of strings.
This should be `string`
This is not a good change, but it seems like we should be able to remove the `_cancellationToken` parameter from the `List` constructor.
I think this is not the correct fix. The previous cron job is already locked when the lock file is already locked.
@dvoytenko is this not needed anymore?
Please use `continue` instead of `continue`.
`go.opentelemetry.io/api/core` is a better name.
This is a breaking change. The `yaml` version is already in the `instance_network_interface_rules.yaml` extension, so it's not necessary to change the `instance_network_interface_name` extension.
What if we added a new column for this, for example?
Note that `index` is never used, so I removed it.
I think this should be done in a different PR, but I think it's better to move it to a separate PR.
Why not just remove the deploy file?
This is a bit of a hack, but I think it's better to move this to the `setup.py` file.
Is this used?
Why the change?
This change is not related to this PR, but I think it should be reverted.
What's the purpose of `Bool`?
Can you add this to the `install-plugins.js` file?
I think we should default to 100, as we don't want to default to 1.
I think we should be using `return errors.Wrap(err, "controller")` here and in other places where we call `return sc.Controllers` in the function.
I think this is a bit confusing, if we have a `nullptr` value, then we should just have a `nullptr` value.
The `n` in this file is a bit confusing, as it is used in `removeTab` and `removeTab` to be consistent with the `try` statement.
Why not just add the return value?
This is a bit of a hack, but I think it's better to just remove the `def path_for` call.
I think this is the wrong place for this.
This is a breaking change. I think it's better to use a property that is passed in as a property of the `Dictionary` object.
@cramforce is this a bug fix?
I think this should be `this.deletes = deletes.new DeleteFile[0];`?
This is a bit of a hack, but I think it's better to move it to a separate method.
@bparees this was the bug that caused the check for `StartupScript != ""` to be set to `false` in the script checking checking function.
can you please add brackets to this else clause?
@jackfrancis can you check if the response handler is the same as the `logger.error`?
I think this should be called `t_args_struct`.
I think this can be removed now
`StatusForbidden` is not a good name for this, it is better to check `isStatusAccepted`
The rankstr is not a rankstr.
I think we should initialize the cgroup from the client, not initialize it.
Do we need to do this? It seems like it would be a good idea to do this.
I think we should use `cancel` instead of `cancel` here.
`@phpstan-param array<string, string, mixed>` would be better.
I think this is a bit confusing, as the `in` clause is not needed.
I think this should be `tags` instead of `tags`
What is the purpose of this pair? It seems to be the default in the pair, not the pair?
I think we should set this to `config.ReadonlyPaths = []string{`
This is a change in behavior, but I think it's better to be explicit about the `CXX_DEBUG_ASSERT` that we're using for the `*` operator.
I think this is not needed.
You can use `mount_config` here instead of `mount_config` in the other places.
This is not a `sequenceNumber` but a `@VisibleForTesting` so I think it's better to remove it.
Should this raise an error if the user doesn't specify it?
Can we keep these as `aws-global`?
I think this should be `querystring=None` and not `querystring=None`?
I think we can remove this TODO.
Why is this needed?
I think we should be able to remove this one.
I think this should be `Ion`
Can we rename this to `FlattenedMethodAsyncCallSettings`?
I think we should use `secrets` here
Why not just remove the todo? We don't have to do that in the code.
I think this is a bug fix. It should be in the `BlockCount`.
I think we should use `aio.flask.flask.from cardinality` here.
Is this a change in behavior that we want to support?
I think we should use `s.idx.BuildIndex(BuildIndex, idx.BuildIndex(BuildIndex))`
Nit: `FormatString` is not needed here.
I think this should be changed to spec.
Why is this change necessary?
This is the only change that affects TF providers. I think we should keep the old name here.
This is not a part of the PR.
Why do we need this? It's only used in one place and it's only used in one place.
imports must be alphabetized
Why is this needed?
This is a bit weird, why are we passing a set at once? I'm not sure what the best way to handle is, but if we're going to do a set at once, then I'd like to ask if we're going to do a set at once, or if it's a set at once, then we should just remove it.
In general, we should use `dataframe.count` here.
You can use `this.servers.size` here, as this is the default.
What if the user doesn't have a `scale_factor`?
This is a bit confusing, I think it's better to move this code to the `Update` class.
I think this should be a `flag.BoolVar(&fDiskCertCache, "use-disk-cert-cache", false, "cache cert on disk")`
`st` is a bit ambiguous, can't we use `stats` here?
You should use `or "tail: unrecognized file system type 0x794c7630" in raw_message`.
@deads2k i'm not sure this is the right place to put this change. I think it is better to change the name of the variable to `kubernetes.io/cluster/fake-infraid`
so we don't need to return anything here?
This is the only place where we want to do this.
You can just use `kill` here.
I think this should be `CreateSharedString`
Why is this change needed?
notice is not a part of the console
Can we make this `Metric<Metric>`?
This is not a valid locale.
The enumsspb.WORKFLOW_BACKOFF_TYPE_CRON_SCHEDULE and enumsspb.WORKFLOW_BACKOFF_WORKFLOW_WORKFLOW_BACKOFF_TO_INITIATOR_WORKFLOW_TO_INITIATOR_TO_INITIATOR_TO_INITIATOR_TO_INITIATOR_TO_INITIATOR_TO_INITIATOR_TO_INITIATOR_TO_INITIATOR_TO_INITIATOR_TO_INITIATOR_TO_INITIATOR_TO_INITIATOR_TO_INITIATOR_TO
`browser.tizen` should be `true`
I think we should add a `config` key to the `errerr` so that it can be used in the future if we want to.
This is not related to this PR, but I think it is better to make this `TelemetryConfigurationDto`
I think you can remove the boost::make_shared here.
This method is not used anymore.
I think we should keep the `useDelete` method here.
I think we should remove the response from the response.
Is this necessary?
This error is now being handled by the service itself.
this is a bug fix. We don't use `JsonRpcUrl? url` here, right?
Do we need a `client_model_slug` at all?
why would we remove the info level info level?
do we need to change the name?
I think this function should be a function.
This will create a default value if the cache is not set.
This is not a good change. It's a good idea to test that FetchDate works correctly. It's not a problem, but it's not a problem.
This is a breaking change.
Nit: remove empty line
Why is this in the first place?
Why change this?
Why are we returning a `public` here?
I think it would be better to have a `Email` list of `--------------------------------------------------------------------------` as the language is already present.
should be `2048 * signature checker threads`
This is not a part of this PR, but I think it's better to move it to the `__future__` package.
I think we should be able to remove this now that we're in the `*Provider` namespace.
This is the only change that affects the `_ARM64` I think is what we want. I think this is the only change that is needed for the `_ARM64` fixture.
This is a change in behavior, but I think it's better to use ` "[ROOTDIR` instead of `b = bytes.Replace(b, []byte(scrubbedRootDir)`
This include doesn't belong here
We should add a `TODO` to remove this.
I think this check is redundant now?
Why did you remove this line?
This should be done in a different PR.
I think we should add a warning message here to make sure we don't accidentally break the API.
I think this is the only change that will be needed in the first place.
I think we should also add the options to the options options. The options should be set to the options options.
I think this should be `ndarray`
This is a good example of why we have to change the tests for `tests` as well.
Can we make this a constant?
this is a bad idea, but I think it's better to move it to the `api` package
This is a bit confusing, why do we need to call `m.paths.devices` here?
I think we should just call it `gaPropertyID`
Should this be `status.uploads`?
This is a bit of a hack, but I think it's better to check for errors and not for errors.
Maybe rename this to `DbCapacity`?
This testCase is no longer necessary, since the hash is the only one that is used.
This is a bit weird, why not just have `sudo` return the command line?
I think we should move this to the `aws/resourcegroups` package.
This is a bug fix. The previous behavior was to allow the previous behavior to be set to `true` when the previous behavior was `true`. This is the behavior of the previous behavior. This is the behavior of the previous behavior. This is the behavior of the previous behavior. This is the behavior of the previous behavior.
I think we should use `ec2` here.
I think this is a bit of a hack, but I think we should be consistent with the rest of the code base.
The `error` parameter is not defined here. `error` is a `xhr` which is a `foo`.
This is a bit weird, we are not using the API implementation in the API. What if we just use the API?
Is this error ignored? If so, should we check for error?
I think this is fine, but I think it would be better to have a `class` type of the element.
I think this should be `final` and not `int[]`.
I think we should be more specific about what we expect to be here. I think we should be more specific about how we expect this to work.
Shouldn't we check for `is_types` here?
Don't catch this, it's already catching the exception.
This is the only change that affects TF codegen. I think it should be reverted.
Why are we logging these errors?
Why is this line removed?
I think this is a bit confusing. If we're going to copy the repo, then we should just copy it to the repo.
I think this variable should be var instead of var.
I think this import is unused.
errors is a number of errors.
Why is this not needed anymore?
@mjkkirschner @mitchellhenke would you mind adding a TODO here?
This is not the right place for this, but it seems like it should be called `RequestError_ERROR_DESC_def *p_buffer` instead of `RequestError`.
AccountMaxVersionPrefix is a pointer, not a pointer.
does this need to be moved to the `apinamespace` package?
We should add a TODO to remove this error message.
I think `NOPE` is a better name. It's not clear what `NONOPE` is.
I think this is a leftover from the PR
I think we can remove this method and just call `MultiDomainHost` directly.
I think this should be a constant.
What's the error while doing this?
This test is not testing anything. It should be testing the same thing as the `test_enabled_by_id_msg` function.
Why did you remove the `return 1`?
This should be moved to the `if` block above.
I think this is a good idea. We should probably make it a default. We can also set the `configMap` to `1.X` and then set the `configMap` to `1.X`.
I think this should be `\w+` instead of `\w*`
Why did you change this?
I think you can just do `top.nil` here.
I think we should be using the constant here, as it's not used anywhere else in this file.
This test no longer needs to be included in the test, right?
Why remove this? We don't want to support default properties in the `goog:chromeOptions`
I think this should be `if not None`
I think this should be `final`.
Why are we dropping the `Output` here?
I'm not sure this is the right way to go. The API is still valid, so I'm not sure it is worth it.
Why is this interface needed? I don't see it used anywhere.
This is a bit of a hack, but I think it's better to move this to the `/tmp/maybe-non-existing-dir` directory.
We should not need this. We can just use `Forms.Views`
I think this should be imported before the import statement above
This is not correct, it is not a Payment anymore.
Please use `DashboardEffect` instead of `useHasScrolledEffect`.
Wouldn't it be better to do `g.token_str = token`?
Is this a typo?
This is a breaking change.
Auto Automatic doesn't need to be in the base class.
I think we should be able to remove the attribute from the `Add` method as well.
Is this same as the original version?
This is not needed.
> If <see cref="TracerSettings"/>/> populated from stdin can we get rid of it? It's not used anywhere else.
this is not the right place to put this function.
I'm not sure this is the right fix.
why copy here?
Is this the right way to do this? I don't see any usage for this.
This is the only place where we set the `balance` in the `ctx` function.
This is the change that fixes the bug.
I think this should be a `static` constant.
Does it make sense to move theLayer to a utils?
should we rename this to `tasks`?
How about using `t.Logf` here?
I think this is not needed.
This should be `overwriteFiles.validateNoConflicting()`
Why did you remove this?
Should we use `AppSecEnabled` here? Or is this just for the `AppSecEnabled` parameter?
This is not the right place for this, but I think it would be better to move the `__init__` method to the `AtomicLocalFile` class.
Why did you remove the `:ic` part?
I think we should use `int32` here
should we use the same API here?
Do we need to make this change? I think the `else` clause can be removed.
Why was this changed?
do we need to do anything special to the user? I think we should use the `Access-Control-Allow-Methods` flag instead of `Access-Control-Allow-Methods`
is this because the plugin is a `PluginLoader`?
I think this is not needed
Why is this removed?
I think we should use `initializers` here.
Can we make this a method on `BlockHeader`?
I don't think we need to expose this class. It is used in the `Stream` class.
This should be `from binascii import *` and then you can import it from `DRBG`.
I think this check is not needed anymore.
I think we should leave the placeholder here.
Is this change related to the Rails upgrade?
Lade hoch and Hochladen were never toggled. I think this is the right way to do this.
I think we should be setting this to zero. It's not a valid value, so we can set it to zero.
Is this not needed anymore? The `mongoErrorContextSymbol` is already in the `milliseconds`
This is the only change that affects this PR.
I think this is a bit confusing. I think it's better to have a `handle` method that returns the `handle` and then call `handle` on the `handle` method.
This should be changed to `if named_fields is not None`
This is a breaking change.
This is a leftover from the previous PR
I think you can just set the default here.
I think this should be moved to the `AsyncTask` class.
This is not correct. It will be invoked in the `const createdUser = yieldUser.create({ name: 'Hafez' });` block, and it will not be handled by the `const createdUser = yieldUser.create({ name: 'Hafez' });` block.
This is the fix. It was not possible to get the `ExecutionDataGas` from the `ExecutionDataGas` object, but now it's not actually being used?
I think this test should be moved to the `@Restricted(NoExternalUse.class)`
This is the only caller of this function.
why not using the built-in `sort_values` function?
For the record: `endpoint` is not the first config, so we should not be modifying it.
I think it would be better to move the handle_() call into the `handle_()` call, and then call `handle_()` on each call.
I think this test is not running in CI, right?
why remove this function?
I think it would be better to add this method to `validateProxyUser` and add a method `validateProxyUser` that returns a boolean and then use that method.
I think it's better to move the namespace to the top of the file.
Not sure if this is the right place for this.
I think this should be `private`
I don't think we should be changing this behavior, since we don't want to support the `None` value in the `md5` attribute.
Should this be a constant?
I think this should be `if len(password) == 0` instead of `if len(password) == len(trimmedPassword) == 0`
I think this is a bug fix.
This line should be retained as well. (This line is already merged)
Why do we need this? I think `envconfig:"PROJECT_ID"` is enough.
Nit: We should probably have this in a separate test file.
I'm not sure if this is the right way to do this, but I'm not sure if this is the right approach.
can we use the `add_ask_register_from_metadata` function here?
I think we should use `Parameter` here.
This is a Pundit::NotAuthorizedError, but I think it's better to have it as a Pundit::NotAuthorizedError.
Why is this a `obj`?
Is there a reason for this test to fail? I would expect that the default value of `--p2p-port=10` is not set.
You should be able to remove this line.
I don't think this is needed. The `setup.pylint` is already imported from `setup.py`.
I think this should be moved to the top of the file.
This will fail if the environment variable is set to nil.
This is a bit confusing, as we have a `oc` key in the name of the test framework, but we should probably add a `oc` key to the name of the test framework.
I think this is a bug fix. The issue is that if `txReceipts[i]Removed` is set to `false` then `i` will be `false`.
I think it would be better to use `URLFlag` instead of `url` here. The `repoURLFlag` is used in `/var/repoURL` and `/var/repoURLFlag`.
Is this still needed?
import not allowed, right?
I think this should be done in the `execute` method, not here.
Why is this change required?
It looks like this is only used in the tests, so it should be removed.
Why do we need this?
Why not using 60?
This directory does not exist in the `abspath` directory.
This should be in the `omitempty` section
I think `var CircularJSON = Encoding(stream, Dimterminated)`.
I think we should just remove the validator from the validator.
This is the only change that fixes the issue. The old code was about the old code, and the old code was only about the old code, and the old code was only about the old code. The new code was only about the old code, which was not doing the old code. The old code was only doing the old code and the old code was only doing the old code and the old code was not doing the old code. The new code was only doing the old code and the old code was only doing the old code.
Is this right? I don't see it used anywhere.
I think this should be `config.autoload_paths` instead of `lib`
I think this should be `slot.count()`. Also, you should check if `slot.isSupporting(caps)` is 0.
I think this should be a `@private` tag, not a `@private` tag.
I think this should be `:80`
Is this a typo?
I think we can move this line to the `Reshape` function, since it's only used in the `needs_reshape` function.
In the past, you're using `sort_by` to check the `random` and `random` attributes, which is not the case. You should use `sort_by` to check the `random` and `random` to check the `id` and `id` to check the `id` and check the `id` to check for the `id` and check for the `id`
I think this is a leftover from the PR.
I think this should be `rawValues` and not `string`.
Why is this in `common.go`?
I think this should be a `@Override`.
I think it would be better to use `ENGINE-16002 Exception while closing command context: ENGINE-03110 Required admin authenticated group or user or any of the following permissions:"`
I think this import is unused.
why not use `config.func`?
I'm not sure if this is the right place to do this. This is a very good idea, but if we are going to do this we should just do `this->condition.notify_all()`.
This function is only called from one place, so I would call it `init`
why change this? Are we still using `v3` elsewhere?
@deads2k I don't think this is the right place to put this, since it's not a flag.
nit: remove empty line
Same here, we should probably use `config_file` here.
why is this change necessary?
This is not correct. You are setting self.floor_thr to 0 here.
can you move it to `chaos-mesh` package?
Please add a license header
I think this is the wrong place for this. The `MemoryUnlimited` is used for `MemorySwap` and `MemoryUnlimited` as well. I think we should keep the original behavior.
Should we have props.maxNumberOfFiles !== props.totalFileCount or props.totalFileCount?
I think it's better to use `*` rather than `*` to indicate the number of elements in the first place.
This is a bit of a hack, but I think it's better to move it to a new method.
Shouldn't this beexpr?
why connectid?
Should we have a default value for this?
I think it's better to deprecate this class, and just call it `private`.
I think we should remove the name because it's not used anywhere.
Why is this change necessary?
We should not have a limit here.
I think this should be `tail(op)`
Metrics/LineLength: Line is too long. [123/120]
Why remove this?
This is a BC break, please revert
This is the only place where we use the API's API. I think we should just log the error.
I think this should be `bq_data.append` instead of `insertId` since we're using `listened_at` everywhere.
This is the only change that affects TF providers.
Shouldn't this be 10?
I think this should be `text_font_size`
This is the only change that will need to be changed.
we could also have a test for this
This is a breaking change. It's not a breaking change. It's a breaking change. It's a breaking change.
This looks like a regression.
I think the predicate is not the same as `TRUE`?
I think this should be `nan, inf or name (signed)`
I think this is a good change. We should change the default to `1` if we want.
Line longer than 120 cols.
This is a breaking change. Thesembly will be overwritten by the user anyway.
I think we should keep the old name here.
I think this is the only change that fixes the bug.
`string|false` is the default value.
I think this test is not testing anything, it is just testing the `employees` value
This is a bit weird, why is the validate removed?
NO bool should be `define NOEXCEPT`.
I think we should be using the `PublicBlockChainAPI.GetBlockByNumber` function instead of the `tx` variable.
This is not needed.
Shouldn't we check that the root is not set before calling the method?
@bparees this is the bug you mentioned in the review. I'm not sure why you need to change this. I'm not sure why you need to change this.
I think this should be `dumpedBody, err := httputil.DumpRequestOut(r.HTTPRequest, logBody)`
I think this is a good time to refactor the `_` to a common function.
I think we should also check for controller name here, if we're not going to have to check controller name, then I think we should check for controller name here
Why is this removed?
`requestProxy.Entries.Count` is never null, so this should be removed.
What is the purpose of this `ards`?
I think we can just have this property set to `read.split.by-partition` and use it in the `partition` class.
Please remove the empty line here.
chunking is not a good idea. It is a good idea to have a `chunk` that is used for the `chunk` fields.
I would use `USERNAME_PASSWORD_REQUIRED`, `USERNAME_PASSWORD_REQUIRED`, and `USERNAME_ALREADY_REGISTERED`
I think this should be `_tree.Commit(long blockNumber)`.
This is a breaking change. The `ConnectionAborted` is a public API.
We should move the import for rc to the top of the file.
I think we should not need this since it's not a new file.
I think we should be able to remove the `and` part of the `handle_metadata` method and just do `self._storage_class = resp.getheader(self._storage_class, storage_class)` in the `handle_metadata` method.
Please use `String#Equals(String, StringComparison)`
I think we should be more specific about what this is and what it is for. `NotFound` is not specified, and `no region` is specified.
I think you can just do `new Victim(player, Victim.Type.TELEPORT,`
I think this function should be moved to ApplicationKind.
Is it worth adding a new param to the `CredentialExpiration`?
The `EC.element_to_be_unclickable` check is not needed here.
I think we should just remove this. We're now using the `Marshal` function in the `CreateSource` and not the `CreateSource` interface.
This is not needed.
Do we need this in the DB?
I think this should be `m.Get("/avatar", user.SettingsAvatar)`.
The file already exists, so you don't need to include it in the docstring.
The app container has a command in an app container.
I think this should be a `kwargs` instead of a `string`.
I think it would be better to keep the `integration` module as it is.
I think this is a leftover from debugging...
Nit: This line is a bit long, can you fix it?
I think this is not needed, right?
I think this is the only change that is needed.
I think we can remove the shutdownHook method here.
Why is this change necessary?
I think this is a good change. It should be in a separate PR.
This log line is not needed.
This is a breaking change. It should be in a separate PR.
Why not just `return false;`?
I think this test was not working before, but now it's still testing the `asp-config` file.
Why is this necessary? It seems like the test was failing to pass.
This is the only place where we setup the config, so we can just setup the `setup.Background()` function.
`is not v00k` should be `SurfaceKHR`.
I think we should change the description of the spec to `is abort()` instead of `MongoDriverError`.
I think we should move this to the package package. We can move the package package package to `lib/maya/pkg/client/`.
I think we should be able to remove Decorate and just call Decorate. I.e. we can just call `ISpanDecorator`
why do we need this?
Should we make this a constant?
Unused method argument - `options`. If it's necessary, use `_` or `_options` as an argument name to indicate that it won't be used. You can also write as `_options` if you want the method to accept any arguments but don't care about them.
I think this should be a `DataContainer`
This should be `coco_3201f`
If `run` is not an object, then `Assert.Same` will be null, so this should be safe.
I think this is a leftover from the original PR.
I think we should just call `GetMetricFunction` directly. The other `Metrics` is used for the `Function` and `GetFunction` methods.
I'm not sure if this is the right way to do this. The `show` function is called `show_visible_to_service` and `show_visible_to_service` are used by the `show_visible_to_service` function. I'm not sure if this is the correct way to do this. The `show_visible_to_service` function is called by the `show_visible_to_service` function. I'm not sure if this is the right way to do this, but I'm not sure if this is the right way to do it.
I'm not sure if this is the right fix.
Could you add a link to the docs?
I think we should change the default value of `0` to `0` in case the `baseFee` is not `0`.
This is not needed.
this file should be removed
why remove this line?
I think we can get rid of the `parseResponse` method altogether now since we have a similar pattern in the other places.
I think this is a leftover from the previous PR, but I think it's better to make the change.
Should we also change the `containsKey` type to `containsKey`?
backtick `f`
This is a breaking change. This is a breaking change.
I think this should be a static final field.
I think we can remove this field entirely. It's not used anywhere.
I think this should be `self.num_classes.size(0)`
I think we can remove this method entirely and just call `Byte Size` in `m.Body`.
I think we should just change the tests to make sure the tests pass.
`blob => blob.type?.length > 0`?
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this should be `api_version >= VK_API_VERSION_1_1`. The current code is a bit confusing. If you look at `vk_khr_sampler_ycbcr_conversion` and `vk_khr_sampler_ycbcr_conversion` and `vk_khr_sampler_ycbcr_conversion` to see the `api_version >= VK_API_VERSION_1_1` which is the only way to check for `vk_khr_sampler_ycbcr_conversion` to
I think it would be better to check for the job_failed and just set it to zero.
I think this is not the right fix. We should fix the progress bar when it is 0. If the progress bar is invalid, the progress bar is invalid.
@liggitt this is the actual fix.
info is not needed anymore
Can we use `controller: 'proposals'` here?
Why did you remove this?
should this be `preview::spmd`?
Can we add a TODO here to remove the TODO?
This is not the right place to put this. You're just trying to get the Summary from the console.
I think this is not needed. `taint` is already on the phpdoc.
if we're not using this, we should probably also check that the value is not a dict
`assertEqual()` is deprecated, can you remove it?
`universal_newlines` is not used in this function.
This is a change in behavior, but I think we should keep the old behavior as well.
This test was not working. It was not working before because `@pytest.mark.skip` was not working before.
I think we should use `[DoesNotReturn]` instead of `ToList()`.
Do we need to do anything special to the ID or not?
I think this should be a `ExecutorService` instead of an `ExecutorService`, right?
This is the fix for the client running client running in client running.
I'm not sure if this is the right way to do this. If the headers are reprocess, then the headers should be reprocess. If the headers are reprocess, then the headers should be reprocess. If the headers are reprocess, then the headers should be reprocess. If the headers are not reprocess, then the headers should be reprocess. If the headers are not reprocess, then the headers should be reprocess.
I think we should use refreshInterval here.
This is the only change that affects TF providers.
Nit: I would use a more descriptive name like `NAB`.
We should probably have a better way to do this.
I think this is the right place for this, since `collectLinkLibraries` is called for `ModuleDecl::ModuleDecl`.
I think this should be a leftover
I think this method could be moved to the `onResponse` method.
Could you please rename this to `logger.info`?
Please remove this file.
This is a breaking change. It's not a public API, so I think it's better to make it `internal`.
Can we put this on one line, like `GOMAXPROCS` and `2`?
This is a bug fix.
I think this is not correct. The `pendingRequest.configuration.remoteHost` is already initialized in `pendingRequest.configuration.remoteHost`, so it should be removed.
I think this is not needed anymore.
Why do we need this change? Is the sorting on the `W3CBridge` necessary?
This is not the right place for this. The `json` is used for the `JSONObject` field.
I think this is a leftover from the previous commit.
Please remove the extra spaces here.
I think you can just do `opt.get(opt string, setupFunc)` here.
I think this should be `isProtected`
The `EC.element_to_be_unclickable` check is not needed here.
Can we add a `Object` to the GoGapicContext?
Use the new Ruby 1.9 hash syntax.
I think you can remove the `ijs` field as well
This is the only change that affects TF codegen.
I think this is a bug fix. The target was not found in the original code and it was not working before.
I think we should rename this to `user-loyalty` to make it clear that we're in the "user" action.
Can you add a `TODO(path to script)` to make sure the path is properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly
Why not just catch the `try`?
Shouldn't this be a `Time`?
@agramfort this is the actual fix.
This change is not related to this PR, but I'm not sure why it was necessary.
I think this should be `log-file-path` instead of `sarif.log`
This is a bit confusing, as it is a very specific type of the element.
I think this should be `vision.AddOpenTelemetryTracing(builder) => builder.AddOpenTelemetryTracing(builder) => builder.AddOpenTelemetryTracing(builder) => builder.AddOpenTelemetryTracing(builder) => builder.AddAspNetCoreInstrumentation.
This is not right. You are not using the old syntax syntax, you are not using the old syntax syntax.
MakeEnvironmentURL should be called `baseURL` not ` environmentID`.
Please remove extra spaces
I think this should be `Supports PaymentVersionVersion` instead of `v2` since we have `v2` anywhere else.
Recv is the same as `README.md` right?
I think this is not a good idea. It's better to move the import to the top of the file.
why remove this?
Please use `Sync` instead of `dropTable`.
why is this expectation changing?
I think this is a leftover from debugging?
This is a bit of a hack, but I think it's better to make the method take a `iceberg`, and use it in the `iceberg.exceptions` module.
This line is a bit long, can you fix it?
This is a breaking change.
This is the same thing as the previous code, but it seems like we should change the name of the model model to `no_model1_train`
Why is this needed?
This seems like a leftover from debugging?
I think this is a leftover from debugging I believe.
I think we should use the default value here, to avoid the need for setting it to true.
I would call this `TeamPlan`
Can we remove the extra parentheses?
This is a bit weird, it's not a registry, but the registry is already throwing. I think it's better to throw an IllegalArgumentException in the `registry` method, and throw the `registry` in the `registry` method.
This is a breaking change.
This is a breaking change.
This is not needed. You can just use `from . import _types`
Is this used?
I think we can drop this and make `label_as_spammer` default to true.
This is a change in behavior, right?
`\` is unnecessary here, `\` is unnecessary.
Do we need to check for `i` and `terminal` here?
I think this is the only place where we use `hash` - we don't want to use `ctx.Body` - we don't want to use `hash` as a parameter.
This is not right. I would expect that if you have a `--clangsa` option, you won't be able to do this. I wouldn't expect that, but it would be better to do it in a separate `if "clangsa" in analyzers` check.
I think we should use `21` here. We should only set it if fee is zero.
This is a bad idea. We should probably have a way to do this in a separate PR.
I think we should keep the previous implementation and just change the error message to "Access denied, token is malformed", otherwise we'll continue to error out if we want to change the error message.
It's not obvious to me why this function is public.
Please put `import sql` on a line by itself.
I would use `assert` here
I think we can remove `reject` from the `result` list.
why did this change?
I think this is a leftover from debugging...
I think it would be better to use a var var instead of 5
I think this is not right. `onNewPasscode()` will not be called if `requestCode` is `false`.
I think defaultPostWriteInterval should default to 50?
Use the new Ruby 1.9 hash syntax.
This should be a warning.
Why not just use `NEW_MESSAGE`?
We should add a link to the docs to explain why this is a map.
I think it would be better to catch the `except` in the exception message, and raise a `TypeError: "except: { ... }` in the exception message.
I think we should just call this `DisableHttpGit`
I think it's better to keep the view model and keep it simple, but let's keep it simple and add a view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view view
I think this should be done in the `class-element.js` file.
I think this is a good candidate for a more specific `host.docker_container` constant.
This is a bit odd. Why do we need to change this?
Why is this change necessary?
This is a bit weird, why not just pass in the `normalizeIdentifier` object directly?
Do we need to define `AbsolutePath` here?
why is this changed?
I think this is a good candidate for a test case.
This should be a different PR, I'll open a PR to fix this in a separate PR.
I think this needs to be `internal` and the `IDisposable` needs to be `internal`. The `blobable` needs to be `internal` and `internal`.
I would default to True by default.
I think we should use the `pandas.compat` constant here.
I would prefer to see a separate `str_replace()` call here, but I don't think it's necessary to have it here.
I'm not sure if this is the right place to put this parameter. The parameter name is used by the parameter name. I would say that it should be `errorframe_append(&frame, &info)` and not `ast_print_type(&frame, &info)`
This file is not used anymore.
You should use the class `@VisibleForTesting` instead of `Cms\Classes`.
Why not just `config`?
Should we also set the SPI to zero? Otherwise we'll be able to set the wrong value for every platform.
Can this be `LinkLinkError`?
@jridgewell I think this is the right change. The `traceparent` is used for the `Traceparent` variable.
This is a bit of a hack, but I think it's better to move this to a `err`, since it's used in a `err`.
@DanVanAtta Can you please review this change? I think the import order is wrong.
Why does this go up? Are we doing any go? If so, we should probably make the `OUtbounds` flag a little more descriptive.
I think this is the actual fix.
why remove this?
I think we should be able to use `.save` here
Why the sizeof? Isn't it a single string that we can use for all the other types of strings?
I think it's better to have a `DestinationGroups` struct and then have it in the source, and then have it in the source, rather than in the source. That way, we can have a `[]string` field in the source.
I think you can just do `ignore_flags=False`.
Just curious, why the first map was removed?
I think this should be a constant.
Is this test really necessary?
Can we remove this?
Shouldn't this be `TiSession`?
Use the new Ruby 1.9 hash syntax.
remove this line
This is a very old code and I don't think we should be doing it in the PR.
I think we should just make the app parameter configurable, and set it to the default at the end instead of the hardcoded parameter.
This is a bit of a hack, but I think it's better to move it to the top of the file.
I think you can just call `waitForAdvance(self)` here.
I think this can be improved - if we're going to be more inptomag, we should also check that the tag exists in `TopicInput` and then check if the tags are present.
Why do we need this class?
This is the only place where we use `_base_` for the api. I think we should use the same name for the api.
I think we should throw an Exception here, otherwise we will log it.
Can we add a TODO here to add a TODO to add a TODO to add a TODO to add a TODO to add a TODO to add a TODO to add a TODO to add a TODO to add a TODO to add a TODO to add a TODO to add a TODO to add a TODO to add a TODO to add a TODO to add a TODO to add a TODO to add a TODO to add a TODO to add a TODO to add a TODO to add a TODO to add a TODO to add a TODO to add a TODO to add a TODO to add a TODO to add a TODO to add a TODO to add a TODO
I think we should keep the info level as it is.
This is not needed.
Why not just `import { cancelFilters } from '@wordpress/components';`?
I think we can remove this
This spec doesn't seem to be able to test that the profile is not in the DB.
This is a test, not a test.
This is a test change that will break existing tests.
I think this should be moved to `ViewerAtStartup`?
Would it be better to use `segmentId` here?
I'm not sure if this is the right fix. The `--export-fixes` flag should be in the `lib/common/` directory.
We should probably have a better solution for this.
This is the only place where we have a port in the options object. I think we should have a port in the options object instead.
I think this is a leftover from the original PR.
This is a bit of a nitpick, but I think it would be better to do something like `super << "--gemfile-" << cache.track_cache?(:bundler) + 1`
This is a bit confusing, why do we need to call `isAllocated`?
I think the `*` is unnecessary here
I think we should also check for the newly created `realm` here.
I think we should use the same naming for both seconds and seconds.
Can you use a more specific type of integer? What about `int64`?
The message should be updated to reflect the change.
This is a bit odd - why do we need to add this to the `int`?
I think this should be `Assert.True(true)`
I think we should remove this key from the database. We should also add it to the `config` table.
I think this is a good time to remove.
I think this is a bug fix. We should just make the change to `for key in dictionary` and `or` to make the change to `in` unnecessary.
@danrot what do you think about this? I don't think we need to add any new attribute to the `position` field.
I think this should be `slot.count()`. Also, you should check if `slot.isSupporting(caps)` is 0.
This is the only change that will cause a crash.
We should not need to expose the `BindableHolder` class to the public API.
I think we can remove this function now that we have the apis in the `createAttr` function.
This is a bit confusing, as it is a bit confusing that the field is not in the field.
This file is not used anymore
Is it possible to have a `filter` method that returns a `hashKey`?
Do we need this condition?
` SetTlsCACertificate` should be `common.Map`, since it is only used in `common.Map`, and it should be `common.Map`, not `common.Map`, but I think it should be `common.Map`, since it is used in `common.Map`, and `common.Map`, `common.Map`, `common.Map`, `common.Map`, `common.Map`, `common.Map`, `common.Map`, `common.Map`, `common.Map`, `common.Map`, `common.Map`, `common.Map`, `common.Map`,
The other code is fine, but why not use the other one as well?
I think this is a bit of a hack, but I think it's better to move this to a new function.
Why do you add this method? It's not used anywhere.
If we're not going to be removing the boolean parameter, we should probably just remove the property altogether.
(style) line over 80 characters
I think this should be `IScope` and not `IScope` - it's not clear what the `IScope` means.
I think we should use `JSON.fromfrom import` here
Remove empty line.
I think you can remove this file, it is not used anywhere
> Also, please reword the wording of the wording: "The delegate throws an exception ..."
This is a breaking change. It's not a public API, and it's not a public API.
I think this is not the right place for this, since it's a `error` parameter.
remove empty line
I think we should just use `depthwise` here, and remove the `use_depthwise` parameter.
This is a bit confusing, as it's a bit confusing that the code is in `pthread` and not a `strstr()` method.
I think this is not the right place to put this. `getStoreInbox` should be called in a `StoreInbox*` function.
Shouldn't this be in the `else` block?
I think this is a bit confusing. Why would we want to use `stdout` here?
This is a breaking change, but I think it's worth adding a view spec for this as well.
This is a breaking change.
This is a breaking change. It's not a bad idea.
I think this is the only place where we need to do this.
I think this is the wrong place for this. The button button should be the same as the width.
Is this a debug statement? If so, we should probably set it to `false` in the `if` condition.
I think this is a very confusing name. It's not a very descriptive name, and it's a very descriptive name. `RETRY_LEVEL` is a bit confusing.
Why do we need this? Isn't it already done in `fakeSessionStats`?
Same here, I think we should update the docstring accordingly.
Please add the copyright to the end of the file.
I think we should also have a `<Argument>`
Nit: I think this should be a debug level.
This readonly readonly DoublyLinkedListNode head is no longer necessary.
nit: can we rename this to `getSearcher`?
do you need to import from XNA and Descriptors3D from XNA?
Why is this needed?
Do we need to do this?
Shouldn't this be a separate PR?
This is a BC break.
this is a good change, but I think it's better to make the code more readable.
I think this should be moved to the `for` loop, since it's used in `for` loop.
Are you sure you want to change this line? It looks like you are using the `name` param for the `thumbnail` param.
I think we should use `.query` instead of `.limit` here.
@node = node.to_xml.to_s
I think we should use the default value here, as we do in the other places.
This is a leftover from the previous version.
Please use the constant from the class name
@deads2k i'm not sure this is the right fix.
This is not the right way to check if sys.version > '3' or if sys.version is defined.
I think we should be able to do this in `string_metric_parse`
I think this is a leftover from an earlier PR.
I think this is the right fix.
The app container has a command in an app container.
This is the only change that affects TF providers. I think we should just remove this.
Why not use a column name?
Please revert this change.
I think this is not needed, we should set this to `false`
I don't think you need to add this to the controller.
Why not just `sig = private_key.get_counter_length(sig[0]) > 127:`.
Why not just return the `ctx` instead of `ctx`?
Is this the right place for this?
This change is not related to this PR, but I think it's good to fix the test in a separate PR.
I think this should be `SparkReadOptions.SPLIT_SIZE`
This is not the correct way to check if Python 3.0 is provided.
This is a bit confusing, as it's a very specific thing to the user.
I think this is a bug fix. We should not be adding any new user-specific visibility of the user. It should be the case that the user has been updated to be able to see the user.
I think this is a bit of a hack, but I think it's better to use `pathlib.build()` instead of `dirlib.build()` (and the `buildfile` one)
I think this is a leftover from the previous PR.
I think this is a little hard to follow. We're going to have to think about how to fix this in the future.
I think we should add a `@property` annotation to the `setup_raises` section of the methods to make it clear that they are the only supported values.
I think this is the only place where we need to do this.
This is a bit confusing, why not just call `NewReplacer` directly?
Should we also move this to the `v2/internal/pkg/store` package?
This is a bit confusing. If we're going to have a user with a different name, we should probably check that the user is not in the name.
This is a bit confusing. If statusParts is 0, we should check if statusParts is 0.
I think this is a bit confusing. What about something like `on the client`? `in the server`?
this is a little weird, why do we need to change the `bad_request` to `bad_request`?
This is a very minor thing, but I think we should just make this a `try/except Exception`
Can we add a note that this is a CStorPoolPhase string?
Why not use the same code here?
why change this?
I think this is a bit of a hack, but I think it's better to use a `index` for the `start` and `end` for the `start` and `end` for the `start` and `end`
I think we should use `setupCgroupEnabled` here and in the other places where we use `cgroup.New()`
I think this is the only change that affects TF codegen.
I think this is a leftover from debugging purposes?
I think we can remove this pool now that we have the pool in `github.com/openebs/p1alpha1`
why is this change needed?
This is the only place where we should be using the `updateNodeStatus` function. I think we should be able to remove the `updateNodeStatus` function from the `UpdateNodeStatus` function.
Is this needed? I don't see any other library using `windows.h` anywhere.
This will need to be set_binding_pair. See above.
InvalidArgument is not a good idea. It is a good idea to add a log message to ArgumentArgument.
I think we should remove this.
@smarterclayton now that we're using the URL opener, we're using the URL API.
This is a bit confusing, as it is a bit confusing to have a "new" structure.
This is a very minor thing, but I think it's better to move it to a separate function.
Array of user data is not a boolean
I think this is the only change that affects this PR.
I think these two lines can be removed.
This should be set to false by default.
Can we just use `while winUser.getMessage(byref(msg), None, 0, 1)` instead?
What is this testing exactly?
Should we rename this to `overwrite`?
I think you can remove the global xx here, it's not used anywhere
@jridgewell I'm not sure this is the right fix.
this is a bad idea. It's not a bad idea.
I think this check should be done in `setUp` method, since it's only used in one place and it's not being used in the `setUp` method.
please add a new constant
I think this is a leftover from debugging purposes?
why not create a new one?
Why did you change this?
Use the new Ruby 1.9 hash syntax.
I think this is the wrong place for this. The `PyObject *` should be used for `PythonInvoke::end_of_step()` and `PyObject *` as well.
this should be `const` not `const`.
I think this is the only change that affects TF codegen.
If you're going to be setting the schedule '{self, why not just make this non-standard cron schedule '{self?
This is a no-op, right?
We should probably make this a separate commit
I think we should also mention that the promise is factored.
I think we should be able to remove this button from the database. We should not use the `id` here.
@dvoytenko: This line is not needed
This is a breaking change.
I think you can remove `primer_stdlib` now.
I don't think this is the right place for this. The `var` statement is not necessary. The `STViewModelCache` is already a `Mvx.GetSingleton<IMvxChildViewModelCache>`
why is this changed?
I think this is a good idea. If you want to remove the Node, you can just remove the first line of the `el.parentNode.removeChild(el)` line below.
Should this be `unexpected status %x`?
This constant is not used anywhere.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think we should keep the names in the names. We should keep the names in the names.
I think this is a bit confusing, as we are not doing any validation for `show`/`show`/`show`/`show`/`show`/`show`/`show`/`show`/`show`/`show`/`show`/`show`/`show`/`show`/`show`/`show`/`show`/`show`/`show`/`show`/`show`/`show`/`show`/`show`/`show`/`show`/`show`/`
You can use `val() === countlyGlobal["member"].username()`
I think you can use `db.create()` instead of `.class`
I think this is a bit confusing to have a `ensure_system_roles_exist` method.
I think this check should be done in the `before` method, since it is not actually being used.
I think we should use `episode` here
Is this a good idea to have a test for this?
Use `std::mutex` for the `create_guard` method.
I think that this is a bug fix. We should be able to remove the `total_blocks` blocks and then do it in the `process_block` call below.
I think it would be better to explicitly say 'default_parts_num'
Why is this needed? Are you calling `get TypeGenerator` directly in the constructor?
why not just remove the `matchers` tag?
I think this is the wrong place for this
@danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot
I think we should import these at the top of the file.
Nit: `public-volume-create-allowed` is not a great idea. It's not clear to me why we need to do this. It's not clear to me why we need to do this. It's not clear to me what the problem is if we are using this property in the `ret-runtime` namespace.
I think this should be INT32_MAX.
I think this is still not needed, since the console already has a message to print
Can we remove the poll?
I think we should make this a constant.
I think we should just remove this line.
It seems that `pIP_UNSUPPORTED}},` is now unused, can we remove it?
should return null here
I think we can remove this field entirely.
I think this is a good idea, but I think it's better to move the `using` statement to the `ID` and then the `ID` call to the `ID` variable.
I think we should be able to just do `item.traverse(lambda x: x)` here.
What if we added a check for `forced_empty_list`?
Should we call this `clientclient`?
This is a bit weird, why not change it to an at?
Shouldn't this be `|| rawErrorData.get(STACK_TRACE)`?
I think you can just use `return collection.repartition(npartitions=1)`
It's not a good idea to use this in the `Config\Loader` class.
This is a bit confusing, as this is a debug mode, but the value is already in the debug mode.
should we make this a class constant?
I think it would be better to make the lock a static field and call the method directly in the `Ref` class.
This should be moved to the drop_pandas function.
I think we should use `my_transports_enabled` here instead of `config` as we do in the other places.
This is a breaking change.
why is this import needed?
This method can be deleted now.
This is not the right place to put this list. It's a bug, but it's not a problem, so it's not a problem.
The stats should be used here.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
Let's remove this TODO.
I think we should use the `/c` prefix here.
Can you add a check to see if this is actually needed?
I think this should be `true`
Shouldn't this be `go.temporal.io/server/common/sqlite`?
This is the only change that affects TF providers.
I think this should be `void`
This is the only change that affects the new config.
I think this should be done in the `debug` log message.
I think if you move this line to the beginning of `mu.RUnlock()` it will be a no-op if `st` is empty
Shouldn't this be done in the `KID`?
@dvoytenko is this change ok?
Unnecessary spacing detected.
This file should be removed.
I think this is not the right place for this.
Should we get rid of the `getDescription`?
Why is this needed?
I think we should be using the standard `buffer` format for all these APIs.
This is a change in behavior, right?
I think this is not the right fix. We should just use `inner_type` instead of `config` here.
I think it would be better to have a config var for the `deleteRecursive` property.
Wouldn't it be better to use a LOG instead?
I think this should be `&:to_f`.
Can you add this import to the top of the file?
I think we should use the constant here
I think it would be better to throw an `Error: command.throwthrow(throw new ...).quit()` with a `Error: command.throwthrow(command.getName())`
why do you need this?
`OrderedDict` is not used anymore.
Is this a typo?
I think it would be better to receive the `Present` with the `.finishResolution` as the default.
Why is this needed?
if field.required is not set, use u as the field name
Line is too long. [81/80]
I think we should not use the `PythonDocConfig` here.
I think you should be able to use `PMT` here, and not `PMT` in the `Metrics` list.
This is a bit weird, I think the `.exists()` check should be moved up here, since the `config_file` is already in the `if`.
This seems like a very odd change.
I think this should be a specProvider rather than a specProvider.
Why is this change necessary? A Client is a `ClientConn`?
I think this should be a part of the `Sharded` class.
This is a bit of a hack, but I think it would be better to move the `serialize` logic into the `before_action` function, and then just call `serialize_ast_ctx` directly in the `before_action` function.
It's a bit odd that this is a part of the section, but it's not a part of the section, so I'd just remove it.
I think we should just return 0 here. The idea is that if we don't have a thread safe way to get the thread safe way to get the thread safe way to get the thread safe way to get the thread safe way to get the thread safe way to get the thread safe way to get the thread safe way to get the thread safe way to get the thread safe way to get the thread safe way to get the thread safe way to get the thread safe way to get the thread safe way to get the thread safe way to get the thread safe way to get the thread safe way to get the thread safe way to get
I think this should be `update-bower-json` and not `update-bower-json`
I think this is a leftover from debugging?
I think this should be `Simple_int`
I think we should be consistent and use the `25000` timeout here. The reason being that the `slow` timeout is because of the `slow` being the same as `timeout` (which is the `25000` of the `slow`).
This is not needed.
This is the only place where we need to do this.
Please revert this change.
I think this is not needed, the container port will be incremented in the container port, so it will be removed.
I think we should create a new CommandLine.defaultFactory().create(cls) here and in line 276.
Since this is a `customSourceCols` method, we should not call `this.hot.countCols()` at all.
It's not clear to me why this is necessary. `u_conn->fd != -1` seems to be the same as `u_conn->fd`
Use the new Ruby 1.9 hash syntax.
I think we should be consistent and use `gogs` here.
I think this is the only place where we need to `s.Once.Error` is `done split: %v` and we don't need to `s.Once.Error`.
I think this is a bit confusing, as this is a `KafkaConfig` package. I think it's a `KafkaConfig` package, but I think it's a good idea to have a `KafkaConfig` that has a `KafkaConfig` that has a `KafkaConfig` and a `KafkaConfig` that has a `KafkaConfig` that has a `KafkaConfig` and a `KafkaConfig` that has a `KafkaConfig` that has a `KafkaConfig` and a `KafkaConfig` that has a `KafkaConfig` and
This is the only change that affects this PR. I think it should be removed.
I think this is a better name for this function. It's not clear what the normal `b.Module` is for.
should we change the type of the key to be "loop"?
I think we should include the canonicalized key here as well.
This is a bit confusing. I think it would be better to have a method that returns a boolean and then call `_("This profile will be permanently deleted, this action cannot be undone."),` instead of `_("This profile will be permanently deleted, this action cannot be undone."),`
Just to be sure, this is the actual fix.
I think we should be able to get rid of this `Router.Source` function.
This is not used anywhere.
This is a bug fix. The problem is that if you add a new `addContext` to the `CseContext` you get a `Context` from the `Context` and then you get a `Context` from the `Context` which is not the case, you get a `Context` from the `Context` which is the default.
I think we should use the `GetAssembly().Name.Value` method instead of the `Trace.TraceError` method.
`isIE9()` is now unused, right?
Why is this default needed?
@tgamblin Do you remember why we change thebserver-1.dev.keybase.io tobserver-1.dev.keybase.io ?
I think it would be better to use `setFirstPingTimer()` instead of `setFirstPingTimer()`
Please remove this blank line.
Why was this removed?
I'm not sure if this is the right place to put this. The `uname` option is to add `null` values to the `build_id` and `uname` values to the `build_id` so that they can be set to the `null` values.
I think this is not right. The tasks can be created for every single project, and the tasks can be created on the same page. The tasks can be created on the same page as the tasks can be created.
This is not needed.
Why not put this in the CommonName package. They are not necessary.
This is a bit weird. What is the expected format for?
I think this should be done in the `if` block.
I think this is a leftover from debugging debugging?
Might as well change the signature of this function to return false.
I'm not sure if this test is necessary. If the template changes, the template will be automatically cleaned up after the deploying process.
could you please add a `text` to the top of the function?
This is the change that fixes the bug. The `ValueAsData` was not used in the `ValueAsData`.
Why is this necessary?
Please remove this.
This is a little confusing to read as I think we should not have a backend in the URL. What about `object_uri.replace('%2A', '*')`?
This is a breaking change. It's not a public API, and it's not a public API.
why is this peerID gone?
I don't think this is the right way to go. I don't think we should change this. The `RpmDependenciesDirectory` is used to set the `rpm` directory to the directory.
`str(BasicBlock, self).__init__()` is the default value for `str(BasicBlock, self).__init__()`
This is a bit of a weird error, but I think it's worthwhile to leave it out.
I think this is the wrong place for this.
This is the fix.
we should also check for `cmd` here
Should we use traceInOp here?
This is the fix.
I think we should add a `Version` field to the `PluginV2` struct.
Why is this line removed?
I think we should keep this as a string. It's a little bit of a burden of having a `Resource` that's a `Resource`.
Why not add a `windows` parameter to `windows`?
I think we should change the name of the test.
@matt-gardner, I think this should be `netConfigLink.setText("<a>" + CoreMessages.dialog_connection_edit_wizard_conn_conf_network_link + "</a>");`
It's a bit odd that this is a `TODO` but the `TODO` isn't actually needed.
This is a change in behavior, but I think we should be using `controller.address` instead of `controller.address` here.
I think this should be `Uri.domainname` instead of `Uri.domainname`
This change is not necessary. The change in the commit message should be reverted. The change to the commit message should be reverted.
Append.isAppend.fail() to be consistent with the above tests.
I think this should be `info(version()).info()`
This should be `qt.io/browse/QTBUG-69904`
I think we should use the timeout here instead of the timeout.
should we rename this to `api_url`? `api_url` sounds like a name to me.
I think this should be setState.
I think we should also support encoding in the DB. I think we should also support encoding in the DB.
I think we can remove the `Chain.DB` field from `Chain.DB` and `Chain.EnableAsyncIndexWrite` altogether.
Do we need to add this limit to the limit above?
I don't think this is needed.
This should be `Customized objective function.feval`
Style: Replace class var @@ball with a class instance var.
This is the only change that affects TF providers. We should probably make this a little more explicit.
I think you can just do `return str(result)})`
@kargakis @QilongTang @jridgewell I think this change is not needed
We should not log the exception here.
I think we should make this a constant.
This is a bit confusing. I think we should use `six.text_type` here.
is this related to the rest of the PR?
I think this is a leftover from debugging?
This is not the same as `VolatileObject` but the `object` parameter is now unused.
What's the reason for removing this line?
Why is this being removed?
`respBuf` is not needed here, `t` is already `respBuf`
I think we want to remove the second expectation that the expectation is still in the URL?
I think this is a bit confusing. How about `if !scratchBucketGcsPath`?
I think this should be a constant
I think we should change the description of "Error saving WebCal-calendar" to "Error saving WebCal-calendar".
Why remove this? We don't want to support default properties in the `goog:chromeOptions`
I think this is not needed.
I think this should be `p.m.Lock() + EntrySize +crypto.Extension+(uint(headerLengthSize)`
@jridgewell I think this is the right place for this. The `V1` is used for the `V2` parameter.
Do we need to call `commandStartExternalEditing`?
can you make this a constant?
`sanitize=True` is the default, so it should be `(idx,sanitize=True)`
I think we need to do this on the `default: :delegates` too, since we're not using it anywhere else in the model
I don't think this is the right fix.
I think this is a leftover from the previous PR, it's not related to this PR, but it's a bit confusing to have a separate PR.
Please add a license header here.
I think this is a leftover from debugging purposes?
I think this is not the right solution. The `from . import _` prefix should be used instead of the `from .` prefix.
This method is not used anywhere.
Why do we need a `notification` field?
I think we should update the `driver_schedule` method to use the `name` field instead of the `driver` one.
Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
Can we use the `sync.WaitGroup` instead of `Owner`? We could also have a `sync.WaitGroup` that returns the `sync.WaitGroup` object.
This is a breaking change.
not sure why this was here
I think this is a leftover from the previous version
I think this is a good idea, but I think it's better to move this to a new `node.p.Spec`?
You can use `node.parent.statement()` here.
What is the default value for?
This is wrong. The sleep sleep is done for the other sleep, so it should be done for each call to sleep.
This is a change in behavior, right?
This is the only place where we check for the impl, so we should check for the other impls.
Why is LoadPlainYAMLManifests removed?
This is a good change. It's not the same as the `ommersHash` method. It's not the same as the `fromBuilder` but the `ommersHash` method.
Can we add a description to the description of the key?
I think this is a bug fix. The max time is not in the "last mile" block.
I think we should also add grpcStubTypeName to the public API.
Should this be TraceConstants?
Should we also catch a `UnwindError`?
Why do you need to cast the type to a string here?
Do we need to call `get_optimizer_step()` here?
no need to change this
@adamjstewart Is this going to be a problem in the future? I think we should be using the `config` module instead of `test_change` to avoid confusion.
I think this should be a separate map.
The indent of this whole expression is off by 2.
Why was this removed?
I think this is a leftover from the previous PR.
This is a pretty big change, but I think it's fine to just remove.
This is not a `Expansion` object, right?
I think this should be `@SuppressWarnings("unused")`
I think this is the wrong place for this. The `typedef` should be removed.
The `AC_CHECK_PROGS` calls are now unused.
This is a little hard to follow. Can we have a better name for the variable?
Please add the `@Disabled` annotation to security_group_ids
I think this should be `Path = relativePath.replace(File.separator, ".")`
It's not a good idea to use a `Exception` here.
This is a change of behavior, but I think it's safe to remove.
I think we should use the `String#Equals` helper here.
This is not needed.
I think this is not needed anymore
I think this is a bug fix.
I think we should keep the tag as a constant.
I think it would be better to use `promprom health` here instead of `health` here.
I think you can just delete this and the `ICoreLogger` now.
This is a breaking change.
Layout/TrailingWhitespace: Trailing whitespace detected.
Is this change intentional?
why not use `cbor`?
This can be final.
Seems like this should be `apiClient`
Is this one used?
I think this is a leftover from debugging purposes?
This is a bit weird, I think it should be in the `Delete` below. The `.Erc721Token` function should be used in the `Delete` function.
This is a bug fix.
Why not "running"?
I think we should just remove the ECSDataVersion altogether.
Isn't it better to use cryptoSetupServer here?
I think this should be `str(sles)`
What if `None` is not None?
I think this should be `.warn(key, key)`
why is this "args"?
The method name is misleading.
I think we should remove the name.
Please remove this.
I think this function could be called `get_screenshot_as_file`.
Why return here? I don't see it being used anywhere.
Can we use a more specific name? `json` sounds like a name for this purpose.
struct field pipeline should be API
I think you can just do `this.getClass().getName()` instead of `this.getClass().getName()`, since you are already calling `getReachableFiles` directly.
I think you should add the description of the "Consent" here.
Nit: newline should be before the last line.
I think this should be `slot.count()`. Also, you should check if `slot.isSupporting(caps)` is 0.
why is this change needed? seems like a change in behavior that would break tests?
I think this is a good change. If the first two conditions are identical, the second one is not the same as the second one.
Why change this?
Nit: I think this is a leftover from the original PR.
publicLink is public?
I think we should default to `""` here. We don't want to default to `""` in the `json` field.
This interface is not used anywhere.
I think this is the only place where we want to do this. The only time we set the `t` value, and the `t` value is `""`, so we don't need to do anything about the `query` value.
can you remove this line?
I'm not sure if we need to decode here. I think we should decode if `make_helpers_type` is `True`
I think we should be able to hold a hold on the `MyResearch/Holds` list.
I think we should use `ff` instead of `ff`
nit: we can drop the `wf-container-timeout` from the format string
`sortAttributes` is a bit confusing with `libkb.jsx createElement` as it is used in `libkb.jsx createElement`. I think it's better to just use the `libkb.jsx createElement` function.
Can we keep this as `4` and set it to `true`?
"unsupported_property" is a bit confusing, can we name it unsupported_property?
@jridgewell I think this is the right fix. The `TaskCPUMemLimit` is the default, so the `TaskCPUMemLimit` is the default.
Why not just use `Object`?
This should be done in `else` block.
Why is this being removed?
This should be set to false by default.
Please add gcloud-beta-prod wrapper-latest wrapper-release
This is a breaking change.
Why do we need both `-by` and `-located`?
I think this is not the right place for this. It is also a good idea to check for `externalFormat` here.
This is not needed.
I think this is unused.
This is a pretty trivial change.
I think it's better to set the default to 10.10 and set the default to 10.10 and set it to 10.10.
Why not just use the env variable instead of using the globalconfig.DdevGlobalConfig.InstrumentationOptIn == false?
I think we need to add this to the `validation` table, as it's a `validation` table.
This function is a bit confusing to me. Why is it a function?
Is this related to this PR?
I think this is a bug fix. The `if` should be inside the `if` statement.
Is this a "failed to close" listener?
why are these removed?
I think we can remove the `.dup.criteria` here since it's already in the `.find_by`
This is a bit weird, why do you need to do it here?
I think this should be `ok := len(s.clients) <= s.opts.MaxConn`
I think it's better to move this line to the beginning of the `if (is_thenValue([this](auto& resp))` block, and then remove the `is_thenValue` check below.
Can you add a TODO to remove this?
I think this needs to be removed.
I think this is a bug fix. `c.Wireguard.EncryptHostTraffic` is a bit confusing. Can we just change the condition to `c.Wireguard.EncryptHostTraffic`?
I think it would be better to use `Optional.get()` here
This needs to be a colon.
Why is this needed?
should we also change the `MESSAGE_TRADE` to `getState`?
This is a bit weird, why do we need to check for `s`?
This is a breaking change.
Why is this changed?
I think you can remove the second expectation :) Also, the `merged` should be removed.
I think we should clear the db here.
I don't think this is a good idea. It should be in the same directory.
`urlencoded` is a list of items, so it should be an array.
Same here, I think we should be consistent and use `[ConditionalThe(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(
I think we should be able to remove all of these tests and just create a separate unit test for the `diary_comment` and `diaryComment.all`.
I think we should not call `eventForRuntask()` here, since it's a `Object` that is a `eventForRuntask`?
This is not needed anymore
I think this should be `return ok(result);` instead of `return ok(result);`
This is a bit confusing, if we have a `if dur <time.Second` then we don't have to pass it in.
I think this is a leftover?
I think this is not correct. The Widgets should be set to Widgets. The Widgets should be set to Widgets. The Widgets should be set to Widgets. The Widgets should be set to Widgets. The Widgets should be set to Widgets.
I think we should use `meta_PART_ON_SRC` here.
I think this is a bug fix.
Please remove this file.
I think it would be better to check for `if (true)` here, and then check for `if (true)` in the `else` block.
This is the only change that affects TF providers.
Why is this import needed?
I think this is a leftover from the original PR.
I think it would be better to call `applyAllCorsResponse` at the top of the function, and then call `allowAllCorsResponse` at the beginning of the function.
I think this is not the right place for this.
This is not needed. The new functionality is already added in the "version" package.
Could you please rename this to `logger.info`?
I think we should remove the reference to the initial initializers.
This is not right. The function returns an error, and its type is not found.
I think this is a leftover from the previous commit.
Because we're not using `\n` anymore, we should probably remove the `\n` here.
I think this should be a `const`
Why 100?
I think we should keep the "HardKiller" and "cleanup", since it's not used in the "cleanup" section.
(style) line over 80 characters
I think we should remove this
I think you can use `std::find_by(m_child_layers.begin())` instead of calling `std::find_by(m_child_layers.end(),`
I think this is the wrong place for this.
why remove 'stderr'?
Would it be possible to return an error here?
This is a bit weird, why not just use the first one?
I think this should be `--ruby-source`
I think this should be `exclude` instead of `Filters`.
I think this is a good idea, but I think it's better to use `string.encode` here.
I think we should log the stack trace here.
I think we should use a `Set<String>` instead of a `Set<String>`
This is a bit weird. Why is it not a pointer?
I think this import is unused.
Why do you change the default value?
This is a bit confusing, if the `HasValue` is not set, then the `compensation_V` will be set.
I think this is a bit confusing to have a `get_split` method, but I think it's better to have a `get_split_parts` method that returns the string and then use that instead of `get_split_parts` to return the string.
I would prefer to have a method `getDataSource()`. It would be more readable if we used `getCollectionRoute` and `getCollectionRoute` if we are not using it.
Is this change related to the PR?
I think we should remove this
I think we should remove the docstring.
I think this should be `query.fields[paths[i]]` instead of `query.fields[paths[i]`.
I think this should be `statements[]`
I think this is a bit of a hack, but I think it's better to move it to a new module. It's not a big deal, but it's a bit of a hack to have it in a separate file.
I think it's better to put this in `DropVXLANPacketsFromWorkloads` so that it's not a `Workloads`.
Can we remove the Nonces here?
How about moving this line to `propagate`?
Should this be `fips`?
I think we should make this configurable. It's a bit confusing to have a default value for the value.
I think this is a bug fix. It should be fixed in a separate PR.
I think this should be a separate PR
Why not `private final`?
I think we should add a description to the param parameter. The parameter should be the parameter that is not present in the param parameter.
I think `cescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescescesces
I think we should be able to get rid of this `options` now that we're here.
It's not a role, but it's not a role. It's not a role. It's a role. It's a role. It's a role. It's a role. It's a role. It's a role. It's a role. It's a role. It's a role. It's a role. It's a role. It's a role. It's a role. It's a role.
I think we should be able to get rid of this line and just do `return await this.driver()['loadExtension'](path);`
Why did you change this?
I think this should be `hole`
This is a bit weird, why not just use `user_params` directly?
This is a bit confusing. I would expect `rescue Beaker::DSL::Assertions, Minitest::Assertion => early_assertion` to be a `resource` and then `resource.has_with_puppet_running_on`
@dvoytenko is this the right place to put this?
Why did you remove this line?
I think this is the only change that is needed.
I think this is not needed.
I think we should also check if the user has a `selection_specs` key.
I think it would be better to make sure that the `a_number` includes the `a_number` of the equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal equal
It looks like we're missing a `.content` here.
I think this should be ` dynamo_exited_synched = false;`
I don't think this is the right place for this. This is the only place where we want to support 3.0.0.
Why is this still needed? `Long bitmask` is used in many places.
I think this is the wrong place for this.
Is this line necessary?
This is a change in behavior, but I think we should be using the `s3a://'` here.
I think this should be called `fetchPrivate`, since it's a `fetch` object.
I think this is a leftover from the previous commit.
This include can be removed.
Block has too many lines. [32/25]
It seems like this file is only called in `spec/views/plot_DIR_spec.rb` so can we move this to `/usr/lib/twitter_digits.rb`?
Why is this needed?
Do we need to add `project` here?
Is this a public API?
why is this changed?
Should this be `String.format`?
The `c` is unused.
Can you use `.format` here?
I think this should be `slot.count()`. Also, you should check if `slot.isSupporting(caps)` is 0.
I think this is the only place where we use the real version number.
I think this is not needed.
I think this is not the right place to put this. The `type` should be used in the `*` package.
Why do we need this here?
I think this is a leftover from debugging I guess?
nit: `0, null` is a bit ambiguous. Maybe `0, null` is better?
I think this is not correct. We should update the data in the source and not update it.
I think we need to add this to the `add_column` model as well
@joshblum I think this is the right fix.
The variable $bundles should be renamed to $bundles->load('serializer.xml');
You can remove this line.
I think this is not needed.
This is a breaking change. It's not a breaking change.
This is the only change that affects the change from `InvariantCulture` to `OperationDisplayString`
Can you explain why this change is needed?
I think this is the only change that will break existing users. I think we should just remove this.
This is a bit of a hack, but I think we should be using the `Extract` environment variable here.
I think this should be `if (!pathParam.indexOf(';'))`
I think this is a little confusing, since the error is being returned by the caller. We're returning the result of this method, but it's not a ` VerifySignature`.
I think this should be removed.
This is a bit confusing, as we are in the same line as the one above. Can we fix it?
Looks like this file has been deprecated.
Why is this necessary?
I'm not sure if this is the right fix. I'm not sure if this is the right fix.
I think this should be `public const`
should we make this a class constant?
I think this should return a pointer, not a pointer.
I think it would be better to check for dag_file_exists first.
nit: remove trailing whitespace
I think this is a good idea. It's a good idea to have a test that checks if the length of the slice is different from the previous slice.
Is it possible to get the length from the `cmsg_data` field from the `iiii` object instead of just the length?
I think we can remove the ASTAttribute method entirely. It's not used anywhere else.
This is not needed anymore.
Could you please rename this method to splitTableRegion?
I think we can move this import to the top of the file.
I think we should be more specific about the block number. `debug` is a `debug` and `debug` is a `Joined`.
Should be a `StringUtils.isNullOrEmpty`
This line is not needed anymore
This is a bit confusing, as it is used in a lot of places in the codebase. Can we use a different name?
This import should be removed.
I think this is the wrong place for this.
Would be nice to have a unit test for this as well
I think we can remove this `findElements` method now.
I think we should add a `password` field to the `*Service` and `*User` fields that can be used in the `*Service` struct. We can also remove the `*Service` field from the `*Service` struct.
I think we should be calling this `Heap` now that we have the `duckv1` API.
This is a breaking change.
Shouldn't this be `err != nil`?
I think we should log the message here, as we are not logging the message at all.
Space inside parentheses detected.
I think this is the only change that will break existing code.
I think this is not needed anymore.
I think this is a bug fix. The previous code was breaking the original code.
I think we can delete this whole function now since it's no longer a delete method.
This is not needed. You can use the plugin map directly.
Why not just make this part of the Solr schema.xml where type is Long?
why is it ok to use `instanceof`? you can just use `instanceof` if you want.
I think this is the right place for this, but I'm not sure how the plan should be able to handle this.
I think it would be better to move this into the `setDismissText` method, and move the `isDismissText` method in the `setDismissText` method.
This is a bit of a hack, but I think it's better to move it to the `UpdateSpan` method.
This is not used anywhere.
I think this should be set in the `PipeScheduler` class instead of here.
Is there a specific reason for not create this in the first place?
Should we add a dot before `Error`?
I'm not sure if this is a good idea. ` ForceFlush` is a very generic name, and `Async` is a very generic name. I'm not sure if it is a good idea to have a `<` or `<Async>` as a name for this.
this is a bug fix. This will fail in some cases.
This if statement is not necessary anymore
I think we should keep the `\` tag in favor of `\` in favor of `\` in favor of `\` in favor of `\` in favor of `\` in favor of `\` in favor of `\` in favor of `\` in favor of `\` in favor of `\` in favor of `\` in favor of `\` in favor of `\` in favor of `\` in favor of `\` in favor of `\` in favor of `\` in favor of `\` in favor of `\` in favor
This is not correct. The return type should be `Optional[str]`.
Why not use the `IsNotNull` method here?
Why not just move the fsfs to the top of the file?
is this a BC break?
I think it would be better to check if attacked is a boolean.
Is this needed? `exports` is already in the `components` package.
I think we should remove `scripts` from here, since it's not used anywhere.
I think we should update the `driver_schedule` method to use the `name` field instead of the `driver` one.
This interface is not needed.
How about `:text`? This way we don't have to pass it in.
This is a bit confusing, why do we need to call `Lock()` here?
Why not just make it `Word`?
I think this test could be extracted to a different PR.
do you need to add it to the middleware?
I think this is a leftover from the PR.
why 6? 6 is not enough?
I think this is the only change that will need to be done in this PR.
I think this is the only change that will be needed in the test, right?
I think we can drop the `!` here
I think this needs to be `public`
The `pool` node is a `XXX` object, so I think this is fine.
Do we need to set `AnyTimes` here?
I think we should test history here.
@kargakis @korycins any idea why we are using the `kind` version?
Do we need to keep `AppDomainFixedOutput` in this file?
Can you add a TODO to remove this?
Please add a migration to add this field to the `base_folder` section.
I think we should add this to the `application.json` file.
I think this should be `upperCamel(Name.lowerCamel(runtimeTypeName))`
Can we remove this function? It's not used in this PR.
I think we should just use `get_storageclass_on_whether` here.
I think we should remove LibuvFunctions from the Libuv package.
Is this types used anywhere?
This is not used anywhere.
I think we should add a validation to ensure we don't accidentally break anything.
I think `config_path` should be a dict rather than a dict.
I think `flattenedTree` could be a static constant.
I think we should add a new config object to the ConfigModel interface, and add a new config object in the constructor.
We should probably have a constant for this.
this import is wrong. It's the same as the other one below.
>bool [](start = 8, length = 1) nit: `isNonNullableReturnType` can be nullable here? #Closed
This is the only line needed. The `spawn.h` header is included in the `build.py` file.
This is a very minor thing, but I think it's better to move this method to the `paused` resource.
I think this is not the right place to put this method. I would say that it should be a separate method, and not a separate method.
This is the only place where we need to do this. This will make the code harder to follow. I think we should just make the options optional and not have the options optional.
I think we should use `Apply` here.
I think this is the only change that will break the old packages. We should either change the `identifier` package to be a new file or change the other packages to use the new packages.
This is a bit confusing, as the composite root parent is not in the same directory. What about the other functions that call `composite_root/root/root/` ?
Is this needed?
` Checks if value is a negative `Number` primitive or object. Zero is considered negative.
This is the only change that affects TF providers.
I think this should be done in a separate PR, but I think it's not necessary to do it in this PR.
this import is unused
Is this still needed?
Please revert this change.
This is the only place where we use `struct calico_nat_dest` - which is why I left it.
Why not just use `gradlew`?
This goimports was moved to `go-algorand` package.
Is this import needed?
This is a change in behavior, but I think it's better to make it `pattern`
I think this is not needed anymore
Should we be using `fmt.Errorf` here?
This should be added to the `master` list.
Why was this removed?
This is a breaking change. It's not a breaking change.
>LowestInsertedHeader? [](start = 8, length = 1) I think we should just call `LowestInsertedHeader` instead of `LowestInsertedHeader`
I don't think we need a class FakeApp because it is a class.
Not sure why this is needed.
I think this is a good idea, but I think it's better to keep the test around and just use the `edTarget` interface.
This was a bug, right?
@jridgewell I think this import is unused.
I think this is not the right way to do this. The `wavelength` is a `int` and not a `int` (which is a `np.int`).
I think you can just use `10 * time.Millisecond`
remove empty line
I think this is not the right place for this. The `chainID` is used for the `chainID` parameter.
I think it would be better to check whether the button is empty or not.
I think this is a leftover from the PR.
This is not used anywhere.
Shouldn't this be BuildIDOSEnv ?
Spark has started?
This is not needed.
I think we should move this to the `lib/common/use-handsontable` directory.
I think we should be able to remove this file, it's not used anywhere.
This should be done in `buildCallback`.
Why do we need to make it public?
Does this change have any impact on the change?
I think this is not the right way to go. I don't think we should be using this in the session name.
I think this should be `github.com/opentracing/opentracing-go`.
I think this should be `self.assert_eq(kidx, pidx)`
This is a breaking change.
Why did you remove the variable name?
I think this lock should be removed. The containerID is already locked in the lock.
Shouldn't we use `string $previous = Exception;` here?
In the future, we should use the `25` value here instead of ` 5`.
It's not clear to me why we need to set theYAMLTags here.
@dvoytenko: This is the cause of the issue, as the executor is not shutdown, right?
HiveTest#start will be called after all HiveTest classes are called. It will be called once per test. It will be better to have a test that calls `new TestHiveTest#start` and then call `HiveTest#start` to test that the test is called.
I think we should move this to a new protocol protocol.
This is not needed.
"immediately fail unless value is not zero"
I think this should be `self.overlaid or self.overlaid`
I'm not sure if this is the best way to fix this. The VUIDs tests are failing because of this.
This is not needed.
I think this import is unused.
This is not needed.
I think this is a good idea, but I think it would be better to write the timeout directly in the write method and write the connection directly in the write method.
Can we use a more meaningful name?
I think this import is unused.
This is a bit of a debug log, I'd rather see it as debug log.
This was a bug, right?
Line is too long. [81/80]
`NamedList` is not used in this class, it is not used in this class.
It's not necessary to use the variable name, it is a bit confusing to have a variable name.
I think this should be `INT8` instead of `tg`? We're not going to be giving up the default value for the user-specified node.
This is not needed since we already have a Clump in the database
Does the new controller have to be set to the new controller controller? I think it is still useful to have a new controller controller for the new controller controller.
This is a breaking change. We should just make it `defaultRuntimeRuntimeProvider` and have it default to `go` if it's not.
Please add `Clipoader` to this component.
This is a bit of a hack, but I think it's better to move it to the top of the file.
why is this change necessary? DiskList is already a pointer?
I think this is a leftover from debugging?
This is a change in behavior, but I think we should be using `apply()` instead of `commit()` in the `if` statement.
Why is this change needed?
I think we should keep the import block unchanged
why are these lines changed?
I think we can remove the `clip` variable here.
this is the fix.
Why not using `if` here?
This should be `--quiet_o`
Do we need to make this configurable?
I think this should be `query_args.append('versionId=%s' % self.version_id)`
This is the only change that affects TF providers. I think we should just remove it.
should this be in alphabetical order?
`index` is a `@property` so it should be `hidden_name`.
This is not needed.
tag is not a tag.
I think we should disable these in a future Saleor 4.0.1 branch.
Is this necessary?
I think this test was not actually dead, so it was removed.
This is a breaking change. I don't see it being used anywhere.
I'm not sure if this is the right place for this. The `color_enabled?)` test is still testing the `spec/controllers/controllers/controllers/controllers/` test.
This is not right. You are using `toUser` in the `coincash` function. You should use `toUser` here.
I think this is a leftover from the previous version
Shouldn't this be `Headers(DefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefaultDefault
Why is this needed? `if ($cart != null) {`
Why not just return LITERAL_FIELD.get(leaf) directly?
Can we move this test to `TestSendResponse`?
I think we should keep this, as we are not using `1.1` anymore.
I think this is not needed, since `test_flush_capability_if_enabled` already returns a bool.
I think this is not needed.
I think this should be an error. It's not clear why the retry failed.
this is not correct. It is not a blocker.
What's the purpose of this line?
I think this should be a constant
I think this is not right. We should not use `parseChecks` if we don't have a `checks` attribute.
How about `update_policy=incoming`? Then we could update the `incoming` argument and update the `incoming` argument to `update_policy`?
I think this is a bit confusing. We're just passing the window to the applicationDelegate, and then passing it to the applicationDelegate.
This is not the correct way to get the context.
I don't think we should set the `IsGenesis ?? false` flag here.
This is the only change that will need to be changed.
I think we should move this to the `coding: utf-8` file.
I think we should be consistent and use `platform` instead of `platform`.
This is a change in behavior, right?
This should be a debug message.
This is the only change that affects backwards compatibility.
This test was removed because it was testing the provExecution for a different file.
I think this is the fix.
I think we should create a `try/except` block in `INFLUX_PORT` and `INFLUX_TEST_DB` in `INFLUX_HOST` and `INFLUX_TEST_DB` in `INFLUX_PORT` and `INFLUX_TEST_DB` in `INFLUX_TEST_DB`.
We should add a little more coverage here.
`list of (validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.validation.
This is a change in behavior, right?
Style/MutableConstant: Freeze mutable objects assigned to constants.
This is not used anywhere.
I think this is not needed.
This is a bit confusing. `Model` and `strictPopulate` are not null, and `null` is not null. I think `model.schema.base.options.strictPopulate` is a `null` thing. I think it should be `null` here.
I think we should just remove the `Builders.Build.A.Block` part.
This is not a great solution. But I think it's better to do something like `append_newline ? ...` and then do `gs.endswith(str, slash_backslash)`
Maybe we should just make this a string.
Could you please explain why it needs to be passed in? I think it would be better to use the `File` interface instead of the `File` interface.
Don't remove space before `,`
Why is this import needed?
We should probably have a test for this, as we do not expect the stream to be null.
Please remove this.
The variable `w` should be renamed to `PublicSubnetsFromEnv` to match the other two fields.
This is a breaking change. It will be a breaking change.
This pylint disable is not necessary. `violations_tablename` will be used for all violation.
`new_exercise_ids` is a bit confusing because it is a bit confusing that we have a `new_exercise_ids` method.
I think this is a leftover from debugging?
This is not right. The `compute_max_num_readers` function will return a `partitioned` for each model. So, we should just remove the `data_reader->get_num_data()` function.
This is a breaking change.
Why are these `     ` changes necessary?
We should add a TODO to remove this
I think this is the only change that will break existing users.
I think we should rename this to `input-yaml` to make it clear that this is a public API.
@dvoytenko is this necessary?
Why is this import needed?
This can be a bit more specific, since the feed name is not a specific url, it's a very specific name.
this is the actual fix.
I think we can remove the `if len(country) == 0` condition here.
I think you can remove the QButtonGroup method entirely.
This is a bit weird, why do we need to stop all the datums?
This should be `protostuff.runtime.model`
I think this is the only change that affects the tests. I think we should just remove the `reason` parameter from the `track` action. We can do it in a separate PR.
This class is only used in the tests, so I don't think it's necessary to add this class.
Do we need to call `.to_host()` here?
You can remove this now that you are only adding a single unused link.
I think we should keep the old version and just set the default to `true`.
`s/unable to connect to %s/`
I think this is a bug fix.
This is a preexisting bug fix.
I think this should be a warning rather than an error.
This was removed because the `fixedWidthBinaryPageReader` was removed.
Nit: please remove the empty line
Do we need to set `pin`?
Shouldn't this be a `HeadLess`?
Why is this import needed?
Why not use the shorthand since we are not using it?
Unless there's a reason for this change, I'm not sure if this is the right change.
Do we need this?
this is the wrong way to do this. You're using virtualTree directly.
I think this is not the right place to put this. The `brmd.SetBranchID()` method is called before the `brmdcache` below.
This is the fix.
I think we should pass the config here, as it is already the default config.
why not use `currentPlayer`?
I'm not sure if this is the right way to do this. I'm not sure if it is worth it, but I'm not sure what the right answer is.
@mfojtik @jona86 I think this is the only place where we should set the agent.
Can we make this a constant?
I think we should remove the `GoldenRetriever` from the `RestoreFiles` list. We can just remove the `case` and `casecase` keys.
I think this should be `var`
Is this line still needed? I don't see it being used anywhere.
This is a change in behavior, right?
should we add a TODO to remove this?
why are we changing the tests?
I think we should add a `pkg/util/slice` to the `metav1` package.
Can you remove this line? It's not used anywhere.
I think this is not needed.
Is this NULL compatible with all the other non-lobGlobals cases?
Is this used?
is this used anywhere?
I think we should keep the previous version, otherwise the v0 will be saved. Otherwise the v0 will be saved in the v0.
This is a BC break.
I think this is the wrong way to do this.
Is this test case unrelated to the rest of the PR?
I think we can use AssertEx.IsTrue(importPeptideSearchDlg.CurrentPage == ImportPeptideSearchDlg.Pages.match_modifications_page, [], 1,5,5,5)
I think this should be `registerSchema`
I think this is a leftover from debugging I guess?
I think we should be using `f"{499}`, otherwise we'll get a lot of noise.
This looks like a typo.
What's the difference between `0x00000000` and `0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
end at 11, 4 is not aligned with if at 7, 23.
I think we should be consistent and say "record used as dictionary, otherwise we'll be getting equality comparison for free"
This is the only change that affects TF providers.
I think we should do this in `NewScanner` and not `NewNewScanner`
I think this should be removed.
I think this is a bit confusing, as it's a bit confusing that we have a `column_fields` that's a `dict` and not a `dict`.
I think this is a bit confusing. What about `GetExpectedUser`?
This should be `WPSEO_Tracking_services`
I think we should log the message here too.
`conf PCAP file might contain` -> `conf PCAP file might contain`
I think we should have a test for this, as it is likely a test that checks if the source is not triggered.
I think this is the only place where we use `lvis_v1_instance.py`
I think this is a good idea, but I think it's better to use the existing `hi` option for the new `end` component.
Should this be done in the `AspnetRouteTemplateResourceNamesEnabled`?
I think this is not needed.
I think this is not correct. The original code is correct, but the original code is not correct. The original code is correct: `total_instrs == max_bb_instrs` > `total_instrs == max_bb_instrs` > `total_instrs == 0`. The original code is correct.
I think this is the wrong type for this. The types are types that are not integers.
I think this should be `getParentSvg(s, this.getParentSvg(s, this.getParentSvg(s, this.getParentSvg(s, this.getParentSvg(s, this.getParentSvg(s, this.getParentSvg(s, this.getParentSvg(s))`
Why do we need this? It's only used in one place and it's only used in one place.
I think you can just use `wit` here.
you can just use `String.iface`
This is not needed. `permit_params` will be set to `false` in the `AdminAdmin` action.
why change this?
This is a bit of a hack, but I think it's better to move it to a separate test class.
This test is testing the same as the previous one.
if we are not setting this to `bool`, then we don't need to do anything about it.
I think we should check if the function is not a `aliases`.
This is a bug fix.
I think this is not the right place for this. We should just call `ListEvents` in `ListEvents` and `ListEvents` here.
I think we should also test the `DefaultClient` version.
I think we should remove this. We don't want to support the `binlog` in the future.
I think we can just use `self.tab_url` here, since we are already using `visit_open_url` directly.
I'm not sure if this is the right place for this. The `10 *` is used for a `net.graphsync_fetcher` (which I think is a good idea).
I'm not sure if this is the right fix. The `shiftAmountInt < 0` check is redundant.
I'm not sure why this is using the `C` enum.
I think this is a leftover from debugging I guess
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
Is this a BC break?
This is not the right way to do this. This is supposed to be `C_DEF` instead of `C_DEF`.
This include is not needed
This is a bit weird, why do you need to add view to the view?
Is this used?
I think this is the only place where we need to do this. We can just do `onCompletedCalled = true`
I think this is not right. We should not do it for any component that is not a component.
I think this is a leftover from the original PR.
This is not the right place for this, but it's not a problem, since the enum is not used in the `Encoding` enum.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this should be `ProviderProvider`
Shouldn't `core/events/javascripts/countly.views.js` be in `core/events/javascripts/countly.views.js`?
This is not right. We should only do this if `--ax` is true.
`self._bump_and_store_timestamp(collection_id, parent_id, record, * Card_id, parent_id, record, * Card_id, parent_id, record, * Card_id, parent_id, record, * Card_id, parent_id, record, * Card_id, parent_id, record, * Card_id, parent_id, record, * Card_id, parent_id, record, * Card_id, parent_id, record, * Card_id, parent_id, record, * Card_id,
Why was this removed? It looks like the `MemoryDiagnoser` was being used to pass the file name to the `MemoryDiagnoser` rather than the file name?
This is a bit confusing. What about `localFieldPath`?
I think this is not needed anymore?
I think we should use the standard `protobuf` constant.
Can you please add some some of these to the docs?
Is this a bug fix?
Why are we changing the order?
I think this should be `if len(prefixAsNibbles) == common.HashLength`
Why is this change needed?
I think this should be a `NullPointerException`. The reason for this is that if you use a NullPointerException it should be a `NullPointerException`.
I don't think we need this namespace. The namespace is already in the namespace.
You can remove this line.
@mjkkirschner I think this should be removed. If the user has a C++11 provided provided `info` then the `getUri()` will be executed.
Is this constant used anywhere?
This is a bit confusing, I think it's better to move this check inside `isHydrating` and then check for `options._root`
This is a bit of a hack, but I don't think it's worth it to have it in the `on_commit` function.
Is there a reason to copy here?
I think this should be `return ok := d.m != nil`
Please remove this.
I think it's better to use `HasConfig` instead of `Stats`
This line is not needed anymore, since lint is now set in the client.
This is a bit confusing. Why do we need to do this?
This should be in `export`.
I don't think this class is used anywhere. I would just remove it. The `uninitialized` class is used in `AbstractTestStaticMessageHandler` and `AbstractTestStaticFormatterRule` class.
I think this should be `Keccak.Zero`
Nit: This line should be indented.
This is not a good idea. Maybe something like `ColorGreen Color Color`?
I think we can remove the `prefetch` call here.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
This should be a `CloseResource` instead of a `Avroidx`.
Since this is a new setting, I think it would be better to make this configurable.
This is the only change that affects the change.
Please revert this file.
This function is no longer used in this file, right?
nit: this is a breaking change.
This is a breaking change. Please remove it.
I think we should use `if ((newAccount) {` instead of `if ( newAccount)`
This is a change in behavior, right?
why is this change needed?
I think this is not the right place for this.
Can we use `db_id` instead of `parent_of`?
Should we be removing the `_` prefix?
I think this is not the right place for this. We should only do this if `setupDev` is true.
I think we should add a `default` field to the help output. We could add a `default` field to the `buildEnvStored` field.
receiver is not necessary here, because issuer is already in issuer
I think we should remove this.
This is not right. ErrUnderpriced is a built-in value.
I think we can remove this line now.
Shouldn't this be `int` ?
Why are we doing this? If we are doing a dirty loop, we should also add a `TryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTryTry
This is not needed anymore
I think this import is unused.
Is this the right place to put this `typeWidth`?
I think we should use `encryption.ReferenceSize` instead of `APIServer`
I think this is a leftover from the previous version.
This is the only change that affects TF providers. I think we should keep this here.
I think we should use `proto.Consensus[protocol.ConsensusCurrentVersion]` instead of `!ok` here.
it would be better to use a list of args here
@deads2k @mfojtik why is this change necessary?
This is a breaking change. It's not a big deal, but it's a good idea to have it in a separate PR.
>vmultiplier [](start = 8, length = 6) nit: remove space after `[0]`
@deads2k i'm not sure this is the right place to put this here, but I don't see any other options in the codebase.
Why was this removed?
We should keep the previous reference to `ReactiveAdvice`.
This is a bit confusing, as it is a `string` not a `string`.
I think we should remove this
This test was removed because it was removed in #5376
I think we should use `t3lib_TCEforms` here.
This is not a good idea. The `DataType` is used for the same reason as `CodecDataInput` and `CodecDataInput` in the `ServiceElement` and `CodecDataInput` in the `ServiceElement` interface.
I think this should be in `renderers.render` instead of here.
I think we should add a `bundler` field to the error message.
I think you can get the `ResourceReference` from `getResourceType` to avoid the `getResourceReference` if it's not used.
Line is too long. [83/80]
In the past, the `combat` variable is not used anymore, so it should be removed.
This is a good time to remove the ow here.
I think we should import this and the other `dager` imports.
`Username` and `Username` should be on the same line as the ` TracerProviderBuilderSdk`
`nil` is a little bit confusing, why is it `nil`?
Is there a requirement that we don't need to know?
I think we can move these two lines into the `ROLES_CLIENT` module.
This import is unused.
Prefer single-quoted strings when you don't need string interpolation or special symbols.
Shouldn't github be imported at the top of the file?
I think we should use `next_payment_amount` here instead of `to_currency` as we do on line 686 below
@mjkkirschner @mjkkirschner @mjkkirschner @mjkkirschner @mitchellhenke can you confirm this?
This is a breaking change. The `JSON` is a `JSON` so it's not a `JSON` anymore.
Shouldn't we add a `AssertionError` to the public API?
This is a bit confusing, why not just use `nil` when there is no error?
Line is too long. [81/80]
This is a bit confusing. Why do we need a new `# NOQA`? Why not just have it be a `static`?
I think this is a bit of a weird pattern. I would have expected a `IpldStore` to return a `nil` object.
This is a bit of a hack, but I think it would be better to use `pubkey.hex(fp_bytes)` instead of `pubkey.hex(fp_bytes)`
This is a breaking change. I don't think we should be using this field.
I think this should be done in a different PR, but I don't think it's necessary to add this check here.
I think this is a leftover from debugging I think.
I think this should be called `isConnectedListener`
Could you please add a `refs` field to the `oldSearchSearch`?
This is a change in behavior, but I think it's okay to leave it in.
`Resolve<IMvxChildViewModelCache>().Cache(MvxViewModelInstanceRequest)` ?
Don't we need to catch exceptions like this? I think it would be better to catch exceptions like `exc_info=True` and then raise exceptions if it fails.
I think this is not needed anymore.
Please revert this import.
I think we should use the same `System.out.println` here.
Do we need this only if `flows` is `nil`?
No need to change this, it's a no-op.
I think this should be `@typescript-eslint/esended`
I think it would be better to have a `default` statement here, and then use that to set the default value to `true`.
Why is this removed?
Why is this needed?
This is not a part of your PR, but I think it's better to split this class into two classes.
I think we should not do this. It is a bit confusing to have a `setSelectedElement` method.
if we are changing the log level, we should log the info log at the beginning of the function.
Shouldn't this be `reinterpret_cast<T>.to()`?
I think we should make this configurable.
Can you please use a map instead of a conditional?
This is a breaking change.
I think this should be called `actions` instead of `this._super(arguments)`
I think this is a bit confusing, since `suspended: true` is the only thing that is set to `""`.
I think this should be debug level. It's important for the user to know the full path.
this is not needed
I think this constant should be a constant somewhere, not a constant.
The `RevisionField` is not needed here, since `c.RevisionField` already returns a pointer.
Why is this line removed?
The other `lat`s don't need to be updated. The `double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *,
This is a bug fix.
This is a bug fix. It should be fixed in the `MockObject` callback.
This is a bit confusing, as we are in the context of the disk cache, why not just have the logic in the `including` block?
why not `<=` ?
This is a pretty big change, but I think it's a good idea to make it so that we don't have to change the file name.
This is the fix. The else clause below should be kept unchanged.
Should we add "none" to blacklist?
I think we should log the port here.
I think this is a leftover from debugging I guess?
why not `list`?
This is a bit weird, why not just pass the `config.Target` to the `dvc.Join`? We could pass the `+config.Target` directly to the `dvc.Join` and then pass the `dvc.Join` directly into the `dvc.Join` function.
If you're using `AuditRPCWithTypesStatus` here, you should also call `sync.AuditRPCWithTypesStatus` here.
Should we move this to `pkg/resource/const`?
Can we add a TODO here?
I think this can be just `final`.
same here, if the string is empty, then it should be equivalent
Should we check that `BeEmpty` is not null before we try to catch it?
This is not right. The userWriterList is already a user, so you need to call `m_userWriterList.push_back`
I think we should keep the `NoArgsConstructor` field and use it here.
I think it would be better to move the `i.interceptors` declaration into `location.location` and then use it in the `location.location` function.
I think this should be `QQ`. The name of the params should be `QueryElevationParams`
This is a change in behavior, but I'm not sure why it was there before.
I think this can be removed now, since we don't use this version anymore.
`ipfix.NewIPCollectingProcess()` will do the same thing.
Why not just `num_simd_saved`?
why change this? I think it should be `2.2.1`
I think it would be better to use the required_subject parameter instead of passing the parameter.
This file should be removed.
I think this is a leftover from the previous PR
Why do we need to use `DEFAULT_DEFAULT_BATCH_DEFAULT` here?
@jridgewell I think this is the right place for this. We should be doing this in a template.published? Maybe we should be able to use a template.present? or should we use a template.version.present?
Why not just call `controlplane`?
`gcnArch` is already set in the `Cout` function.
I think this is a leftover from the PR.
I think this should be a flag
nit: I think this should be on the next line, since the list is not in the list.
@Eric89GXL this is the bug you mentioned in #1414.
Should we have a `VersionKey` property for this?
I think this is not needed.
@wachterjohannes Shouldn't this be the default value of `env`?
I think this is still not correct. The `assertEqual` call below should be removed. The only reason we're using the `self.assertEqual` method is because the bucket's rule is already in the `assert` method.
Add a space before `,`
This should be `c.populateVersion()`
I think you can get the result from `GetAddressDetails` directly, and get the result from `exe`
Should we keep this line?
I think it's better to leave it as it was.
I think this is a leftover from the previous PR.
I think this should be `@MetricKey`
Is this used?
This is a bit weird, why is this needed?
This is a bit confusing, I would have expected a bit more elaborate on the `erb` flag.
I think this is not needed.
TODO: this is not a TODO
Could you please rename this to `logger.info`?
I think this should be `args=subscript,`
I think this is a good idea. It's not a big deal, but it's a little bit of a hack to have a test that checks if this happens.
why not just use `getInstance()`?
I think this should be a `protected`
This is a bit weird. `getStandards()` returns a boolean, why not use `String.format`?
I would suggest to use the `ir_dims` parameter here, as it is used in the `if` statement.
Why not use `CreatedId` directly?
I'm not sure if this is the right place for this. The space is not needed. The space is not needed at all.
This include statement is not needed.
This is a bug fix.
Do we need this?
TIL `_clearfix` has a name for this content.
This is a bit weird, why is this being removed?
I think it would be better to always check for `results` here and always check for `isAllHealthy`.
nit: I would prefer `schedpolicy`, `schedpolicy`, etc.
why do we need this?
This is the only place where we use the `secure` parameter.
I think we should use `ExpireTableMetadata expireTableMetadata` here
I think we should be able to remove this struct. We should either have a separate struct or a separate struct in the central place.
This is a little strange. I think we should return an error here, and return the error.
This is a bit confusing, why do we need to have `tls` as a dependency?
I think this should be `OC.getLocale()`. Also, I think the `default` should be the default value.
This is not the same as `quality_metric_set::interface1`.
It's not necessary to have this in the parent class, since it's only used in the parent class.
I think this is a bit confusing, as this is a bit confusing to me. What is the difference between `tbase` and `allocate`?
so, if both eval and eval are specified, then the eval will be set to 1?
Should we create a `TODO` or something similar so we can get the Otlp enum directly?
I think this is not the right place for this.
why remove this line?
This should be a `volatile`
@deads2k i'm not sure this is the right fix. This is the right fix.
I think you can remove the `fstream` here.
This is a bit of a hack, but I think it's better to move the logic to the `throws` method, and then just do a `return new Promise(() => {...})` in the `catch` block.
can we make this a constant?
This is a change in behavior, right?
This function is used in a few places, maybe we should move it to a separate function? It's not used in this function.
This is the fix.
This is a bit of a hack, but I'm not sure why we need to do this.
I think this is a leftover from debugging I guess?
Does this return the result of the function?
why is this needed?
Use the new Ruby 1.9 hash syntax.
can you add the `noConflict` flag in the `build-system/common/register.py` file?
This test should be `CartItemTestCase`
I think this is not the right place for this. The problem is that if you have a cache with a `VerifyingKeys` then it will be present.
I think this is a leftover from debugging I believe.
I think this is not right. If the quiet time and notifications are quiet then notifications are notifications.
Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
This is not a correct change. `repo_private?` will always be true if `force_private?` is true.
This is the only place where we're using GetActiveApp, is it?
"TLS or solicited routes will not be verified"?
This is a breaking change.
This is a breaking change.
This is a bit of a hack, but I think it's worthwhile to leave it out.
The `EC.element_to_be_unclickable` check is not needed here.
This is not needed. `dataFile` is already in the `File` interface.
I think we should be using the `Date` field here.
Why is this line removed?
I think we should use `kubeedge/beehive/pkg/core/context` instead of `kubeedge/beehive/pkg/core/context`.
This should be a constant.
Can we use `TCountment` here?
Is this the right way to do this? Shouldn't we just pass the `httpHandler` to `http.Deps`?
Unused method argument - `eq.log``. If it's necessary, use `_` or `_` as an argument name to indicate that it won't be used. You can also write as `_` if you want the method to accept any arguments but don't care about them.
This is not needed.
I'm not sure if this is the right place for this. The default is `false` if it doesn't exist.
@mfojtik why is this change necessary?
This change is not related to this PR, but it seems to me it should be reverted.
remove this line
I think this is a good candidate for a helper function.
This is a change in behavior, but I think it's safe to change.
do we need to keep the comma?
I think this is not the right way to do this. This is a bit of a hack, but I think it's better to do this in a `select()` method.
I think this should be `[]string`
commit.h is already in the list
Why wait for 5 minutes?
This is a bug fix.
why are we changing this?
I think we should keep the `Bootstrap` prefix here.
Why not just call `samplingPirority` directly?
This is a bit of a hack, but I don't think it's necessary to have this default.
Is this change necessary? I would expect `procedures_prototype` to always be a string.
nit: `\r` is a faster name.
This is the only change that fixes the issue.
I think this should be `process(messageFrameStack.peekFirst(), operationTracer)`
These two functions are no longer needed, right?
I think this is missing the `=`
I think this is the right fix. The other occurrences of this PR've merged merged into master.
Can we make this final? We don't have access to theimplemented table.
this const is not needed
The `app/index.py` file is covered by `pkg/config.py`
I think we should add a `@var` tag to the `code` tag.
I think this should be in a separate commit
I think this should be done in the `SafeAreaInsets` class instead of here.
"**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**`**
This is a bit of a hack, but I think it's better to move the `destruct_thread` call into the `global_thread` function.
I think we should add this to the `log_path` below.
@smarterclayton do we want to make sure we don't break the existing semantic semantic semantic semantic semantic semantic?
no need for an `int` here.
Do we need this? We're already doing `all-apis-forwarding` in the `SR.extern.js`
Is the `custom` needed?
Why is this a valid cluster id?
I think this should be `if (bridge.getHost().isLocalFile(loadingUrl))`
Note generally it is not covered by tests
I think this should be `createSolrConfig(dcore, coreLoader, trusted);`
Is this a typo?
This is a bit confusing. What is the difference between globbing and the returned path?
I think we should use `AWSRegion` instead of `ec2`
This is a breaking change, since the version is not in the UI.
@jridgewell I think this was the only place where we needed this method.
go added because of the PR description
I think this is a bit confusing. I think we should use `Pundit::NotAuthorizedError unless current_user.can_org_admin?` instead.
I think this should be a warning, not a warning.
This line is not needed. `db` is already being called in `collection`.
`time.openenium` is not supported in this case.
This is a breaking change.
What if `CountlyGlobal.company` is empty?
Is this change intentional?
Dict is not a list, so it should be a list.
Nit: newline should be before the last line.
I think we should move this to the cluster package.
Why not using the $product->getRef() directly?
I think this is a leftover from the previous version, not a big deal.
This should be initialized in `SystemProperties` and not here.
This is not right. You're using NET45 in all cases.
I think we should return the error here.
I think this is still useful, but I think it's a good idea to remove the `missing` part.
Please remove the extra space before the `}`
I think this is a leftover from debugging debugging?
This is not right. The service config is not created yet.
I think this should be `public const`
I think we should just return error here. We should only retry when retry is 1.
What is the purpose of this `ARM`?
Use the new hash syntax.
const reference is not needed anymore
@jridgewell I think this is the right way to export the `use` action.
I think we should call `clone(this.hooks, clone)` here.
I think we should keep the bool here.
Can we make this a constant so it's clear what it does?
This is a bit confusing. If we have a `crash-data-subrow` class, we could use `id` instead of `crash-data-subrow` here.
I think this is still not correct. `assertEquals` is now called `failure.c`.
I think we should be using `string()` instead of `string()`.
why this one is 0?
I think this should be defaultTitle
It's better to use `SampleType.of_SampleType()`
This is a bit confusing. Why not just use `return xxstrdup(char * *) digest;`?
I think this should be a separate commit
This is a breaking change. It should be in separate PR.
fix that! this one
I think this should be `tm`
I think this is a bit confusing, as we are not using `\s` on the version string.
I think it would be better to just alwaysReady and alwaysReady directly.
I think this is a good idea. If the `mongoClient.s.options.autoEncryption.cryptdConnectionString` is true, then the `autoEncryption.options` will be false.
This isn't necessary, since the switch is already in the same place.
`RuntimeError` is a better name for span id. It's not a big deal, but it's a little confusing.
I think this is a bug, since `unsignaled_semaphore` is not a queue.
How about using `lookup` here?
Can we have a better name? AppStarted?
Is this a typo?
Is this needed?
I think we should just remove this, it's not needed.
I think we should be using `Abstract` instead of `Error` here.
I think we should also support the old server-side information.
This is a bit of a hack, but I think it's better to check for the return value of `target`.
Should we also check for `errShouldUnload` here?
I think we can do `Topic.find_by_slug(id: topic.id)` here instead of `Topic.find_by_slug(id: topic.id: topic.id: topic.id: topic.id: topic.id: topic.id: topic.id: topic.id: topic.id: topic.id: topic.id: topic.id: topic.id: topic.id: topic.id: topic.id: topic.id: topic.id: topic.id: topic.id: topic.id: topic.id: topic.id:
Do we need to check for `is_svd` here?
execution -> cleanup?
This should be validateed in `validateFlowExporterConfig`
Should we add a note that this is a public API?
This is not right. `if (hasQualifiers)` will always return false if `hasQualifiers` is true.
why is this removed?
This should be in the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root
Is this needed?
Shouldn't this be `array_filter($authors, function ($a)`?
This is a very minor thing, but I think we should just make this a function.
This was a problem before, but I'm not sure why we would want to remove the password for the password.
Why did you remove the `if` here?
This is a change in behavior, right? The code below is not supposed to be called for every invocation of `Text.standardize`
Why is this always `false`?
This is a bit weird, why not use `source_count`?
I think this should be `api_quota_configs = config.get('api_quota')`
I think this is the only place where we use the `MoveMove` package. I think we should remove the `MoveMove` package from the `MoveMove` package. The `MoveMove` package is used to compile on the `MoveMove` package. The `MoveMove` package is used to compile on the `MoveMove` package.
This is a breaking change.
I think this is not needed. scruner is imported but imported but unused.
Why the overflow?
Nit: please use the same variable name for the new one.
I'm not sure if this is the right place to put this. If I'm reading this right, I think it would be better to have a `Options` struct that does the config and then pass it to `Config` in the `Options` struct.
We should avoid import cycle, as it's a dependency on pyramid.
I think this should be `Group.GraphQL`
Why is this removed?
Why did you remove this?
Is this needed?
I think this is a leftover from debugging?
I think this should be a warning rather than an error.
Why `int64` and not `int64`?
Would it be better to use `getHealth` here?
I'm not sure if it is a good idea to add the ``cls.warning`` to the ``cls.warning`` case.
is this not needed anymore?
This is not needed. `listen_host` will be set to `None` when the `host` is `None`.
This is a change in behavior, right?
why not just remove the bool argument?
Does this change need a license header?
why is this necessary? if it is, then just return null.
I think we should keep this, as it is used in the `locustio-taurus-wrapper` file.
This is the only place where we use `ListServices`...
Can you add a space between `v` and `v2`?
I think we should remove this.
I think this should be `globalVars.appDir, "lib"`, not `appDir`.
`DisableInMem` is not used in this struct.
Use normalcase for variable numbers.
Maybe this should be called _after_ the guard clause, instead of _after_ the guard clause, and _after_ the guard clause, so that the guard clause is not needed.
I think this is the only change that will be needed if the exception is not thrown. The `message` is not an `int` in the `try` block.
Why is this being removed?
Use a guard clause instead of wrapping the code inside a conditional expression.
I think we should be able to remove this code.
Do we need to update the vector vector here?
This is the only change that affects TF providers. I think we should keep this as it was before.
@jridgewell I think this is the right fix.
why not throw an exception if the previous previous was not found?
Please don't change the signature of this variable.
@joda/scalablecory, I think this is the correct way to go. Also, I think it should be `org.joda.time.Period`
missing '.' at end of line.
This is a bit odd.
Why is this needed?
I think this is a leftover from the previous PR.
I think this is a leftover from debugging I guess?
Style/RedundantSelf: Redundant return detected.
Prefer single-quoted strings when you don't need string interpolation or special symbols.
`streamHandle` should be on the next line.
We should probably add a `cursorState` command to the command, and pass it to the command.
This is a change in behavior, right?
I think this should be `bucketRegex` instead of `bucket`
This is a breaking change. The `ApiModel` is a `PackageTransformer` and not a `ApiModel`.
@wachterjohannes Shouldn't this be `Greg`?
Can we use the containerized flow?
`role` is not really needed here, it is already checked in the role
nit: `defaultValue != null` is unnecessary. `getBoolean(property)` is already checked in the `boolean`.
Is this not needed anymore?
I think we should use `node` instead of `contains`
How about `svidPath` and `path.Join`?
Should we use `string?` here?
This is not needed.
I think this is a bit confusing to have a `ITableObject` interface. I think it's better to have the type `TableObject` as a `ITableObject` and have the type `TableObject` as a `ITableObject`
This is the only place where we need to include the filename.
We should probably make this a constant.
This line is not needed.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
What is the reason for this change? Is it related to the change in `curTagCount`?
Why is "none" added here?
Why did you remove this?
This is a bit of a hack, but I think it's worth logging out the debug output.
Should this be using the `builder.AddDiagnosticSourceInstrumentation`?
Not sure if this is needed
I think this is a bit confusing, as `root` is not a `let` in the `root` of the root root. I think we should just call `let` instead of `root` here.
Why is this change needed?
This is a little hard to follow, but I think it's better to return a `Fee` than to change the return value.
why do we need to specify a string here?
Why did you change this?
Can you please add a `TODO` here?
I think we should use `rand.update` here.
I think we should add `@SuppressWarnings("unused")` to this flag to make sure we don't change the default value.
