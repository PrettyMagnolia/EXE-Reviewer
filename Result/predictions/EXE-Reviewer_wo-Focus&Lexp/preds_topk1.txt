I think it would be better to have a default value for the default value.
This is not needed.
This is a bit of a hack, but I think it's better to use the `load` method here.
I think we can remove the `!` here.
I think we should use `isNavigating` here.
I think we should change the signature of `attachment_PAYMENT` to be consistent with the other methods.
I think this is a good time to move to a separate file.
Style nit: This line can be simplified to `snprintf_s_iiii` if you want.
I think we should log the keyboard state here.
This is not needed.
This is a breaking change.
I think this should be `shared != nil`
I think this is a bit of a hack. I would say that it's not a `<a, 'render'>` but it's not a `<a, 'render')`
This is a bit of a hack, but I think it would be better to do a `Equals` check here instead of `Equals` for the parent.
The last two conditions are a bit odd, why not just use `w.logger.Info("no image to be updated")`?
I think this should be removed.
Why is this needed?
Why the change?
I think this should be changed to `EXECUTION_STOPPED`
This is the fix for wlr_input_device_destroy.
I think this is a bit of a mess, but I'm not sure if it is worth it to just have a task task for the task task.
This is a bit of a hack, but I think it's better to have a test that checks if the path is not present.
This is a change in behavior, but I think we should be able to use `DoubleType.equals` here.
@Scottmitch why is this needed?
this is a bit weird, you are using the Lang::getDefaultLanguage() to avoid the null check.
This should be removed.
Why is this check removed?
This is a bit of a hack, but I think it's better to move this to the top of the file.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is a bit of a hack, but I think it would be better to have a test that checks for `org.jboss.weld.StringUtils.isWorkDirectory()` and `org.jboss.weld.weld.StringUtils.isWorkDirectory()` and `org.jboss.weld.weld.weld..AwaitC.HDDS.HDDS.HDDS.HDDS.HDDS.HDDS.HDDS.HDDS.HDDS.HDDS.HDDS.HDDS
This is a very generic class name. I'd rather have it be named `LibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibrary
Do you need to make `result.stdout` a global variable?
I think this should be moved to `s/utils/`
I think it's better to use a separate variable for this.
I think you can just do `mset.mirrorInfo()` instead of `mset.Error`
I think this is a bit of a hack, but I think it's better to have a test name that does not have a `topicName` as a parameter.
why change this to []byte?
This test is testing the wrong thing. The test is testing the wrong thing.
I think this is a bit of a hack, but I think it's better to have a separate method that takes a `@since`, and then pass it as an argument to `get` method.
I think this is a good change. We should just make the `SetTag` return the value of the `Tags.Version` and then use that in the `SetTag` method.
This was a leftover from the previous PR.
remove 2014CERN.
I think this should be removed.
I think we should add a `.each` here to avoid breaking the API surface area.
Please use `===` instead of `null`
This is a bit confusing, as it is a `VALIDATORS` field.
This import is unused.
this is not needed anymore
I think this should be `time.size() == 0`
I think this should be `kwargs.get_subset_pipeline(pipeline, solid_subset)`
I think this should be a separate commit
I think we should just call `Load()` here.
why did you change this?
This is a bit of a hack, but I think it's better to move this logic into the `PlayerData` function.
I think we should just log the time.duration here.
I think we should be able to use `set Promise(lib)` here.
What is the TODO?
I think this is a leftover from the previous PR.
@mfojtik why do we need this?
This is a breaking change. I think it's better to keep it.
Please use `Collections.emptyMap()`.
I think this should be `return positive(argName, number, null);`
Is it possible to pass the nextNodeId to the plan?
This is a no-op, but I think it's better to move the `if err != nil` check inside the `if` statement.
I think we should be able to remove the `else` clause here.
This is a change in behavior, but I think it's better to have a single `format_balance` method that returns the value of `XRB`.
I think we should add a `database_text` field to the `database_text` field in the `database_text` field in the `database_text` field.
I think we can just use `aws.cluster.sigs.k8s.io/` here.
I think this is a leftover from debugging.
I think this should be `final`
I think this should be `padding: 0`.
This is a bit of a hack, but I'm not sure why the assert is needed here.
Can we add a `@link` method that takes a `patch` and then just pass it in?
>table->isExternalTable() [](start = 12, length = 6) nit: we usually use `! bindWA->allowExternalTables` instead of `! bindWA->allowExternalTables`
(style) please, no space before tabs
This test is not testing what we want. I think we should be testing that the new name of the test is correct.
I think we should also update the `win_id` to `win_id`
This should be `Exception`.
I think we should use the `Warn` here.
Shouldn't we have a `null` constant for the `RESTRICT` class?
This is a bug fix. The `json_array_size` is not a valid value for the batch->state_trans, so it is not a valid value.
This is a little confusing, since it's a `@cmd` variable.
this is a little bit weird, why are we making the default argument optional?
why is this changed?
I think it is better to have a manifest as a constant.
I think this is a leftover from the previous PR.
I think we should also have `zx2c4.com/wireguard/device` here.
I think this is a bug fix. It's not related to the fix, but it's not a problem.
Why do we need this check?
Nit: I'd prefer if we could remove this line.
I think we should use `stream` here.
Why not just use `copy()`?
I think this should be `NewController`
This is a bug fix. The idea is that if the node is not a resource, then the node is not a resource, then the node is not a resource, and the node is not a resource, and the node is not a resource, so the node is not a resource, so the node is not a resource.
why is origin required?
This is a bit of a hack, but I think it's better to have a test for this.
I think this is a good change. It's not a problem, but it's a bit odd to have a list of keys in the list.
This is a good change. I think we should be able to remove the `&` and `&&` from the `&` and `&` from the `&`
Is this needed?
This is a bit of a hack, but I think it's better to use the `Pair<ExecutionReference, ExecutableFlow>` here.
I think this is a good idea. But I don't think it's worth it to just remove the `isArray` check.
This should be `null` if `ariaHiddenValue` is not `null`.
How about we use `listlist` instead of `listlist`?
I think this method should be called `getImage`
Please remove this.
I think we should just use `c.lock.RLock()` here.
Layout/EmptyLinesAroundClassBody: Extra empty line detected at method body end.
I think this is not needed.
Is this necessary?
(style) line over 80 characters
This should be removed.
Why did you change this?
This is a breaking change.
Why is this removed?
This is a breaking change. We should probably just add a `default` to the `docker-volumes` struct.
Can you revert this change?
I think you can remove this line
I think this should be `breakpoint = textList.append(breakpoint)`
I think this should be `_w3c_count`
We should probably add a `Read` import to the top of the file.
I think we should add a new event handler here.
Why is this needed?
I think we should use `kubelet.io` here.
Does this mean we can't just remove the old one?
I think this should be called `ioctl/cmd/xrc20`
I think you can just use `inst_param` here.
I think this should be `transient`
I think you can also specify a full URL.
@smarterclayton do we want to keep this as it was?
This is a bit of a hack, but I think it would be better to have a separate function that returns the `obj` object, and then use that in the `typeOf` function.
What is the reason for this change?
This is a change in behavior, but I think it's better to move this check inside the `if (isDarwinMono)` condition above, and then remove the `if (isDarwinMono)` condition below.
I think this should be abstract and not int.
I think we should remove the `!upload-success` field from the response.
why do we need to keep this?
This is a change in behavior, but I think we should keep it.
Can we make this a constant?
I think we should be able to use `FORBIDDEN.getStatusCode()` here.
I think we should just remove the `tag` field from the `text` and `text` field from the `text` field.
I think this is a bit of a hack, but I think it's better to move this to the `for_fiscal_year` method, and just use `scope(created_at: range[:start_time]...range[:end_time])`
this is not needed, we have already done this in the function
This is a bit of a hack, but I think we should be consistent and have the same naming of the `.other` file for the `stringified_symbols`.
Can you add a type hint for this new parameter?
I think you can remove this now that you are not using it anymore.
This is a good change. It's not related to the fix, but I think it's better to keep it.
I think we should add a `V(4)` here to make sure we don't get the right message.
This is a breaking change. I think it should be fine to just make this `internal` statement an `internal` statement and have the same effect.
I think we should use `can_html_index` here.
Use the new Ruby 1.9 hash syntax.
just a thought, do we need to add this to HRNet too?
Why are these lines changed?
I think we should keep this check here.
I think this is a good time to remove the `Restoring` command, since it's not a part of the debug command.
Why did you remove this?
Is this a debug print?
I think we should just remove this method and just call `return c.ic.req.Features{}` here.
I think we should change this to `ListAPIKeys`
This is the only change that affects the file name.
this is not a bug, you should use `data[:-1]` instead
I think this is still not needed.
You can use `#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{#{
This is a bit of a hack, but I think it's better to move it to the `path}:{line:3d}:{column}:` class.
Style/StringLiterals: Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think we should use the `getStatus(...)` method here instead of the copy block.
This is a bit of a hack, but I think it's better to have a `states` property that does the same thing.
Why do we need to change the order of parameters?
I think this should be `constexpr`
This should be a module-level module.
This is a breaking change. I think it would be better to have a separate `AlertQueryURL` field that is used in the `alertQueryUrl` field.
Why is this changed?
How about 'should not mistake cyrillic l'?
I think we can just use `agentlessID` here.
I'd prefer if we didn't have to remove this file, it's already in the `spec_helper` namespace.
I think we should be able to remove the `isLoggable` check here.
I think we should keep these as public and make it private.
This was the only change that was needed to support the `go-multiaddr` package.
I think we should keep the old version as the new version.
Please avoid using wildcard imports.
Line is too long. [83/80]
This is a breaking change.
I think we should use ``.second` instead of ``.`.
Please use `Login` from `Status`
I think this is a good change. It's not a big deal, but it's a bit odd to have a default value.
Why is this needed?
I think this is a good change. It's not a good idea to have a test for this.
We should probably use `new ReadPreference(readPreference) : readPreference` here.
I think this should be moved to the `default` package.
I think we should be able to just use `LOG.error` here.
Is this needed?
I think this is not needed.
This is a change in behavior, but I think it's better to use the default value of `1` instead of `1`.
we could also just call this `check_disabled_client`
I think this test should be moved to `build_system/test_app_test.py` instead of `build_system/test_app_test.py`
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
This class is not used.
Can you please change the type to `def _ := r.Seek(0, 1)`?
I think we can just use `FetchKeySet()`.
I think we should just make this a class constant.
Is this used anywhere?
This is a bit of a hack, but I'm not sure if we should be using the `trafodion/hive/tpcds/customer.dat` file here.
I think we should use the path as the path as the path is not a path
I think we should use the `switch` package here.
Should we add a guard clause here?
I think we should use the same `snprintf` here.
This should be `AnyTimes()`.
I think this can be removed now, since the ARM32 is not implemented.
I think we can get rid of this field entirely.
So, if we have a non-null value, we should use the same value for the `avatar_filename` field.
I think this is a change in behavior. The `.Unavailable` is not a valid error message.
This is a breaking change. It is not a public API and should be changed to use the new API.
This line is not needed.
I think this should be `q,w,"Access-Control-Allow-Origin: *\n\n"`
This is the only place where we can actually use this.
I think we should remove this and just change the `requiredOwned` to `listbox`.
This is a bit of a hack, but I'm not sure if it is worth it to just call `costMethod()` on the `Update` method.
I think we should add `.ProtocolNum(ProtoIPIP)` to the `.ProtocolNum(ProtoIPIP)`
I think we should use `putOpt` here.
Can you please add a space after `:visible`?
This is a change in behavior, but I think it is better to check if the value is null.
This is a change in behavior, but I think it's better to make it clear that this is a different error.
This is a change in behavior, but I think it's better to keep the `out` prefix as it is.
This is a change in behavior, but I think it's better to have a `for 0` and a `for 0` and a `for 0` and a `for 0` and a `for 0` instead of `for 0`
I think you can just use the `os.path.join` helper here.
remove this line
These methods are not really needed since they are in the `before_action` folder.
Please use Dimensioned internally.
Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is a change in behavior, but I think it's better to make the `std::size_t` a local variable.
this was a bug
remove empty line
I think this should be a separate commit
This is a no-op, so I removed it.
The `./dumps/courseData` is not a valid module name, so you can use `./dumps/courseData` instead.
This is a bit of a hack, but I think it's better to have a test for this.
Why is Array required?
I think we should also update the `tls1.1` and `tls1.2` to be consistent with the other `tls1.0` and `tls1.2`
why remove the `dockerID` parameter?
This should be removed.
This is a breaking change. Why is this needed?
This was a bug in the previous commit.
I think this is a bit of a breaking change. What do you think about adding a `<img className="googlesitekit-publisher-win__small-image" alt="" src={ smallImage } />` to the `<img className="googlesitekit-publisher-win__small-image" alt="" src={ smallImage } />` to the `<img className="googlesitekit-publisher-win__small-image" alt="" src={ smallImage }` part of the `<img className="googlesitekit-publisher-win__
Please avoid using wildcard imports.
This is a no-op, but I think it's better to move it to the `.h` file.
I think this should be `core_location`, not `location_factory`.
This is a bit confusing, as it is a `static`.
I think we should use `Number(value) >= 275761` here.
I think this is a bug fix. The `createFromData` is not used in this method.
why change this?
This method should be renamed to `_shared_ID`
This is a bit of a hack, but I think it's better to have it as a `system_system` rather than a `system_system` since it's a `system_system`?
I think we should use the `-4` constant here.
I don't think this is right, you can do: `<%= @note.class.name) : :title => t('browse.note.report') do %>`.
I'm not sure if this is a good idea. I'm not sure if we should be using `path_resolver` in the code base.
This is a change in behavior, but I think it's better to have a test that checks for `v -> Objects.equals` and `v ->s.contains`
This is a very generic name. It's not really related to the rest of the PR, but it's not really related to the rest of the PR.
can we also check if this is a `presto`?
I think this should be `NULL && ptr==0`
I think we should just remove this
Shouldn't this be `if acc != s.sys != nil && acc != s.sys.account {`?
I think we should use the same name for the `chromium` key.
This should be `@Deprecated`
I think we should just remove the `DD_HTTP_CLIENT_ERROR_STATUSES` constant.
Why is this here?
I think we should check for `overwritesExisting` here.
Is there a reason why you added this change?
I think this is a bit of a hack, but I think it's better to check for the `current_user.requires_profile_attention?` check instead of checking for the current user.
Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this should be `.atOffset(ZoneOffset.UTC);`
why remove this?
Could you please add a space between `if` and the `,`?
This is a breaking change. It's not a big deal, but it's a bit odd to have a method that returns a protocol context.
@davidjumani is this change intentional?
I think we can remove the `model` tag now.
I think this should be moved to the other test file.
I think this should be `uplink.config.cache`.
This is a change in behavior, but I think it's fine to leave it as is.
Do we need to change this?
you can delete this line
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
Why not return `false` here?
I think we should keep these as `python_requires`, otherwise we will have to update the dependency on `python_requires`
What if we have 3-bin flags for the same reason as the existing `else` branch?
This file is not used anymore.
Can you remove this line?
do we need this?
Shouldn't this be `.warn`?
This was a bug, but I was wondering if we should just make this `/` instead of `/`
Line is too long. [83/80]
This is not necessary. `isArray` will always be empty.
This is a change in behavior, but I think it's better to move the `clientDataType_` call into the `wasHiveString_` method.
I think this is not needed.
I think this should be `iproto`
Can we just make this `return nil`?
@jridgewell I'm not sure if this is the best way to handle this, but I'm not sure if it is worth it to just add a `concurrency` option to the list of supported values.
Why is this removed?
@jcotela is this a breaking change?
why are we adding time.Hour here?
Should this be `iss.Email = nil`?
What is the reason for this change?
I think this should be changed to use the `driver.find_element` function.
This is a good change. I think we should be able to remove the `prompt.New()` call here.
>bytes? [](start = 8, length = 6) nit: `0x` is unnecessary.
This is a bug fix. The `vNode.children` is not used anywhere else.
This is a change in behavior, but I think it's better to keep the `ReadAsync` method and return the `WriteAsync` method.
if subscription.stripe_customer_id is not a global var, should we use a local var?
This is a bit confusing, as it is in the `approver_email_address` method. It is used in the `approver_email_address` method. I think it would be better to move this logic to the `approver_email_address` method.
We need to make sure that the filename is not a `const`?
Should this be `throws`?
Is this change intentional?
I think this is a good change. It's not a good idea to add a `getPlayerByNameWildcard` method to `getPlayerGuids` that is used in the `try` block.
I think we should keep the original name here.
This is a little confusing, why is the error returned by the `BuildRequired`?
I think this is a change in behavior. We should not be using it in the public API.
I think we should keep the number of arguments for the same name.
Why are we using `package` here?
I think this is a good time to catch all errors that are not in the same error message. It's probably better to just catch all errors that are in the same error message.
This is a bit of a hack, but I think it's better to move it to the `if` block.
I think it would be better to use `extractWithRemoteSpanContext` here instead of `IsValid()`
What is the ` paginated` variable for?
Please use `blacklight_export_secret_token` instead of `app/views/export_secret_token`.
This is a test, but I think it's better to use `ValueError.empty()` instead of `ValueError`
I'm not sure if this is the right fix. The `dmc->size` is not the correct fix.
Should we use `DataDir:                ` here?
I think this should be a `ipsecESPOverhead` instead of a `ipsecESPOverhead`?
I think this is a breaking change. The `DataContainer` is not a `DataContainer`.
remove empty line
I think we should log this message as well.
This test is failing because `fileServer.Pages` is not being used.
Why not just use `bindings` here?
Shouldn't this be done in the `VUID-vkCmdPipelineBarrier` class?
`request` is not used anymore.
This is not needed, we already have `offlineMode` in `plugins/pluginManager.js`.
This is a bit of a hack, but I think it's better to move it to the `if` block above.
why do we need to pass the full full list here?
I think this should be `vim-for-rails-developers`
This is not used anymore.
I think this is a good change. I'd rather have a `TODO` that we can get rid of the `TODO` and `TODO`s.
I think this should be moved to the top of the file.
I think you can just use `cb_state` here.
should we also add a `name` attribute to the DB?
I think this is a leftover from the previous PR.
Why did you remove this?
I think this is a breaking change. The `GETLevel` is not a `GETLevel` and the `GETLevel` is not a `GETLevel`.
This is a very minor thing, but I think we should be able to use `version=int` instead of `version=int`
Is this method used by other places?
I'm not sure this is needed.
Why this change?
This should be a `const`
This is a change in behavior, but I think it's better to keep it as it was.
nit: I think it's better to name it `--mac_signing_identifier`
I think we should just remove this if statement and just do `if portData == nil { // rule does not exist, portData != nil }`
I think we should be able to remove the `.multi` here and remove the `.multi` in the `.multi` file.
I think this is not needed.
This is a no-op, right?
I think this function is not used anywhere.
should be `use Thelia\DialogInterface`
I think we should remove this link from the tests.
I think this should be `azkaban.jvm.cmd.args`
I think we should remove the `__(` and `_x( 'Analytics', 'Service name', 'google-site-kit' )` part.
I think this is a good change. It's not a big deal, but it's not a big deal.
I think this should be `VK_NULL_HANDLE != swapchain`
I think this is a good idea. It's not a blocker for the `wallet` block, but it's a blocker.
Shouldn't this be `message.report(..)`?
This is a change in behavior, but I think we should be able to remove the `ExecuteContractRead` call here.
This is a bit of a hack, but I think we should be able to use the default here.
This class is no longer used.
Is the right answer here?
do we need to add the `.PORT_SES` to the start_ses function?
We should probably add a TODO here to make sure we don't get a `rename` field in the future.
This is a little confusing, as it is a `Configuration` module, and it is a `Configuration` module. I think it's better to use a `Configuration` module, and use a `Configuration` module.
@matt-gardner, I think we should keep this and have it be a string.
I think this is not needed.
This test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the
This class is not used.
It seems that this file is not used anymore.
I think we should use `responseEx.setStatus(response.getStatusCode(), response.getReasonPhrase())` instead of `responseEx.setContentType(produceProcessor.getName())`
I think we can remove the `.NewTestCStorPools()` call here.
Can you please update the doc accordingly?
I think this is a good change. It's not a big deal, but it's a bit odd to have a test that checks for the handler.
Why do we need to remove this?
Why is this change necessary?
I think this should be a `skipOSConfig` instead of a `string`?
@bryevdv, I think this is the right fix.
This is a bit of a hack, but I think it would be better to have a test that checks if the `err` is `nil` and then return `err.Body.Close()`
This is a little confusing, it's not a thread-safe change.
Can we revert this change? It's not used anywhere else.
I think this is a bug fix.
The `fprintf` call here is unnecessary.
I think this should be `array_key_exists`
I think this is a leftover from the previous PR.
I think this is a breaking change. It's not a big deal, but it's a minor thing.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
Style/StringLiterals: Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this should be `WithWarmupCount(1) // 1 warmup is enough for our purpose`
This was added to avoid a new PR
Why not just call FinishMigrateRepository directly?
This is a little hard to follow. I think we should just use the `Start` function here.
This is a little confusing. How about `stress_test`?
So, the method `TopicPayloadPoolRegistry::release(reader_payload_pool_);` is never called, right?
I think we should be using the new one here.
Why do we need this?
I think we should just use `bool` here.
I think we should not have this in the first place.
why do we need to limit it?
@jridgewell I think we should remove this.
This is a very minor thing, but I think it's better to make a simple simple `NewPrimaryPrimary` method that returns a simple string, and then call `NewPrimaryPrimary` in the context. This way we can avoid the need for the `Executor` field.
I think this is a leftover?
This interface is used to apply operations on the AST.
I think this is a good change. It's not a good idea to have a name for this function.
remove empty line
Nit: please move this up with the other `github.com/aws` imports.
I think this should be `deleteStack` instead of `PipelineSecret`
This should be `Requires Hadoop >= 2.3.0`
Should we use `apimachinery` here?
I think this is a leftover from the previous PR.
I think we should remove the extra lines
I think this should be `errors.Duration`
I think we should just remove this check.
This test is not needed.
I think this is a bit of a hack, but I think it's better to have a test that checks for this function.
Please use `String#Equals(String, StringComparison)`
Why is this changed?
This is a change in behavior, but I think it's better to move this to the `window.Promise` instead of adding a new parameter.
This was a bug in the test.
This function is used in a few places, maybe just `join_TO_LAMBDA.get(arn, qualifier)`?
I think we should just remove this block.
I think we should rename this to `DeleteAll` and `DeleteWorkspaceFile`.
I think this is a change in behavior. We should probably change the name of the test to make it clear that this is a change in behavior.
This is a very good change. I think we should be consistent and use `get_PREFIX` instead.
We should remove this line.
I think this should be `UIAutomationClient` instead of `# noqa` because it's not a big deal.
Can we also remove the uploads volumegroup snapshots from the cloud?
I think this should be `tmp = excessDomChildren.length; tmp--`
This is a change in behavior, but I think it's better to move the `foreach` into the `array_values()` method.
This is a bit of a hack, but I think it's better to have a test that checks if the context is not set.
How about "Erstellen und"?
I think this should be `--header-stage` instead of `--header-stage`.
Should we use `keys` here?
I think the `S2` should be in the list of the params.
Why is this needed?
I think we should remove this and just change the `AWS IAM` to `AWS IAM`
@jridgewell Is this the correct name?
I think this is a bug fix.
I think you can use `.collect(Collectors.toSet())`
I think it's better to keep the data-lists in the test.
@jridgewell I think this is the best place for this.
I think this is a leftover?
I think this should be `strncpy(name.get(), pathTemplate, len)`
I think this is a little too vague. How about `only one credential type may be specified per profile, credential source, process, web identity token, or sso", nil)`?
Is this the only place where `../..` is used?
I think this should be an `Optional[str]`.
this is a good change. we should probably move it to the top of the file.
no need to change this line, just use `!r}`
Shouldn't this be sasToken?
This is a very generic name. I'd rather have a separate `public` property that is used in all places.
This import is unused.
This is a change in behavior, but I think it's better to just remove the `options` argument from the `addons` module.
I think we should use `wn.log.With("Peer %v disconnected: %v", localAddr).Infof(...)`
This is a good thing to do, but I'm not sure it's worth it.
I think we can remove the `i_at` and use the `step_at` here.
This should be `[` instead of `[`
Please add a note that this is a separate PR.
I think this should be `Expect(err).NotTo(HaveOccurred())`
Why are we using the `-d '.'` here?
This variable name is a bit confusing, since it's a name for the variable.
This is a bit of a hack, but I think it's better to have the `*` version of the package for the `*` and `*` to be part of the package.
This is a breaking change. The `elif` should be removed.
I think this is a good change. It's not a good idea to add a check to ensure the provider is not specified.
I think this test should be removed.
I think the `!mcontext->xflags` can be removed now, since the `!mcontext->xflags` is already checked in `mcontext`.
I think we should use the `pullRequestTitleRegexp` variable here.
I think this change is not needed.
I think we should remove this method and just call the method in the `_page_style` method.
This is a bit of a hack, but I'm not sure if it is worth it.
I think this should be `getFilesAndDirectoriesApi()`
This is a no-op, right?
Why was this removed?
I think this should be `return sourceId == that.sourceId && sourceId.equals(that.transform)`
This change is not needed.
I think this should be `@author` instead of `@Restricted`
This is not needed.
I think we should just remove this.
Should we use `stats_has_status` here?
I think this is a good change. The ` ASSERT_NOT_IMPLEMENTED` is not a valid option.
This is a little confusing, since we are using the `HttpMethod` interface for the `Index` interface.
Why do we need to set the settings here?
Line is too long. [83/80]
Why not just add the copyright?
I think you can just use `identifier.toString()` here.
I think this should be `ecec.Time.ecec.Time.ecec.Time.ecec.Time.ecec.Time.ecec.Time.ecec.Time.ecec.Time.ecec.Time.ecec.Time.ecec.Time.ecec.Time.ecec.Time.ecec.Time.ec.Time.ec.Time.ec.Time.ec.Time.ec.Time.ec.Time.ec.Time.ec.Time.ec.Time.ec.Time.ec.Time.ec.Time.ec.
Why options? Isn't the options already defined as `None`?
This is a change in behavior, but I think it's better to move it to the `break` block.
I think this should be `var zeroTime time.Time`
Should we add a `SettingValue` or something like that?
Why is this here?
I think this should be `self.locator` instead of `self.locator`
This should be removed.
This line is redundant now.
Not sure if this is a good idea. It's not a good idea to use nodes, but it's not a good idea to use it.
Please remove the empty line
This function is called only when `isSampleScan` is true.
I think this should be a `OnInitialize = 1`
I think we should use `JETPACK__` here.
This class assumes the id field for your documents is called by the user.
I think this is not a good change. It's not a big deal, but it's a bit odd.
This is a very minor thing, but I think it's better to have a separate interface for this.
I think we should check if `Util.Exists` here instead of `hasSize`
This is a change in behavior, but I think it's better to move it to the `if` block.
I think this should be `users.noreply.github.com`
I think this should be a different message, not a list of events.
I think we should just use the `.` prefix here.
I think we should use `forward_agent` here.
I think this is a leftover from the previous PR.
Can we make this a `bool` instead?
Can you please revert this change?
If it's a user-facing account, then the `id` is the right one to check.
Should be `@type {Set.<number}`.
We should add a `siteInfo.AddRow` function that returns the `nil` and `cloud.go` to this file.
I think this is still a leftover from the previous commit
I think this is the only change that affects the image.
I think this should be `error: error` instead of `error: error`
I think this is a good change. It's not a big deal, but it's a bit odd to have a method that returns a `run` and then just have a method that returns a `run` that returns a `run` and returns a `run` if it's not connected to a container.
Why is the schemaMan necessary?
This is a bit of a hack, but I think it would be better to move this to the `lib/` package.
Is this the right place to do this? I'm not sure if it is the right place to do this.
This is a change in behavior, but I think it's better to move it to a new line.
Can you add a migration to the new migration?
I think we can just make `customization` a `display` method to avoid the need for the extra `if` statements.
This is a good name. It's not a big deal, but it's a good name.
update "update" to "update"
This is a change in behavior, but I think it's not a problem, but I'm not sure it's worth it.
This is a bit of a hack, but I think it's better to move it to the `wx` package.
This is a bug fix.
`%s/fparing/a4a/fparing/a4a/fparing/a4a/fparing/a4a/fparing/a4a/fparing/a4a/fparing/a4a/fparing/a4a/fparing/a4a/fparing/a4a/fparing/a4a/fparing/a4a/fparing/a4a/fparing/a4a/fparing/a4a/fparing/a4a/fparing/a4a/fparing/
I think we should remove the `TODO` and replace the `TODO` with `TODO`
Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
This is a change in behavior, but I think it's better to make the error message more explicit.
I think this is a leftover from debugging?
This import should be removed.
This is a bit of a hack, but I think it's better to move the `socket.AF_INET6` to the `socket.src` instead of passing the `dir` object.
This is a bit of a hack, but I think it's better to have a test that checks if the child is not null.
Is there a way to make this a list of strings?
I think we can remove this function now that we're not using it anywhere else.
This is a bit of a hack, but I think it's better to move it to the `ui.message` file.
This should be `LOG.finest(String.format("Detected dialect: %s", toReturn.dialect)`
Is it worth adding a new struct for this struct?
`Unknown` -> `Unknown.ErrorAs`
This is a no-op, right?
I think this is a bug fix.
I think this line is still not needed anymore?
I think this should be `read.locality.task.initialize.threads`
I think this should be done in the `buildDeployedConfig` package.
This was a bug, but it was not related to the fix, so I removed it.
I think this should be changed to `dataverse.rserve.password`
@cra0zy - I think this should be `strnlen_s(tmp_optarg, sizeof(tmp_optarg))`
We should add `cc` here and in the other places too.
I think this should be `render(EntityEntity).to.be.calledOnce`
I think this should be `if (election->blocks[block_a->hash () == block_a->hash ()))`
This is not a valid deprecation, but it is a bit confusing to me. If you want to be sure that it is a deprecation, then you should be able to use the `getExtendedTypes` from the `ClientFormHelper` instead.
This is a bit of a hack, but I think it's better to check the `assert` in the `if` statement.
I think we can remove the `for (var i = 0, name = categoryNames[i]; i++)`
do we need this?
Is this change related to the PR?
This is a good change. It's not a big deal, but it's a little strange that the `get` method returns a `Block` and not a `Block`.
I think this test case could be removed now, since we are not testing the error.
This is a bit of a hack, but I think we should be able to get rid of the `err` parameter from `err` and just pass the `err` as a parameter to `err` and pass the `err` to `err` and pass the `err` to `err` and pass the `err` to `err` and pass the `err` to `err` and pass the `err` to `err` and pass the `err` to `err` and pass the `err` to `err` and pass the `err` to `err` and pass the `
It's not clear to me why this is necessary.
why not use `time.Since(start).Milliseconds()`?
This test is testing the same as the `/` operator, so I removed it.
why not use the `MintNewBlockWithActionIterator` directly?
Why not just use `*sql.DB, func()`?
This import is unused.
This is not needed.
I think we should just make this `ErrorDurationInvalid` and remove the `ErrDurationInvalid` from the `ErrDuration` package.
I think we should just make this a `BlockChanSize`.
I think we should use `plan.first` here instead of `private` since it's a `private` attribute.
Why is this 6 different than 6 bytes?
I think we should use `@CommandLine.Option` here.
Why is this being removed?
Should we update the key in the config file to pass the user as parameter?
nit: I would prefer to have a single space after the comma, like `3x` (or similar) as `3x` (or similar) as `3x` (or similar) as `3x` (or similar)
This is a bit of a hack, but I think it's better to have a separate function to return a value that is passed to the function.
I think we should just remove the `desiredUID` part and do the same for `TeamTeamKeys`.
this import is no longer needed
I think we should just make this `RouterUnrecognizedEncodingError` and `os.path.join` to avoid the need for the `route.RouterUnrecognizedEncodingError` call.
Why is this removed?
I think we should be able to remove the `Trim` check here.
I think this log line should be removed.
Why did you change the order of the arguments?
Why was this removed?
This should be `@return`
this should be a debug log
I think this should be a warning, not a warning.
I think we should change the description of the sentence "Note that the DOM is not supposed to be changed."
this is not needed.
Why is this change necessary?
I think this is a good place to put this import.
why is this needed?
I think it's better to move this to the `UpdateProcessingTime` method.
I think this is a bit of a hack, but I think it would be better to just remove the `None` and just do `None` and then just do `None` in the `if` and then just do `None` here.
I think this is a leftover from the previous commit.
I think this is a good idea. It's not a big deal, but it's a bit odd to have a task in the task, but I think it's a bit more complicated to have.
I think we should not have this in the `base` namespace.
I would not add a new param here, it's not really necessary.
Nit: please avoid the extra space after the first comma.
I think this is a change in behavior, but I think it's better to have a test that checks for this attribute.
I think we should add this to the `RCLONE_CONFIG_PASS` function.
Why not just make this test a `@Test`?
I think this should be `AzureAppServices.Metadata.SiteName`
This is a change in behavior, but I think it's better to keep the `is_target_spec` method, and just call `set_target_spec` directly.
I think this is a change in behavior. I think it's better to move it to a new function.
I think this is a bit of a hack, but I'm not sure if it is worth it.
Is this going to be a problem for the user to see if they are going to be a problem?
The `import` is not needed here, it's already imported in the `if` statement.
I think this should be moved to the `log.prompt` module, since it's not used anywhere else.
nit: I think it would be better to have a single space at the end of the query, and then have it be a single space.
This is a very minor thing, but I think it's better to keep the old method as it was.
We should add a docblock here to make sure we don't break compatibility with the other methods.
Isn't this a BC break?
remove empty line
Is this a change in behavior?
Please rename to `timeout` or `timeoutMap`.
`plan.present?` is a bit confusing. What about `has_active_subscription?` or `has_annual_plan?`?
I think this can be removed now, since we have already done this in the `too-many-locals` file.
This should be `AlertmanagerConfig`, not `Alertmanager`
Is this really needed?
I think we should use `os.environ` here.
Why is this added?
I think this is a leftover from the previous PR.
Why do we need to add `--build` to `deploy`?
I think this is a bug fix.
This is a breaking change. The `Keccak` is not used by the `IEnumerable` interface.
This is a no-op, right?
Can we use `File.id` here?
I think this is a good change. It's not a big deal, but it's a bit confusing to have a service in the service.
I think this is a leftover from debugging.
Why change the cast to minSpeedChange to 0?
I think this is a good change. It's not a big deal, but it's a bit confusing.
This is the only place where we need to change the edit_subscription_path, we can just change the name of the method.
Should this be `modeman.leave(self._win_id, usertypes.KeyMode.command,`.
I think we should add a ` usings` flag to this.
I think we should be able to use `await.all( ...)` here, as we already have the `expect` above.
I think we should just remove the `FirstOrDefault` call here.
Is this change related to the PR?
I think we should use `View.GONE` here.
I think we should use `isort` instead of `validateMemoryBreakerThreshold`
This is a no-op, right?
Can you add a TODO to remove this?
I think we can remove this `ksql-sql-service` parameter from the `ksql-service` parameter.
This is not the right fix. The logic here is to not set the contract.Visibility != TypeMemberVisibility.FamilyOrAssembly if the contract is not empty. The contract is not empty. The contract is not empty. The contract is not empty.
This is a bit of a hack, but I'm not sure if it's worth it to make the code more readable.
I think we should keep the old version as a part of the description.
I think we should use `!` instead of `!` here.
Can you use `load_iris_multioutput` instead of `load_linnerud` here?
I think this is a breaking change. It should be reverted.
I think we should add a `TODO` here to make sure we don't accidentally break the code
remove empty line
This should be set to null.
Did you mean to include these new files?
I think we should just remove the `return Optional.of(methodUsage)` here and remove the `return Optional.of(methodUsage)`.
why is the `privacyParameters` not used anymore?
Can you please add a `TODO` to remove the `absabs` and `absabs`?
I think this is a breaking change.
Is there a reason for this change?
I think we should also change the `_create_neareset_term_box` method to be `_create_neareset_term_box` and `_create_neareset_term_box` to be consistent with the other `_create_neareset_term_box` method.
Is there a reason for using md5 directly?
What if eventName=="gainFocus is not null?
Nit: could you move this import up with the other imports?
This is a public constant, so I don't think it's a good idea to change it.
I think we should use `Config.SQLConfig` here.
I think this is a good idea. It should be `Console.WriteLine("***WARNING*** The current build is DEBUG which may affect timing!\n")`
I think we should use the same constant for the `besu` constant.
Can you explain why these need to be added to the base class?
this is not needed
Metrics/LineLength: Line is too long. [97/80]
I think this should be `item.getType().isRepeated()`
This should be `Basic %s`
Another option is to use BAZEL_TEST_DATA_PATH instead of BAZEL_TEST_DATA_PATH.
I think this is a bit confusing, because the date is not a subset of the date, and the date is not a subset of the date.
I'm not sure if this is the right fix. I think it should be `currContext->getRoleList(numRoles, roleList, granteeList)`
This is a bit of a hack, but I'm not sure if it makes sense to me to have a test for this.
we can probably drop the `/` here
I think this should be removed.
why is this removed?
I think we should just remove the `gridCol.colDef.enableCellEditOnFocus === true` check here.
I think this import is unused.
can you add a trailing comma?
This should be done in the `setAqrEnabled` function.
I think we should keep the old version as the last one.
Can you please add a space after the `if`?
I think this is not the right place for this.
I think this is a little too late, but I think it's probably better to just use `Exec()` here.
This is a change in behavior, but I think it's better to move the transactionObject to a new function.
This is a bit confusing, as it is not a part of the PR.
I think this is a good change. It's not a good idea to do it in a single PR.
This is a bit of a hack, but I think it's better to have a separate method for it.
Is this change necessary?
This is a change in behavior, but I think it's better to be explicit here.
Use the new hash syntax.
This is a bit of a hack, but I'm not sure if it is worth it.
I think we should keep this as it was before and keep the same as the one below.
Please don't use the `_dbmField` import.
Style/StringLiterals: Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
This is a very minor thing, but I think it's better to do `return buf[0]byte` instead of `return buf[0]byte`
I think this field can be removed.
Would it be possible to add a `TODO` to remove these lines?
I think this is a good change. It is not related to the PR, but it is not related to the PR.
Metrics/LineLength: Line is too long. [123/120]
I think we should remove this component entirely.
I think this should be called `fee_per_kb`
I think we should keep the `Activity` case here.
This is a bit of a hack, but I think it's better to have a separate method for it.
I think we should just use `List<T>` here.
@tgamblin Do you know why this is necessary?
I think we should use the `allow_fullscreen` constant here.
This is a bit of a hack, but I think it's better to move the `pageTokenName` method into `store.go` and `store.go`
Why not use the `tab#update` helper here?
Indent the first parameter one step more than the start of the previous line.
I think we should remove this file.
can we make this a string parameter for `video_name`?
I think this should be set to `false`
This is a breaking change. The `toLowerCase` function calls `node.hasAttribute('alt')` on `text` itself.
Why was this removed?
I think this should be `r1.7`
I think we should add the `noDuplicates` option to the `noNewAlreadyUploading` option.
Why not just use `t.Run` here?
I think this should be split across multiple lines.
I think we can drop the ORDER path from the ORDER path.
This is a change in behavior, but I think it's better to revert the change to `the desired DOM structure`
Can you revert this file?
This is a change in behavior, but I think it's better to keep the `isinstance` method as it is.
This is a breaking change. It's not a big deal, but it's a bit confusing to have a `new` statement.
I think this should be `Config.getDefaultCetags(Config.getDefaultCetags())`
Maybe we should use `AccessLogHandlerImpl` instead of `AccessLogHandlerImpl`?
Why is this change needed?
This class is unused and can be removed.
I think this is a little confusing. Why are we using `ConnectOptions` here?
I think it would be better to have a `EnableDebug` function that returns a `loggerFn` (which is what we want to do).
I think this should be `@videos = Video.published.recently_published_first`
I think this is a bit of a hack, but I think it would be better to have a test that checks whether the file is `nil` or not.
I think we should just make the test configurable.
I think this is a little strange. Can we just return `List.Marshal` instead?
Why is this needed?
I think this should be `.update(**leg_spec)`
I think we should just delete the `AWSMachinePool.Spec.AWSLaunchTemplateID` variable and just call `CreateLaunchTemplateVersion` here.
Can we make this `// TODO: use generic container`?
Wouldn't it be better to have a test that checks if the email is not None?
This is a bit of a hack, but I think we should just use the default value here.
I think we should keep the original behavior.
I think this is a leftover from the previous commit.
I think we should change the default value of `run_server` to `run_server` in the future.
This is a bit of a hack, but I think it's better to just check for `type != null && type.Equals("passThrough")`
I think we can remove the `parentRole` variable and just use `parentRole` everywhere else
I think this is a good change. It's not a big deal, but it's not a big deal.
I think we should use ` Aggregation.Drop` here.
I think this should be imported before `moves`
Why do we need to change the type of Type to `string`?
This is a bit of a hack, but I'm not sure if it is worth it to make the code more readable.
I think this is a bug fix.
Is this a bug fix?
I think this is a leftover from debugging.
Is it possible to have a request body that we can't use here?
I think this is a bug fix.
Should this be `WithMetricsProcessors(c.MetricsProcessors...)`?
Why change this?
this is a change in behavior, but I think it's better to keep it.
in what case would `update_proc` not be 0?
Please use `return (inputs->hasData())` instead of `!inputs->hasData()`
Why not just have `IntegTestBuildspecPath` and `IntegTestBuildspecPath` as well?
I think we can just remove `== null` and just do `== null` here.
Is this change intentional?
I think this is the only change that affects this PR.
I think we should use `defaults.List(msgInboundDispatcherNotRunning)` here.
I think this is a leftover from the previous commit.
This is a breaking change. I think we should keep it.
This is a bit of a weird thing, but I think it would be better to have a test that checks if `service.create(node.getAttribute('alt')` is true.
I think this is a breaking change. The `mode` is not in the `mode` block.
I think this should be `sub_type = 0x00;`
This is a bug fix.
This is a change in behavior, but I think it's better to use `if role in (is_resource_TABLEROW) and STATE_TABLECOLUMNHEADER and STATE_FOCUSED in states` instead.
I think this should be `<%=`
do we need to handle the error here?
Line is too long. [94/80]
This should be split across multiple lines.
This is a breaking change. I think it would be better to have a separate PR for this.
You can use `nupic_filename` here.
I'm not sure this is the right fix. The PTHREAD_attr_init() check is needed.
I think it would be better to use a different name for this parameter.
I think this should be `return PMIX_COMPRESSED_STRING || PMIX_STATUS`
Shouldn't this be `true`?
this import is still used in the group below.
Should we update the docstring to mention that the tab is not None?
This file was removed because it was not used anymore.
Why is this needed?
I think we should remove this and just call `ICommonTracer` from the interface.
This is a change in behavior, but I think it's better to move the `Queue` to the `Queue` class.
I think we should add a new constant for this, to be able to use it in the future.
This is a bit of a hack, but I think it's better to move the check to the `promiseLibrary` function.
I think this is not needed.
I think this should be `final`
I think we should just make the message a bit more explicit here. "shutdown" is a bit confusing and we're not going to be keeping the message as "shutdown" and "shutdown" is a bit confusing.
Why not use `hbasescan_tdb->setAsyncOperations(TRUE)` here?
I think we should use the `stdout` field here.
Can you add this to the `lib/` directory too?
Line is too long. [83/80]
This is a no-op, please remove it.
(style) trailing whitespace
I think this should be moved to `self.config_state_before_fullscreen`
@JeremyKuhne might want to do this in a separate PR.
Is this a debug level?
I think it would be better to make this a constant.
Is this change related to the changes in this PR?
Why not just use `assert`?
Please use `bool` instead of `bool`
This is a bit of a hack, but I think it would be better to have a test that checks if the binary content is not a fatal error.
Why do we need to check for the `nested_flatbuffer` field?
I think we should be able to use `time.AfterFunc(10*time.Millisecond)` here.
I think this can be removed now.
I think this should be a static field.
I think this should be `bool`.
Why do we need to do this?
This is the only change that affects the `installedVersions` import.
This is not necessary because the `@bridge` can be `final`.
This is a change in behavior, but I think it's better to move the `ipset.Name` check to the `if err != nil {` check below.
This is a change in behavior, but I think it's better to have a test for this.
I think this is a good change. It's not related to the fix, but it's not a big deal.
This is a breaking change. The `@options` tag is not used anymore.
Do we need to keep these?
This is a breaking change.
Is this change intentional?
I think this should be `metricsConfig.isEmpty()`
I think this is a good change. It's not related to the fix, but it's not a good idea to have a test case for this.
I think this is a leftover?
This is not needed.
This is a bit of a hack, but I think it's better to move this to a separate `if` block, and then use that in the `if` block.
This is a bit of a hack, but I'm not sure if we should change the name of the button here. I think it's a good idea to change it to something like `display:none` and `display:none` to make it more clear what the button is.
nit: can we keep the old name as it is for now?
This function is used to generate a tab, so we can remove it.
I think this should be done in the `PushBackNamed` method, since it's not used anywhere else.
I think this should be in `playOsd()`.
I think this should be `newProps.checked !== dom.value`
This is a bit of a hack, but I think it's better to have it in a file that's not a file.
I think it would be better to use `os.environ` instead of `storage` here.
This method should be renamed to `RowKey rowKey`
I think this is the only change that affects this change.
I think we should use `str(part)` here.
I think we should use the `errorLine` constant here.
I think we should still keep `coco_instance.py` here.
We should probably use `String.format` here.
Why are we not using singleton alert here?
This is a breaking change. We should probably just make it a static field.
This is a bit confusing, as it is used in a different PR. Maybe we should just make it a `Check` and use it in the `static` package.
Why do we need to call `omp_get_max_threads()` here?
I think we should move these settings to the `KindEcsApp` package.
I think this should be `_execute_size`
This is not needed anymore.
@lis2 When I was thinking of this, I was thinking of a better way to do this, I was thinking that the key would be the same as the key in the container.
Why is this import changed?
I think this should be `break;` instead of `break;`
This is a very minor thing, but I think it's better to use a `*Dispatcher` here.
I think we should use a `Task` here instead of `object`
This is a little confusing, because we are not using `tf.is_to_content` in the code base. How about `tf.is_to_content`?
I think this is a breaking change. The `private` is not needed.
You can use the shorthand since there is a `mergeRecursiveWithOverrule` method.
I think this is a good idea to be honest. I don't think it's necessary to do this.
This change is not related to this PR, but I think it's better to move it to the `File/Task` class.
Why are these imports removed?
I think this needs to be added to the `execTypes` interface.
This import is used by the other imports.
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
This is not needed. It will be created automatically by the file.
Why not use the license header here?
Why is this check necessary?
I think this is still a leftover from the PR.
Why is this necessary?
this is not needed, you can remove the whole method
I think this is a good idea. But I think it's better to have a `bytes.Pagination` here.
I think this should be `f = f.Vectorized` instead of `f = f.Vectorized`
should this be something like `format.html { render :new }`?
This is a very good change. I'm not sure if it is worth it.
Use the new Ruby 1.9 hash syntax.
I think we should just call `var pipeWriter.Complete();` here.
Style/RedundantReturn: Redundant return detected.
I think we should also have a `HumanReadableName` type in the name.
I think this is not needed.
Could you please also update the test to include the `+` in the test name?
This is a change in behavior, but I think it's better to keep the `instanceOf` call as a variable and throw an `Error` in the constructor.
This is a bit of a hack, but I think it's better to have a method that returns a `_layout` that returns the `string` object.
This is a breaking change.
I think this is the right place for this block.
Can we remove this log?
This is a change in behavior, but I think it's better to be explicit about it.
This is not the right place for this. The procCodeA is not the default, so the procCodeB can be set to `0` and the procCodeB isn't the default.
I think we should check if slaOptions is null.
I think this is a good change. It's not a big deal, but it's a bit odd to have a `EnsurePoliciesAttached` return the `.RolePolicies` that is already in the `EnsurePoliciesAttached` function.
Why was this removed?
This is a good change. It's not a big deal, but it's a minor thing.
I think it would be better to check for null and return.
Why is this a pointer?
I think this should be `THEN cardinality(parts) >= 2 THEN element_at(parts, -2)`.
I think we should be able to remove the `else if` branch from the `else if` branch.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think we should use the `payments` package here.
@danrot what do you think about this?
I think this is a good idea. It's not a problem, but it's a bit odd to have a simple simple string that's not a simple string.
I think it would be better to move this line to `config.add_api_capability`
I think we should remove this and use the `hashivault` in the `secrets` package.
I think this should be set to true only when `strcasecmp` is true.
@deads2k @smarterclayton do we want to keep this?
This is a breaking change. Please revert.
This is the only change that affects this PR. I think we should be doing this in a separate PR.
This is a bit confusing, as it is used in the code, and it is used in the code, and it is not necessary to add the `bool` check here.
I think this is a good change. The `asSmarts` function is a bit confusing to me. Maybe we should just have a `CXSmiles` function that returns a boolean and then call `CXSmiles` in the `if` block.
This is a little confusing. How about `setstate`?
Why did you change this?
This is a change in behavior, but I think it's better to use the `form` class here.
I think this should be `GetPublicIP`
Can you please revert this file?
This is a breaking change. We should probably just remove the `./pants run` from the `./pants run` file.
I think this is a little confusing. I think it's better to have a `setPostContent` method that returns a `setPostresolve()` method.
Is this the right place for this?
Is this a bug fix?
Nit: remove empty line
I think this should be synchronized as well.
I think we should add a `@since` here to make sure we don't have any other attributes
I think you can remove the `Este` part here.
Can you add this to the other files?
This was removed because it was not used anywhere.
Why do we need this?
I don't think we should add a `.complete?` file here, it's a bit confusing to have a `.complete?` file that just checks for the `incomplete_trail` view.
I think this should be `nil` instead of `err`.
Just a question, why do we have to change the Python::Install here?
I'm not sure this is the right place for this. I'm not sure if this is the right place for this.
This interface is used in the `Presenters` interface, and should be removed.
This is a breaking change. The `r` is not needed.
Is this a bug fix?
Why is this removed?
Should this be `Puppet::Pops::Types::PSensitiveType::Sensitive` instead?
is this necessary?
This line is not needed anymore.
I think this should be `reset_content_length = ''` instead of `reset_content_length`
I think this can be removed now, since the controller is only used in the controller and not in the controller
This is a good place to put this. The `#if` should be removed.
I think this should be `libkb/libkb/`
I think this is a leftover from the previous commit.
Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think we should add a note that this is a new instance of the UpdateMananger after login in backend.
Nit: I think this is unnecessary.
This is a bit of a hack, but I think it's better to just have a test function that returns the `config.Config` object, and then check if the `DisableMetrics` is `false` in the `TestMessageHandler` object.
I think this is a good change. It's not a big deal, but it's not a big deal.
This is a change that will break existing users. We should try to keep track of whether the user is in-memory.
This is a good idea, but I think we should be consistent and use the new `Graceful` version here.
This should be `hardcoded current size to 2 pointer sizes`
I think this should be done in the `get_filter` method, since it's not used anywhere else.
I think this is a bit confusing, as it is used in the `pkgsToBuild` and not an `pkgsToRebuild`.
This is a very minor thing, but I think we should probably add an `else` clause here to make sure we don't get an error.
I think it would be better to use the same name as the title.
Should we use `go.com/chaos-mesh` here?
I think we should use `@memberof` here.
I think we should just remove this line.
why is the `dictLength` variable removed?
Why is this needed?
This was the only change that was needed to fix the bug.
I think this is a bit of a hack, can you fix it in a separate patch?
I think this is a bit of a hack, but I think it's better to just pass the `configs` argument to `build_rule_book` and pass the `_configs` argument to `build_rule_book` and pass the `_configs` argument to `_rule_book` and `_configs` to `_configs` and `_configs` to `_configs` and `_configs` to `_configs` and `_configs`
This is a bit of a hack, but I think it's better to have a separate commit for this PR.
This is not needed.
>canSeeInvisibility [](start = 16, length = 6) nit: can you please write creature::canSeeCreature instead?
I think this should be `updater.ReplacementTransform = v => v.Replace(newValue, newValue);`
This is a little confusing, as it is a `GetLatestEvent()` method.
@matt-gardner Is this a problem for the `peering_port` value?
I think this is not needed anymore?
I think we should check if the node node exists before calling the method.
I think this should be `attrs.get('roleText')`
This is a bit of a hack, but I'm not sure if it's worth it to make it a little more explicit.
nit: you can remove this line
Can we keep this, but I think it's better to keep it, and just use `isCA` for the `KeyAlgorithm` field.
This is a bit of a hack, but I think it's better to do a `if (savedInstanceState == null) {` check here.
Why is this change necessary?
This is the only change that affects the change. It's not a problem, but it's a small change.
this is not needed anymore
I think we should add a `Header` parameter to `Footer`.
Is this change related to the fix?
<msg> <msg> <msg> <msg> <msg>  above, please use `ImmutableList.isBlank()`
Why is this a `BftConfigOptions`?
This is a change in behavior, but I think it's better to keep this.
This is not a good idea, but it's a bit confusing to have a `.to?` method that returns a `nil` object. I think it's better to be explicit here.
I think this should be `final`.
This is a bit of a hack, but I think it's better to move it to the top of the function.
Why is this change necessary?
Use the new hash syntax `html_safe` instead of the hash syntax.
Why is this needed?
Why is this change required?
is this related to the PR?
We should probably use `LOG.finest` here.
I think this should be moved to the `isEvaluableExpr` function.
This is a breaking change.
I think this should be `component.__hooks._pendingEffects.forEach(invokeCleanup)`
I think this should be removed.
I think we should change the `videoConstraints` variable name to `videoConstraints`, since it's a boolean.
Can we also add this to the `slug` model?
I think we should also check if `--js` is not set.
This is a bit of a hack, but I think it's better to have a test that checks for the error.
I think this should be `span.SetAttributes(entries, "header-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-class-
Is this a typo?
I think we should add a `TODO` here to make sure we don't have to.
I think this is a bit of a hack, but I'm not sure if it's worth it to make it more clear what the function does.
nit: remove empty line
This is a bit of a hack, but I think it's better to have a `BlockHeight` interface that is used to make sure it's a struct that can give the block height.
I think you can just do `return (a.first < b.first) {`
I think you can just use `.Last().String() == ".ConsistentRead" }, cmp.Ignore()`
@cramforce is this a bug fix?
I think we should remove the `canBeSet` check here.
I think this should be `dataType: "{}"`
This change is not related to the PR, but it seems to me that the `actionRetrieveEnvVar` variable is now unused and should be removed.
I think we should keep the old name as well.
I think this is a good change. It's not a big deal, but it's a bit odd to have a method on the `ToBigEndianByteArrayWithoutLeadingZeros` that does the same thing.
I think this should be `if err != nil { ... }`
This is a little hard to read. I think it would be better to use the constant in the `DD_IsAppInsight` class.
I think this is not needed.
This is a bug fix.
Why did you change the test?
This is a change in behavior, but it's not a problem. It's a problem, but it's a bit odd.
This is a private method, so I removed it.
This is a little hard to follow. I think we should have a separate `list` and `map` for the `list` case.
I think this is a bit of a hack, but I think it would be better to have a test that checks for this value.
Please don't change the signature of this function.
I think we should use `score` instead of `score` here.
I think we should use the `isBrowser` function here.
I think this is a leftover from debugging.
This is a change in behavior, but I think it's better to keep the `matches` package private.
Is this a bug fix?
I think this is a leftover from the previous commit.
Is this necessary?
Use the new Ruby 1.9 hash syntax.
Why do we need this?
I think we should be using the `B` instead of `B` here.
This is a change in behavior, but I think it's better to be explicit here.
This is a change in behavior, but I think it's better to use the `.eq()` method here.
Line is too long. [91/90]
This is a bit of a hack, but I think it's better to have a test that checks for the first time the file is set.
This is the only change that affects the change.
You need to use the new one here.
`origin` should be in the `origin-ipvs0`
This is a change in behavior, but I think it's better to keep the old code.
I think we should add a `case` statement here.
Seems like this should be `.NewFactory`
I think this should be `const`
@mjkkirschner I think this is the right way to go. I don't think we need to change the default behaviour.
I think we should use the same name for both `project_id` and `PROJECT_ID`.
Should we use `int64_dotshielding` here?
This should be `final`.
Why did you change this?
is there any way to avoid the w.ID?
I think this is a good change. It's not a big deal, but it's not a big deal.
Let's add a `values["Baz"] = "Bar"` here, and then use that in the JSONValue map.
This is a bit of a hack, but I think it's better to move it to the `get` method.
I think we should just remove this field.
I think this should be `this.getClass().getName() + " does not implement expireSnapshots");`
This is a change in behavior, but I think it's better to do it in a separate PR.
I think this should be `num_UPDATED` and `num_UPDATED` instead.
This is the only change that affects this change.
nit: Add trailing commas while we're changing this?
I think you can remove the `if (isValid)` here and below
this is a very minor thing but I think we should be able to just call `set_default_flow` instead of `set_default_flow`
This is a bit of a hack, but I think it's better to have a method that returns a `TaskExec.setObjectName(resource)` that returns a `TaskExec` object, and then check if the task is in the task's name.
Why change this?
(style) line over 80 characters
I think this is a leftover from the previous commit.
This is a breaking change.
Why not just have a solicited leafnode and have a hub.Hub?
@jridgewell I'm not sure if this is the right way to do this, but I'm not sure if this is the right way to do this.
I think it's better to use `prerequisite` here, and then use `TopicTopicite` in the `prerequisite` class.
Is this a breaking change?
I think this should be `Warnf`, since it's not a valid error.
I think we should use `log.Info("trie account integrity", "key", fmt.Sprintf("%x", k)`
Why is this removed?
This is a bug fix. The problem is that `@team_plans` is not a `CustomPlan` but it is not a `ordered`.
I'm not sure if this is the right way to test the actual actual spelling mistake, but I think it's better to use the actual actual actual actual actual actual time.
Why is chit a pointer? Why not just check if chit isisValid()?
I think this import is unused now, right?
I think this should be `public`
This file is no longer used.
This is a bit of a hack, but I think it's better to do `.spec.item(data, diagnostic.Series)`
I think we should use `getResourceResource` here.
@cramforce is there a reason for this change?
why remove the second part of the `updated_at`?
I think this log message should be more specific, e.g. `logger.info("Starting to refresh continuous aggregates:")`
This was removed because it was not used anymore.
do you need to keep these?
This is a change in behavior, but I think it's better to keep the `filter` method here.
This file should be removed.
I think it would be better to use `*Transport` instead of `==` here.
This is a little confusing, as it's a `defer` block.
I think this is a breaking change.
This is a bit of a hack, but I'm not sure if it's worth it to just disable the category manager from the master branch.
This is a breaking change. We should not have to pass the options here.
Please don't add trailing whitespace.
I think we should make this a constant.
I think this import is unused.
This is a very minor thing but I'm not sure how to test this. I think we should test the `status_finder` instead of `StatusFinder`.
(style) line over 80 characters
This is the only place where we need to do `Protocol() == address.ID`
There is no need to change this, it is just a small typo
This is a bit of a hack, but I think it's better to keep it as `filter` and use it in the `config` package.
I think this is a bit confusing. How about `error`?
This should be `LOG.finest(String.format("Detected dialect: %s", toReturn.dialect)`
This is a service account, not a service account.
I think this should be called `super().__init__`
This is a very minor thing, but I think it's better to be explicit and more specific.
This is a bit of a hack, but I think it would be better to do this in a separate PR, and then check if the result is set to NULL.
This is a bit of a hack, but I think it would be better to have a method that returns the value of the `schema()` method.
Why is the "auto" and "auto" the "to"?
This should be `jrpc`.
Can we also add this to the `or` section?
This was removed because it was not used anymore.
what is the meaning of `buffer[:0]`?
I think this is a good change. It might be better to use a `sigValidator` function in the future.
Can we use the `cStorPoolGot.Spec.Disks` instead of hardcoding the hash?
I think this should be removed.
I think this is a breaking change. The `flowFinished` is already in the `this.logger.debug` method.
I think we should be using the default setting here.
@matt-gardner Is it possible to have a `<td data-order="-1">&mdash;</td>` in the same order?
Why not `@return string Lucene query language filter to be used for querying Solr` ?
Please remove this line
Is this a bug fix?
Is this change related to the change?
Can we move this to `api.setReviewPosition`?
Do we need to change this?
This is a bit of a hack, but I'm not sure if it's worth it.
It's not a good idea to use a `/user` prefix here.
I think we should check for the version of the addrs here.
I don't think this is the right place for this. The `Settings.I2C_clockSpeed` should be moved to the `Settings.JSONBoolWithQuotes` class.
I think we should just use `.to_pandas()` here.
use `administerable_by?(current_user)` instead of `user`
Could you please add a TODO to remove this?
I think this is a bug fix. The `limit` is not a valid value.
I think we should check for stock here.
@smarterclayton do we need to keep the old version?
These are not really necessary.
Is this really needed?
This test is testing the same as the one above.
I think it would be better to do this with the `config->config->http_proxy = getenv("HTTP_PROXY")` above.
Why not `int`?
What's the difference between this and the previous one?
This is a bit of a hack, but I think it would be better to just check if the first element is a list of split size and then check if the split size is a list of split size.
I think it's better to use `(including, interpolation)` instead of `(including, interpolation)`
I think this is not the right place for this. The first part of the check is not the same as the first part of the check.
I think this should be `GET_CONTEXT` instead of `chGET` since it's a different value.
We should check the exception message here.
`do_name` is a `do_value` so it can be used as `@Deprecated`
I think this is a leftover from the previous commit.
nit: I'd prefer if we could avoid this check here, as it's not really a part of the public API, and it's a bit confusing to have it in the future.
I think this is a leftover from the previous PR.
I think this test should be left as is.
This is a very generic function, I think it would be better to use `getImagePosition` instead of `getImagePosition`
Why options? Isn't the options already defined as `None`?
what is the difference between `Integer` and `maxSessionCount`?
I think this is a good change. It's not related to the fix, but it's a good idea to test the test.
why do we need this?
Nit: I think this is a leftover from the previous commit.
can we use a more specific `rec->ExceptionInformation[1]` here?
Why is this removed?
This is a breaking change. I think it would be better to keep the list as a member variable and use the default implementation of this method.
This is the only change that is needed.
I think this should be `Owner` instead of `isOwner`
Why do we need to change the type here?
This method is now unused and can be removed.
Can we add a migration to make it clear this is a bit generic?
I think you need to use `--list=True` here.
Why not just use `$rootCategoryId = !isEmpty($rootCategory))` ?
this change is not needed.
This is a bit of a hack, but I think it's better to have it in the template module, and have it in the template module, and use it in the template module.
why is this change required?
this import should go above the other group of imports
Can you please update the doc string to reflect the new parameter?
I think this is a little strange. What do you think about just adding a new parameter to `operation` and adding a new parameter to `operation`?
You can use `update_column` here.
I think this should be `p.IsReadOnlyReadOnly` instead of `p.IsReadOnly`
I think we should remove this line.
Is this TODO still needed?
This should be done in the constructor, as it is not used anywhere else.
This should be a separate PR, right?
Is this a potential bug?
Is it possible to use `formatize.translate` here?
I think we should check the number of bytes here.
This is not needed.
This is a bug fix. The `Flush` is not used anymore.
I think we should use a `getUrlFromRouteCache` instead of a `getUrlFromRouteCache`
Isn't this going to be the default behavior?
This is the only change that affects the `actpool` command.
I think this is a bug fix.
This test is not related to the fix, but I think it's better to remove it.
Line is too long. [87/80]
please remove this
@urso I think this is a good change. It should be `str`
Trailing whitespace detected.
Why is this change necessary?
Is this a bug fix?
I think we can just remove the import now.
I think we can just use the `if err != nil` check here.
This was a bug, but it was a bug, and it was a bug.
I think we should be able to remove this entirely.
Can we make this `IKestrelHttps` instead?
Why not just call `getattr(self::STATUS_TABLE)`?
Why is this needed?
I think this should be `return fs.readdirSync(path, {withFileTypes: true}).map(e => e.name); // From Node v8.name);`
I think we should just remove this line.
This file is not used.
This is a pretty generic name. It should be `quilt-registry`
Why is this change needed?
Use the new Ruby 1.9 hash syntax.
This is a change in behavior, but I think it's better to move the `session.is_api()` check inside the `if (int i) {` block.
Why do we need this?
This is a bit of a hack, but I think it's better to use `visitLeaf` as the default.
Why did you change this?
This is a very minor thing, but I think it's better to just use the `NodeSelector` map.
Is this change necessary?
This is a pretty generic name. It's a little confusing to me. Maybe we should just call `InitContext` in the context context?
I think this should be `&&` instead of `&&`
Why is this needed?
This should be `--modulepath--opts`
Should this be `subnets`?
Can we make this a `FirstOrCreate`?
I think we should just remove these lines.
Is this change intentional?
Why is this a global?
I think this is a breaking change. It is not used anymore.
Why is this needed?
I think this should be `has_many :exercises, source_type: 'Video'`
This is the only change that affects XNAym.
This is not needed.
Why is this change needed?
Is there a reason for this change?
I think this is the only place where we can actually return an error.
I think this should be `""`
Should we add a `StopTimeout` field in the `locationName` struct?
I think this is not needed.
I think this should be `k8s.castemplatev1alpha1` instead of `v1alpha1`
This should be changed to `url_scenriate_entity`
Why is this change necessary?
I think this is a bug fix.
Why is this change necessary?
Why was this changed?
I think it would be more consistent to use the full URL here, e.g. `match_low_quality`, `match_thr_quality`, and `match_low_quality_quality`, etc.
I think we should rename `timeout` to `RequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequiresRequires
Please add a docstring explaining what the icon is
Should we also include `0.2.0` as well?
This is a bit confusing, as it is a `@param {string}` in the `if` statement.
We should use `RuleType` here.
This is a bit of a hack, but I think it would be better to have a test that checks whether the type is `None` or `None` or `None` or `None` if the type is `None` (or `None`) and then check if the type is `None` and `element` are `None` and `element` are `None` and `element` are `None` and `element` are `None` and `element` are `None` (which is what we want to do).
This log line is not needed.
This is a little confusing, since the `err` is a `err` and the `err` is a `err` and the `err` is a `err` and the `err` is a `err`.
Nit: I think this is a leftover from the previous PR.
I think we should be using Dns.GetHostEntry instead of Dns.GetHostName
Why is this 4-byte?
This file is not used anywhere.
@nmittler - I think this should be `preferred=True`
Should be in separate line
I think this should be removed.
I think we should keep the old code as it was before.
I think we should use the `TODO` here.
Why not `new_config.Set(param)`?
We should use the `&` tag here.
Can you update the doc accordingly?
Why do we need to do this?
Why are you removing the `LOG` call?
We should add a new type hint that this will be handled in the future.
I think we should add a `./pants help` flag to the service, and add a `./pants help` flag to the service.
remove empty line
Can we make this a constant?
Please revert these changes.
I think this is a bit of a hack, but I think it's better to have a separate function that returns a `HostFactory` and then pass it to `host.Host`.
This is a bit of a hack, but I think it's better to use a different function than `goBackInTime`.
I think we should use `getLanguage(lang)` here.
I think we can remove the `#include` parameter from the `ContainerPort` and change the `port` to `#include` to `#include`
I think we should just remove the TODO from here.
This is a bit confusing, as it's a bit confusing to have a space between the `if` and the `if` key.
This is a change in behavior, but I think it's better to keep the license license and add a license license to the license license.
This is a bit of a hack, but I think it's better to have a test that checks for this value.
This is a change in behavior, but I think it's better to put it in a separate PR.
I think you can just remove the `pe_ver_key` check.
I think we should use the same var for the stats stats instead of the summaryProductFragment.
I think this is a breaking change.
Should we log the error here?
Should we use `size_t` here?
I think this should be `final`
This is a breaking change. I don't think we need to add anything here.
Please use `String#Equals(String, StringComparison)`
This is a change in behavior, but I think it's better to be explicit here.
I think we should be able to use the default value here, not the default value.
@tgamblin Do you have any idea why this is needed?
Layout/EmptyLinesAroundClassBody: Extra empty line detected at block body end.
I think this is a leftover from the previous commit.
I think we should remove this, and remove the cache at line 233.
this is not needed, if `message.blank?` is true
Why do we need to set `toolbox_` here?
I think this should be `sequencesequenceProteinsDict.TryGetValue(peptideDocNode.Peptide.Target.Sequence, out proteinsForSequence)`
This is a bit of a hack, but I think it's better to move the `STATUS_MAP` to the `plugins` package.
This should be `URI.join(root_url, image_path(filename))`
This is a bit of a hack, but I think it's better to have a test that checks if the stub is not a function.
Does this need to be an optional field?
This line is too long.
(style) line over 80 characters
I think this is not needed.
I think we should be able to remove the `TicketCount` from the protocol design design design design design design design design design design design design design design design design design design design design design design design on if/how to determine the nominal design on if/how to determine the nominal design design design on if/how to determine the nominal design design design on if/how to determine the nominal design design design on if/how
I think this should be `map`
I think this is a leftover from the previous commit.
I think we should not have an ` getDst` here.
Shouldn't we check that the caller has the same error?
I think we should use `tensor, count` here.
Is this TODO still necessary?
I think this should be `@Nullable`
I think this should be `^` instead of `^`
Do we need to make this a separate file?
I think we should use `roi_head` instead of `bbox_head` here.
why not just return a float64?
Line is too long. [81/80]
I think this should be `// +optional`
Should we use `cp65001` here?
I think this should be `MetricInstrumentIgnored`.
I think this should be `constexpr`
I think we should add a new type for this, as we have the new type for the source, and we can add a new type for the source.
Why is this needed?
Why do we need to change the signature of `Failed because`?
I think we should be using `backendNum.backendNum` here instead of `backendNum.backendNum`.
Shouldn't this be in the other PR?
Please remove this line.
I think we should just use `defer ticker.Stop()` here.
This should be `static`
I think this should be done in a separate PR, but I think it's better to be explicit here.
I think this is not needed.
I think this should be `methodConfigProto.get(methodConfigProto.getName()) == null`
I think this is a leftover.
I think this should be removed as it's now no longer used.
I think we should be able to use the `setup_vars` variable here.
This is a bit of a hack, but I'm not sure if it's worth it to make the number of bytes more explicit.
I think this should be `getApiTermsOfUse`
I think this should be onConfigurationChangedChanged
This is a bit of a hack, but I think it's better to be explicit here.
We should use `main` here.
I'm not sure this is the right fix. The `#` should be `#`, not `#`.
Why not just `EnableLogging`?
This is a bit of a hack, but I'm not sure if it is worth it to just call `H2O_VECTOR` in the `if` statement.
This is a change in behavior, but I think it's better to use `this.txs[t]._getHash()` instead.
Is this a bug fix?
Why not just `SetDiskBlockCacheFractionSetter`?
Is this a bug fix?
I think this should be on a dedicated line, maybe `current_user.id`?
I think you can remove `isinstance(offline, list) or list` now that you are not using it anywhere else.
This should be `service int`.
This is a breaking change.
This should be done in a different PR.
This is a change in behavior, but I think we should remove the `firefox` check.
This is the only change that affects the tests.
I think this should be `configProto == null && thisProto.getDefaultInstance();`
This is a bug fix. It's not related to this PR, but it's not related to this PR.
I'm not sure if this is the right place for this - it's not a requirement for the content, but it's a bit confusing to have it in the spec - it's not a requirement for the content, so I'm not sure if it's worth it to have it here.
I think this is a leftover.
This is a bit of a hack, but I think it's better to have a separate interface for dockerEngineValidator.
Could you add a doc for this, please?
This is a bit of a hack, but I think it would be better to have a `return` statement here, and then use `return` for the `if` statement.
For consistency, please use the existing `activation` parameter.
This is a bit of a hack, but I think it's better to have a method that returns the `profile_json` instead of the `as_json` variable.
Please add a license header here.
I think this is not needed.
This is a bug fix. The `rowIndexMapper` is not a `null` and the `row` is not a `null`.
This should be `const`
Can we put this in a `before_action` callback? It's not clear what the method is doing.
This is a change in behavior, but I think it's better to keep the original variable.
I think this is a good change. But I'm not sure if this is the right fix.
I think we should keep the `.Internal` here.
This should be `format.xml` instead of `format.html` since it's a string.
I think we should remove these now that we are not using them anymore.
I think we should keep this in the `isort`
Is this needed?
why is this removed?
This is a change in behavior, but I think it's better to use the `MessageDefaultError` as the default.
I think this is a good change. It's not a test, but it's just a test, and it's not a test, so I would just remove it.
why do we need this?
This is a bit of a hack, but I think it's better to keep the `search` tag.
I think this should be `return err`.
I think we should use `Input50` here.
I think we can remove the `TableMetadata` parameter from `TableMetadata` and just use `deleteRemovedMetadata` directly.
I think this can be simplified to `return nil;`
This is a bit of a hack, but I'm not sure how to test this.
I think this should be `create_no_window`
I'm not sure why this is needed. I don't think we want to do this.
I think this is a good change. But I'm not sure if it's worth it to make it more explicit.
This is a little confusing, since it's a `causalConsistency` option.
This is not a great change. It's a good change.
I think we should just remove the `Header` and `Header` calls in the `if`.
can you use the hostname here?
Why do we need to pass `array` to the constructor?
I think this is not the right place to put this. It's not a stub, and it's a stub, and it's a stub, and it's a stub, and it's a stub, and it's a stub, and it's a stub that's not a stub.
I think this class is not used.
I think this import is unused.
I think we should add `isHeight` to `GetContractState` and `needHeight` to `needHeight`
This is a bit of a hack, but I think it's better to use a `map(k => k.toLowerCase())` method that returns the value of the `(items)` in case the value is empty.
This is a change in behavior, but I think it's better to be explicit here.
Is this change necessary?
I think this is not needed.
These are not just testing the inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner
I think it would be better to use a `cumulative` constant here, and use it in the `ClassSelector` class.
This is a pretty big change, but I think it's better to keep the `if` statement.
Metrics/LineLength: Line is too long. [83/80]
This is a bit of a hack, but I'm not sure if we should change the default behavior here.
I think this is a bit of a breaking change. What do you think about just making `options.select` an `filter_options` method and using `unfiltered.select` instead?
I think we should use `err.(OpsCantHandleFavorite)` here.
Why is this needed?
Is this a bug? I think we should be able to remove the `!is 204` check.
I think this is a good change. It's not a good idea to set the `out.HttpMatch` to nil.
I think we can just make `user` a `HashMap` and use `observers` directly.
I think we should remove this and just use the default in the `Encoding` method.
I think this is a little confusing. I'm not sure if it is worth it.
I think this is a bug fix.
This is a change in behavior, but I think we should be able to get rid of the `ctx.Done()` call here.
I think we should use `== nullptr` here.
Is this the right place for this?
I think we should add a `git checkout` to the `bucket` and `record` to the `bucket` and `record` to the `bucket` and `bucket` to the `bucket` and `bucket` to the `bucket` and `record` to the `bucket` and `bucket` to the `bucket` and `bucket` to be consistent with the rest of the code.
I think this is a bit confusing, since the body is not a body, and the response is not a body.
I think this is not needed.
I think this should be `@type`
can we add a `erb` to the end of this file?
I think this is a bit of a hack, but I think it would be better to check for `isEmptyLine` here, and check for `isEmptyLine` below.
I think this is a leftover from the previous commit.
I think this should be `metric.Meter.Name + metric.Name`
I think we should move this to the `getConfig` method, as it's not used anywhere else.
This is a very good change. It seems like the `if` should be unnecessary.
This is a bit of a hack, but I think it's better to move the logic of `update_attributes` inside the `create_by` method, and then call `update_or_create_by` inside the `create_by` method.
This is a breaking change. It's not a problem, but it's a bit odd.
This is the only change that affects PMs. I think it's better to use a constant for the `Map` parameter.
I think we should be using the `AppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppendAppend
I think we can remove this now that we are removing the check for `SkipMachinePoolGeneration`
I think this should be `IHttpStartLineHandler`.
I think we should add a check here that the client has been started before calling the method.
Line is too long. [83/80]
don't use `tuples` here, you can just use `analysis_sloc_set.allowed_tuples`
I think this should be `isChunkMsg`
this is a bug fix
This is a bit confusing, as it is used in the `config` package.
This is a bug fix. We should not be using the `getInputField` method here.
I think it would be better to just return False here, and return False in the case of an empty message.
this is not needed anymore
I think we can remove the AzureSdkDiagnosticListener altogether now
this is not needed, we already have the property name
I think we should move this check to the `locallyCacheResults` method and move the `CustomCodeCode` method.
Why not use the `status` field here?
I think we should be able to remove this function from the `IsWritingCatchpointFile` function.
I think we should just remove the `listens` argument here.
This should be `false`
I think we should use the `with...` here.
This is a breaking change. We should probably just make it a constant.
This is a breaking change. I don't think we need to add a new property.
I think this is a good change. But I think it's better to have it in the `spec.description.match(/type=regex/`
This is a change in behavior, but I think it's better to move it to a new file.
Can we call this `AuthPath`?
I think this is a better place to put this.
I think we should add a `Config` to the `Config` struct.
This is a bit of a hack, but I think it would be better to use `.expand_path` here instead of `.get_file_path`
I think you can just use `metadata.locationProvider()` here.
why is this needed?
forgot to remove?
This is a bit of a hack, but I think it's better to just return `true` here.
I think this is not needed.
This should be `QUORUM`.
I think we should just pass the `checkCoinbase` to `blk` and `blk` in the `base` package.
This is a test, but I think we should just pass in the `service` instead of passing in the `service` object.
Is this needed?
This is a bit of a hack, but I think it's better to use `&&` instead of `&&` here.
this import should go before the other goals in the group
I think this was a bug, we should remove the `iscolumn` here.
This is a test, but I think it's better to keep it, since it's a test case.
I think this should be `Kernel.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.models.
I think we should use `BlockHeight` here.
This is a breaking change. We should probably move it to a different PR.
Please remove this field.
I think we should use kvb.store.Filter to avoid the specific type of the list.
This is a change in behavior, but I think it's better to move it to the `init()` method.
Another one out-of-order after the substitution.
This is a bit of a hack, but I'm not sure if we should add a link to the spec here.
I think this should be set to False by default.
This should be added to the `after_api` package.
This is a little confusing, because the ``handlers`` function is not used in the ``save_cb`` function.
This is a bit of a hack, but I think we should just use `findUp` instead of `findUp` here.
This should be reverted.
I think we should be able to remove this, and just call `FullCertChain` in the `if` statement.
Shouldn't this be `TIMEF = %Y-%m-%dT%H:%M:%S`?
This is a change in behavior, but I think it's better to move it to the `Update` method.
This is a little confusing, as it is in the `//` block.
I think we should just use the constants here.
Can you revert this change? It seems to me that the `Security` and `Text` are not in the namespace.
(style) line over 80 characters
Can you also add a new line before the `//`?
I think this should be removed as well?
This is a change in behavior, but I think it's better to just use `contains` here.
This is a bit of a hack, but I think it would be better to do something like `if wxLang == 0` instead of `if wxLang == 0` here.
Metrics/LineLength: Line is too long. [83/80]
This is a bit of a hack, but I think it's better to use the `goog:chromeOptions` as the name.
I think we should use `&:to_sym` instead of `map(&:to_sym)`
I think this should be `BACKEND_SERVICE_IS_IS_service`
Should we check the _OS_ of ManifestContent.DATA as well?
Is this the only change that affects the contact?
How about "Erstellen und"?
This should be a separate commit
This is a change in behavior, but I think it's better to move it to a separate PR.
This is a little confusing, as it is a bit confusing to have a return value. Is it possible to have a return value that would have been set to `false`?
I think this is a leftover from the previous PR.
I think this should be `GroupMembers`
I think this is a breaking change. It's not used anymore.
I think we should use `big_query-credentials.json` here.
Why do you need to change this?
I think this is a bit of a hack. I would have expected the `create_bulk_pull_blocks` to be a `create_bulk_pull_blocks` in the `create_bulk_pull_blocks` method.
I think this is a bit of a hack, but I think it would be better to move the `/mp` package to the `/` package.
Block has too many lines. [32/25]
I think this should be a separate PR, but I think it's not a big deal.
remove empty line
I think we should keep this here.
This is a bit of a hack, but I'm not sure if we should be using it here.
Why is this required?
@Override ->tableName
I think we should be able to remove the `skipZeroBlockRewards` and `skipZeroBlockRewards` methods from the `onProcessor` class and just call `onProcessor` directly.
We should probably use `util/insightfilestore` here, as it's a separate file.
Do we need this?
Is this really needed?
Why is this change necessary?
Shouldn't this be `&` instead of `&`?
This should be `maintainer='Pierre LALET'`
This is a bit of a hack, but I think it would be better to just do `out_file = osp.join(out_dir, img_meta['filename'])` instead of `out_file = osp.join(out_dir, img_meta['filename'])`
I think this should be `if (io != 0 || bb.get(ia) == '\0') {`
This is a bit of a hack, but I think it's better to have a separate method for this.
`r.URL.Path` is a valid path, so you can use `url.URL` here.
Redundant self detected.
Why not use the `ExceptionListener` class here?
I think this should be `JsonSchema.CreateStringEnum(apiVersion)`
this is a little strange... why did you choose to make it optional ?
I think we can remove this and just remove the `@see` annotation.
This should be `full_name`
The same here.
I think we should use `self.recording_msid` here instead of `self.recording_msid`
This is a change in behavior, but I'm not sure why you're using the `char` value here.
Please add a license header.
I think this is a good change. It's not related to the fix, but it seems like it would be better to just pass in the `NewWorkingSet` as a parameter to `NewWorkingSet` and then pass in the `Set` as a parameter to `NewWorkingSet` that is the only place where we're using it.
why not use RatingConfig struct?
This is a bit confusing, because we are not using `is_in_onnx_export` in the `if` statement. I'm not sure if it is worth it, but it's not really necessary.
I think we can just use `const` here.
I think you can remove the `!is_duration_cast` here
Why is this change required?
Nit: "in the case of a does not support support", I'd say "in the case of a does not support", "in the case of a does not support", "in the case of a does not support", "in the case of a does not support", etc.
The name of this file is `bibdoc-file` but it's not `bibdoc-file`
`content-drilldown` is a bit confusing, since it's a constant.
Please remove this.
Should we add a `EnableAdminAPI` field to the `Config` field?
I think this is a good change. The `if (compiler_type)` part is not needed.
I think we should use the `findConfigMapManifests` function here.
Why did you change this?
nit: remove extra spaces
This should be set_loss_weight
This is a little confusing, since the first prefix is a `base` not a ` prefix`. I think it's better to just return `base.Loader.Split(filename)` and then return `nil` if the value is `true`.
I think we should be able to get the `@context` here.
I think this is a good change. I'm not sure if it is worth it.
I think this test should be testing the `log.close()` function.
I think we should just return `key.Now().After(eni.ExpiresAt)` here.
This is a bit of a hack, but I think it's better to have a test for this.
why the cast to long?
Shouldn't this be `return len(self.best)`?
Why is this needed?
This is a no-op, but I think it's better to keep the `ti.move` and `ti.expand` as the second parameter.
We should add a new migration to the new migration.
Line is too long. [81/80]
This is a very minor thing, but I'm not sure if it's worth it to make it more explicit.
`dots-vert` is a little bit confusing to me, why not just use `more_horiz`?
I think we should use `center_sampling` here.
I think we should use `commonName` here.
This is a breaking change. I think we should keep it as it is.
This is not needed anymore.
Is this really needed?
This is a little weird, why is this needed?
this is a very old API, I think we should just remove the `blockAPI` part and use `blockAPIAPI: nd.RetrievalAPI` instead.
I think this should be `esa-`
This is a bit of a hack, but I think it's better to have a separate function for this.
I think this is a good place to put this in the `podmanos` package.
This is a change in behavior, but I think it's better to move it to the `return len(p) - len(s.dataForWriting)`?
This is a bit of a hack, but I'm not sure if it is worth it to just call `desul::Impl::init_lock_arrays()` in the `__init__` method.
Why removing the default argument ?
Why are we passing ctx here?
Why is this changed?
Why not just use `self._tab.key_press(Qt.Key_Enter)`?
why is this needed?
I think this should be `plural_endpoint.decode('utf-8')`
This is a bit of a hack, but I think it's better to move it to a helper method.
This is a change in behavior, but I think it's better to keep the change in behavior.
Why is this change necessary?
I think this is a bug fix. The code below does not return -1, so it should return -1.
This is a breaking change.
I think we should use `AccountAccount` here.
Is this change necessary?
I think this is a good change. But I think it's better to have a test that checks if the resource exists in workflow.
This is a change in behavior, but I think it's better to move the logic to the constructor.
I think this is a good change. It should be `using`
This is a change in behavior, but I think it's better to have a `Flags.StringFlag` that calls `Flags.StringFlag` and `cli.Flag` as the default.
This is a bit of a hack, but I think it's better to have a test that checks if the user is not running.
I think we should remove this file.
@jridgewell Is this a bug?
can you use the standard library imports?
I think this is not needed.
Why is this needed?
@danrot what do you think of this new parameter?
The `uint64` is not necessary here.
This class is no longer used, right?
I think this should be a `private` statement.
I think this needs to be added to the `RemainTimeUpdateEvent` interface.
I think we should name this `update_all` instead of `products`. It's a little confusing since we have a `change_column_null` which is also used in the `Batch`.
@kargakis this is the fix for the tests. The idea here is that we don't want to have a "index column names" set to None.
This is a little confusing. What about something like `updated_at.to_i`?
This is a bit of a hack, but I think it would be better to have a `Join` method that returns the `workingDir` object, and then call `Join` on it.
Is it possible to catch the Exception with the exception?
This import is unused.
This is a bit of a hack, but I'm not sure if this is the right fix.
I think this should be `find_instance_group_by_url`
This is a change in behavior, but I think it's better to make it abstract, and make it abstract.
should this be `Purchaseable plan`?
Shouldn't this be `transport::is_ipv4_or_v6_mapped_address`?
I think this is a leftover from the previous commit.
I think this class is not used anymore.
I think it would be better to check for `type1.getType().isEnum()` here instead of checking for a custom enum class.
I think this should be `cls.handlers[name] = functiondecorator`
I think we should use `useInView` here.
I think we should just remove this.
I think this should be a different set of stuff.
This is a breaking change.
Can we use `Metadata` here?
I think this should be `meta charset=\"UTF-8\">\n` instead of `head`
This is a bit of a hack, but I think it's better to have a test that checks for it.
I think we can remove this and just use the `WebSpan` method in the `ResourceResource` method.
Why was this removed?
This should be `when /ec2/`
Why are we logging this twice?
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
This should be `.css('.css('')`
I think we should be able to remove this check and just use `errors.UpdateSpanWithErr(treq.Service, response.Header)` in the `CloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloudCloud
This is a bit confusing, as it's used in the `account_name` method, and it's used in the `account_name` method. I think it's better to have it as a default, and then use it here.
This method is not used anywhere else, so I would remove it.
Please add a `boolean` statement to make sure this is only used once.
Please remove the extra spaces between `db` and `query`.
Why not just use the `ctxUser.DisplayName()` function here?
I think this is a leftover from the previous commit.
I think this should be `return h.handler.Call([]reflect.Value{reflect.ValueOf(reqBody))`
I think we should keep this as a constant.
Isn't this the same as `multiDateRange.jit.compareEndDate`?
This should be done in the `if (_sharedStringMap != null)` check above.
Why is logger removed?
Please use `String.format`
so glad we have this be `expect(analytics?).to be_true`
I think this is a good change. But I don't think it's worth it to have a single key.
This is a change in behavior, but I don't think we need to change the signature of the `RunId` here.
should we update the `/` in the controller controller to include the `/` in the controller?
Is this change intentional?
I think we should use `Time.find_fh` here.
I think you can just remove the `.to_stdout` altogether now, and remove the `.to_stdout` altogether.
@matt-gardner Is this a bug?
I think we can remove the `UIViewController` interface and just use the `UIViewController` interface.
Is this a bug fix?
@Eric89GXL do you know why this change is needed?
This was the only change that was needed to make sure the freezer variable was not being used.
This was a bug in the test suite.
I think this should be `cluster-uitov-project`
This is a change in behavior, but I think it's better to use `asList` or `asList` to avoid a `*` import.
I think this is a leftover from debugging.
Why not just use `reverseBytes(checksum)`?
It seems that `repo.Index()` is not a valid index, so you should use `.(*repository.MasterIndex()).Obsolete()` instead.
I think this should be a separate PR, but I think it's better to move it to a separate PR.
I think we should add a check for the index index here.
Should we also add a `surefir_dir` flag to the `refresh_options`?
I think we should just pass the `scope` as a parameter to `metrics.ClientConfig{}` and pass it as a parameter to `service.video` and pass it as a parameter to `service.video` and pass it as a parameter to `service.video` and `service.video`
I think this is a good change. It's not a big deal, but it's not a big deal.
I think this is a bit of a hack, but I'm not sure if we should be using the `Discussion_progress` helper here.
Should we use the `ctx` variable here?
I think we should be able to remove the result.
Is this a bug fix?
This test was not working. It was a bug in the test.
This is not the right place for this. The default is `--modulepath` (which is not the default) and the default is `--expand_path`.
Why not `String::of(keyFilePath)`?
Is this change necessary?
I think we should remove this file.
This is a breaking change. It is not a public API.
This is a bit of a hack, but I think it's better to keep the title here.
This is a no-op, right?
I think we should change the default value of `use_group_of` to `True` and make it default to `True` in the default value.
I think we should add a `*_lcmANT_cgroup` field to the `external_cgroup` field in the struct.
I'm not sure if this is the right place for this - it's not a part of the public API, but it's a minor thing.
I think this should be done in the `getSearchHandler` method, as it's a public method.
This test is not needed.
I think this should be `cliquet.cache_backend=True`
I think this should be `null` instead of `null`
This should be removed.
I think this should be `var kv2b = new KeyValuePair<string, StringValues>("custom"));`
This is not needed anymore.
This is the only place where we can use the `CreateEnvironment` method. I think we should just use the `Run.CreateEnvironment` method in the `Run.go` file.
I think this is a leftover.
I think we should add a `klog.Warningf` check here.
Is this change intentional?
Is this change necessary?
This is a very specific test, but I think it's better to have it in the license header
I think this is the only change that makes sense.
`filter` is not a boolean, so you can use `Integer.isSupporting` instead.
I think this is a good place to put this. It's not a big deal, but it's a bit confusing to have a `libkbfs.PrivatePathType` type in the `libkbfs.SingleTeamPathType` type.
I think we can just use `proposal_notification_email` here.
same as above we can from bc not add new typehints.
Is this really necessary?
I'm not sure if this is the right place for this. The `type` parameter is used for the `scoped_enums` type.
I think this is a good change. It's not a good idea to change the name of the key.
This is a bit of a hack, but I think it's better to have a method that returns a `@private` instead of a `@private`.
I think this is a bit of a hack, but I think it would be better to have a `const path = path.join(__dirname, 'node_modules', 'next', 'bin', 'next')` and then just do `const path = path.join(__dirname, 'node_modules', 'next', 'bin')`
I think this is a good change. I think it would be better to have a `if not_found` statement that would be used for the `if not_found` block.
This is a bit of a hack, but I think it's better to move it to the `if spec.IsPureVolume() {` block above.
Why not just remove the license header?
I think this test is not needed.
This should be `<as_index>=1`
Why not `currentVersion`?
This should be `static VERSION = require('../package.json').version)`
I think we should use `getInstance` here.
This is a no-op if the above is not `if routeUpd.Dst == nil`.
I think this should be imported before `off`.
I don't think we need this anymore.
Shouldn't we have a `Utils.pip()` method that is used for the `ConsumerCnt` case?
I think we can remove the pubsubServiceAccount parameter from the UI since it is now the same as the one that is passed in.
This is a bug fix.
I think this should be `fn => fn.clear(fn => fn.clear())`
This is not a valid test, so I don't think it's necessary to test it.
Is this TODO still relevant?
I think this should be removed.
This is a change in behavior, but I think it's better to move the `IsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIs
This is not needed.
I think we should use `noencTarget` here.
This is a bit of a hack, but I think it's better to have a test that checks if `_PORT_S3` is `True` and then check that it's `True` if it's `True`
I think this should be a separate commit
I'm not sure if this is the right fix. The `&` should be `&&`
This should be removed.
This import is no longer used.
This is a bit of a hack, but I think it's better to make it a function.
This is a change in behavior, but I think it's better to make the change in behavior.
Why remove this?
I think this should be `final`.
Please remove this.
Why are we removing this?
Why did you change this?
I think we should use `errors.New` here.
This is a little confusing, as `typeof window.getComputedStyle === 'object'` is not a valid set. Should we use `typeof window.getComputedStyle` instead?
This is not needed.
I think this should be removed.
Would you mind adding a newPS to the resourceGroup?
This is a bit of a hack, but I think it would be better to have a `var` or `var-then` and have a `before` check that the default value is `true` and `false` if the default value is `true`.
I think this is a good idea. It's not a good idea to have a function that returns a string, and then we don't have to check for `parseInt` here.
We should probably check if the transport is 'ssh' and not if it is 'ssh'
Why not just `int[]`?
This should be `DebugSimulateDataplaneHangAfter time.Duration`
nit: `UpdateNameMapping` is not a `final`
Why is this needed?
I think it would be better to use a constant for this, and have it be a constant for it.
This is a bit of a hack, but I think it's better to just check for the number of items in the array.
I think this is a good change. I think we should just remove the check for `transformStyleValue` and `webkitTransform` if it's not needed.
Is this method still used?
This should be a list of `TaskParameter` (or a list of `TaskParameter`).
Why do we need to pass the namespaceID here?
This is a bit confusing, since it is a user-facing endpoint. I don't think we need to do this, since the user can only be used in the `user.id` file.
I think this is a good change. It's not a big deal, but it's a bit odd.
nit: can we rename this to `StringUtils.isNotBasePath`
I think we should add `# noqa: true` to the `toggleMenu` method.
I think we should use the same name for the key.
I think this is not needed.
This is not necessary because the `@bridge` can be `final`.
This is a little confusing, why is it needed?
why do you need this?
@smarterclayton do we need to change this?
I think we should just remove the `AddAttributes` function.
I think we can remove `v` from `GetRollupContext` and just use `uint32` here.
This class is only used in one place, and I don't think it's necessary to put it in the `IFeatureCollection` class.
I think we should use `/^VuFind (\d+\.?)+$/` instead of `/^VuFind (\d+\.?)+$/`
Should we add a `getClusterState` method that does both the config and the config name?
This is a bit of a hack, but I think it might be better to use `Object.isDebugEnabled()` instead of `Object.isEnabled()` here.
This file is not used anymore.
Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
Why is this needed?
I think this is a bit of a mess. I think it would be better to move the logic of the previousDataLoaded check inside the `if ( ! currentDataLoaded && ! previousDataLoaded ) )` check above the `previousDataLoaded` check.
I'm not sure if this is the right way to do this. The only thing I'm worried is that the `world_comm_ptr` function is used for the `lbann` model, but the `lbann` model is used for the `world_comm_ptr` model. I'm not sure if it is worth it to make a `const` call here.
Why do we need this change?
remove empty line
Why is this changed?
I think this is not needed.
I think we should not have this in the `_nextDom` method. We should not be using it in the `_nextDom` method.
This is a bug fix.
I think this should be `pkg/config.go`
This is not needed.
This is a bit of a hack, but I think it's better to have a separate method that takes the `context` as a parameter and then just use `TestCase`.
This is a change in behavior, but I think it's better to move it to a new line.
I think we should just remove the `cborStore` variable.
I think this should be `set_temp_file_path`
why not return `Optional<string>`?
Why not just `bool feat_is_unconstrained = ((config_.monotone_constraints[i] == 0) || (config_.monotone_constraints[i] == 0) || (config_.monotone_constraints[i] == 0) || (config_.monotone_constraints[i] == 0) || (config_.monotone_constraints[i] == 0) || (config_.monotone_constraints[i] == 0) || (config_.monotone_constraints[i] == 0) || (config_.monotone_
Why do we need to pass the key here?
I think we should just remove this and just call it `node`
I think this is a good change. It's not a good idea to include it in the `__init__` function.
This should be `from Pytry5.Qtparent`
I think we should also add this to the `py2exe` package.
I think this should be `Videos`
This is a bit of a hack, but I think it's better to have a test that checks if the manifest is a string, and then check if the key exists.
I think we can just remove the `HASH_CONFIG_KEYS` variable and just have it in the `attr_accessor`
I think this is a good change. It should be `SetConsoleForegroundColor(ConsoleColor.White, 'Console.ForegroundColor')`
I think this is a good change. It's not a big deal, but it's not a real problem.
This should be set to 0x8000, otherwise it will be set to 0x4000.
This file is not used.
`admin` is not needed here, we can remove it
This is a bit of a hack, but I think it's better to have a test that checks for this and then pass it to `ame_site` and then pass it to `add_index` and then pass it to `add_index` and then pass it to `ame_index` and then pass it to `add_index` and add it to `add_index` and add it to `add_index` and add it to `add_index`
I think this should be `System.Collections.Generic`
@deads2k I think this is the only change that is needed for the `v1` command.
I think this should be `pandera<0.8.0`
nit: you can use `this.permissions.length = permission.getGrantor()`
Can you explain why this change is needed?
I think we should be able to use the `ManagedIdentityResourceID` field here.
I think you can remove the `cloneURL` here.
Why is this change necessary?
I think this should be `host1.example.com': '10.3.1.5'}"`
I think this should be a `Tracer.Instance` instead of a `tracerInstance`?
I think we should be able to remove the `amo` parameter from the `su` function.
Why did you change this?
Why remove the `unsafe` call here?
Line is too long. [84/80]
I think this should be `final`
I think this needs to be reverted.
Why change this?
This should be `Compile='classification'`
I'm not sure if this is the right place for this. I'm not sure if it's worth it to make this a bit more generic, but I'm not sure if it's worth it.
Please don't use import directly.
This file should be updated to match the package name.
@smarterclayton do we want to change this to stats was sent?
Why not just add copyright year in file header?
Why do we need to use `null` here?
I think this should be `continue` instead of `continue`
I think we should add a `@JsonProperty("appName")` annotation here.
I think we should just use `convert-array-to-keyed-object-map` here.
this file is not used anywhere
I think this is a breaking change.
This is a bit of a hack, but I think it's better to move this to the top of the file.
I think this is a good change. It's not a good idea to include the default orgs from the default orgs.
I think we should remove this field and just make it a `@Deprecated`
I think this should be moved to the common lib directory too, right?
Why do we need to remove the `show tables`?
nit: I'd prefer if we didn't have to do `c == '.' || c == ':'` instead of `==`
This is a very minor thing, but I think it's better to move it to a separate file.
I think we should change the name of the service to be something more descriptive.
why not use `var files` here?
I think this is a breaking change.
Here's another example where `v` is `None`, but `v` is `nil`
I think we should just remove the whole `NewDefaultIncomingDynamicRateLimiter` function.
I think it's better to just return an error here, and then just return an error.
I think we can just remove the last two lines here.
I think this is a bug fix.
I think we can remove `\d+/.test` now that we have `\d+/.test` now.
Is this a debug log?
I think we should use `states.discard` here.
I think this is a change in behavior. We should not be able to use the default value for the default value.
What's the difference between `ports }}- "{{` and `ports }}-ports`?
@mfojtik why do we need to set `s.shardInfo != nil`?
I think this is a good idea. If we want to have a node that is not a node, we should just have a node that is a node that is not a node.
I think this is a bug fix.
I think we should remove this completely, it's no longer used.
I think you can just do `auto ret = this->kvstore_->multiGet(promise, part, keys, &values);`
I think this should be a separate function.
I think this should be `qTimeout` instead of `setTimeout`
I think this should be `cmd.Marshal(s.s)`, since it's a string, not a string.
We should probably have a `NewInternal` here, too.
Metrics/LineLength: Line is too long. [123/120]
I think we should add a `//` tag to this interface.
This is a very confusing name. What about `GetCleanName()`?
I think this is not needed.
This is a little confusing, as it is a bit confusing to have a constant for the default.
Can we make this a constant?
This should be `this.configuration`
I think this is the only change that affects the `User` method.
I think this is a bug fix.
This is a very generic name. What about `timeTimeout`?
I think we should not use api config here.
I think this should be a separate PR
I think this should be `constructor`
I think it would be better to just use `isCpuSet` here, and then check if it is not `0`
This is a bit of a hack, but I think it would be better to have a separate method that takes the param as a parameter and then call it `get_clipboard` with the same name.
is this debug code or is it just debugging code?
This change is not related to this PR, but it is not related to this PR, and it is not related to this PR.
Why are these two separate methods?
I'm not sure if this is the right place for this. The `LocalChapter` is not a `LocalChapter` object, so I'm not sure if it is a good idea to include it in the `LocalChapter` object.
This is a bit confusing, as it is used in the `displayResources` and not just for the `displayResources` field.
Should we use `Time` here?
Do we need to set the timestamp here?
This is a no-op, right?
We should probably move this check to the `if` block above.
I think this is a good change. It's not a big deal, but it's a little strange that the logger can be used in a few places.
I think this is a bug fix.
I think we should move this check to the compact cert transaction.
This should be X509Certificates.cs
I think this is a breaking change.
Should this be `p2p-service` instead of `Ready`?
Please use `std::NetworkUtils::getAvailablePort()` to avoid the long line.
This test is failing on Python 2.7+, and the test is failing on Python 2.7+, so I removed the `innerText` and `innerText` calls.
Why not just use `world_repop = (atoi(sep->arg[1]) == 1)`?
I think this is a leftover from the previous commit.
I think we should add a `@Nullable` annotation here.
I think this is a bit of a hack, but I think it would be better to have a test for this as well.
I think we should add a note about this to the client.
This is a test, but I think it's not a big deal.
I think this should be `@author`
This is the only change that affects this PR.
I think this is a good idea. It's not a big deal, but it's a bit odd to see the error message in the code.
Should this be `RESOURCE.get_Supported_TypeClass()`?
Shouldn't we also update the `pinned INT NOT NULL DEFAULT` to `pinned INT NOT NULL DEFAULT`?
@dvoytenko do we want to clear the data?
This should be done in a separate PR
This is a change in behavior, but I think it's better to use the `LoadLoadLoad` method here.
This is a bit of a hack, but I think it's better to move it to the `return` statement above.
Is this the right place to put this check?
Why are we using `int64.histogram` here?
Please use `isQueueProcessorActive` instead.
This is a leftover from the previous PR.
This is a test, but I think it's better to have a test that checks if theLogs is a different type of error.
I think this should be a `ConditionDeadlineToChildren` instead of a `propagateDeadlineToChildren`?
I think this is a bug fix.
why not use `.min(0, Math.min(((byte[]) val).length(), prefixLength)`?
I think this is a good change. The `else if` statement should be removed.
This should be a separate map, not a list.
if mask.dtype != np.bool: is not always defined, you can just set it to `True` in the function signature.
This should be changed to `github.com/iotex-core/protogen/iotexapi`.
I think this should be `logger.always_log(boost::format ("Node started with peering port `%1%", % network.port)`
Why is this change needed?
I think this is a bit of a hack. It's not a good idea to check for `listSaveProduct.isEmpty()`
I think this is a good change. The `maybe_handle` is not a `boolean` so it is always a `boolean`.
I think this should be `import org.apache.tuweni.bytes.Bytes;`
I think this is not needed.
I think this should be `false`
This is a change in behavior, but I think it's better to make it a property of the `DoExport` field.
I think this should be `grpExpr->generateCacheKey(cwa);`
This import is unused.
Why not use `$this->get('property')`?
I think this should be `if not handler == "default"`
I think we should be able to remove the name file from the name file.
Is this a bug fix?
Nit: I think this should be `GroupCloudBackupID`
I think we can use `org.apache.commons.lang3.BooleanUtils.isBooleanUtils.SCPFCCSPCF`
I think this is a change in behavior. The `.gitignore` file is not in the `if` branch.
I think it would be better to check if the value is `None` and then check if it is `None`
I think this is a debugging leftover.
I think this should be `sampleHeight.getHeight().getHeight().setHeight()`
I think we should just do this in the `Before()` function.
Why is this tag not in the schema?
I think this should be `@param bool $extended Whether to return a keyed array with the following`
Why not just use `getCoreContainer`?
Can you add a TODO to remove this?
This is a good change. It was just a mistake in the past.
I think this method should be renamed to `DocIdSetIterator`?
Can you please add a log message here?
Why did you change this?
I would add a `long` param to the doc string.
Is this the right place to put this?
@mattpap this is the only change that affects the `time.Second` field.
If we're not going to make a `KeyError` for `custom_options`, then we should probably just make `custom_options` a `KeyError` and then just do `KeyError` here.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
This function is only used in one place, so I would rename it to `NewRequest`
I'm not sure if this is the right place for this. I'm not sure if it's worth it to just add `proposal` to `proposal.js` and `proposal.js` as well.
Why not just add the license header to the license header?
I think this should be `else if (value.EndsWith(quote))`
Why do we need to call `close` here?
This is a change in behavior, but I think it's better to make the change in behavior.
I think this should be done in `MakeFBOsForExistingJournals`
Did you mean to leave this file unchanged?
Line is too long. [83/80]
I think it would be better to use `_` instead of `_` here.
This is a bit confusing, as it is a `PATH` and it is a `build` method.
Why is this needed?
This should be done in the `getProductToCartByName` method.
This is a bit of a hack, but I think it's better to have a test that checks if the site is logger, and then if the site is logger, it will return an error.
I think we should add a new `IdentifyForChat` method to the `ctx` interface.
Is this a debug statement?
Why is the `err` being ignored here?
I don't think we need these anymore.
Is this needed?
this should be set to false by default
Shouldn't this be `&spaceId`?
This is a little confusing, as it is the only place where we need to use the `.cs` file.
I think this should be `defer udpConn.Close()`.
I think this should be `ShortcutDetails`
This is a good change. The `persistdir` function is not used anymore.
I think this should be a separate commit
This is a very minor thing, but I think we should add a note that this is not a problem.
Let's use `variant.any` here.
This is a bit of a hack, but I think it's better to have a separate `SplitPath` property that does the right thing.
I think we should check `aURL.isCurrentSessionPrivate()` here.
This is a bit of a hack, but I think it's better to have a test that checks for the value of `0L` and `0L`.
Is this change intended to be in this PR?
This should be a constant.
don't you need to keep the old data?
This method is not used anywhere.
Why is this needed?
why remove this?
I think this should be a class property.
`parent` is not a valid name, it is not a valid name.
Why not just `localConnection.type == Blockly.OUTPUT_VALUE`?
I think we should add a `*[]` tag here.
I think we should keep the original behavior as it was before.
I think this should be moved to the top of the file.
I think this can be removed now since we have the index index index index index.
This test is not related to the issue, but I think it's better to use a `x` parameter instead of a `x` parameter.
Why change this?
This test is testing the wrong place for this.
This import is no longer used.
Is this change necessary?
I think this is a good idea. If the user doesn't have a high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high high
@jridgewell Is this a bug?
I think this is a good change. The `CLIENT_ASSERT` method is only used in the `__init__` method, so it should be removed.
why not use `TestAccAWSOS`?
This seems like it should be a single column.
I think this is a good idea. It's not a big deal, but it's a bit odd to have a `go/slack` and `go/slack` in the `go/` directory. I think it's better to have a `go/` directory that we can use in the `go/` directory.
I think this is a good change. It's not a big deal, but it's a minor thing.
I think this should be done in a separate PR, but I think it's better to move it to a separate commit.
Since we are not using this column in the migration we should probably add a migration to make sure that this column is not set.
I think we can just make this a class constant.
I think we should keep this check here. The `DeleteByUID` function is only called once, and the `archiveExperiment` function is called.
You should use `params["PolicyNames"]` instead of `params["error"]` here.
I think this is a bit of a hack, but I'd prefer to have a test for it.
I think we should just use `PasscodeMode.Check` here.
Is this change necessary?
I think this should be `hasattr`
please revert this change
I think this is a good change. It's not related to the change that makes it more readable.
I think this should be a separate change.
I think this is still a typo
I think this is not needed.
The timing is not set anymore.
I think we should use the `config.startsSliceHandler` helper here.
I think we can remove the `NAV_DRAWER_TAGS` constant from the `NAV_DRAWER_TAGS` method and use it here.
nit: this is a bit of a hack, but I think it's better to move it to the bottom of the file.
I think this should be `self.locator` instead of `self.locator`
I think we should add a `&& !PassCharmTargetRestriction(entity_list.GetMobID(target_id))` check here.
Is this used anywhere?
I think this is not needed.
@smarterclayton do we need to add this to the docs?
This is a very minor thing, but I think it would be better to move this to `Python-API.rst` as it's a bit more complicated than just having it in the `if` statement.
I think this is a bug fix.
this is a bit confusing, since the data is being used in the `execute_task` method, why not just use `task_options`?
Is this the right place to put this?
I think it would be better to use a function that returns a boolean, and then use it here.
Why did you remove this?
I think we should be able to remove the `repo_gpgcheck=1` from the `EOM` package.
I think we can use `StringUtils.isNotEmpty` here.
Please don't use sinon from 'sinon' in this file.
I think this should be a constant in the URL
This is a breaking change. It's not a big deal, but it's a minor thing.
nit: I think this import is unused.
@mjkkirschner I think this is the right place for this check. I think the check for `ok` is the right thing to do here.
I think we should keep the `download-links` option here.
This is a breaking change. I think it's better to move it to `__init__`
I think this should be a warning, since it's a new one.
I think this should be `namespaces: [{{.Volume.runNamespace}}]`
I think we should use the `DataRate` interface here.
I'm not sure if this is the right fix. The data_idx is a valid value, not the data.
Why do we need to change the variable name?
@jridgewell I'm not sure if this is the right way to do this, but I think it's better to have a `-ce` version of the docker-compose, and have it default to `1.10.0` in the `lib/1.10.0` package.
I think this is not needed, we can just use `fini` instead of `Match Cost`
I think this test should be moved to `test_collection_gives_number_of_deletable_records_in_headers`?
@bparees this is the fix.
Is this really needed?
is this the only version that was removed?
Why is this `int` needed?
I think we should be able to use `20*1024` here.
I think we should try to avoid duplicating the code base.
not sure why we need this anymore
I think this is a good time to make sure the user is not running the `kinesis` instance.
The `Fill` should be `null` here.
Should we have a config option for this?
Can you move this line to the top of the file?
I think we should use the `platformUnknown` constant here.
this is a change in behavior, but I think it's better to move it to the top of the file.
shouldn't this be in a `protected`?
This test is failing on Windows. Can you use the same version as the one for the other?
I think this is not needed.
Would it make sense to make this configurable?
I think this should be `*`
I think this should be `CadenceInternal:Timeout %v`
This should be `info`
This is a breaking change. The `AlwaysWebTest` version is not in the `AlwaysWebTest` version.
I think it would be better to move this to the `Number` package.
This should be done in the `this.onUninstall()` method, right?
This is a bit of a hack, but I think it's better to move it to the `v1alpha1` package.
This is a little confusing, because if `!== nil` is true, then `!= nil` will be true.
This is a bit confusing, as it is a `bool` and `string` is a `bool` and the `string` is a `bool` and the `string` is a `bool` and the `string` is a `bool` and the `string` is a `string`.
Nit: `go fmt`
Can you please revert these unnecessary changes?
This is a bit of a hack, but I'm not sure if it's worth it to make the `isCaseinsensitive` method return a boolean, and then just return a boolean.
I think this should be `unsolved` instead of `getCorrespondingDeclaration`.
this is just a small optimization, we should probably remove the `skipLoad` import from the `difficultyOlimpic\\.json`
what if we called this `time.now` instead of `time.now` ?
I think this should be `async` instead of `target`
I think it would be better to use `return" remove it and de-indent all the code inside it',`
What is this `num_stages` doing?
I think we can remove this check now that we're not doing anything useful.
Is this used?
I think we should remove this class and just use the `nameof` class.
This is a bit of a hack, but I'm not sure how to test this. I would like to see a test for the `dcn` argument.
Should we just make this a `AS_IF` instead of a `: no`?
I think we can remove this line
Why not use the `/products/1-backbone-js` namespace here?
I think we should just remove this line and make it a `static` (and keep the `expectedAssignedCDs               ` variable).
I think we should use `opts && opts.conflictStack` instead of `opts.conflictStack` here.
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
Line is too long. [98/80]
Why is this change necessary?
what is the meaning of `buffer[:0]`?
I think we should add a `role="text-align: top; padding"` here.
Why not just have a `EnableLogging` variable and have a `enableLogging` field in the constructor?
I think we should use `!= 0` here.
This is a bit confusing, as it is used in the `if` statement.
Why is this needed?
why remove the call to wlr_surface_state_release_buffer?
I think we should remove the TODO
This is a bit of a hack, but I think it's better to just use a `value` here.
This is a change in behavior, but I think it's better to move it to the `if` block.
I think this is a good place to put this.
Is this used anywhere?
I think this is a good change. It's not related to the PR, but it's not a big deal.
Is this change intentional?
I think it would be cleaner to just use the `@title` variable here.
I think this should be done in the `getStateState` method, since it's not used anywhere else.
I think we should use a more specific name for this.
I think this should be `dict.keys(dict).length`
I think this should be `NetworkMode` instead of `NetworkMode`
@jridgewell I think this is a bug, as it's not a test, right?
Why is this needed?
I think this should be `self.filename`
Please rename to 'applicationName'
This is a bit of a hack, but I think it would be better if we just return a `decorators.steps.approval.status.waiting` here, and then do a `if actionable_step.decorate.waiting_text` inside the `if actionable_step` block.
I think we can remove this file.
I think this should be `reportArgs = variable.
Why did you remove this?
I think this is a good idea. It's not a good idea to use a different name. It's a bit confusing to have a different name.
We should probably update the `checkout` field to accept a string.
This is a breaking change.
I think this should be `@SuppressWarnings("ReferenceEquality")`
Is this really necessary?
Instead of "CPU or CUDA", I'd use "device" or "CPU or CUDA".
I think this should be `GetJob`
This is a no-op, but the APP_URL host is not a user-facing link.
This is a change in behavior, but I think it's better to keep the name of the ClusterGroup and just pass in the name of the ClusterGroup.
is this a regression or a regression?
Is this used anywhere?
What is the error returned by the caller?
I think we can just remove this line.
Why are we changing this?
Should we also add a `?>` tag here?
why remove this?
I think this should be `if (!false)`, since the `error` will always be `true`
I think we should add a new option for the new option.
This is not needed anymore.
I think we should import `get_dist_info` from `nn` package, and use `nn.functional` in the `distributed` package.
This import should be removed.
I think we should also add a `allowUsageStats` to the `appArgs.secure` and `appArgs.secure` to toggle the same thing.
I think we should add a `--no-after-in-auto` flag to the new flag.
Can you use `__call__` here?
Do we need to make use of `DateTime` in this case?
Why do we need to check for the 3 3 case?
This import is unused.
I think this is not needed.
@bparees this is the only change that affects this PR.
I think this is a leftover from the previous commit.
I think we can just use `virtualNode` here.
I think this is a good idea. It's not a good idea to have a test that checks for it.
I think it would be better to have this in a separate file rather than in the `before_filter`?
I think this should be `isEth66Compatible`
Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
We should check if the errors is an error.
I think we can remove this line
this is not needed anymore
I think this is a little confusing. I think it's better to have a test that checks if the lock is not thread safe.
I think this can be removed now, since we are already doing the imports in the file.
Please revert this change.
I think we should add a check here that `isCloud` is set to true.
This is a bit of a hack, but I think it would be better to move this to a separate function.
This should be `LOG.finest(String.format)`
I think we should be able to remove this.
Why is this change needed?
`final String idField = sync.getTarget().getIdFieldName();`
I think we should just make this `this.getOffset()` and call `getOffset()` in the `this.getOffset()` method.
why not just `getParent().getResultType().getChild(0)` ?
I think this is a good time to make sure the `Interceptors` is not a `*` (which is what we want).
I think we should just remove the dir from the `removePeer` method.
I think this is a bit of a hack, but I think it's better to move it to the top of the file.
I think we should use the same value for the `Eventf` and `Eventf` to determine if the user has a different value.
Why is this necessary?
This is a breaking change. I'm not sure why we need to remove this.
This is a little confusing, as it is a little confusing to me. I think it's better to return a `errors.Wrapf` that returns the error.
I think this should be const.
This is a no-op, right?
This is a bit of a hack, but I'm not sure if it's worth it to just remove the XXX i.MX. The only thing I'd expect is that if you don't want to run the test, then you'd need to run the test.
I think this should be removed.
I think we should use `selected` instead of `selected` here.
This is a good thing to do, but I think it would be better to move this to the `abspath` package.
This is a little strange. What about `.map(PrimeNumbers::factorization)`?
This class is not used.
This is a breaking change. I think we should not be using the `Exception` method here.
Why is this import changed?
This is a breaking change. It's not a public API.
Why not using "\0\0\0\0?
I think you can just remove `=>` now that you're not doing anything else.
I think this should be `github.com/iotexproject/go-fsm`
Can we remove this?
I think we should keep these as long as we're here.
I think this should be `len(values) > 0`
I think this should be `text` instead of `Execution stopped`
Is this the correct way to do this?
This is a bit of a hack, but I think it's better to have a `code_to` method that takes a `code_to` and then pass it to `div` instead of `div` here.
I think this should be done in the `RestConst.REST_INVOCATION_CONTEXT` method.
This test is not related to the PR, but I think it's better to keep it.
This is a breaking change.
Why is this being removed?
I think this can be removed.
This is not a good idea. The `if` statement is not needed.
The second half of the tests seemed like a good idea to me. I think we should be able to remove the `.not_to eq` altogether and just use `.not_to have_column` instead.
Why did you change this?
I think we can remove this.
I think we should use `_x` here.
Is this a bug fix?
The type is `ENIType`?
`this.widgets` is a little confusing. I don't think we should change it here.
I think this method should be private.
I think this can be moved to the base class definition definition definition definition.
This is a change in behavior, but I think it's better to keep the old `src` and `list` as the default.
You can use `declare(strict_types=1);` here.
Why not just `omitempty`?
Why is this needed?
I think this should be a `JSONOptions` instead of a `Set[i]`
This test is testing the right thing. I think it would be better to test the actual behavior of the resource.
Why do we need to add this?
I think we should use a more descriptive name for this.
This is a little confusing. If we're going to have a `.ok` file, we should be able to just return an error.
I think this should be more specific, e.g. `io.servicecomb.score_NAME`
I think this is a leftover from the previous commit.
This is a bit of a hack, but I think it's better to just have a `processGatewaySubjectSub` return the CLIENT object and then have a `processSub` return the error.
this is not needed anymore?
Why is this 10 now?
I think it's better to have a `MapLen` field in `NewSourceSource`.
I think we should just use `*` here.
Why not just catching the exception?
@bparees this is the bug fix.
I think this is a breaking change.
I think we should add a `System.read_Ethth` constant in the `UpdateUpdate` and `UpdateUpdate` methods.
Why not use `NewConstructor` directly?
This is a change in behavior, but I think it's better to use the `GraphScanner lexer` class here.
I think this is a leftover from the previous PR.
I think this is a good change. I think we should just remove the `sender_gcpbroker` env variable and just have the `sender_gcpbroker` env variable.
This should be reverted.
I think this test should be removed.
I think this should be `True`
@pstibrany why do you need to change this?
This is a change in behavior, but I think it's better to keep the old `.String()` calls in the `.String()` calls.
Should this be set to null?
Is this needed?
I think this is a leftover from debugging.
Should we also test that the C++ C++ doesn't have a C++ C++ C++++?
This is a very minor thing, but I think it's better to make the interface more specific.
I think we should remove this and just change the policy to `AWS IAM` and `AWS IAM` to make it more clear that the policy is not in the UI.
this should be a debug log
I think this is a good change. It's not a big deal, but it's a bit odd that we're using the `ConvertError` function.
Why not using the `$domainId` variable here?
remove empty line
This is not needed.
I think this is a leftover from the previous commit.
Why is this change necessary?
I think we should use a default value here.
I think this is a bug fix. It's not related to the fix, but it's not a problem. It's a bug fix.
I think this should be `github.com/opencontainers/runc/libcontainer/logs`
remove empty line
This should be removed.
`coin` is not used in this function.
I think this is a bug fix.
I think we should use the `-1` here.
I think this is a bit confusing, since it's a `@VisibleForTesting`-like `is_log` - it's not a `@VisibleForTesting`-specific, and it's a `@VisibleForTesting`-specific.
The `json:"parentWeightNumerator"` is not the right thing to do here. The `parentWeight` is not the right thing to do. The `json:"parentWeightNumerator"` is the right thing to do, and the `parentWeight` is the right thing to do. The `json:"parentWeightFirst"` is the right thing to do. The `parentWeight` is the right thing to do, but the `parentWeight` is the right thing to do.
I think this is a bug fix. The `require.Len` is not really necessary.
I think we should also add the `subdomain` tag to the `username` tag.
I think we should just remove this
I think this is a breaking change. It's not a real problem, but it's a public API.
This is a bit of a hack, but I think it's better to have it in a separate commit.
I think this should be `html_safe` instead of `html_safe`
I think we should just do `this.splashWindow && !this.splashWindow.close();`
I think we should keep this as it was before, and keep the default value for `1.31` and `1.32` as it is in the `dvc/repo/repo/repo/repo.py` file.
Better to use `logger.info('imported %d listens for %s' % (len(listens))`
I think we should be able to get rid of this entire entire entire file.
This import is no longer used.
I think the `anomalyScore` is still a valid integer, so you should just remove the `multiStep` parameter.
Should we add a TODO here to make sure it's not retry?
@kargakis this is the fix for the `!= 1` case.
I think we can use `vcrChan` here.
I think this change is not needed.
This import is unused.
I think we can remove this and just use the `vavr` package.
`samplerDescriptor.address_mode = HSA_EXT_SAMPLER_FILTER_MODE_NEAREST;`
should we use the name of the Faker for consistency?
This check is not needed.
This import is no longer used.
We should probably use `self.headers_to_json` here.
`c._nextState` is a `null` value, so you can use `state.getDerivedStateFromProps(newVNode.props, s));` to avoid the `!=null` check.
I think it's better to put this in the `DEFINE_integer` method.
I think we should add a `APIPort` field to the service, and make it clear that this is a `clusterPort`.
This is a bit of a hack, but I think it's better to have a test that checks that the `mode` is not null.
This is a very minor thing, but I think it's better to have a single `isEnum` method that takes the `Letter` parameter, and then pass it to `scala` and then pass it to `scala` as an argument to `scala` that takes the value to `scala` as an argument.
I think this should be `db_schema_version2`
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is a little confusing, as it is a `configBuilder` and not a `ConfigurationBuilder`
Why not `public`?
I think we should just remove this and just call `getView` from the `if` below.
I think we can remove `_readInputContinuation` now.
`onStartTrackingTouch` is called only once, so I think it's better to do it in `onStartTrackingTouch`.
You need to check that `self.num_classes` is always `True` here.
Is it possible to use `dev.getAmpDoc()`?
I think this import is unused.
I think this is a breaking change. It's not a problem, but it's a bit odd. I think it's better to have a `WhenAll` method that returns a `Task` and then call `WhenAll(tasks)` in the `addFlushAsync` method.
I think this is a change in behavior. We should not be using the `collection` field here.
Metrics/LineLength: Line is too long. [83/80]
This should be setBrowserLoginEnabled.
I'm not sure if this is the right place for this. The `resize` method is used for the `input_buffer_size` method. I think it is better to check for `splitInfoSize` and `resize` here.
I think we should check if the id is set to `true` here.
Does this mean that the new `property` can be nil?
I think this is a bit of a hack, but I think it would be better to just catch `ValueError` here and catch `ValueError[str]` in the error message.
I think we should add a `TODO` to the `master` package.
I think this should be `list_GROUP_USERS`
I think we should use `self.engine.find_file(path)` here.
This should be `static`
This is a bit of a hack, but I think it's better to do this as a separate PR, and then pass in the `self.cart.id` as an argument to `self.created_at` and `self.cart.id` as an argument to `.year` so that we can avoid the need for the `.year` call.
I think this is a good change. It's not a big deal, but it's a bit confusing to have a test that checks for the expected expected output.
I think we should be able to get rid of this line.
I think this is a leftover?
This is the only change that affects the record.frozen?
How about we make this a `int64`?
I think we can remove the interpreters here.
I think this file should be removed.
I think this is a good idea to use `os.environ.get("dev_drm/0")` instead of `os.environ.get("dev_drm/0")`
This is a bit confusing, as it is used in a few places, why not just use `Boolean::parseBoolean` and `Boolean::parseBoolean` directly?
this is a bit of a hack, we should probably move it to a separate file
@smarterclayton do we need to check for the `dataverseAlias` here?
Is this necessary?
Is this function used anywhere?
I think this should be `archerCfn`
I think we should use `.spec.duration` instead of `.duration`
This is a breaking change.
This is a bit of a hack, but I'm not sure if it's worth it to make the test more specific.
Is this change related to the PR?
I think we should add a default implementation to make sure we don't have any default implementation.
What about `LITTLE_ENDIAN`?
I think we can import `conftest.java` from `conftest.java` to `conftest.java`
I think we should be able to use `<` instead of `<` here.
can we rename this to `NewKeyStore`?
I think we should just make this a constant.
Please remove this.
I think we should remove this.
This is a bit of a hack, but I'm not sure if it's worth it to have a test for this.
I think this is a leftover?
You can remove this line.
Is there a reason for changing the `map` to `err`?
Can we move this to the base class?
This should be `Blockly.scratchBlocksUtils.compareStrings`
This is a bit of a hack, but I think we should probably have a separate PR to make sure that we don't have any of the `HasSuffix` calls in the `base.Split` function.
Why do we need this?
This is a little confusing, as the error message is not "failed to unmarshal connection"
I think we should probably add a new flag to the description of the new flag
I think this is not needed.
I think this is a good change. It's not a big deal, but it's a bit confusing to have a context context in the context. If we're going to do this, we should just have a context context in the context.
Should we make this a constant?
I think this should be `getState()` instead of `getState()`
I think you can just remove the `display: null` part.
This is the only change that affects the `sni` parameter.
this is the only change in this file. is it ok to remove it?
Why did you remove this?
Why do we need this?
I think we should use `close(true)` here.
Should we also check that the `current_churn` is an array of the `plan` model?
Is this change intentional?
`OnResetEvent` is not needed, we can just use `OnResetEvent` instead.
Why is this removed?
this is a temporary change. It's not a part of the PR, but it's a minor thing.
Can we just use `DefaultDefaultDefault` here?
I think this is a change in behavior. It's not related to the PR, but I think it's better to just change it to `Config`
I think this is a leftover from the previous PR.
This change is not needed.
I think we should add a new method to `pkg/api/TransportTransport.go` and make sure that we don't have any new method to handle this.
Why are we adding this?
I think this should be `logger.Printf("[%v] %v", testCase.Sprintf(...))`
Is this the correct error code?
I think this class should be marked as `@Nullable`
This is a change in behavior, but I think it's better to use `Cause(m.SignVote)` instead of `m.Cause(containercontainer)`
Why do we need to change this?
I think this is a bit of a hack, but I think it would be better to have a test that checks if the path is not in the path.
I think this should be `getState()`.
We should only do this if the pipeline is not enabled.
Why do you need to cast it to a string here?
I think this should be `static final`
this is not needed. `isConnected` will be executed twice
This is a little confusing, as it is not used anywhere else.
This is a bit of a hack, but I think it's better to have a test that checks if the manifest is a string, and then check if the key exists.
This is not needed.
I think this should be `referer-header`
I think this is a bit confusing, as it is a part of the `listItemBody` and not a `listItemBody`
why is this a pointer?
This is a breaking change.
This should be `drag` instead of `drag`
This file is not used anymore.
This was removed because it was already added in the rootless file.
`gpu_ids` is always `None`, so this should be `None`
We should probably log this message in `LOG.finest`
Why not use `setIval(float(float(float(x)&&2)`?
I think this is a bug fix. The `OverwriteIfNewer` is not needed anymore.
Why is this needed?
Is this change intentional?
The `additionalIngressRules` variable is used in many places, so it is not clear what this is doing.
This is not needed anymore.
I think this is a breaking change.
I think we should use `isWorldStateAvailable` here.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this should be `None` instead of `None`
why import here?
Why is this error ignored?
I think this is not needed.
This is a bit of a hack, but I think we should be able to remove the context from the thread.
Can we use getTotalProductCount instead of getTotalProductCount?
I think we should add a TODO to remove this
This command should be removed.
This is a breaking change. I think we should keep it in the controller for now.
This is a bit of a hack, but I think it would be better to have a test that checks for the expected value.
Why did you change the signature of waitTimeoutMillis to wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait
I think we can remove the `opts` check now that the component has been removed.
This is a breaking change. I think it's better to keep it simple.
I think this is a leftover from the previous PR.
Can you also move this import to the top of the file?
This is a change in behavior, but I think it's better to check if `pkt.tls_version > 0x0200` is true.
This is a change in behavior, but I think it's better to move it to the `java.lang.String` package.
I think we should be consistent and use the same logic for the `and-improved` field.
@sahbi-ktifa Can you please revert these changes?
Why are we passing the `-` instead of `-`?
I think this should be `[NotNullWhen(true)]`.
This is not needed.
I think we should use the `Object.prototype` here.
I think we should add a check for `taskManagerImpl` here.
This is the only change that affects old_size.
This is not a boolean, so we should remove it.
I think this should be `isLongrunningReturnValue`
This should be `Basic %s`
I think we should add a `scope` here to avoid duplicating the code base.
Redundant return detected.
Is there a reason we don't use `item` here?
This should be `offlineMode.getConfig("api").offline_mode;`
I think we should also check for the `Shibboleth` value here.
Shouldn't this be a `o.MaxPayload`?
Should we also check `context` here?
I think we should be able to remove `v2` from the command line and pass `key[]string` to `[]byte`.
remove the empty line
I think this should be `c = { _ancestorComponent };`
I think this should be `null`
This is a change in behavior, but I think it's better to have it in a separate PR.
This is a breaking change. I think it would be better to keep it as `__str__` and just call it `repr`.
This is not needed anymore.
I think we should just use `.String()` here.
This is a breaking change.
This is a breaking change. It's not a problem, but it's a minor thing.
I think this should be `== 0`
This is not necessary because the `bridge` isn't in the `page` method, and it will be removed in the `build_page` method.
this is not needed, we have the package in the package
This is the only change that affects the `guidP` field.
I think it would be more clear to use `if not url.isValid()` here.
You can use the DevStatus interface here.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this should be `final`
I think this is not needed.
Can you add a docblock here?
Why is this change necessary?
I think we should just make this `command.readPreference = resolveReadPreference(options, { db: this.s.db, collection: this });)` and remove the `readPreference` below.
Why not `(to + s.BlockNumber) / 2 // Binary search for the correct block, biased to the lower numbers`
I think we should be more specific here. The `T()` is not the same as `Skip` on the `matchingEngineSuite` and `dispatchLimitFn` is the same as `matchingEngineSuite`.
Line is too long. [93/80]
I'm not sure if this is the right fix. The result is simulated to miss its deadline.
I think this should be `getItemIdByName(getString(L, 3));`
I think this should be done in the `KEY_CLIENT_CERT` class.
@mfojtik this is the only change that affects this PR. I think it's better to move it to the `if` block.
The `stopEventWalk()` calls in `onWalkComplete()` and `stopEventWalk()` calls in `onWalkComplete()` calls.
Should we check if the value is `nil`?
I think we should use `Config.Bool` here.
This should be `unsigned n = 0;`
What is the difference between partitions and partitions?
I think this should be `public`
This is a bit of a hack, but I think it's better to have a test that checks for the file name and then just use the file name.
This is a change in behavior, but I think it's better to have a single loop with `if (size_t i == 0 || '\0') { code += "}"; }`
I think we should remove the `in_arg` call here.
I think this should be `@since`
I think this should be initialized to `null` and not `null` as it is a `AtomicInteger`, since it is a `boolean` field.
Why not `_logger.Trace`?
I think we should add a `ServiceName` field to the service.
This is a bug fix.
I think we should use `log.log` here.
I think it would be better to add a docstring here that it's not a list of strings.
This is not needed.
This is a bit of a hack, but I'm not sure if it is worth it.
I think this is a leftover from the previous commit.
I think we should just use `delete` here.
do we need to make sure the config is not a separate config?
I think this is a bit of a mess, but I think it's better to be explicit here.
I think this should be `*`
I think we should be able to remove this check.
This is a bit confusing, as it is used in the `nni-common` package.
I think this should be moved to the core function, since it's used in the core function.
Should we pass the ` registrationToken` as an argument to `SubmitTaskStateChange`?
I think this should be `PasswordPassword_APP_FEATURE_CODE_USER_AUTH`
This is a very generic name. I'd rather just call it `numRekeyWorkers_id tlf` or something like that.
This test is not needed.
I think we should remove this `status-header-container cancelled` and remove the `header-container cancelled` attribute.
Why is this removed?
`typeof` is a string, not a string, so you can use `!=`
Is this the correct default?
This is a change in behavior, but I think it's better to be explicit here.
I think this should be `count = fcontext.base.size() == 0`
I think this import is unused
I think we should be using `cmd.Error` here, since we are already setting `nil` in the error message.
I think we should just add a `now.Before(cert)` here to avoid the `if` and `if` here.
this should be part of the PR
I think we should add a note about the content of the `since` parameter here.
I think this is the only change that affects this change.
can we just use `deployment.ClusterName = cluster` here?
This test is failing because `fileServer.Pages` is not being used.
I think we should just remove this and just do the `inputShapes_` above.
@jridgewell I'm not sure if this is the right way to do this, but I think it's better to have a `-ce` version of the docker-compose, and have it default to `1.10.0` in the `lib/1.10.0` package.
Why not just use `new FileOutputStream(file);`?
This is a change in behavior, but I think it's better to return a `err` here instead of `Requeue` and return a `err.Result{}` here.
Hmm, this is not a huge deal, but I'm not sure if it's worth it to make sure that it's not a problem.
This is a bit of a hack, but I'm not sure if it's worth it to make a PR to remove the `header` and `nav` fields.
I think this is a bit of a hack, but I think it would be better to have a separate method that takes the display name as a parameter and then just use the `.replace(/\s+/g, '-').replace(/[^\w\-]+/g` as the name.
Why do we need to call ast_ctx->GetAnyObjectType() here?
I think we can just use `!this.flyoutWidth_ && this.workspace_.scale` instead of `!this.flyoutWidth_`.
The `GET` is not needed here.
I think we should add a `fillFilterWithComponent` function to the `Heapmanager` function.
Is this change required?
I think this should be `SnackBar.show(coordinatorLayout, R.string.feature_not_present);`
nit: remove empty line
I think this is a good idea. It might be worth checking if the user has the right `devnull` and if it doesn't have the right `pulumi up` and `pulumi up` then.
This is a change in behavior, but I think it's better to move it to the `if (Delimiter)` block above.
I think this is a bit of a hack, but I think it would be better to move this check inside the `overlayText` function.
Please use `s.IsHidden` instead of `s.IsHidden`
Is this used?
I think this should be removed.
This is a breaking change. We should probably have a test for that.
This is a bit of a hack, but I think it's better to do it in a separate PR.
Do we need to make sure `--no-qutebrowser-prefix` is not set?
This is a bug fix.
Can we change this to a QVariant::fromItem(screen, position) instead?
Use 2 (not 4) spaces for indentation.
I think this is a good change. The balance is not a valid one, so it should be handled by the `receivable` class.
I think we should be using the `AccountSignerAddress` function here, since it's not used anywhere else.
This is a bit of a hack, but I think it would be better to move this to the `if (oldVersion < 1090001) {` block above the `if (oldVersion < 1090001) {` block, and then check the error message.
I think we should be able to remove the `e` here and just use `error executing CQL` everywhere.
This is a change in behavior, but I think we should keep the old version as it was.
Is this change necessary?
This is a bit of a hack, but I think it would be better to have a test for that.
I think this should be a `protected final`
This is a bit confusing, as it is a very common pattern for `Operation not supported` and it is a very generic message. Maybe we should just add a `Set<T> removeAll(Iterable<? extends T> elements)` to the `Set<T> reverse()` method and call it `Operation not supported`?
what is the reason for this change?
I think this is still not needed.
This import is no longer used.
I think you can remove this include.
I think this is a change in behavior. The `cursor` variable is not used in the `if` statement.
This check should be moved to the check above the check.
Should we check if the result is not null before returning?
I think this is a good idea. But I don't think it's a good idea to include a separate method.
Can you use `transform[:1]` instead of `transform[:maxTrace])`?
I think it would be better to have a `user.utcnow()` method that returns the expected format string.
Why not just return `AbstractRememberMeServices`?
This is a breaking change. I think it's better to keep the abstract class as it is.
I think this is a good change. It's not a good idea to import the log_util.
This is a bit of a hack, but I think it's better to just remove the script.
I think this is a good change. It seems like the `if imageAlpha != nil && imageAlpha.Deprecated.StateOverride != nil {` should be `if len(imageAlpha.RolloutTime) > 0 {`
This is a breaking change. We're not using the `String()` method.
I think this is a bug fix. The `Disposing` should be `false`
"... if using `Unknown_Util.get('Unknown_Util.get('Unknown_Util.get('Unknown_Util.get('Unknown_Util.get('Unknown_Util.get('Unknown_Util.get('Unknown_Util', 'Unknown_Util.set=Unknown_Util.set=Unknown_Util.set=Unknown_Util.set=Unknown_Util.set=Unknown_Util.set=Unknown_Util.set=Unknown_Util.set=Unknown_Util.set=Unknown_Util.set=Unknown_Util.set=Unknown_Util.set=Unknown_
Why is this needed?
I'm not sure this is the right fix. The `run_in_parallel` is the correct thing to do. I'm not sure if this is the right fix.
I think this should be `HTTPSchemeHTTP.String("http")`
I think this needs to be a `Task CopyToAsync`?
I think we should use the new `MevBlockProducerTransactionsExecutorFactory` here.
This is a bit of a hack, but I think it's better to move the `HoodieTest` check out of the `HoodieTest` function.
Is this change necessary?
I think this was a mistake before, but I think it's better to move it to the `ErrorHandler` class.
This is a breaking change. The `versionHistory` version is not in the `Version` package.
@executable = '' is not needed here, you can just use `@executable_text`
I think we should use the `SUBPACKAGE_NAME_FORMAT` constant here.
This is a bit of a hack, but I think it's better to have a `uppy-DashboardContent-bar` class that returns a `done` and then use it in the `uppy-DashboardContent-back` class.
This is a bit of a hack, but I'm not sure if this is correct.
Why did you change this?
I think we should use `.map(ignored -> Stream.of("\"\""));`
This is a bit of a hack, but I think it's better to have a test that checks if the path is not present.
This is a bit of a hack, but I think we should be able to use the `ipv4.String()` function in the `lib/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/
This is a bit of a hack, but I think it's better to move to the top of the file.
I think this method should be renamed to `@InputFiles`
Is this used anywhere?
I think this should be `using System.IO;`
Shouldn't this be `payments.during-session-debug`?
This is a bug fix.
Why is this file needed?
This is a breaking change. This is not needed anymore.
This is a breaking change. I think we should keep it as is.
remove empty line
I think this is a little too vague.
I think this should be `h2o_sysfn(listen, listen_fd, H2O_SOMAXCONN) != 0`
can we add a check that the file is not defined in the function?
This is a breaking change. It should be reverted.
I think we can remove `.not` here.
I think we should use `noencTarget` here.
We should also check for the `ncr` case here.
I think we should add a check here that the value is not null.
I think we should use `ReplaceAll` here.
I think this should be `onPlaybackEnded(MediaType mediaType, boolean stopPlaying)`
Is this a debugging leftover?
This file is not used.
remove empty line
Why did you change this?
Use the new Ruby 1.9 hash syntax.
I think this is not needed anymore.
Is this a change in behavior?
@smarterclayton do we need to change the default value of hex to hex?
Should we also add a `controllerutils` package to the `current_client.go`?
Is it possible to use the existing `UpdateAllInstanceNoExternalIP` function in `NewDaisy_utils`?
Please revert this change.
I think this is not needed.
I think this is a change in behavior. I think it should be reverted.
I think it would be better to check the other option `KINESIS_PROVIDER` in the name, like `config.KINESIS_PROVIDER`
<msg> <msg>  now we have `this.props.dateFormat` now, we can just change the type of `DateInput` to `DateDate`.
This should be `EgressLong`
I think you can just remove `ignore_index=True`
Is this just for testing?
I think we can remove this and just use the `Map.Map` method in the `<=` package.
This is a very minor thing, but I think we should be able to use the `ExtraRuntimes` variable here.
@deque/dot is not used anymore, can you remove it?
Why is this needed?
Is this still necessary?
We should probably check for `collection_id` here too.
is this debug debug debug debug debug or is it just for debugging?
You can use `declare(strict_types=1);` here.
this is not needed
shouldn't this be done after the spells[spell_id].reflectable == "feedbackable" ?
I think you can just do `can_column :teams, :max_users, false, 0` instead of adding a new column.
I think this is a good change. It's not a big deal but it's a bit confusing to have a test that checks for the new `expectError` value.
I don't think we should be using the `middlewares` package.
This is a bit of a hack, but I think we should just remove the `_nupic` prefix.
why is this needed?
Why are these lines changed?
I think this is a leftover from the previous commit.
Why not use the `common.IsNullOrEmpty` method here?
Is this the only place where we call this?
Can you make this `@since` instead?
Can you remove the TODO?
I think this is a breaking change.
I think we should be able to use `context.MG_context.netnet.context.MG_context.netnet.context.MG_context.netnet.context.MG_context.netnet.context.MG_context.netnet.context.netnet.context.netnet.context.netnet.context.netnet.context.netnet.context.netnet.context.netnet.context.netnet.context.netnet.context.netnet.context.netnet.context.netnet.context.netnet.context.
I think this should be `this.onAfterLocalTransformStart`
This is a bit of a hack, but I think it's better to have a separate method to return a list of files that are not valid.
This is a bit of a hack, but I think it's better to check the `assert` in the `if` statement.
I think we should remove the `IEnumerable` and `IEnumerable` in the `internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/
This should be `LOG.finest(String.format)`
do we need to set it to `true` in case of failure?
Is this TODO still needed?
I think this should be removed as it is not used anymore.
This is a bit of a hack, but I think it's better to have a separate method for this.
I think this is a leftover from the PR.
This is needed for the new test.
This is a bit of a hack, but I'm not sure why it's needed.
The last two params should be removed.
I think this is a good change. But I don't think we need to check that the scope is not null.
I think we should keep the `@var` tag here.
This is a change in behavior, but I think it's a good idea to add it to the `.Join` file.
I think we should add a `file` and `file` to the docs.
This is the only change that affects the check.
I think we should remove this and just use `X...` everywhere.
I think this is not needed.
This test is not needed anymore.
This is a breaking change. The `try` block is not needed.
This import is unused.
I think this is a good change. It's not a problem, but it's a bit of a hack, and it's a bit of a hack.
This file is not used anymore.
why not use the new one here?
We should probably be using the `ariaDayPrefix` helper here.
I think you can remove the `component.state` check here.
I think we should use the same name for the other properties.
I think this should be removed.
Do we need to add `[]string` to all of these?
I think we should use the `ConfigTLP` constant here.
why is this 10 now?
This should be removed.
I think it would be better to use a `==` here instead of a `==`
can we use a generic `Phase` here?
I think we should keep the old version as a URL.
I think this should be `var matrix = imports.networks || require('./networks');`
The `/td` should be kept here too.
This should be reverted.
I think this is a bit of a weird name. I would suggest `servers_config` or `servers_config`.
I think this is not needed.
I think this is a leftover.
I think this is a good idea. But I don't think we need this.
This is the only place where we have a `UnTests` method. I think we should be able to remove the `UnTests` check.
I think we should keep this as it was before, but I think we should keep it in the `proposal_link_text` method.
This is a bug fix.
I think this is still a leftover from the previous commit.
is this debug message still valid?
I think we should remove this.
This should be a class field.
I think this is a breaking change.
You should use `sysPath` instead of `os` here.
I think this is a good change. The function is called `_front_preference` which is called by `_get_add_url`.
I think this is not needed.
This import is unused.
I think we should remove this check.
I think we should use `const` here.
Is this a bug fix?
I think this should be `pOD_FAILED`
I think it's better to have a separate interface for `FetchTipSets` and `done` here.
I think this is a good change. The standard definitions of CEL functions and operators are weren't [here](https://github.com/google/cel-spec/blob/master/doc/standard-definitions)
I think this is a leftover from the previous commit.
This is the only change that fixes the issue. I'm not sure if this is the best way to go.
I think this should be `return write(2, spec, outputFile, null);`
I think we should add a check for the ID here.
I think this should be `name:"debug_tools"`
This is the only change that affects this PR. I think we should be doing this in a separate PR.
I think this should be ` IMAP.cs`
I think you can remove this `@method tokenList` and just do `return {Array}` in the `@return {Array}`
This is a bug fix. We should not be using the `node` field in the `create` method.
I think this is a little too vague. What do you think about just adding the `handle_raises(ctx)` to the `handle_raises(ctx)` call?
This should be `public const FORBIDDEN = ['id'];`
`The header header to take into account for the ip address.`
This file is not used anywhere.
I think the `TestCase` should be `final`.
This is a bit of a hack, but I think it's better to have a test that checks if the value is `servicecomb.loadbalance.stats.timerIntervalInMilis`.
This does not belong to any rules.
I think this should be changed to `elif foo foo == 1)`.
Why do we need to import keyconf.KeyConfigParser from qutebrowser.config.parsers?
This test is not related to this PR, but I think it should be reverted.
Is it possible to have a struct which represents the size of sectors and ProofsMode?
why remove this?
Is this a bug fix?
I think we can remove the `else` here and just do `if grantFB {`
This is a bug fix.
"Error reloading permissions file" -> "Error reloading permissions file"
I think this is a bit of a hack, but I think it would be better to check for `<Email>` instead of `<Email>`.
I think this should be `panic("dir unexpectedly empty")`
This is not needed, right?
I think this is a good change. The first condition is not a valid address.
Would you please add a new commit message for this new commit?
Why changing this to false?
I think this should be done in the `sortFiles` method, since it's not a part of the cache.
This is a breaking change. We should be able to make sure that the `gcc` is not defined.
I think this should be `if (!args) { ... }`, since the value `args = [];` is always `true`.
I think this is a bit of an overkill, but I'm not sure if we should be using the `PROVIDED_FEATURES` method here.
The docstring for this function is not really important.
This is a breaking change.
Can we change this to `ZalcanoTitle`?
I think this should be done in a separate PR, but I think it's better to have it in a separate PR.
This is the only change that affects this PR.
Is this the right place for this?
This is a bit of a hack, but I think it's better to check if the `c.nc` is nil.
I think this is a change in behavior. We should revert it.
This is a bit of a hack, I think it's better to just remove the `slug_matches?` check and just do `user.admin?` on the `slug_matches?` check instead of passing it as a string.
I think this is a bug fix.
I think this should be a `AutomationPolicy`?
This is a bit of a hack, but I think it's better to have a separate `if` statement here.
This is a bit of a hack, but I think it's better to have a `string[]` and `features` as a parameter.
Can you explain why this change is needed?
I think this should be removed
I think this should be `final`
I think this is the only change that affects the replica controller.
The `application/json` is not needed here, it is already added by the `if (req->res.headers)`.
I think we should remove these now that we are removing the `ToDotNet` from the `SessionpressionStates` and `SessionpressionStates` tests.
I think this is the only place where we can get the `configParams` value.
What if we called this `AssembleString` instead of `ProgramHash`?
I think it would be better to use `ariaCurrent = attrs.get("IAccessible2::attribute_current", ariaCurrent)` instead of `del attrs["IAccessible2::attribute_current"]`
I think this is a bit of a breaking change. It's not a big deal, but it's not a big deal.
`DistributedSpanContext` is now unused and can be removed.
I think this should be `[0]`
Why do you need this? It's not a user-facing endpoint, but it's a user-facing endpoint.
I think this is not needed.
why is this one being changed?
This is a bit of a hack, but I think it's better to check for `arc.target < 0` and `arc.target >= 0` here.
Prefer single-quoted strings when you don't need string interpolation or special symbols.
why not `@job(version_strategy=SourceHashVersionStrategy())`?
I think we should use `sigs.k8s.io/apimachinery/pkg/types` instead of `sigs.k8s.io/apimachinery/pkg/types`.
This is a bit of a hack, but I think it's better to have a test that checks for it.
This is a bit of a hack, but I think it would be better to have a test that checks whether the type is `None` or `None` or `None` or `None` if the type is `None` (or `None`) and then check if the type is `None` and `element` are `None` and `element` are `None` and `element` are `None` and `element` are `None` and `element` are `None` (which is what we want to do).
I think this is the only change that is needed.
This is a bit of a hack, but I think it's better to have a test that checks for it.
Should we do the same for all keys in one place?
This is a private field, so I'd prefer to use `_vectorSpan` as it is a static field.
I think this can be removed now, since we are already using `#core` in the `__init__` method.
I think this is a good change. It's not a good idea to add it to the `Number` list.
This method is called in `app/services/plugins` which is not called in `app/services/plugins` module.
I think this is wrong. The OpenTelemetry is not in OpenTelemetry.Exporter.OpenTelemetryProtocol.Implementation.
This file is still used in the `.py` file, right?
should we change the description of the controller to be consistent with the rest of the codebase?
I think this should be `defer f.Close()`.
I think this is a little too vague.
I think we should check if the `getRChannel` is not a `Load()` method.
Is this also an option for authentication?
I think we should add a new field to the constructor.
I think this one is still not needed.
I think this is a good place to put this.
Why is this change necessary?
Why do we need to change this?
`link_hovered` is a `last_hovered_link` function, so you can use `self.get_clipboard(selection=True)` here.
I don't think this is needed.
This needs to be added to the `AzureTestUrlExtensions` namespace.
I think this should be a separate commit
This is a change in behavior, but I think it's better to be explicit here.
This is a breaking change.
why not just `withwithAccessNode` ?
I think this can be removed
I think this is a leftover.
This is a change in behavior, but I think it's not necessary to do this.
Should we do this for all subclasses?
The `n_+x` is not needed here, since we already have a `x` variable.
I think we should use a more specific name for this.
This is a good place to put this. You can just use `result.stdout.chomp` instead.
Shouldn't this be `@Query("Inv2")`?
This file should be removed.
`components` is a list of components, so you can use `std::string qualified_name` directly.
Why is this needed?
`acc` is a little confusing, why not just use `acc`?
I'm not sure if this is the right place for this. The `else if` should be removed.
Line is too long. [85/80]
Why not just remove the min/max?
I think this is a little confusing. What is the difference between `HTTP/1.1` and `nContent-bulk`?
Is this change intentional?
This was added to the `src/github.com/iotex-core/action/protocol` import.
This is a very minor thing, but I'm not sure if it's worth it to make this a function.
I think this is a little confusing. What do you think about `success_color`?
I think this should be a `getSiteInfo()` function.
I think we should add the `-Wno-invalid-offsetof` to the `ALPINE` section to make sure we don't accidentally forget to remove the `-Wno-deprecated-+` part of the code.
I think we should be able to remove this and just do `IsMSIEnvironment represents if the blob storage is being authenticated`
Is this a bug fix?
Metrics/LineLength: Line is too long. [123/120]
The `UNASSIGNED-cache-file-error` is not really needed here, since it's a new key.
should we also add these to the `[ConditionalTheory]` below?
This is not a good idea. It's not a public API. It's a public API. It's a public API.
@smarterclayton do we need to use `go.uber.org/yarpc/peer/peerlist/v2` here?
This is a change in behavior, but I think we should remove the `Warnf` from the log message.
I think this should be `Datadog.Trace.ClrProfiler.Native.dll`
We should also check if the user is not set.
This should be `static int jx_input = 0;`
This is a change in behavior, but I think it's better to have a check for `nameof` here.
I think we should be able to use `changes` here instead of `allAffectedNodeIDs` as a user.
This is a no-op, right?
I think this can be removed now, since it's not used anywhere.
This is a breaking change. I think it's better to keep it as a static field.
I think we should just use the `PolicyNamespace` variable here.
I think we can remove this.
This is a change in behavior, but I think it's better to keep it as a property.
I think this should be `null`
I think this should be `createTag` instead of `createTag`.
notary_password is not used, can be removed
Should we also change the `isAuthSalt` to `hasAuthSalt`?
I think we should use the `ecpb` constant here.
I think this is a good change. But I think it's better to have a `DisableKubeProxy` function that returns an error.
Please remove the `capIsNew` from the config file.
This should be done in the `if` block.
I think this test is testing the same as the one that is testing the default.
Is this just for testing purposes?
Line is too long. [91/80]
I think we should just remove the `CodeToStatusCode` and `CodeToHTTPStatusCode` from the code base.
I think we should add a `setBaseAndExtent` method to `sel.setfactoryfactory` and call `setBaseAndExtent` in the `BaseAndExtent` method.
I think we should add a new param to `Orig` and `Tmp`.
Is this used?
I think we need to add a column column for the new column column.
I think we should just make `NewFunc` a member variable and use it in `NewFunc` instead of passing it directly to `NewFunc`
I think this should be `final`
I think this is a good idea. It might be better to check for `localhost` here, and then check for `if host == 'localhost'` below.
Why not just pass the `OAuth2LoginConfigFormLogin` as a parameter?
This should be `m_liveliness.lease_duration = c_TimeInfinite;`
I think we should use `shutdown.get(new byte[dupe.remaining()]).array()` instead.
I think this is a little confusing. What is the difference between `Add` and `Add`?
I think this should be `res.send(_.get(config, 'web.logo') || '/-/static/logo.png`
why is this changed?
Why do we need this? I think it's a little hard to read.
This is a little confusing, since the `.select` method returns a `_internal` object, and the `.is_column()` method returns a `None` object. I think it would be better to use `.is_column()` instead of `.is_column()` here.
I think this is a good change. But I think it would be better to move it to the `else` block.
why is this import changed?
This is a very minor thing but I think we should be able to use the actual actual values.
The type annotation here should be changed to `facet_field_response`
You should modify the existing item. You should modify the existing item. You should modify the existing item. You should modify the existing item. You should modify the existing item.
This is a change in behavior, but I think we should be able to remove the `switch` statement.
Why are we adding this?
I think you can just delete this line.
We should also remove this one.
I think you can just remove the `.ID` here and remove the `assert.NoError(t, err)` in the `assert`.
I think this should be `separate_`
I think we should use `//` here.
I think this needs to be removed.
I think this should be a single string.
I think we should just remove this and just call it `RespondServiceHeader`
I think this should be `shell.ToDirOnHost[0:1] == "."`
Why did you change this?
I think this is a bit of a hack, but I think it would be better to have a function that returns a directory that returns a directory.
This is a bit of a hack, but I think it's better to have a separate `path/filepath` directory that is used in the `path/` directory.
I think this is a bit of a hack, but I'm not sure if it's worth it to just remove this code and just have it in a view.
Why is this change necessary?
nit: should we keep this as `props.ref`?
This is not needed.
I think this is a good idea. It's not a big deal, but it's a bit odd to have a `select` return `nil` here.
This should be `check_not_scrolled`.
I'm not sure this is the right fix. The `std::int64_t` is a `std::int64` which is a `int64` for the `support_indices` value.
Is it needed?
You can use `get_zip_file_content` here, which is the actual code that is used in all cases.
This is a little confusing, as the `srcPort` is not a `*` of the `src` of the `src` of the `src` of the `src` of the `src` of the `src` of the `src` of the `src` of the `src` of the `src` of the `src` of the `src` of the `src` of the `src` of the `src` of the `src` of the `src` of the `src` of the `src` of the `src` of the `src` of the
The response is not set anymore.
I think we can remove the `baseViewportHeight` variable and just use the `var` variable.
I think we should remove this and just change the `a` tag.
I think you can just use `load_reporter_by_class` here.
I think this should be removed.
I think this is a good change. It's not a test, but it's a test, so I'm not sure what the best thing to do here is.
Please use `String[from_stack]`.
nit: I think this line can be dropped now
I think this is a better place to put this.
This is a bit weird, why not just use the `Pair` variable?
This should be `sh.cmd` instead.
This is a bit of a hack, but I'm not sure if it's worth it to make it a bit more generic.
I don't think this is needed.
I think we should use `Query` instead of `Query` here.
I think we can remove this method and just use the `removeremove()` method in the `remove()` method.
I think this is a good change. It's not a big deal, but it's a little strange that the `err` variable is not `nil` in the `OpenVariable`.
This is a test, but I think it should be a warning.
Should we check if the user has already added a new error?
I think we should add a `Peers` field to the `Single` field in the `baserospection` section.
I think this is a leftover from debugging.
I think we should add a `oneof` method to the `RouteRefreshInterval` struct and just use that in the `RouteRefreshInterval` struct.
This is a change in behavior, but I think it's better to move it to the `baseTS` interface.
This is not needed.
This is the wrong place for this.
"of" is a little confusing, since it's a `-`
@smarterclayton do we need to do this?
This import is unused.
Is this change required?
Can we also remove the `TaskID` parameter?
I think we should change the name of the test.
I think we should be able to remove the `||` here.
I think this should be `static inline bool bool`
I think we should change the signature of this function to make it more clear what's going on here.
Why not `offset.ByteCount(offset)`?
Why is this check needed?
This file is not used anymore.
I think this import is not needed.
I think it's better to use the `==` operator here.
The `!clrstack` flag is not necessary, it is already added by the `Custom============` flag.
Please use `raise` instead of `raise`
Why not just call the function directly?
I think this should be `toStream()`.
this is a bit weird, why not just have the context in the constructor?
I think we should just remove this line.
This should be `super().__init__(title=title, node=node)`
I think this is a leftover from debugging?
I think we should use the `ModTime` field here.
This test was failing because the `unsafe` didn't work
I think this should be done in a separate PR, but I think it's better to be explicit here.
I think we can use `.find_by(user_full_name)` here instead of `.find_by(user_full_name)`
I think this should be `list.add(newStem(stem, formID, stemException) -> {...}`
Can we use `is_error` here?
I think we should keep the previous name here.
I think this is not needed.
I think this is a good change. It's not a big deal, but it's a bit confusing to have a `defer` statement in the code.
Can you add a TODO to remove this?
This is a bit of a hack, but I think it's better to move it to the top of the file.
I think we should change the `members` to `list` here.
You can remove this.
This is a bit of a hack, but I think it would be better to just use `return distutils.spawn.find_executable('docker')` instead of `return distutils.spawn.find_executable('linode')`.
Is this the right way to do this?
Should we also add this option to `--ignore-chromium`?
why is this change needed?
This method is no longer used.
I think this should be `log.Debug("%s", err,,`
I think we should also mention that the flag is not imported.
This is a bit of a hack, but I think it's better to have a `err` function that returns the bucket name, and then return the `err` function that returns the bucket name.
This is a little confusing. I think the `:attr:`Register._UNSET_NAMESPACE` is the correct term.
I think this should be `log.debugWarning(message ,exc_info=True)`
I think this is a leftover from the PR.
I think we should rename this to `TracerProvider` or something similar.
I think we should just remove this.
This should be a separate PR
This is a breaking change. I think we should be able to remove the `using System.Threading;` and `using System.Threading;`
The Type is the type of the ACMEChallengeType. It should be also changed to "http-01"
I think this should be `getHelperProperties` instead of `getHelperProperties`
Can you add a null check on the `jsonRpcConfiguration` instead of just `jsonRpcConfiguration`?
I think we should add a `*string` here.
`to` is not necessary here, because `instanceof` is already `null`
I think this is a leftover from the previous PR.
I think we should use the default here.
@tgamblin Do you know why we need to change this? I think we should change the test name to `mydir`
Why not just `JsonPrinter.jsonAsDatasetDto(releasedVersion)`?
This is a bit of a hack, but I think it's better to have a separate PR to fix this.
I think we should remove this and just use `SetSetSyncBlockCacheFraction` directly.
Why did you remove this?
Is this the same as the one in `init`?
This is a very good idea, but I think it would be better to move this to the `if` block above.
Why are we doing this?
Please remove this.
I think it would be better to use a `List<T>`, as it's a list of strings.
This is a change in behavior, but I think it's better to be explicit about it.
Why did you remove this file?
Why is this needed?
What's the reason for this change?
This line is too long.
I think we should remove this, it's not used anywhere else.
I think this should be an `AtomicInteger` instead of `InitCodeTransformer`
I think we should remove the `@since` annotation here.
please revert this change
This is a breaking change. I think we should be checking if the `SELECT` is not `true` here.
This is a very specific thing, but I think it would be better to move it to the `Configuration` package.
I think we should change the type of `CleanUpError` to `Failed` and `Presented` to match the type of `Presented`
I think this is a change in behavior. We should not be using the default value for the `block-block-release` and `block-block-release` in the code.
I think this is a bit of a hack, but I'm not sure if it's worth it to make it a bit more explicit.
This test is not needed anymore.
should be null
I think this should be ` TOTAL_HITS_THRESHOLD`
should be in a separate PR
Shouldn't this be `[MethodImplOptions.AggressiveInlining]`?
I think we should use the `comb.User` instead of hardcoding the value here.
This is a bit confusing, as it is a bit confusing to have a test run.
This is a bit of a hack, but I think it's better to just remove the `except Exception as e: <p>` here.
this is a breaking change
I think we should add a warning here that this component is not configured to the user.
Line is too long. [86/80]
I think we should use a more specific name for this.
I think this should be ` && --cpp-field-case ...`
Is this a bug fix?
This is a bit of a hack, but I think it's better to have a test that checks for the new values and then use the new one.
I think we should be using the `deny` here.
This is a pretty heavy change. It's not a big deal, but it's a bit odd.
I think this should be `ZK_READ_PERM`
This is a bug fix.
Why do we need to do this?
You don't need to check stock here, you can just check stock.
This is a bit of a hack, but I think it would be better to have a `is_unroll` method that takes a `Kokkos_Timer` as an argument to `Kokkos_forced`.
I think you should also add `x for x in {}` and `x for x in {}` to `non_iterating_code`
Is this change intentional?
This is a bit of a hack, but I think it's better to have a separate `libkb.go` and `libkb.go` that we can use in the future.
I think we should make this configurable.
Is this change required?
This should be `.prefix()`.
Please remove the extra blank line here.
Can you explain why this change is needed?
This interface is not used.
I don't think this is correct. `compile_opts` should be a directory, not a directory.
let's make it a little clearer
I think this should be a `var` statement.
This is a bit of a hack, but I think it would be better to just catch the `Badly-formatted` as the first argument, and then catch the `@method_entry` in the `@method_entry` above.
I think this is a good change. It's not a big deal but it's a bit confusing to have a `get` method that takes a `get` method as a parameter.
@exclusion_patterns = [] + @system_exclusion_patterns = [] + @system_exclusion_patterns = [] + @system_exclusion_patterns
I'm not sure if we should add a `:par` here.
I think this is a bit of a hack, but I think it would be better to have a separate function that returns a boolean, and then check if the string is not a list.
Rails/Present: Use if org_id.present? instead of unless org_id.blank?.
This is a very minor thing, but I think it's better to do it in a separate PR, and then check if the user is not present.
I think this is not needed.
I think we should use `self.utils.modified_field` here.
This is a bit of a hack, but I think it's better to have a method that returns a `const` object that returns a `const` object.
We should probably be able to use the `capabilitySecretEnvSSM                     ` here.
Is this import still needed?
Please use `this.getParent().getScene().getWindow()` instead.
I think this should be `0.10.0`
Why was this removed?
This test was not related to your change, but it was not related to your changes, so I removed it.
I think we should just use the `_googlesitekitUserData?.permissions` here.
I think this should be done in `setup_capacity_controller.py`
We should add a "in those class must be used with cautious, and strictly reserved to experimental"
can we add a `erb` to the end of this file?
I think we should use `infoExportedKey                = "Imported %s"` instead of `infoExportedKey               `
I think this should be `\r\n`
Is this still needed?
plz to have a spec for this
This is a little confusing. I think it would be better to have a test for this.
Why do we need to change this?
This is a bit confusing, as it is in the `raise` block. What do you think about adding a `default: false` to the `raise` block?
Why did you remove this?
We should probably move this to the top of the file.
This is a bit of a hack, but I think it would be better to have a `err` field that is passed in.
This is a little confusing, as it is in the `GetAddressDetails` function. I think it's better to move it to the `AddressDetails` function.
I think we should move this to `aws.NewConfig().WithRegion` and call it in `session.NewSessionWithOptions`
shouldn't this be `Math.Min(ScanIndex, oldTimeIntensities.NumPoints - 1) or oldTimeIntensities.toString(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof(typeof
I think this should be done in a separate PR, but it's not a big deal.
This file is not used anymore.
Can we just use `!spec.must_learn & 0xf` here?
This is a bit of a hack, but I think it's better to have a test that checks for the new dtype of the same dtype.
Why not just use `Error`?
`agg_root_path` is the name of the method, so it should be `agg_root_path`.
This could be moved to a separate PR, but I'm not sure how to make it work.
This is a change in behavior, but I think it's better to move it to the `_stream` package.
please revert this file.
Is this needed?
This is a bit of a hack, but I think it's better to just use `self.__wrap_method_with_call_and_maybe_retry` here.
Can we add a migration to remove this and just have a migration to make it clear what the user is doing?
`HttpContextTypeName` is not used.
Why did you remove this?
I think this is a bit of a hack. Maybe we should just make this a private method and call it `is_get_message_definitions`?
Does this mean that the only thing that is `release_msid` is `track_metadata` and not `Present_msid` are `Present_msid`?
This is a little confusing, because the `Path` function is not being used in the `Path` function, so I removed it.
I think we should just remove this line.
"... that the runtimevar package uses"
I think we should keep the `||` here and not have `||` in the `FieldError`
I think we should add a new method to `kmd KeyMetadata` and use it here.
I think we should use `.txt` here.
can we use the 8760 string here?
I think this is a good change. It's not a big deal, but it's a bit odd to have a `_` prefix for the `PANEL_DESCRIPTION_WIDTH` that is used for the `_` prefix.
I think this line can be removed now, since we don't have to repeat this line.
I think this should be `return "", err`
This is a change in behavior, but I think it's better to remove the visibility visibility.
I think this should be removed.
I think we should use the `keybasebase` helper here.
I think we should add a `Client.Server OSFamily string` here.
I think this should be a separate PR, but I'm not sure it's worth it.
I think this should be moved to the `Required` package.
This is a test, but I think it's better to use `createElement` as the other tests that use this method.
I think this is a good change. It's not a big deal, but it's a bit confusing to have a name for this.
This is a change in behavior, but I think it's better to keep the `elementText` and use `StringUtils.contains(text)` in the `elementText` method.
why not use the `DeviceID` field here?
I think we should use `pattern.append("")` here.
Why did you remove the first parameter?
I think this should be done in a separate PR, but I think it's better to move it to the top of the file.
Please rename to 'applicationName'
I think this should be `encoding=True`
I think this is the only change that is needed.
Is this needed?
This is a bit of a hack, but I think it's better to move this logic into the `get_master_status()` method.
I think this should be `Optional<Integer> equalityFieldIds();`
This is a bit of a hack, but I think it's better to use `fonts/*.ico` instead of `error` here.
Why was this removed?
This is not needed anymore.
I think this is a leftover from the previous commit.
This is a breaking change. It is not needed.
I think this is a bug fix.
I think this should be a static method.
I think we should just remove this.
I think this is a breaking change.
You should also add a `PALETTE` argument to `CLASSES`.
This is not needed.
This test is not related to the spec, but I think it's better to keep it in the spec spec.
Just curious, why do we need to pass the `AccountState` here?
This is a bit of a hack, but I'm not sure if it's worth it to just call `approval.cart_approvals.approvable.order('position ASC').last == approval` instead.
I think we should be able to remove the default value from the default, and just use the default value from the default.
I think this should be a `boolean`
I think we should add `.BuildLabel` to `ExcludeLabels` and `.CallLabel` to `Config` and `Config.CallLabel` to keep the same behavior as `Config.CallLabel` and `Config.CallLabel`
I think we should be able to remove this
Why not use `opt.http://localhost`?
This is a change in behavior, but I think it's not a problem. The `Promise` is not a `string`.
Shouldn't this be `json.TRANS`?
I'm not sure this is the right place for this. The `WPCOMOM` is used for the SectorSize, and it is not a good idea to add it to SectorSize.
In the past, we're not using the Xunit namespace anymore, so we should just remove the Xunit namespace here.
I think it would be better to use `on` as the default.
why the record change?
Why do you need this?
I think we should use the same version as the version number.
I think we should use `bin.BASH` here.
This is a little confusing, as it is a `run_on_main` method.
Can we add a `@since` tag here?
This is a bit of a hack, but I think it's better to have a separate PR to make it easier to track what's going on here.
Please add a space after the comma.
Is this the right place for this?
I think this should be `self.locator` instead of `self.locator`
is this a typo?
This is a change in behavior, but I think it's better to use `List<T>`.
I think we should just use `config_handler.ctu_in_memory = context.ld_lib_path_extra` here.
This is a no-op, right?
This should be `else`
I think this should be `None`
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
Why remove this?
I think this is a good change. It's not a good idea to use `.partition` in the `.flatten` method.
I think we should keep this and remove the default value.
nit: can you add a space after `//`
This is a bit of a hack, but I think it would be better to use the `attrname` argument here instead of the `write_text` argument.
remove empty line
I think this is a breaking change. It's not a problem, but it's a bit confusing.
This is the only change I mentioned in #5027. The idea here is that if we return error, we return error, we return error.
I think we can remove the `title` action here.
@davidjumani do you know why this is added?
Can you explain why this change is needed?
I think this is a leftover.
`mdc-menu-surface--open .mdc-list-item` is a little confusing. How about `mdc-menu-surface--open .mdc-list-item`?
`String#includes` is not supported in IE.
@tgamblin Do you know why this is necessary?
This file is not used.
Please remove this include.
this import is not needed
This is a bit of a hack, but I'm not sure if it is worth it.
I think this should be `Console.ForegroundColor = condition.Preloader();`
This check is not needed.
This is a bug fix.
I think this is a bit of a hack, but I think it's better to move it to the `IssuerAccount` method.
I think we should remove this
I think we should remove this line.
`len(cnb[0]))` is the default.
This is a breaking change. It's not a huge thing, but it's a minor thing.
I think we should just call `AddPeers` here.
This should be `[^\\]\%[nbs]`.
This is a leftover from the previous PR.
I think this should be `else if obj is not None or obj == '' else obj`
I think this is a good change. It's not a good idea to use `./pants help` as the name of the prefix, but it's a little confusing.
I think this should be imported before `import boto3`, since it's not used anywhere else.
I think you can use `std::mutex_is_leader` here
I think this is a good change. It's not a big deal, but it's a bit odd to have a method that returns a string, and then we don't need to pass a string here.
Why is this needed?
I think we should use the `SecretBackend` type here.
This was the only place where we were trying to return an empty collection.
This is a bit of a hack, but I'm not sure if it's worth it to make it more explicit.
This is a bit of a hack, but I think it's better to move it to the `nil` block, and just have it in the `include Beaker` block.
This is a test, but I think it's better to be explicit about it.
I think this logic is not needed anymore?
I think this is a good change. It's not a big deal, but it's a bit confusing to have a method on `InternalApi` that returns the `null` value.
I think this should be left as-is.
I think this should be done in the `session.ForceCleanupOnError` block, as it's not used anywhere else.
Why not `SparkStreamingWrite.class`?
Please revert this change.
The `debug` class is not used anymore.
Please remove this extra line
Do we need to add `EncodeSpanId` to the `[MemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMemberMember
This is a bug fix.
Can you add the project to the list of keys?
There is no `dashboard.show.contact_your_mentor` method in the interface that we want to keep in mind.
I think this should be `metricPoint.Keys.Length`
This test is not related to your changes, but I think it's better to test for a specific test, and test for it.
I think this should be `ssmfactory`
I think we should be able to remove the `commandPrefix` from the command line, since it's not used anymore.
Can you add a TODO to remove this?
Can you add a `current().spec()` call here?
This is not needed.
I think this should be `final`, not `o == null`.
I think this is a bit of a hack. Maybe we should just make a `proxyBuf` variable and use `proxyBuf.isDebugEnabled()`?
This is a bit of a hack, but I think it would be better to use a function that returns a function that returns a function that returns a function that returns a function that returns a function.
I think this is a good change. It's strange to have these values in the same package.
I think this is a good change. It's not related to the fix, but it seems like it should be a separate commit.
I think this is a leftover from the previous PR.
I think this should be `RetrieveCommand`, since it's not a `boolean`
I think this should be `index = (+(0, -1) + HDPrivateKey.Hardened);`
I think we should just throw an exception here.
This is a bit of a hack, but I think it's better to have a function that returns a list of `inputs` and `List` (or something similar) instead of returning a list of `None` (or `None`)
Why is this change needed?
@mfojtik this is the bug fix.
I think this is a little confusing. I think it's better to have a `T` statement that does the `IHeadersCollection` and then just call `T? ParseEnum<T>(IHeadersCollection, string headerName)` in the `IHeadersCollection` method.
I think this is a bit of a hack, but I think it would be better to use the `non-MPI` and `non-MPI4PY` as the default.
I think we should add a license header here.
I think we should remove this import.
I think we should just use `timeout.Duration(i)*p.pingConfig.Interval < p.pingConfig.Timeout)` here.
I think this is a bug fix. The `set_protection` function is not used anymore.
I think this is a leftover from debugging?
This should be a constant.
This is a very minor thing, but I think it would be better to have it in a separate PR.
Is this a BC break?
Could you add a docstring here?
Redundant `self` detected.
I think this should be `using`
I think it would be better to just pass the bool as `false` here.
I think it would be better to use `new(cmdexe => true)`.
This is the only change that works.
I think this should be `using`
I think this is not needed, as it will be called on a few other places in the codebase
I think this should be `if (table == null) { ... }`
This is a bit of a hack, but I think it's better to just use the ROMol variable here.
This is a little confusing, why not just use `os.path.abspath(__file__)`?
Rails/DynamicFindBy: Use find_by instead of dynamic find_by_pose.
Why was this removed?
I think this should be `zero_count`.
I think we should change the `Issuer` variable to `IssuerNoLock`.
I think this can be removed now, since we are not using any of the `_spark_col_apply` function.
This should be `testing`
Why is this error raised?
I think we can remove this `name` variable and just use `this(ops, table.name() + ".all_data_files")`
I think we should check for null here, since the `try` block is not in `queryOptions`.
This is a breaking change. I think we should change the `Params` to `PingProvider` and change the `Params` to `PingTarget` to make it more clear what the `Params` is for.
This class is not used.
I think we should add a link to the "quotequote" section to make sure we don't break anything.
Is this related to the change?
I think this is a bit of a hack, but I think it's better to just use `favicon.ico` instead of `favicon.ico`.
Why is this needed?
What's the purpose of this change?
I think we should use the default value here.
This is a bit of a hack, but I think it's better to have a test that checks for the `ABC` and `ABC` fields.
The `dask_stubs` function is used to import derived from `utils` and `dask_stubs.compatibility` files, so I think it's better to just import the function and import the function.
Is this still needed?
Why remove these?
This is a bit confusing, why not just use `isinstance`?
Should we do a `status: 200` here?
I think we should just remove the `[0]` and `[1]` from the `[1]` and `[1]` from the `[1]` and `[1]` from the `[1]` and `[1]` from the `[1]` and `[1]`
I think the idea behind this is that the `calc` function is not being called in the `State` function. The `calc` function is not called in the `State` function.
I think we should check if the result is not set.
I think this should be `files`.
This is not needed.
I think this import is unused.
I think we should just call `sp.OnStart(span.data)` here.
I think we should be able to use the `klog.Errorf` here.
I think this should be `DebugEnabled`
This test is testing the exact same thing as the "or" error.
I think we should keep the original name such that we have the same name as the other fields.
Why remove the `BOOST_ASSERT` call?
I think this should be a separate PR, but I think it's better to keep it as a separate commit.
I think we should be able to use `GetNumBenchmarks` here.
Do we need to set this to true?
I think we should just use Scapy_Exception here.
This is a no-op, but I think it's better to remove it.
This is a bug, we need to make sure that the `InitWorkloadIdentityStatus` is not a `WorkloadIdentityStatus`.
I think this check should be done in the `open_list_with_recovery_BUFFER` method, since it's not used anywhere else.
This is a no-op, right?
Line is too long. [83/80]
It's a bit weird to import `os.environ` here, but I think it's better to move it to `utils.py`?
This is a change in behavior, but I think it's better to move the loop inside the loop, and then do the loop inside the loop.
Can we use `chainID` instead of `chainID`?
Can we use `Platform seq.Status` here?
I think you can just use `stateDb.connect(new StateProvider(stateDb))`
Why are we logging this twice?
is this really necessary?
why is this necessary?
I think this should be `self->loadstate == OSTREE_SYSROOT_LOAD_STATE_LOADED`
@wachterjohannes Shouldn't the `getResponse` and `getStatusCode` be called with `getStatusCode`?
I think this should be `get_meta`?
I think this is a good change. It's not a big deal, but it's a bit odd to see how it's used in the code.
I think we should just remove the propertyID and use the private one.
I think this should be done in the `@resolved_targets` class, since it's not used anywhere else.
This is a bit of a hack, but I think it's better to have a method that returns a `new Code()` that returns `new Code()`
I think this is a bit of a hack, but I think it would be better to have a method that returns a list of values, and then call `get_values_to_unpack` in the `values` method.
I think we should just remove this line.
I think we should be able to remove this interface.
I think this should be `tmp.isTopLevelFragment || tmp.props.children : tmp`
I think we should just remove the `SystemSystem.Drawing` and `SystemSystem.Drawing` altogether.
This should be removed.
Is this the only place where we need to use the `kubernetes` API?
This is a bit of a hack, but I think it would be better to have a test for this.
Why not use std::string instead of std::string?
I think it would be better to use a `List<Long>`.
I think this was a bug.
This is the only change that affects the `error_stream` field.
I think we can just remove this.
Why did you change this?
I think this should be `HttpVerbValidation` instead of `GetNamesCamelCase`
This file is not used anymore.
Can we add a `module.exports = {...require('@wordpress/prettier-config'), }` to this file?
why not use the constants here?
why is this removed?
Is this still needed?
I think this is a bit of a hack, but I think it would be better to have a test that checks for the new values and then pass that to the interface.
Shouldn't this be `//prints "foo"`?
why not use `Platform`?
This is a bit of a hack, but I think it's better to have a test that checks for the new file.
Could we have a test for this?
I think this is a leftover?
Why not just use the shorthand since there is a `use_float` statement?
I think this can be imported before `import boto.compat`, since it's not used anymore.
This is a breaking change.
What is the reason for this change?
This is a very minor thing, but I think it's better to be explicit here.
Why is this being removed?
Why this change?
@jridgewell Is this a bug?
I think this can be removed.
This is a very minor thing, but I think it's better to have a separate method that returns a path.
should this be `const`?
Is this a duplicate address?
This is a test that checks for the number of nodes, so we can't change the number of nodes.
I think we should just call CommitAndRestoreWithZeroGasPrice here.
This is a bit of a hack, but I'm not sure if it's worth it to check for a lock.
I think we should just remove this line.
can we use `close` here?
Why is this change necessary?
I think we should move this to the top of the function.
This is a bit of a hack, but I think it would be better to do a `var _register(name, editorClass)` here instead of a `const` statement.
This file is not used anymore.
why is this a pointer?
Please remove the space between `)` and `{sql = """ CREATE TABLE IF NOT EXISTS {marker_table} (` )
This interface is used to ensure that the `use` statement is not in the `@author` package.
I think we can use `StringUtils.isNotEmpty` here.
This is a bit confusing, as it is a public interface.
Why do we need to change this?
I think this is still not needed.
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.
I think this is a good change. It's not a problem, but it's a bit odd that the `StringSlice` function is only called from one place where we have `InstanceIds` and `instanceID` but not `instanceID`.
I think this is a good change. It's not a big deal, but it's a bit confusing to have a test that checks for `SymbolSupport` and `SymbolSupport` to be `null`.
I think this should be done in the `election` package.
I think we should be able to remove the `[32]byte{}` here and remove the `[32]byte{}` on the `if` block.
I think this should be `@Restricted(NoExternalUse.class)`
I think this is a good idea to move away from the roles in the future.
`role` should be `null` here.
This is a bug fix. The `clear` method should be called `getBinaryLoggingContext`
What about `dir`?
Nit: Use Component instead of Component.
This is a bit of a hack, but I'm not sure if it's worth it to make it a bit more explicit.
Can you update the doc accordingly?
This is a very minor thing but I think it's better to have a config for the batch size.
This file is no longer used.
I think this is a leftover from the previous PR.
I think we should remove the `ap: parseAccessPolicyFlag(ctx)` here and remove the `//` below.
I think this is a leftover from the previous PR.
This should be `null`
This import is unused.
This should be a warning, right?
wrong import order
We should not have a dependency on the server that we've added.
This is a very minor thing, but I think we should be able to remove the `backend/...` from the `src/` module.
Shouldn't this be `auto prv = nano::deterministic_key (seed, 0);`?
I think you can just remove this line.
why not just catching the logout go through through?
I think this can be moved to `WaitUntilConnectionStatusAvailable`
I think this is a bug fix. We should not do that.
This should be `selectedItem.isLocalFeed()`
Why are you removing this?
I don't think this is the right place for this.
This is a bit of a hack, but I think it would be better to have a test for this, and then check the error message.
I think we should just remove this once we have the `startTime` call.
I think we should be able to use `grc.mfout.printf` here.
I think this should be `render json` since it's only used in one place.
Why is this needed?
Should we also do a `.TB()` here?
I think this is not needed, we can just use `errors.name`
I think this is a good idea. It's not a big deal, but it's a bit confusing to have a test that checks for the error message.
I think this is a bug fix.
Is this a bug fix?
I think this is a bug fix. `roles` should be `string`, not `roles`.
"If the collection is to be co-located"
Why not just `// LoadAddresses(keypairsPath string, chainID uint32) ([]*AddressKey, error)`?
I think this is not the right place for this. The code in `test-system/common/config.xml` should be in the `test-system/common/config.xml`
It seems like this should be a separate PR, right?
I think this should be `Constants.getErrorResponse(error)`
I think this should be `var mongoErrorContextSymbol = require('../../lib/core').mongoErrorContextSymbol;`
think this should be `int`
Why are we changing the default value here?
I think this should be added to the `DD_DIAGNOSTIC_SOURCE_ENABLED` and `DD_HTTP_CLIENT_ERROR_STATUSES` key.
I think you can just do `sd_journal_next_skip(ctx->j, 1);`
I think this is a breaking change.
This should be in a separate PR
I think it's better to move the default_attributes to the default_attributes, and then just apply the default_attributes.
What is the purpose of this change?
This is a bit of a hack, but I'm not sure if we should be using the `/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"/"
I think this should be `if (headersValue != null)`.
I think we should change the name of the test to make it more explicit.
This is a bit of a hack, but I think it's better to have a separate commit for this.
This is not needed.
`excluding the word `Condition` :)
this is not needed. it is already used in the `_currentProcessMachineName`
I think we should be using the `systemd.SdNotify` function in the `lib/core/constants.go` file instead of hardcoding the name here.
Please add a space between the `,` and the `,`
`has_all_data` is a bool, so we need to add a new one.
I think this is a bit of a hack, but I think it's better to check the return value of the function.
Why is this needed?
I think we should add a `getBaseSVIDPath()` method to `Logger` and add a new one.
I think this should be `0` instead of `1`
I think we should be able to remove this function and just pass the function to `UpdateProjectSingleSignOn` and `UpdateProjectStaticUser`.
This should be a breaking change
can you also add the scope scope to the `validates` model?
Please use `.ToArray()` instead.
This is a bit of a hack, but I'm not sure if we need to do something about the performance impact of this. I'm not sure if we should just make a new hash of the hash, and then just do a `#if running in PowerShell.` check here.
I think we should remove `toLowerCase` from `startsWith` and use `MediaType.toLowerCase()` in `getServer`.
I think this test should be removed.
This is a bit of a hack, but I think it's better to just pass the `onBehalfOf` as a parameter to the constructor and then pass it in the constructor.
Why not use the `new` constant?
I think this should be `hd.lock.RLock()`
I think this should be `getDomains(".de")`
This was a bug, but I think it's not a problem, but I think it's a bug.
How about we make it a `Borg.infinispan.commons.lang3.StringUtils`?
I think we should add a `addStreamWithStore` to the `CreateInput` and `CreateInput` to ensure that the `CreateInput` is not actually present.
I think we should be able to remove the `isTest` check from the `BuildTarget` and `isTest` check from the `BuildConfig` and `gsCacheLookup`.
this should be `return`
I think we should use the `compression=on` constant here.
Metrics/LineLength: Line is too long. [83/80]
I think this is the only change that affects this PR.
I think this is a breaking change. The `Exception` is not needed.
This is a change in behavior, but I think it's better to use `String.valueOf` here.
This is a bit of a hack, but I'm not sure if it's worth it to make the `onlinetime` be a `cached_t` instead of an `int`?
Why change this file?
What is the purpose of this?
I think we should add a check here that `queueHandler.queueFunction(self, '_isNvdaStartupComplete', True)` will be true.
I think we can just remove this block.
I think we should remove `AcceptResponseErrorHeader` and `Features`.
Why is this test changing?
Could you please change the type to `*r = *r.WithContext(context.Context(), username)`?
Why not `RemoveDir`?
I think it would be better to use a `bool` field instead of a `bool` field.
I think we should use the `procedureName` here.
Why is this removed?
I think this should be moved to `SideToken` class.
Looks like this is a leftover from the previous commit.
This is a very minor thing, but I think it would be better to have a test for this.
this is a bit weird, why is it not a global option?
I think this should be `if key =~ /^(?:.*:)*wikipedia$/`
This is a very minor detail, but I think it would be better to move this to `deque` function.
Wouldn't it be better to check for the indexName in the constructor?
This is a change in behavior, but I think it's better to move this logic into the `if rmd.IsRekeySet()` check above.
why is this removed?
This is not a valid value, it should be `elHeight <= 1`.
Why not just return `AbstractRememberMeServices`?
I think this should be a `GetType` instead of a `Type`
Can you add a ` shoudl be` import?
is this change intentional?
This class is not used.
I don't think this is a good idea. It's a good idea to have a better solution.
This is a very minor thing, but it seems like we should be using the `EnableCleanupReplicationTask` function in the `ReplicationTask` package.
I think this is still needed?
I think this should be moved to `make_half_main` and `make_half_main`
I think we should use the `alter_query` helper here.
Why do we need to `.via` here?
Is this a bug fix?
I think we should just make this `final`.
I think this is a good idea. It is not a big deal, but it is a bit confusing to have a `IConnectionContext` interface.
This is a breaking change.
This is a bit confusing, as it is a bit confusing to have a `ExpireSnapshots cleanExpiredFiles` that is not a `WorkspaceWorkspaceFiles` and it is not a `WorkspaceWorkspaceFiles` that is not a `WorkspaceWorkspaceFiles` and we don't need to have a `WorkspaceWorkspaceFiles` method.
can we add a spec for this and the other docs?
I think this is a good idea. If the `getPromise` method is called multiple times, it should be called multiple times.
Can we just remove the `algoh telemetry` altogether?
@mfojtik @jridgewell any reason why this was changed?
I think this should be `v1alpha1`
This is a bit of a hack, but I'm not sure if it's worth it to make it a bit more explicit.
I think we can remove this
Why is this error raised here?
Is it possible to have a config.websocket_config.enabled and then pass in the std::make_shared?
This is not needed.
Is this change intentional?
why not just use the default value?
Why not just pass in the `ListImagesTimeout`?
This is a bit of a hack, but I think it's better to use a function that returns a list of libcontainer.
Freeze mutable objects assigned to constants.
@jridgewell Is this a bug or something?
nit: can we change this to `this[kIsMaster] == null`?
Metrics/LineLength: Line is too long. [83/80]
Why not using a setJsonParameters?
This is a bit of a hack, but I think it's better to move this to a `let` block.
This should be `||==`
@bartonjs, I think this is a good change.
This is a bit of a hack, but I'm not sure if it is worth it.
I think we should remove the `adaptivescalar` part.
I think this is the only change that makes sense.
This should be done in the `handle_call` method, since the only place this method is called.
This can be removed.
I think this should be `var fixture = document.body && typeof document.body.attachShadow === 'function'`
I think we should just use `runUnifiedTest` here.
I think we should change the name of the variable to `options` as it's the same as the other `$options` variable.
This is a breaking change. I think it's better to be explicit about it.
I think it would be better to use `Multimedia` instead of `Multimedia` as the other `Multimedia` is used for the other `-`
I think this is a good idea to remove the local pod from the other PR.
I think this is a good change. It's not related to the issue, but it's not a big deal.
can you make this change in the same PR as the other changes in this file?
This is a bit of a hack, but I think it's better to have a test that checks for `equals` and `equals` to be passed to `getChild`.
I think it would be better to use `IEnumerable<string> Filters` instead of `(s)` here.
What is the purpose of this change?
I think this is a good place to put this.
I think this is a leftover from the previous PR.
I think we should add `const` and `const` to the end of the list.
I think we should use the DUS.Generic API for the DUS API
I think this should be done in the `before_action` callback, since it's not used anywhere else.
I think this is not needed.
This should be `import pyramid as pyramid_exceptions`.
I think we can remove this.
I think we should remove this, as it's not used anywhere else.
I think this is a leftover?
shouldn't this be in a finally block?
I think we should check for `isinstance` here.
Is this the right way to do this?
I think we should be able to use the ros environment variable here.
This is a bit of a hack, but I think it would be better to move the import to the top of the file.
I think we should also have `sigs.k8s.io/cluster-api/pkg/...` here.
Is this error still needed?
Style/SymbolArray: Use %i or %I for an array of symbols.
I think this should be `updatePreviews = false;`
I think this is a leftover.
These tests were failing because of the `namespace` in the error message.
I think this should be `if (!io_config.linear_tree)`
Why is this change necessary?
This is a bit of a hack, but I think it's better to have a test that checks for the `DropSpaceReq req` and `FormatCCEEDED`.
I think this should be `/mutate/addlabels`
I think we should remove the `return` here and remove the `return` at the end of the function.
Is it possible to have a custom type for the `pkgManagers`?
I think we should just set the path directly in the constructor.
I think it would be better to use the `localField` helper here as well.
I don't think this is the right place for this. The `else` clause should be removed.
This is not used anywhere.
I think this should be `vanity` instead of `draw`.
I think we should check if the repoName is not nil here.
I'm not sure this is correct. The `#if NET461` check is not needed.
Why is this needed?
This is a bit of a hack, but I'm not sure if it is worth it.
This is a bit of a hack, I think it would be better to have a method that takes the file and then pass it to the interface.
I think you can just do `from qutebrowser.browser.downloads import (_path_suggestion as qutebrowser.browser.downloads`
I think we should probably have a default value for this flag.
Do we need to ensure that if app.config.respond_to?(:secrets) is set to true and then we don't need to ensure that the app.config.respond_to?
Shouldn't this be `||=` instead of `||=`?
This is a bit of a hack, but I think it's better to check for `isRetryableWriteError` instead of `== null`
I think we should just remove this from the default setting. We should probably just remove the default setting setting from the default setting.
Is this change intentional?
What is the TODO?
This is a bit of a hack, but I think it's better to keep the `CombinedScanTask` as a member variable and just use `currentIterator` as the default.
I think this is a good change. It's not a big deal but it's a minor thing.
I think this is wrong. The `#ifdef USE_OPENCV` is only used in the `uif` block.
This is a bit confusing, as it is a role binding.
Why do we need to add this here? I think it's a good idea to add it to the `:destroy` table.
I think this is a breaking change.
Why not using the variable $manager ?
`user.Span` is a bit confusing, why is this needed?
Is this the right place for this?
Why not just use `init` here?
I think this test is not needed anymore?
I think we should return `nil` here instead of `nil` since the `err` is `nil`.
This is a little confusing, as it is a `<svg>`, and it is a bit confusing to have a `<svg>`, as it is a `list`.
Why is this a pointer?
Line is too long. [83/80]
Is this change necessary?
Why are you removing the `name` parameter?
This is a change in behavior, but I think it's better to use the `off` constant here.
this is not needed
Why not just use `CherryPick`?
This is a breaking change.
Import only the new imports
Should we use `util` here?
I think this should be `countlyCommon.encodeSomeHtml = function(html, options);`
I think we should keep this and just return error.
nit: can you move this to the top of the function?
Why are we adding this?
This is a breaking change. The `cxxflags` flag is not used anymore.
I think this is a leftover.
Can you please update the doc accordingly?
You can use `params[:read_tou] == "0"` here.
I don't think this is the right description. We'll probably want to keep it in for loop.
why is this change needed?
This is a very minor thing, but I'm not sure it's worth it to have a static_cast.
this is a bit weird, why not use `info.info.name`?
I think this is a bit of a hack, but I'm not sure if it's worth it.
This should be `@param`
This is a breaking change. It's not a huge deal, but it's a minor thing.
this should be set to `true` in case the `orElse` fails.
I think this is a bit of a hack. I would prefer to have a unit test for this.
This is a bug fix. It's not related to the fix, but it's not a problem. It's a problem, but it's a bug.
I think we should add a `SearchService` field to `Version`.
(style) line over 80 characters
Shouldn't this be `while` instead of `while`?
I think we should add a `let vnode` parameter to the function that is passed to the function.
This should be a `static const`
I think this is not needed.
Should we also remove the `_` in `StoreInt64`?
This class name isn't very descriptive. I would suggest `belongs_to :approval` or `belongs_to :`.
I think this should be `os.Chmod(addr.String(), os.ModePerm)`
I think we should just make the property private and use the private set.
This is a little confusing, as it is not a project ID.
I think we should log the error here.
I think we can use the same constant for the "position" and "position" (and the "position" for "position" and "position" for "position" and "position" for "position" and "position" for "position"
I think it's better to use `font` here instead of `font`
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.
Please use `Optional.emptyList()` instead of hard-coding `null` here.
I think this should be `if (it->second.getAccountAccess() && !player->getGroup()->access)`
this is a bug fix. this is a bug fix.
I think we should just use `logging.FromContext` here.
I think we should remove the `band` here and remove the `band` in the `band` section.
I think this should be removed.
I think this is a change in behavior. I think we should be able to remove the `using System.Text.ID` parameter from the `internal` interface.
Do we need to keep the same for all cases where we're using the same for all cases?
I think we should be using `_path_suggestion(suggested_filename)` here.
do we need this? can we just make it a const?
Very minor - but we should probably have a separate import for this.
These changes are not related to the PR.
Shouldn't this be `goimports`?
Why not use the `glog.Errorf` function here?
I think this is a good change. It's not a good idea to have a name that's a class, but it's a class, and it's a class, so I'm not sure what the best way to do it is.
This is a breaking change.
This is a no-op, right?
What's the reason for this change?
Is this a breaking change?
I think we should change the name of the `member` column to `NM`.
I think we should add a `defaults` field to this list.
I think this is a bit of a hack, but I think it would be better to just remove the `if matplotlib.cm` and `if matplotlib.cm` here.
This is a change in behavior, but I think it's better to make it explicit that the `Optional` is not in the `New` function.
I think this is the only change that affects this PR.
Rails/FindEach: Use find_each instead of dynamic find_each.
This is a bit of a hack, but I think it's better to have a `distinct()` method that takes a `ManifestManifest` instance as a parameter.
We should be able to use osdconfig here.
why do you need to change this?
We should probably have a test for this too.
I think we should just remove `medication` entirely and replace `this.get('i18n').t('messages.deleteMedication')` with `this.get('i18n').t('messages.delete_singular', { name: true})`
shouldn't this be `this.provider`?
I think this should be `static`.
Can we add an assertion about what the expected width is?
I think this is not needed.
@larsoner I think this is a bug fix.
I think this should be `!empty($htmlAttributes['class'] === $attributes['class'] !== '';`
This is the only change that affects the API. I'm not sure if this is the right fix.
I think this import is unused.
Can we just remove this field?
This check is not needed anymore.
Should this be `listPartition`?
This is a bit of a hack, but I think it's better to just remove the `TestSharedCredentialsProvider` method.
This is a little confusing, because `d for d in scope.args.defaults` is a list of `defaults` and `None` is a list of `None` (and `None`).
I think we should just remove this and just do it in the `accountDeltaCount` function.
This is a breaking change.
I think we should add a check here that `criuServer.Close()` is not set.
I think this is a leftover from debugging.
Why is the `Errno` not `EPERM`?
I think this is a good idea. If you want to be more specific, you can use `.quote` instead of `.director`
I think you can just do `return ret;`
Is this really needed?
I think we should just use `_getCheckpointParentDir` here.
This is a bit of a hack, but I think it's better to have a separate PR to make sure that the `ConsoleUIACheckBox` has a label and a group of advanced options.
I think we should be able to get rid of this if statement.
I think this should be done in `types.js` and not in `types.js`.
I think this is not needed.
I think we should just use `getBoolean` here.
I think this should be done in the `if err != nil` check above.
I think this should be `isAAllocaInst(fn.FirstBasicBlock().FirstInstruction().IsNil())`
I think we should use the `VXLANVNI` constant here.
I think we should add a doc block to the doc block too.
This is the only place where we need to check the output of the rb_thrift_binary_proto_read_set_end, 0. I think we should check the output of the rb_intern.
We should probably be using `finest` instead of `info` here.
I think this should be `public VERSION_CURRENT = VERSION_LOW_CARDINALITY_LEAVES;`
Is this TODO still required?
Why not use `.metadata.creationTimestamp` here?
I think we should just remove the `.decode()` call here.
This is a little confusing, as it will return the error.
@logger.debug "going to upload! #{source} to #{@hostname}:#{target}"
This is a bit of a hack, but I think it would be better to have a test that checks for console.log and then check for console.log.
Why is this change needed?
I think this should be `config` instead of `config` right?
Why is this needed?
why is this needed?
"absolute value" is the default for the `Default` value.
I think this is a good change. It should be `p1.TracerProvider`
This should be `github.com/iotex-core/protogen/iotexapi/`
Should we use the `_inject_early_js` helper here?
I think this is a good idea. If the `select` case is not there, we should probably just return `time.Until(deadline)` instead.
I think we should change these to `Bodies                    ` and `Bodies                    ` to be consistent with the other `Senders                   ` and `Bodies                    `
Why are these variables needed?
This is a very minor thing but I think it's better to move it to a separate PR.
I think this is a bit of a hack. I think it would be better to just have a `state` and `state.debug` here instead of a `state` and `state.debug`
Is this change related to the PR?
I think we should use `\n` instead of `\n` for this
This should be a pointer, not a pointer.
This is a no-op, but I think it's better to move the `if err != nil` check inside the `if` statement.
This is a bit of a hack, but I'm not sure if it is worth it.
you can use `content.select!` here
Why is this one change needed?
This import is unused.
This is not needed anymore.
I think this is a good idea. It's not a good idea to have a test case for it.
I think this is a good change. It's not a problem, but it's a bad idea to check for the url.
`/all` is a bit confusing to me. What is the `/all` ?
this log message is not really helpful. It is a warning message.
I think this should be `volatile` instead of ` FROM`
Can we use `json.to_json` here?
What do you think about moving this to a constant?
Why is this change necessary?
Nit: `var` is unnecessary.
This is a bit of a hack, but I think it's better to use the `ip.IP` helper for the `ip` instance.
I think we should keep the function for the `traverseData`
This is a bit of a hack, but I think it's better to move this check inside the `if not not None` block.
This should be `CreateTChannelDispatcher`
This is a breaking change. I think it's better to move it to the `@Nullable` method.
This is a very minor thing, but I think it would be better to move it to the `tabbed_browser` class.
This should be removed.
I think this is a good change. It's not a big deal, but it's not a big deal.
I think we should also check the boolean value for the `isGoQuorumCompatibilityMode`
This is not needed. `currentSnapshot()` will be called twice.
I think we should use `Array.is_a?(Array)` here instead of `groups`
Is this constant used anywhere?
Why is this being removed?
I think this should be `spack install --crd`
`pauseContainerTarballPath` is not used anywhere.
I think this should be `getState()`.
I think we should use `err.New` here.
How about adding a `ltp` field to the list?
Should we also add any arguments here?
Line is too long. [91/80]
This is a bit of a hack, but I think it's better to have a test that checks if the node is not available.
Please remove this.
This is a very minor thing, but I'm not sure it's worth it.
this is wrong. The new version is in the v1 package.
I think this should be a separate PR, to avoid a warning.
think you can remove this and just do `?string $options`
I think this should be `valuesArray[i] = comparators.length;`
Why is this minSequenceNumber -1?
why do you need to set setLossSkill(true); ?
I think this should be `once`
Why not `private`?
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
This test should be moved to the `if ($link->getHtml(), 'Save Search') {` block above.
I think this should be `Optional[str]`.
This class is not used.
This is a breaking change. I think we should keep it.
I think we should import this only when we have the import.
I think this should be moved to the `if` condition above, since the `if` statement above should be moved to the `if` condition.
I'm not sure if this is the right place for this. The `80` service is used to test applications on the Algorand blockchain, but it's not really a big deal.
should we rename this to `isFetchScriptEngineLoadExternalResources` ?
Is this change intentional?
I think this function is used only when the condition was created.
Why is this not a `std::lock_guard lck`?
Why remove this?
what is the difference between this and includes_exercises?
This is a bit of a hack, but I think it's better to move the `load()` block to a separate function.
I think we can move this to the top of the file.
I think this should be reverted.
I think we should remove this check and just call Solr Reference Guide under Solr Reference altogether.
This import is not used.
This should be `return required`
I'm not sure if this is the right fix. The `SumReducer` is used for the `sum_singlesubgroup` variable, but it is used for the `sum_singlesubgroup` variable.
I think this should be removed.
Why is this needed?
Nit: remove the line
`[]=True`?
We should probably make this a constant.
Nit: I think we can remove the `#include <fastdds/` block altogether now
This is a bit confusing, as it is a bit confusing to have a flag in the message. Maybe something like "this flag is not in the message. If you want to be removed."
I think it would be better to use the variable name here, as it's a variable name.
Why do we need to change the copyright year?
I think this should be `sqlDB.SetMaxIdleConns(int(pgcfg.MaxIdleConnections)`
This method is used to create a new method in the base class.
This is a breaking change. The package name is `sarif-1.0.0-beta.5`
I think this is a bit of a breaking change. I think it's better to move it to the `__( 'Search Console', 'google-site-kit' )` block.
I think this should be `dict[dict]`
This is a bit of a hack, but I think it's better to just remove the `.first` here and remove the `.first` in the `bookmarks_for_documents` method.
This is a change in behavior, but I think it's better to have a separate `close()` method that calls `bsp.queue()` and then call `close()` on the `queue()` function.
Why not just `setGalleryItems(Collection $galleryItems)`?
This should be `go-spiffe` package.
`window.__mochaResult__` is set to `True` by default, so this can be removed.
This is a little confusing, since the `with` statement is not actually being used.
Is this the right place for this?
I think we should just remove the argument from `user-id`.
I think we should be able to just call `AvailableBalance.Set` here.
I think we should just remove this, as it is not used anywhere else.
This is a bug fix.
I think we should be able to remove this file.
This is a good change. We need to make sure that the error message is not nil.
Why did you change this?
Is this needed?
I think we should use `Load_actions` here.
Nit: remove the space between `eslint-config` and `eslint-config-prettier`.
I think you can just use `DynamicType_ptr` here.
I think we should remove this and use the `metav1` version.
I don't think this is the right place for this. The spec is not really specific to the spec, so I'd just remove this test.
Why is this method private?
This is a breaking change.
I think this is a bit confusing, as it's a bit confusing to have a `data-` prefix.
I think this is a breaking change. It's not a big deal, but it's not a big deal.
This is a breaking change.
Is this a bug fix?
This test is not needed.
I think we should be using the `AdditionalScrapeConfigs` instead of the `*` here.
This is a bit of a hack, but I think it's better to have a `constexpr` function that returns a `string` and then check the `string` value.
This should be a separate PR
I think we should add a default value to the description of the description of the description of the description.
This is a bit of a hack, but I'm not sure if we should just make this a dict.
I think we should add a docstring here.
I think we should add a `loadDir` function that returns the `include` and return the error.
I think we can remove the ! here.
Is this change intentional?
nit: this is a bit of a hack, but I think it's better to have a test that checks if the key exists.
Why is this needed?
This is not needed.
I think this should be `<A> Tuple prepend(A v)`
why not just `NotBeamSyncFastSync`?
Why is this needed?
This is a bit of a hack, but I think it's better to use `assert isinstance(ax3, matplotlib.axes)` instead of `assert len(ax3.get_xlabel() == 't @importance_type@')`
This is a breaking change. I think it's better to have a single function that returns a list of keys.
I think this import is unused
I think we should check for the `raCtx.Producer` here.
This is not needed.
I think this can be removed now, since we have the `isinstance` method in the same file.
Is this change necessary?
This is a bit of a hack, but I think it's better to have a test for this.
This should be a separate PR
This is a very minor thing, but I'm not sure what the best way to do is. I'm not sure what the best way to do is do is add a new `EnableDNS` flag to the `EnableDNS` flag.
This is a bit of a hack, but I think it would be better to just do `log.Error(ex, "CallTarget state ByRef", "CallTarget state ByRef", "CallTarget state ByRef", "CallTarget state ByRef", "CallTarget state ByRef", "CallTarget state ByRef", "CallTarget state ByRef", "CallTarget state ByRef", "CallTarget state ByRef", "CallTarget state ByRef", "CallTarget state ByRef", "
I think this is not the right place for this. It's not a test, but it's not a test, so I would just inline it.
I think this is a good change. It's not a big deal, but it's a bit odd to have a `ExtractorCallbacks` be a `const char * fileName` and a `senderCallbacks` be a `const char * fileName`.
What's the reason for removing the `Issuer` variable?
Please use `String#Equals(String, StringComparison)`
Is this still needed?
I think we should not have a similar check for old version of the old version.
Wouldn't it be better to use the `SingleRepository` class here?
Can you add a note that this is not a problem in the future?
This is a breaking change.
This import is no longer used.
This is a bit of a hack, but I'm not sure if it's worth it to make it a bit more generic. I think it's better to have a method that returns a `Local` object that returns a `Local`.
Is this a typo?
Please add `import { map } from 'lodash';` to `/**`.
Why did you remove this?
I think we should just remove the `acmeAuth` variable and just call `user.Trim` here.
This test is not related to the PR, but I think it's better to remove it.
This should be moved to the `if provider` block above.
This import is unused.
I think this is a good change. But I don't think we need to do that.
I think this is a change in behavior. We should not have to fix it.
I think this is a bug fix.
why not just return the result of the function and return the result of the function directly?
This is a very minor thing, but I think it's better to be explicit here.
why is this deleted?
I think this can be removed now, and it's not used anymore.
Is this used anywhere?
Why did this change?
I think this should be `!TEST(PREFIX_EVEX_VV, di->prefixes)`
I think it's better to just remove the `ExpectNoError` call here and remove the `if len(result[networkConditionSlow]) != 0 || len(result[networkConditionSlow]) != 3`
I think this should be done in a different PR.
I think we should check if the `append_command` is not set.
Is it needed to add `isAuthenticated` here?
This will need to be checked for every frame, not just the frame
Is this test really needed?
I think you can remove this line
I think this should be `final`
I think we should be able to use `repo.Repository` here instead of `repo.Present`
This is a very specific pattern, but I think it would be better to move this out of the `if` block and just call the `ulletKey` inside the `Shuffle` block.
I think this should be `ThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrowThrow
Is it possible to have a different folder than dbgen?
I think this should be `nil` instead of `nil` since the ` PutHash` method returns a `nil` if the `nil` is `nil`, so the `nil` should be `nil`
I think we should just make this method `SerializationStream`.
I think we should use the mocked manager instead of global one.
This is a bit of a hack, but I think it's better to use the `goog:chromeOptions` as the name.
I think we should use the same variable for the `getPluginInfo` method.
Is this change required?
I think this should be done in the `bucket driver.Writer` package.
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
I think this is a bug fix.
I think we can just use `len(transfers)` here.
Why is this necessary?
I think this should be `////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
This method is no longer used.
This is a bit of a hack, but I think it would be better to have a test for this as well.
I think this should be removed.
Why do we need this?
This is a bit of a hack, but I think it's better to have a method that returns `includeInLightValidation()`.
I think this is a breaking change.
I think we should not have this in the `eea_sendRawTransaction` folder.
Is this change intentional?
This is a very minor thing, but I think it's better to split these into a single `networks/%` class.
Please update the function signature to match the dimension of the file.
`StringIO` is not used anymore.
Why not use `Headers` here?
Can we use `USTAT_NAHEAP_ESTIMATED_MAX` instead of `1.3`?
Is there a reason we don't just use `avail_string_string`?
This should be split across multiple lines.
This is a bit of a hack, but I think it's better to just have the `ppc64le` be a `bionic` instead of `bionic` here.
I think the `_for_search` function can return a `params` object, so I think it's more readable to just do `params.merge(:sort: sort_key)))`
I think we should just set the claim name to the claim name, and set the claim name to the claim name.
Is this needed?
I think this is a bit of a hack, but I think it's better to just make this a function.
Why not just remove the test?
I think this should be `github.com/iotex-core/ioctl/util`
I think this was a bug. It was just a mistake in the first place.
I think this is a bit of a hack, but I think it would be better to use `in_array` instead of `fieldType` as the first parameter.
You can use `@connection` here
this is a change in behavior, but I think it's better to keep the change in behavior.
I'm not sure if this is the right fix. The code below is not correct. The code below is only used for the `message_a.response->second` and `remote_node_id` and the `message_id` is used for the `message_a.response->first` and the `message_id` is used for the `message_id` and the `message_id` is used for the `message_id` and the `message_id` is used for the `message_id` and the `message_id` is used for the `message_id
Final newline missing.
I think this should be `onPreExecute`
I think this is a bit of an overkill, but I'm not sure if we should just make this a `subject` statement and use `not_to permit` instead of `not_to permit`
This should be reverted.
I think we should add a `DumpFlows` method that is used for the `*` package.
This is not needed.
Is this a bug fix?
This is a bit confusing, as it is a very specific package function.
I think this is a bit of a hack. Maybe we should just make the `_isApplicationObject` return a `_get_currentNVDAObject` method and return a `_isApplicationApplication` that returns a `str` instead of a `str`?
I think this is a good idea. It's not a big deal, but it's a bit odd to see the error message in the code.
This is a bit of a hack, but I'm not sure if it makes sense to have a method that returns a boolean, and then call it once at the top of the method.
I think this is a leftover from the previous PR.
Why is this change necessary?
I think we should remove this test.
This is a bit of a hack, but I think it's better to have a separate function that returns the `FSDelete` object.
I think this is a bad bad behavior.
I think this is a leftover.
This file is not used anymore.
I think this should be `!RequestOptions=true`
I think this is a breaking change. I would prefer to have a test for this.
Shouldn't this be `detached: true`?
I think this should be `false` instead of `true`
This is a bit of a hack, but I think it's better to just return a `var exporter = new InMemoryMetricExporter(exportedItems, options);` instead of using the var `var exporter = new InMemoryMetricExporter(exportedItems, options);`
Why the change to the state state change?
Remove the cast
This is a bug fix. The `invocation` is not a `data-` but the `data-` is not a `data-` so I think it's better to do it in a `addContext` method.
I think this should be `with accept-no-param-doc:`
I think this is a regression.
This is a bit of a hack, but I'm not sure if it is worth it to make the `is_extension` check more explicit.
I think this should be a `ImageDigest` rather than a `Image`
This is not a valid class, it is a `@Deprecated`
Should we keep the old version?
I think we should use `selectedMenuItem.item.url !== currLink` here.
I think this should be `version`
I think this should be `[0]`
I think this should be ` protoregistry.GlobalFiles.RegisterFile("bpfki.proto", fileDescriptor_62eed357eb71de0e)`, since the `proto.RegisterType` method is already in the `proto.RegisterFile` file.
Why is this needed?
This is a bit of a hack, but I think it's better to have a test for this.
Should we also check if the value is `None`?
I think this should be `if exMessage != null && exMessage.startsWith("Datafile")`
I think we should just remove this, and just remove the `ValidatezDBUtil` above.
This is a very minor thing, but I think it would be better to move the `clientKeepaliveStatus` into the `PSystemSrvr_list->ins_node` method.
Is this TODO still needed?
I think this should be `updatedProjectConfig.IsEmpty`
Please remove the spaces between the declaration and the first argument.
Please add a migration to the new column
I think this is a bug fix.
I think this is a good idea. If you want to use `#definedefine_CR_BATCH` then you can use `#definedefine_CR_BATCH` instead.
Should this be `static tagWriter(tagWriter *w)`, or `static tagWriter(tagWriter *w)`, and `static tagWriter(tagWriter *w)`?
This is a really weird place to put this. I think it's a good idea to move it to a new PR.
This is a bit of a hack, but I'm not sure if it's worth it to have a test for this.
I think we should just remove this line.
I think this is a leftover?
I think we should keep this here, but we can keep it in the same place.
Is this a typo?
This is a small optimization, but I think it's better to move it to the top of the file.
This is a very minor thing, but I think it would be better to move it to the `if (Intent.ACTION_VIEW.equals(intent.getAction()) {` block.
This is a breaking change.
Why do we need to check for `isSorted`?
I think we should keep the PLL3_SW_60M case here.
The `Sha` field is not actually used, so you can remove it.
This should be `timeZone`.
This is a breaking change. I think we should change the name to something more generic.
This is a public getter.
I think this should be `mmcv_maximum_version <= digit_version(mmcv_maximum_version)`
I think this is a good change. It's not a big deal, but it's a little strange that the `stopped` is not used in the `New` function.
Can you add a space after the `if`?
Shouldn't we use `endsWith` here?
I think we should add a BatchExportProcessorOptions property to the BatchExportProcessorOptions and then just add a BatchExportProcessorOptions property.
I think we should be able to remove this `FakeWebAPI` now.
I think we should add the `.` prefix here.
I think we should remove these lines.
We should remove this line.
I think we should keep these as `length` and `length` as the last argument.
This is a very minor change, but I think it's better to keep the same behavior as the first one.
Should this be `json:"serviceAccounts,omitempty"`?
I think this should be `True`
Can you please add a space after the comma?
I think it would be better to use a `acc` constant here, and use it in the `try` block.
I think this should be moved to the `QueryOption` package.
why not use `htpasswd.storage()`?
I think the `-index` message could be improved here, since the `-index` message is not a valid message.
I think we should test for `with_questions` too, right?
This is a breaking change. I think we should be able to remove the `Gzip` field from the `as-safar` and `location` field from the `as-safar` package.
Why do we need this?
I don't think this is correct. The `@since` annotation is not needed.
This is a bit of a hack, but I think it's better to be explicit about it.
Please add a license header here.
I think you can just remove this line.
Just to clarify: Is it possible to use `keybase/keybase/keybase/keybase/keybase/keybase/keybase/keybase/keybase/keybase/keybase/keybase/keybase/keybase/keybase/keybase/keybase/keybase/keybase/keybase/keybase/keybase/keybase/keybase/keybase/keybase/keybase/keybase/keybase/keybase/keybase/keybase/keybase/keybase/keybase/keybase/keybase/keybase/
I think we should not have a method that takes the base class as a parameter.
I think we should be using `detach` here, because we don't want to use `/` in the `/`
I think we should just use `apigateway.start()` here.
I think it would be better to check for `first_metric_only` here instead of passing it as an argument.
I think we should add a new field to `handle` and make sure it's not used.
This change is not needed.
This is a change in behavior, but I think it's better to keep the condition.
I think you can just remove the `step.name` variable altogether.
I think it would be better to just remove the `is not` check and just do `is not end before it starts.
I think it would be better to use `Could not approve the stage because you're trying to figure out what the result is.
I think we should use the `_listens_matched_p` constant here.
Hmm, this test is not testing what we want. I would expect that we don't have to be testing the right thing.
I think this should be `eclist`
this is not needed anymore?
I think this is the only change that affects this change.
I think this is a leftover from debugging.
I think this is a bug fix. The `else if` block is not needed.
I think we should use the `ZpoolStatusStatusStatusOfflineed` as the default.
This is a bit of a hack, but I think we should be able to get rid of the `v4IPNet` condition.
This is a bit of a hack, but I think we should change the return type to `List` here.
This is a bit of a hack, but I think it's better to have a test that checks if the user is not running.
I think this is a breaking change.
This is a bit of a hack, but I think it's better to just make this a `Weave` and just return the result of the result.
This should be `Rewriting manifests(staging location=%s) of %s`
I think this is not needed
What's the reason for this change?
This is a very small thing, but I think it's better to have a separate function that returns the row, and then set the `colCount` to `null` here.
Should we use the new key here?
could you please rename `puppetdb_client` to `Config`?
This is a bug fix. I think we should just get rid of the `if not isinstance(by[0], Series)` check.
I think this should be `activity.SetCustomProperty("GrpcHandler.Request", request);`
This is a little confusing. How about `handleStateUnknownException`?
I'm not sure if this is the right place for this. The `else if` should be removed.
why not use the short_uid() helper here?
I think this is not needed anymore
Should we just use the default path here?
this is a bit weird, we are setting the `user.Auth` to nil if the resource name is not nil. I think we should just check if the resource name is nil.
I think this is a good change. It is not a good idea to change the name of the variable.
this is the test that was not working.
This is a change in behavior, but I think it's better to do it in a separate PR.
I think it would be better to use a `SetReader` instead of `SetReader` here.
This should be a constant.
I think we should check if the error is not an error.
This is a TODO, right?
Why is this needed?
can we log this as an error instead of logging it?
Why is this necessary?
I think you can remove this and just use `print traceback.format_exc()` in the `if` block.
I think this is a leftover from debugging.
can you use the standard library imports?
This should be `@return`
why is this one not `max_results`?
setting this to true only when thebar is actually in the DB
Why not just use `AS_IF()`?
I think this should be done in the `else if` block above, right?
I think this should be `public static final int?`.
Use the new Ruby 1.9 hash syntax.
this is the same as the one in `diffChildren`
Why are we adding this?
I'm not sure if this is the right place for this, but I'm not sure if it's worth it to just have a `table__.drop` method that takes the CloudAsset and then we're not doing it here.
This is a bit of a hack, but I think it's better to make the code a bit more explicit, e.g. `return os.Lstat(paths["devices"])`.
I think this should be done in the `if systemConfig.HidepidDisable { ... }` block.
I think we should add a check here that the `GoQuorumCompatibilityMode` is not defined.
do we need this?
this is not needed, we have to pass it to the constructor
I think this is a bit of a good place to put it in the `__init__` method.
Why is this needed?
I don't think this is needed.
nit: `fillHandle` is not used in this file.
This method is not used anywhere else, can we remove it?
I think this should be `true`
I think this is a good change. It's not a big deal, but it's not a big deal.
I think this is a good change. It's not a big deal, but it's not a big deal.
Why is this needed?
I think we should add a warning about how we handle the case when we're trying to get the user.
I think this should be changed to `HRESULT Status`
We should probably check if the event is nil before creating the nil state.
This is a little confusing, since the `pipedProjectCache` is not a `Error` check.
This should be `getDynamoView`
This is a change in behavior, but I think it's better to keep the Takuya parameter as a parameter.
Is this a bug fix?
I think we should use the `fs.Config` here instead of hardcoding the default value.
Should we log the error message here?
I think we should remove this TODO.
I think we should keep this and make it `'>`
I think this should be a `return t('appointments.searchTitle')`
Should we use `exc_status` here?
@contributor/core-team I think you can just use `.find_name(id)` here.
I think this is not needed since the completion status is not completed.
I think this should be a try/finally
`batchMap` is not used.
I think we should remove the `AccountAccount` and `accountType` as well.
I think it would be better to use `fillObject(n, element)` instead of `fillObject(n, element)`
Why is this needed?
Shouldn't this be `logf`?
this is a bit of a hack, but I think it's better to move it to the `else if`
Is this a bug fix?
I'm not sure if this is the right place for this. The X86 code should be inside the XINST_CREATE_jump_reg() function.
This is a breaking change. The `9680625b39d3363d` version is not in the `account` package.
Line is too long. [83/80]
This should be `HidepidDisable`
This is a breaking change. I think it would be better to just set it to `false` and set it to `true` in the constructor.
I think this should be `sameSite`, since it's not used anywhere else.
This is not needed anymore.
this is a bit weird, why do you need to check for the number of bytes in the array?
Can we just use cancelTimers here?
I think we should use the `diagnostics.isEmpty()` here
I think this should be `List<String>`, since it's not a public method.
Is this a change in behavior?
I think this should be `Column`
I think this should be `i2h`
I'm not sure if this is the right place for this. The code is not really doing anything, but it seems to me that the code is not doing anything.
This should be removed.
please make sure that the new flush is not defined in the same place as the new flush function
This import should go before the last group of imports.
I think this should be `fmt.debug`
I think this is a bit of a hack, but I think it's better to have a test that checks for `RouteFactory` and `force_empty_list` to be `None`, and then check that the `RouteFactory` is `None` and `force_empty_list` is `None` and `super(RouteFactory, self).__init__(request)`.
I think we should add a `common.StringSet` function to `namespace.IsNullOrEmpty()` and `namespace.IsNullOrEmpty()` to avoid the `common.IsNullOrEmpty()` function.
Why not just add the prefix?
I think this should be `@user_bp.route("/<user_name>/")`
Line is too long. [81/80]
I think this is a bit of a hack, but I think it would be better to just have it be a `async_select_unrequired` property.
This test doesn't work with origin. We need to check that the template is not the same as the origin.
Why is this part of the previous commit?
This is a little confusing, as it's a different thing than the `SpanContext` in the `SpanContext` function.
I think we should check if `http.Flusher` is not set.
This is a bit confusing, as it is used in the `PartitionSpec spec` and `StructLike partition()` methods. I think it's better to be explicit here.
I think this is a good change. It's not a big deal, but it's a bit odd that we're not doing this in the `RepoDoesntExistError` code.
I think this should be a constant in the config file.
Is there a reason why we don't use `!Config::get('cms.enableTwigStrictVariables', null) !== null` here?
I think this should be removed.
This is a little confusing, as it is used in the `static` module.
@smarterclayton do we need to check `version` here?
I think this is a bit of a hack. What do you think about just calling the script with the script script?
Why is this removed?
I think we should add a `return null;` here to avoid the `return null;`
I think this should be a warning, not an error.
I think we should just use `interceptors` here.
I think this should be `return Assembly.LoadFrom(path);`
Why do we need to pass `int` here?
I think we should just return `Collections.emptyMap()` here.
This is not needed.
The `new(heap) char[len2]` is not needed here, because it is a string, not a string.
This is a bug fix.
I think this should be `substanceProduct.append(", ");`
This is a bit of a hack, but I think it's better to have a test that checks for `isNull` and `isNull` if it's not null.
`ref` is not used anywhere.
I think we should add the default to the `leave_parts_on_error` method and add the default to the `user.aio.common` file.
This is a breaking change. I think we should just make it a `default` and not have it as a `default` here.
I think this should be `requireNonNull` instead of `except`, since it's a bit confusing to have a `if` statement.
Can we use the same name for the block device?
This should be `const train_input& input`.
Line is too long. [93/80]
This should be `_socket.IsCancelled`
Why do we need to pass the options here?
This is the only change that affects the server.
I think we should be able to remove the plugin from the `Tensor` module now that we're using it in the `Tensor` module.
I think we should add a `@SuppressWarnings("unused")` annotation here.
I think we should just remove this line.
I think we should use `trim()` here.
I think this is a leftover from the previous PR.
Why do we need to add this option?
I think this should be `!RequestOptions=true`
We should probably be able to remove this test.
I think this should be `default DocIdSetIterator iterator()`
I think this is a good change. It's not a good idea to add it to master list.
I think this should be `go-filecoin/proofs`
Should we check if `nil`?
You can remove this line.
I think we should remove this file.
This is not a good idea, but I think it would be better to check for `varHolder` and `VarHolder nullptr`.
I think this should be `digest` instead of `digest` since the `unless` is the default.
This is a bit of a hack, but I think it's better to use `<pre>{message.replace('<', '&lt;')` instead.
why 2 is a constant?
Block has too many lines. [32/25]
Can we use a more descriptive name for this?
This could be `allowOptionalMappings`
This is a bit of a hack, but I think it's better to have a separate `static` function that returns the `String.prototype` object, and then use it in the `return o.once.Start(o.chooser.Start)` function.
I think this should be in the `else` block, not here.
This is the only change I see is in `tm.lock.Lock()` and `tm.lock.Lock()` both here and in `tm.lock.Lock()`?
I think we can move this to the base class, as it's not used anywhere else.
Shouldn't this be `tls_insecure`?
Why did you remove this?
This is a breaking change. It's not a big deal, but it's a bit odd.
I think this should be `isInterfaceInterface()`
I think this is still a valid case where we don't need to set `terminate_after` to `None`?
I think we can remove this, it's no longer used.
Why are we doing this now?
This should be a separate PR
Would it be better to use `find({}` here?
I think it would be better to do this with the `fullscreen_view` check above, and then check for the view in the list.
I think we should use `peers.Peer` here.
this should be `getByIds`
I think this should be `currTerm = term_;`
Use && instead of and.
Is this still needed?
Why is this file added?
I think we should use `Math.valueOf( __( 'Search Traffic Summary for %s', 'google-site-kit' )` instead of `Math.valueOf( __( 'Search Traffic Summary for %s', 'google-site-kit' )`
I think this is a leftover from the previous PR.
I think this import is unused.
Would it be worth having a single field in `success` and `success_https`?
why change this?
why removing this?
Can we just use the `testType` here?
This is a change in behavior, but I think it's better to keep it as it was.
This is a bit of a hack, but I think it would be better to have a `fields` method that returns the type of the `Schema` object, and then use that in the `Schema` object.
I think we should use `float` instead of `float` here.
I think we should not use the `getPath` method here.
This line is not necessary.
I think this is a bit of a hack. What do you think about just making the new keyword argument `ConfigProfileTriggerCommand` and `ConfigProfileTriggerCommand` the same as the second argument?
These 3 lines are not needed.
This is a little hard to read. I think it's better to just say `bool             ` and `Public          ` as the default.
I think this should be changed to `fail-renamed`.
This test is failing on Travis CI.
I think the `reminder_email` and `reminder_email` are the same, so I removed the `is_i` and `is_i` and `is_i` and `is_i` and `is_i` and `is_i` and `is_i` and `is_i`
Please use the `EXT_SIMD8` constant here.
Should we also add a `linkToParentDomain` flag to the `LinkToParentDomain`?
This test is testing the same as the test test.
Can we make this configurable?
This is not a typo
Is this used?
This is a bit confusing, since it is a bit confusing to have a task in the task.
This is a bit of a hack, but I'm not sure if we should be using the `!title` helper here.
I think this should be `show_source_pygment`?
I think this should be done in the `c.msubs` package.
This is a change in behavior, but I think it's okay to remove this.
Redundant `self` detected.
I think this is a bit of a hack, but I think it would be better to just do the whole thing in the `if` statement.
@jridgewell I think this should be `2.18.0`
I think we can remove the old version as well.
I think this is a bit of a hack, but I think it's better to just use the `@world.example_count` method to avoid the `@param` check.
This is a bit confusing, as it is a `@return` statement.
This is a very minor thing, but I think it's better to use a `Action().LoadRegRange(int(marksReg), macRewriteMarkRange).` instead of `globalVirtualMAC`
I think this is a bit of a breaking change. I'd rather have a separate PR to make sure that it's not a part of the public methods.
I think this is not needed anymore.
This should be `error restoring console to functional state: %v`
Please don't make it public, it's a breaking change.
Is this change necessary?
This is a bit of a hack, but I think it's better to check the error message and throw an exception.
nit: you can remove this line
Why not use `0.12` here?
Line is too long. [81/80]
I think this is a bit of a hack, but I think it would be better to do it in a separate PR, and then check if the item is not set.
This import is unused.
This is a bit of a hack, but I think it's better to have a method that returns the `profile_json` instead of the `as_json` variable.
This needs to be added to the `SQLITE3` package.
I think this should be `Http2ExperimentSwitch`
I think this should be `final`
This is the only change that affects the API. I think we should keep it as it was.
I think we should use the `as` suffix here.
I think this should be done in the `else if` block above.
The `defer` should be in the `HttpServer` function.
I think we should add a `long:"rerun"` here.
I think this should be a separate PR, since it's not a big deal.
This is a bit confusing, as it is used in a couple places, and I'm not sure if it is worth it to have a method that returns a string. Maybe `Arel::Nodes::NamedFunction.new('COALESCE', [coalesce_result], column.to_s)`?
This is a bit of a hack, but I think it's better to have a test that checks the result of the function.
This is a bit of a hack, but I think it would be better to just do `inferences = self._classificationCompute()`.
Shouldn't this be `methodSampleViews.size() > 0`?
I think this should be `startTs.getVersion()`
`width` is not used in this function.
I think this is the only place where we can't use `redirect_to` in the code base.
Can you use `$storage->isCatalogCatalog('storage_provider', $dependent_classlikes, $used_trait_lc)` instead?
I think this should be `const { computed } = Ember;`
Use 2 (not 3) spaces for indentation.
Why did you change this?
why is this change required?
This should be indented by `--wheel-resolver`.
It's not clear to me why we need this change.
Why is this different than the one above?
This is a bug fix. I think it's better to move the `linkedSource` into `Dispose`.
I think this should be `electionCommittee == nil && stakingV2 == nil`.
Can you add the new file at the top of the file?
This should be `err != nil`.
Please, fix the indentation here.
What is the TODO?
This function is only used in one place, and should be removed.
How about if @group_level is 0, then if @group_level is 1, then if @group_level is 1, then the if @group_level is 1, then the if @group_level is 1, then the if @group_level is 1, then the if @group_level is 1, then the if @group_level is 1,
I think this test needs to be removed.
It's not clear to me why this is necessary. I would expect `get_notebook_data` to return a `notebook_path` object, and then just call `get_notebook_path` in `get_notebook_data`.
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
I think we should be able to use the default value here.
@jridgewell I think this is the right place for this.
I think you can use `String.format`.
I think we should also check if the connection is not specified.
This is a bit of a hack, but I'm not sure if it's worth it.
@deads2k @tnozicka this is the only change that affects this change.
Is this needed?
Why is this change needed?
Why not `EnableAdminApi`?
I think you can just do `import sqlalchemy`.
We should also check if the connection is in the dying state or not in conntrack table.
Please add a license header here.
I think we should use the new one here.
I think this should be `===============`
this is a test that was not working before.
Is this change intentional?
I think this should be moved to the `if (usage != 0)` block above the line.
Please revert this change.
I think we should just remove the `scheme` and `30` here.
This is a bit of a hack, but I think it's better to have a name for it, and then have a name for it.
This is a change in behavior, but I don't think we should change it.
This is a bug fix.
@wachterjohannes Shouldn't this be `o.corporation.resume`?
This is a bit of a hack, but I think we should just remove the `preferred` and `html_safe` here.
this is not correct. `six.Tensor` is a boolean.
I think this should be `current_approver_email_address`
I think this is a breaking change.
I think this is a good idea. It's not a big deal, but it's a bit confusing to have a `IHttpParser` interface.
I think this is a leftover from debugging.
This is a bit of a hack, but I think it's better to just return -1 and return -1.
This is a breaking change. The `Filed` is not a `Failed` so it can be removed.
I think we should use `this.inputs.length = Input.DEFAULT_LOCKTIME_SEQNUMBER;` instead.
This is not a valid argument, it should be `data_format`.
I think we should use `CharUnaryOperator` instead of `hascombine` here.
I think we should add a new `GET` field to the `payPeer` field in the `JsonParser` field.
Why is this needed?
This is a change in behavior, but I think it's better to move this to the top of the file.
I think this is a good change. The `name` argument is a `*string` and it's not a `string`.
@jridgewell I think this is a bug, we should probably fix it in a separate PR.
I think we should just remove the `ProviderAKS` check and just have `ProviderEKS` check.
This should be `DebugSimulateDataplaneHangAfter time.Duration`
I think this should be `warnings.warn(dataloader, "mmcv.runner.EvalHook", 'instead')`.
I think this should be `final`
I think this file should be removed.
I'm not sure if this is the right fix. I'm not sure if X86 is the correct fix.
Is this change necessary?
I think it's better to have a test for this, and then check that it's not passed in hooks.
I think this should be in `if(UserPreferences.getTheme() ...)`
Style/SymbolArray: Use %i or %I for an array of symbols.
I think we should just remove the `debug` here.
I think this should be `symbol.toLowerUnderscore()`.
I think this is a good change. It's not a problem, but it's a bad idea to check for the url.
I think we should add a check here that the `Map` is not present.
I think this is a good change. The previous code was correct. The `keys` function is only used in one place, so it's not really necessary.
This import is unused.
This is a change in behavior, but I think it's better to make the change in behavior.
This is a bit of a hack, but I think it's better to check the `assert` in the `if` statement.
This is a change in behavior. I don't think we need to change it.
I think this should be "selectCastSink"
This is a bit of a hack, but I think it would be better to move this into the `__init__` function.
Why is this needed?
I think we should also add a `private` statement to the `txStateDescriptor` and `txMapDescriptor` to avoid any potential conflicts with the `txMapDescriptor` method.
This is a little confusing, as `.map(name)` is the name of the function.
I think we can just use `db_path` here.
Why is this not nullptr?
This is a very minor thing, but I think it's better to move it to the new `if` block.
This should be `.`
Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this is a good change. It's not a good idea to test for the `self.assert_eq` and `self.assert_argsort()` calls.
This was just a mistake before.
I think this should be moved to the `eps` module, since it's a `new` module.
do we need to do any validation on the loop?
I think this can be removed now, since we only need to do this when `authenticate_user != nil`
This is a breaking change. I think we should just remove the ProjectSpec.class and just use the ProjectSpec.class.
This is a breaking change. It's not a problem, but it's a little hard to understand.
I think this should be a separate PR
I think we should just remove this, since it's not used anywhere else.
I think we can remove this and just use `protected HiveClientPool`
I think we should use `Post.by_unanswered.must_equal Post.joins(:topic).joins(:topic).order('created_at desc')` instead of `Post.by_unanswered.must_equal Post.joins(:topic).order('created_at desc')`
Why is this needed?
This is not a good idea. It's not a good idea to use a List<Span> to avoid the need for a new list.
We should add a `const` here to make sure we don't have any problems with the `injecting` key in the future.
why did you change this?
Please use `unless` instead of `if`
Why was this removed?
I think this check can be done in `if (metricsToExport != null && metricsToExport.Metrics.Count > 0)`.
Hmm, this is a bit weird. What is the difference between `resp` and `resource_name`?
Why did you remove these lines?
Should this be `width: width * 2`?
I think we should just use `.toLowerCase()` here.
This is a bit confusing, since the previous code was using a boolean flag for `TimeUnit.run` and `TimeUnit.run` for `TimeUnit.run` and `TimeUnit.run` are the same. I think it would be better to just use a boolean flag for `TimeUnit.run` and `TimeUnit.run` instead of a boolean flag.
This is a change in behavior, but I think it's better to move it to the `SUGGESTION` class.
I think it's better to use `<%= _(<<-TEXT)` instead of `<%= _(<<-TEXT)`
I think this is not needed.
can you test the content of the content of the content of the content?
This was changed in #5040, but it was changed in #5040.
I think we should just make sure that we don't have to check for emptyString here.
Is this a public API? I don't see any new APIs in this PR.
do we need to keep the old `NumOfCallToPayloads`?
This import is unused.
This is a change in behavior, but I think it's fine to leave as is.
This is not needed anymore.
I think we can use `statsd.Verify` here.
I think this is a leftover from the previous PR.
We should probably use `String.format` here.
I think you can just do `SELECT AA.preferred_name_id = name_facts.name_id` instead of `sql.first`.
I think it's better to put this in the `initpid` struct.
I think we should throw an exception here.
I think this should be removed.
This seems like a good change. Why not just do `x=0 and obj.role == controlTypes.ROLE_STATUSBAR:` instead of having a left-over left-over?
Why is this needed?
This is a breaking change. The `LambdaMethodReference` is not used anymore.
I think this should be `IDictionary<string, IList<FileData> filesDictionary`
I think we should use `sys.modules.pop("__main__")` here.
This should be done in the `if` block.
This is the only change that affects the `rmds.MD` file.
The `lodash` package has a `display: true` and `display: true` but the `lodash` package has a `display: true` and `display: false` but the `lodash` package has a `display: true` and `display: false`
This file is still in the wrong place for this file.
This should be done in `Walk`
I think we should remove this TODO.
This command isn't really needed.
Why not use `fmt.Sprintf` here?
This spec doesn't test that the `.to_a` is not in the DB, so I removed it.
I think this should be `task.yoast_visibilities`
This function is a bit confusing, as it is used in a different order of order.
I think we should use the `snackbar` constant here.
This is a bit of a hack, but I think it would be better to move the `const std::string &setting.empty()` call into a variable.
This is a bit of a hack, but I think it's better to have a test that checks if the stub is not a non-empty string.
I think this is the only place where we can set this to `state.Config.FeatureFlags.RemovePleasings`
I think we should use the `metav1` package here.
This is a bit of a hack, but I think it's better to move it to a separate function.
I think we can remove the `@widget` annotation here.
(style) line over 80 characters
This is a bit confusing, as it is used in the `Delete` and `Delete mark denotes`
I think this should be a `LOG.debug("Generating dependent headers via compiler...")`
I think this should be `int escape_t` instead of `int escape` since the rest of the changes are not needed.
I think this should be called `Accountable_ACCOUNTABLE`
I think this is a bit of a hack, but I think it's better to have a test that checks for `str` and `str_free` to be `str` and `str_free` to be `str` and `str_free` to be `str`
Does this need to be done in the `if (m_swift_ast_context->HasErrors())` block?
I think we should add a `.to_all` or something like that, to avoid confusion with the guidance of the guidance of the guidance.
Should we keep the old `s6` for this and `s2` for the other cases?
I think this is a bug fix. The `pgcode` is a bit confusing. If the `add_VIOLATION` is a `None`, then the `add_VIOLATION` will be the same as the `add_VIOLATION` check.
I think this is a leftover from the previous PR.
This is a breaking change. It is not needed anymore.
I think we should use `ImmutableMap.ofAll` here.
I think we should add a default value for `is_diff` and `is_diff_is` to keep the behavior consistent with the other changes.
I think we should use `tenacity>=6.3.0` here.
Please remove the trailing whitespace.
I think we can just use the `getState` here.
I think we should remove this and just setPropertyID and setProfileID as the first thing.
I think this is a leftover from the previous PR.
I think we should move this to the `must_render_template` spec so that we can move the `must_respond_with` spec into the `must_render` spec
I think this should be `metadata = new(core.BuildMetadata)`.
This is a very minor thing but I'm not sure it's worth it to make a method for this, and then we can just call `CommunicartMailer.cart_notification_email(email, pending_approval)`
We should avoid using wildcard imports.
This is a bit of a hack, but I think it's better to do it in a test, and then set it to `null`.
This was removed because it was not used anymore.
This should be `Value of nbits`
Why did you change this?
This is a very minor thing, but I'm not sure if it makes sense to include a `*` in the `collect` struct.
This should be moved to the `RegistryLimit` class.
This is a change in behavior, but I think it's better to keep the `repositories` prefix as the last argument.
This file should be removed.
This is a bit of a hack, but I think it would be better to have a method that takes a `name` argument as a parameter and then use that to determine whether it's a parameter.
I think it's better to move this to the `envConfig` package, since it's only used in the `envConfig` package.
This is a bug fix.
I think we should add a `KsqlEngine` field to the `KsqlEngine` interface.
Is this change necessary?
You can remove the `libsqreen.1.1.2.3` file from the `libsqreen.1.2.3` file.
Is this change intentional?
Why do we need to set the file name here?
You can use `\n` here.
I think this is a leftover from the previous PR.
I think we should not use the `xe` API here.
This is a change in behaviour, but I think it's better to keep the `BftTransactions` and `BftTransactions ibftTwo` as the default.
I think it's better to check if the agent is not a skip and then check if it is not a skip, if it is not a skip, then check if it is not a skip, and if it is not then check if it is not a skip, then check if it is not a skip, and if it is not then check if it is not then check if it is not there
I think this is a bit of a hack, but I think it would be better to just have a `_set_unit()` method that takes a `_set_unit()` and then just use that in the `_set_unit()` method.
This file is still in the GNU General Public License.
I think this is a good idea. It's not a big deal, but it's a bit odd to have a flag for this.
This is a change in behavior, but I think it's better to move it to the `com.google.common.common.train` class.
I think this is a bit of a hack, but I think it's better to have a test that checks for `resource` and `resource_` as the default.
I think this should be private.
I think we should use `index_type` here.
Line is too long. [83/80]
If you're using the `stopProcessing                   `, you should also change the `isWorkflowTaskInfo` field to `stopProcessing                   `.
This is a breaking change.
I think this is not the right place for this.
why is this removed?
This should be `jsonschema==3.*`.
This is a temporary placeholder, but I think it's better to keep it as is.
I think we should just remove this and just call `maxRequestBodyBytes = 100000000` in the `else` block.
This is a change in behavior, but I think we should be able to remove the `auth-delegator:%s` and `auth-delegator:%s:%` from the service namespace.
I think this is not needed.
I think this should be `const int = EJSON.parse(process.env.CSFLE_KMS_PROVIDERS || 'NOT_PROVIDED')`
This is a little confusing, as the `default` is not used anymore.
This is not needed.
Shouldn't we also remove the `common/selector` package from the package?
Would it be possible to test with a specific reason for this change? I'm not sure if it's worth it to test with a specific reason for it.
Why these names?
I think this is a good change. It's not a good idea to add a new thread in the client.
We should probably use `get_lambda_name_from_arn` here.
I think we should keep the old name here.
Why not just return the `err != nil`?
I think this is a bit of a hack, can you fix it in a follow up PR?
I think this should be `default: true`
I think this should be `using LayoutUseCheckAndMessage = ...`
Why are we adding this?
I think we should just remove this, as it's not used anywhere else.
I think we can just use `ClassifyActions` here.
This is a bit confusing, as it's a bit confusing. What about something like `show or batch_size in the struct struct?`
Shouldn't this be a pointer?
Is this needed?
I think this is a leftover from the previous commit.
I think this can be removed now, since it's not used anymore.
Why remove these?
This is a bit of a hack, but I think it's better to make it a `@return` rather than a `@return`
This should be `public`
I think this should be removed.
Why did you remove this?
I think this should be `StringVar`, not `StringVar`.
I think this should be `secondary->icons`
Why is this necessary?
I think this is a bit of a hack, but I think it's better to move it to a separate file.
I think this should be `LibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibraryLibrary
I think this should be `this.html += '<i class="material-icons iconOsdIcon volume_up"></i>';`
I think this should be done in the `if ((retcode < 0) && (errno == ENOENT) || (errno == EAGAIN)))`
you can use `self._prefix.join(self, '_keys()) if hasattr(self, '_keys())`
I think this is a bit of a hack, but I think it would be better to just use `seconds=0.00` here.
Align the parameters of a method call if they span more than one line.
I think we should remove this file.
This is a change in behavior, but I think it's a good idea to change the type to `*string` here.
Would it be possible to have a test for this?
This is a very minor thing, but I think it's better to move it to the `hostConfig` package.
why do you need to change this?
What's the difference between `linePositionDelete` and `linelineline`?
What is the difference between `is_integer` and `is_integer()`?
I think we should be able to remove this `create_view` method altogether.
Please revert this change.
I think this test is not really testing what we want. I would expect the test to fail.
This is a no-op, but I think it's better to keep it.
We should probably add some more details about the source.
I think we should add these new values to the `Value` and `price-gb`.
This is a very minor detail, but I think we should keep this as a private method.
`!= null` is not needed here.
I think this is a bit of a hack, but I think it's better to just use the `go get -u github.com/xeipuuv/gojsonschema` constant.
This is a bit of a hack, but I think it's better to use a `function` function that takes a `NVIDIA ")` as a parameter.
The `code` field is not defined.
Can you please add a newline after this?
Wouldn't it be better to return the user here instead of creating a new one for each one?
I think this should be done in the above loop as well.
I think we should use `x86 Program Files` instead of `x86)" ]` here.
Can we add a note to the docs that this is going to be used?
Is this needed?
I think this should be `@var bool Search on every key stroke`
This is a bit of a hack, but I think it would be better to just return the file directly in the constructor.
I think this should be reverted.
This should be `info.info("Bound legacy RC support");`
This is a TODO, right?
I think this is the only change that makes sense.
Layout/EmptyLinesAroundClassBody: Extra empty line detected at method body beginning.
I think this is a leftover?
Can you explain why this change is needed?
I think we should just call `prepareDiscriminatorCriteria(this)` here.
This is a change in behavior, but I think it's better to move it to a separate commit.
I think this is a leftover?
I think this should be `+ ";"`, since it's not a public API.
I think we should keep the old version as the default.
This is the only change that affects the `#ifdef UNUSED` check.
Why is this needed?
I think this is a leftover?
This should be `nix-instantiate --eval -E 'with',`
I think this is not needed.
I think we should just remove the `errorNodeCreationIPFailure` variable and just call it `warnNodeCreationIPFailure`
I think we can remove the `stub` parameter from the `stub` interface.
I think we should remove the `downInterval` and `pollInterval` fields from the `downInterval` and `downInterval` fields.
Use the new Ruby 1.9 hash syntax.
Why is this change necessary?
`in stats function to be used for aggregation`?
I think this should be `if (hasServerAddresses && !hasServerAddress)`
I think this is not needed.
Is this file to be in the middle of the app?
Is this change required?
This is a bit of a hack, but I think it's better to have a separate `if` statement here.
Why not catching `Exception`?
I think this is the only change that affects the `oldDom` variable.
This is a bit of a hack, but I think it's better to check for the `httpplib` instance instead of just passing the `httpplib` instance.
Do we need to make it configurable?
With the new `Samples.AspNetCoreTransport` we have to keep these.
This is a duplicate of the previous call.
Please use `const` here.
Not sure why this is changing.
I think this should be `OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
I think we should add a `@Nullable` annotation here.
`scheduling_processes` is the default value of `parallel_scheduling_processes` so it can be removed from `BoolParameter`
This is a bit of a hack, but I think it's better to have a separate PR to make it more explicit.
This is a bit weird, maybe we should just change the key to be `true`?
I think this test is still not correct. It should be `Object.keys(Object.getPrototypeOf(prim))`.
Why are we returning theManifests here?
Use && instead of and.
Is it possible to get the current user and provide the same card as the current user? I think it's better to just make the `Status returns ...` be the same as the current user.
Shouldn't this also be `before_action :set_outside_committers`?
@nmittler - I think this should be `return new Date(Date) o);`
This is the only change that affects the `baz_` version of `PutUint16` in this file.
This is a breaking change. It's not a big deal, but it's a minor thing.
Metrics/LineLength: Line is too long. [83/80]
This is a leftover from the previous PR.
can we call this `mysqld.sock >& /dev/null` instead?
I think we should add a `:destroy` here to make sure we don't have a `belongs_to`
This is a very weird thing. Is it possible to do this in a separate PR?
I think this is a leftover from the previous PR.
why change this?
I think we should keep this import.
Would it be better to use `ds_instance` here instead of `static`?
I think we should just remove the `version` variable and just do `version.versions[version]`.
I think we should use the same constant for the new name.
I think we should change this to `google.example.myproto.v1`
This is a change in behavior, but I think it's better to make the same change as the other one in `subSequence`
@mfojtik why not just have this be `unix://"`, and change the name of the variable to `nodeConfig.AgentConfig.RuntimeSocket`?
why did you change this?
This should be `private`.
Please use the `getQuantifiedProducts` method instead.
Please use `org.apache.commons.lang3.StringUtils`
This is a bit of a hack, but I'm not sure we need to make a test for this. I'm not sure we want to test that.
nit: Can we call this torch.zeros_like instead?
I think we should use `box.LastIndexAny` here.
This file is not in the PR.
I think we can remove this.
Why not use the header starts with RCLONE_ENCRYPT_V1 instead of V0?
This should be `this.id`
Is this change required?
I think we should use `this.next().length === 1` instead of `if ($(this).next().length === 1) {`
This is a bug fix.
I think this should be `info.info("Starting Besu.nodeName(identityString));`
This is not needed anymore.
I think we should just remove this, and just have it in the constructor.
I'm not sure why you need to use `std::unique_ptr` here.
Should we also add `apiutil` to the `apiutil` package?
This is a bit of a hack, but I think we should be able to use the `common` package here.
This is a breaking change. You should be able to use the `CommonCommon` version in the `CommonCommon` and `CommonCommon` version.
Why is this removed?
This is a no-op, right?
This is a change in behavior, but I think it's a little hard to read.
I think we should be able to remove the `V` here.
This line is not needed anymore.
I think this is not needed.
This is a breaking change.
I think we can remove the `&&` here and just use the `&` inside the `kubeAPIServerNamedCertsTemplate`
Why is this needed?
I think we should keep the old constructor as it was before.
I think we should add a link to the service and link to it as part of the service
I think we should add a new flag for this to be able to use the new one.
This is a change in behavior, but I think it's a good idea to add it to the `*time.Timer` function.
Can you please add a typedef to the `index` function?
This is a bit of a hack, but I'm not sure how to fix this.
I think it would be more clear to use `print(formula)` here.
Nit: I think this should be nullable and not `!`
I think this should be `elastic.SetSniff(false)`
I think this should be a warning, since the source is not empty.
This is a breaking change, we should probably move it to a separate pull request.
I think this is a good change. It's not a big deal, but it's a bit odd that we're not doing this.
Why is this needed?
Why do we need to change this?
This was the bug that was causing the test failures.
Why is this not a `HasExited`?
I think this is a bit of a hack. Maybe we should just make it a `Task.Exporter`?
why is this changed?
I think this should be `2.3` instead of `2.3`
I think this is still a leftover?
Is this used?
This is a no-op, right?
I think this is a good change to make it more clear that the `changed_attributes` is a `bool` and not a `change`
This is a little confusing, since the `IsItemLayoutId` is not used in the `BindingInflate` method.
This should be `__str__`
Should we also check that the `BOM` is not defined here?
Should we also update the `rule` in `spacetime.go`?
Is this the right place for this?
This should be `The \\`deploy.on\\`
Please use the `defaults` method here.
I think this should be `RECENT_LISTENS_KEY = "lb_recent_sorted"`
This is a bit of a hack, but I think it's better to be explicit here.
<!--new_thread; commit:3e8e3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c
I think this is a little strange. I think we should just remove the `VideoDirect` case.
I think this should be `s + multiple FILE(s) into the backend output format (e.g., HTML5, DocBook 4.5, etc.)`.
I think this is a good change. It's not a problem, but it's a little strange that the `--wrap` flag is not set in the list of `--wrap` (which is not set by the list of `--wrap`).
The default is 5s.
I think we should not catch blockNetworkData here.
This file is still in the GNU General Public License.
So, I think we still need this?
I think this is a bit of a hack, but I think it's better to just check for `!= false` instead of `!= false`
Please don't use `import pickle` in this file.
nit: you can use const char *ns
Can we make this `when_searching`?
Is this change necessary?
I think this is a good idea. It's not a big deal, but it's a bit confusing to have a `IHttpHeadersHandler` interface.
This is a breaking change. I think it should be reverted.
This is a bit confusing, as it is a "MarkHidden" check.
Shouldn't this be called `isLoginPage`?
This is a change in behavior, but I think we should be using the `Warnf` here.
Should we use the `b2d48a8b0aa04c0c0091fa3c` here?
This is a breaking change.
I think we should just remove this, and just do `adt_spec.EmptyValue` in the `if` statement.
I think this is not correct. The `thatItem` should be `null`
This is a test, but I think it's better to move it to the top of the file.
This is a no-op, right?
you can just use `from helpers import LuigiTestCase`
I think this is not needed.
Is this change related to the PR?
This should be `setup-show` (and the other similar ones)
Why not just use `time.Second`?
This is a breaking change. We should not be using this API.
I think this should be `setup_requires=3.0`.
This is a bit of a hack, but I think it's better to do it in a separate PR.
Is this needed?
Seems like this is a duplicate of the line above.
I think this is a leftover from the previous PR.
I think this should be a `formatArea.innerHTML = html;`
I think this should be `void go()`
Why not just use the `logger.info` helper?
I think this should be `where(deactivated_on: nil)`. It's not a user-facing endpoint.
Please use ` tag.strong(@trace_name)`.
I think this is a little confusing. How about `is not synced Realm`?
why is this removed?
I think this is a bug fix. The syncer should be removed.
This is a bit of a hack, but I'm not sure if it is worth it.
@jcotela is this line still needed?
I'm not sure if this is the right place for this. The `compute_unique` function is called for every `compute_unique_ptr` function.
I think this should be `axe.utils.getNodeFromTree(el)`
This is a change in behavior, but I think it's better to keep it as `new ArrayList<>()`
I think we should keep the old one.
What is the default value for?
I think this is not needed.
(style) externs should be avoided in .c files
I think this is a good change. It's not related to the fix, but it's a good change.
Why did you remove this?
This is a test, so I removed it.
I think we should just remove the `TrimSpace` function altogether.
This is a bit of a hack, but I think it would be better to have a test that checks for the `<T>` in the `Component` method.
I think this is a leftover from debugging.
I think we should be able to use the `@Rule` interface here.
I think we should remove this line.
I think we should use metricNamespace here.
This is a bit of a hack, but I think it's better to move the `pageTokenName` to the `/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*
I think we should use a `getClass().getSimpleConfigs` method here.
This is a change in behavior, but I'm not sure it's worth it.
I think this is a good change. It's not a big deal, but it's a bit odd to see how the `fd` can be used.
I think this should be `userDomainPrefix.getProperty(ZMSConsts.ZMS_PROP_USER_DOMAIN, ZMSConsts.USER_DOMAIN)`
This is not needed.
@jmhooper @mitchellhenke Is this a BC break?
I think we should use `goog.isNumber` here.
Can you add a note that this is a bit of a bugfix?
This is a very minor thing, but I'm not sure if it makes sense to have a field in the constructor.
This is a very minor thing, but I think it would be better to have a single `span` statement in the `span` method.
I think this should be `return &bypassBLSSignatureCheck: true`
This should be removed.
Could you add a `pageDashboard` field to the `Promise.rb` file?
This is a no-op, right?
Is this a bug fix?
I think this is not needed.
I think we should remove the first part of the list.
I think we should use `api.MapMap` here.
can you also add the `CMakePackage` annotation?
This is a change in behavior, but I think it's better to keep it in the `$atomic_types['array']->count`
This should be `inline_default`
Is this the right place for this?
this import seems to be unneeded
This is a breaking change. We need to make sure that the `T` parameter is always `null`.
This should be `Long sequenceNumber()`
`type` is not supported in IE.
Can you please update the test description to include the new version?
I think we should change the `serializedDataSize` to `encryptedSerializedDataSize`
why not using a `List`?
I think this is a bit of a hack, but I'm not sure if it's worth it to just remove the `checkState` check.
I think this is a good change. It's not a big deal, but it's a minor thing.
this is a change in behavior, but I think it's better to do it in a separate PR, and just do it in a separate PR
I think this is a good change. It would be nice to have a test that checks for this case.
This is a change in behavior, but I think we should change the name of the package to match the new name of the package.
should we also add the `.map { |hsh| !hsh['verified'] }` to the `.compact`?
Why is this needed?
I think this should be `create_no_window`
This is a bit confusing, as `can_cancelled` is a boolean and we don't have to worry about the actual `can_cancel` method. What do you think about just making this a boolean?
This should be moved to the `if fee` above, right?
This is a very minor thing, but I think it's better to be explicit here.
I think we should use `memory.Allocator` here.
Why is this needed?
This was a bug in the PR.
I think we can remove this check now that we have the check in the first place.
I think we should check for the settings file before setting it.
Trailing whitespace detected.
Is this line break necessary?
This is a breaking change. I think it would be better to have a separate PR for this.
This is a good change. We should probably move the logic to `removeShutdownHook`
This is a bit of a hack, but I think it's better to have a test for this.
This is a bit confusing, as it is a bit confusing to have a `Lookup` and a `Lookup` that is not a `Lookup`.
can you also add `sigs.k8s.io/cluster-api-provider-aws/pkg/apis` to the `sigs.k8s.io`?
I think this test is not needed.
I think this should be `(&p)`.
Is this needed?
I think we should remove the `ServiceExternalIP` check here.
This is a breaking change. The `Number` property is not being used in the `Number` property.
I think we should log the warning here.
I think we can remove this now that we have the `kbp_record` field in the `zap` package.
I think we should use `Object#isNotEmpty` here.
Why did you remove the `.specId()` here?
@kargakis this is the fix. The code below is not correct. The code below is not correct. The code below is not correct. The code below is not correct.
We should also check if the field is not nil
this import should go above the other group of imports
Is this test failing?
I think this is a leftover from debugging?
I think this is a good change. I think we should just remove the `case` parameter from the `case` and `case` parameter from the `case` parameter.
I think we should use `@Test` here.
@jcotela is this change intended?
I think we should be using `s.Shutdown()` instead of `s.Exit(0)`.
This is a bit of a hack, but I think it would be better to just check if the refund is not in the output.
Does this mean we don't have a `i` in the `AWS` machine?
This line is not needed.
Should we also check for null here?
I think this should be `!= 0`.
I think we should leave this in the changelog. We should not be able to remove it.
Why not using a setJsonParameters?
This test should be moved to `build-system/common/constants.js`
Is there a way to do this without logging the status after refresh?
I think we should use `0.0` here.
this is a bug fix.
We should probably make this a constant.
I think it would be better to have a lock here instead of a lock.
I think we should use `std::string` here.
I think this should be removed.
The `else` is unnecessary here.
I think this should be `PDataSource getDataSource`
This line is not needed.
This change is not related to this PR, but it is a bug fix.
I think this should be `originalRole.getAuditEnabled()`
I think this should be a constant in the `ContainerLogConfigFile`
I would prefer if we have a single time per request, and then we can set it to 0.
This is a bit of a hack, but I think it's better to make this a `IsFatalError` method, and have it return the error.
this import is not used
I think we should rename this to `HOUSE_OWNED_BY_ACCOUNT`.
Why is this removed?
I think this should be `constexpr`
This was a bug, but I'm not sure it's worth it.
This is a change in behavior, but I think it's better to keep it as-is.
This is not needed.
Why is this removed?
I think this is a leftover from debugging.
I think this check can be moved to the `if (client.getLocalPlayer() != null && client.getLocalPlayer().getWorldLocation()))` check above.
Is this change correct?
I think we should use `r.Header.Get` here.
This is a bit of a hack, but I think it's better to have a test that checks if the path is not empty.
I think this should be done in a separate PR, but I think it's better to move it to a separate PR.
I think we should use `ConfigParamCache` instead of `ConfigParamCache` here.
I think this can be removed now, since the snapshot is not in the volume name.
why is this a pointer?
Why not just check for the name of the report?
I think this is a good change. The `min_alpha` constant is always `1`.
This is a change in behavior, but I think it's better to move it to a new commit.
Should we use the `rm -f` here?
Should we also add `@logger.info("Starting command run '#{command}' on #{targets.map(&:uri)}") if callback else` here?
This is a bit of a hack, but I think it's better to just have a `string|undefined` constant.
I think we should just use `1 <<` here.
I think this should be `return false`
This is not a good idea, but it should be `subtypes = ['dataframe', 'dictionary', 'dask']`
I think we should add a check here that the user has the same result.
is it possible to have both the same name and the same name?
I think we should add a `@deprecated` annotation here.
I think we can just use global._googlesitekitBaseData instead of global._googlesitekitBaseData directly.
Is this related to this PR?
I think this should be `i = Arrays.binarySearch(docs, * *> + 1, length, target)`
I think we should just use `fullResult` here.
Why is this needed?
I think we should use `fs.create_dist` here.
This is not needed anymore.
This file is no longer used.
`typeof ref=='function` is a function, so it should be `!= null`.
The same here, I think it would be cleaner to use the same logic as the one below, and use the same logic for the other `ParamParam` class.
I think this is not needed, we can test for the group in the test
Can we use the `@org_by_30_day_commits` constant here?
I think this is a good idea. It's not a big deal, but it's a bit odd to have a task in the task file.
This should be `base.Objects`
I think this should be `import mock`.
this is not needed
I think this is the only change that affects this PR.
I think this should be done in a separate PR, but I think it's better to move this to a separate PR.
I think we can remove the `id` here and just use the `id` here.
missing comma at the end of this line
Why did you change this?
Can we just remove this?
Why not use `this.membersStats.days + 1`?
I think we should just remove the whole `click_on I18n.t`
Is this needed?
This is a breaking change. We should probably add a TODO to remove this and just change the description.
This is a change in behavior, but I think we should be able to remove the `Source` here.
I think this should be a `Dictionary<TKey, TValue>`.
Use the new Ruby 1.9 hash syntax.
This is a very minor thing, but I think it's better to move it to a new function.
This field is not initialized in `getTabular`
I think this should be `&&` instead of `&&`
Is this needed?
I think we should be using `defer` here.
Layout/EmptyLinesAroundClassBody: Extra empty line detected at block body end.
I think this should be removed.
I think this should be `addr.PortRangeSize() != 1`
I think this can be removed now, since we have the `.in-unsupported-version` class.
This is a breaking change.
I think we should keep this.
I think we should add a key for the key for the partition type.
@jridgewell I think this is a bug, we should probably do a similar change in the `MakeStateDelta` to make it clear that the `State` is not a property of the `safe` property.
This should be a static import.
Why is this needed?
Please use the shorthand since there is a `use` statement.
This is a change in behavior, but I think it's better to have a test that checks for the `tinyInteger` method.
I think we should just pass the `String` as an argument to `copyOf` and pass the `selectColumns` as an argument to `copy()` and pass the `columns` as an argument to `copy()` and `columns.copy()` to `copy()`
This is a breaking change.
This was a bug in the PR that was removed.
The type should be `block`
Please update the doc accordingly.
I think we should add this to `app/services/__init__.py` and `app/services/__init__.py`
@Pearl1594 is this intentional?
remove empty line
I think we should just use `MAX_BUFFER_SIZE` here.
Redundant `return` detected.
Why is this test removed?
Can we test the exit code too?
I think this is a good change. It's not a big deal, but it's a bit odd to have a `long` argument here.
remove empty line
Can we just use `assert.NoError(t, *testing.T)`, and use `assert.NoError(t, *testing.T)`, and use `assert.NoError(t, *testing.T)`, and use `assert.NoError(t, *testing.T)`.
I think we can remove this function and just call the function in the function.
This is a change in behavior, but I think it's better to move the `getValidationError` function into the `new PublicKey` function.
I think we should use `expect(false).to be_` here.
Please add docstring for the new parameter.
Could we move this to the `require_once __DIR__`?
This is a change in behavior, but I think it's better to keep the `elementText` and use `StringUtils.contains(text)` in the `elementText` method.
This is not related to the PR, but why did you remove it?
I think we should use `body.getEncoding()` instead of `body.getEncoding()`.
I think this is not needed.
I think this should be `enum[str, response[str]`
I think this should be `volatile`
I think we should remove this file.
This should be moved to the next line.
I think we can get rid of this `Dependencies` now.
I think we can remove this and just use the restic interface.
What is the meaning of `next(1)`?
If we're going to be setting `dial` to `false`, we should just return `false` here.
Msmq is not defined in the constructor
This is a little confusing, as the error message is not handled in the `InvalidRequest` error message.
I think we should remove this and just use the new `Web3Port` field.
You can remove this `UserStamp` class entirely
This is a breaking change.
This is a bit of a hack, but I'm not sure if it's worth it to make it more explicit.
this import is still used in the wrong place
this is not needed anymore
I think this is a good place to put this. It's not a big deal but it's a bit confusing to have a `failureDetection` method that does the same thing.
Is this related to the current change?
I think this should be changed to `Info`
Why not just use the constant?
I think this is a bit of an overkill. I think it would be better to have a separate method for this.
We should add `&&` to the end of this function.
I think the default value of `8545` is null here.
I think this is a little too vague. Maybe we can just make the GinkgoWriter a constant?
I think this should be `Unable to get the name`
I think this is a leftover from debugging.
Please rename this file to `__init__`
You can remove this.
Is this supposed to be `_platformNotSupportedExceptionMessage != null`?
I think we can just use `map(n => n + 'em')` here.
I think this is a good change. It's not a good idea to have a test that checks for it.
I think this is a leftover from debugging.
This is a bit of a hack, but I think it's better to move it to the `api_base_url` file.
Can you add the `routing` prefix here, too?
I think we should use `rule_stages` here.
Why do we need to do this?
This is a leftover from the previous commit.
I think we should remove the `sentryAddrs` and `sentryAddrs` altogether.
I think we should remove this line.
This is a change in behavior, but I think it's better to keep it.
I think we should use the `aria-label` helper here.
`usb_PID` and `usb_VID` should be moved to the top of the file.
I think this is the only place where we can't use the old_len.
I think we should be using the `*` here.
This is a bit of a hack, but I think it would be better to use `time::TimeConversion::unixSecondsToDateTime` instead of `time::TimeUtils::rmDateTimeStrMs` here.
This is a bit of a hack, but I think it's better to just return an error here.
This should be `@psalm-mutation-free */`
This should be `CLASSIC`
I think this is a bit of a hack. It's not a big deal, but it's not a big deal.
I think this is not needed.
This is a very generic name. It's not a good idea to have a common helper method that does the same thing.
Code Climate says this is not tested.
I think this should be a debug level.
This is a change in behavior, but I think it's better to move it to a new location.
Is this used?
I think we can just use `Contains(accountActor)` here.
Would it be better to use a constant for the test case?
This is a bit of a hack, but I'm not sure if it's worth it to check for the `||` in the `if` block.
This is a breaking change.
We should add a docblock here to make sure we don't have to change the order of the keys in the `expiration_date` key
I think this can be removed
Here's the `execution_time` method, it's a `Union[float,int]` and it's a `Union[float,int]`.
I think this should be `os.path.join(path).join(path))`
I think we should just catch the `Exception` here.
(style) unnecessary whitespace before a quoted newline
This is a change in behavior, but I think it's better to move it to the `java.util.Map` class.
why did you change this?
This was a bug in the previous commit.
I think this test is still testing the wrong place for this test.
This is not needed.
Please revert this change.
I think this should be `void` instead of `void*`
Can you please also change the `||` part of the conditional?
This should be `static`.
Is this change necessary?
Is this a BC break?
I think we should remove this and just use the `self.call(modified_src, dst, *asciidoc_args)` above.
I think this is a good change. It's not a problem, but it's a little strange that the txib has been already loaded.
Line is too long. [81/80]
Please remove this empty line
I think this is a good change. It might be better to just use `FileClient` instead of `FileClient` here.
I think we should remove this, we can remove the `:` and use the `MAX_VALUE` constant.
Another one out-of-order after the substitution.
I think this is a leftover from the previous PR.
Why do we need to change this?
This is a bit of a hack, but I think it's better to move it to a separate commit.
Why is this line removed?
here we are removing the `sign` action from the `sign` action, so we don't need to make it in the `sign` block
You can remove this method entirely.
Nit: I think this should be `if numImagesToDeletePerCycleEnvVal != "" && err != ""`
This is a change in behavior, but I think we should change the default behavior of BaselineTreeDbWriteBuffer and BaselineTreeDbWriteBuffer to BaselineTreeDbWriteBuffer to BaselineTreeDbWriteBuffer to BaselineTreeDbWriteBuffer to BaselineTreeDbWriteBuffer to BaselineTreeDbWriteBuffer to BaselineTreeDbWriteBuffer to BaselineTreeDbWriteBuffer to BaselineTreeDbWriteBuffer to BaselineTreeDbWriteBuffer to BaselineTreeDbWriteBuffer to BaselineTreeDbWriteBuffer
Please add a `json:"owner_uid,omitempty"` field to the `StatusUID`.
I think this should be a try/catch and use the logger in the .Create()
This is not needed.
I think we should add a new event handler here.
I think this is a regression.
I think we should add a `status` to the `RootCAs` and `status.status` to be consistent with the other tests.
can you add a note about this to the existing behavior of the year in case the user has not seen the current year in the current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current current
This is not a valid value, it should be `SULLIUSCEP_LOCATION(5808)`
I think we should use `!=` instead of `>`
I think we should keep the ` duraton` and `0` here.
I'm not sure if this is the right way to do this. The `abort` method is only used in the `__new__` method, so I'm not sure if it is worth it.
Is there a reason why we don't just remove the TODO?
I think we should change the name of the test to make it clear that this is a `Not Found` field.
I think this is a bit of a hack, but I think it's better to move it to a separate file.
I think this is a leftover?
I think we should just use `useQueryQueryMatches` here.
Can you please change this to `MaxBatchSize: Product`?
This is a bit of a hack, but I'm not sure how to fix this. I think it's better to have a separate `with` statement, and have it return a new `with` object.
This field was removed because it was not used anymore.
this seems to be unused
I think this is a bug fix.
`checkExprDepth` is not used anymore.
I think this is a leftover from debugging?
I think we should keep this as public and make it private.
I think we should move this to the `setUp` method.
I think we should use `MapWith` here.
Remove this blank line.
Is this a bug?
I think we should use `Events.trigger` here.
I think this is a good change. It's not a big deal, but it's a little strange that the bodyParamName is the default.
This is not needed anymore.
Can you change this to `VerifyConsensusFault`?
I think you can remove the `foreach` declaration now that you've added a new one.
I think we should use the `self::` prefix here.
This is a bit confusing, as it's a `str` that's used in the `_format_option_value` method.
I think it's better to use a constant for the search search, as it's a little bit more clear what the default value is.
I think this is a bit of a hack, but I think it's better to move this check inside the `if (ZMM_ENABLED())` block above, and then check if the value is set to `true` in the `if (ZMM_ENABLED())` block.
I would suggest to use `-1` instead of `-2` here.
`s/0/0` is a bit confusing, how about `s/0/`?
I think this should be `ZMSImplFactory.getZmsInstance()`
I think we should just remove this line.
This is a change in behavior, but I think it's better to keep it.
Should we use an enum instead of an enum?
I think we should just use the `containerMetadataEnabled` variable here.
I think you can remove this #ifdef now
I think this should be `recoverutil`.
This should be changed to `pids/nebula-graphd.pid`
why not use `bool`?
I think this is a good change. But I don't think we need this import.
Why are we returning the TLF here?
I think this is a breaking change.
I think this should be `_model.options || {}, promise.resolve.bind(promise)`
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think we should just remove this and just use the `#if DEBUG` below.
In theory, we should check for null here as well.
The `NOT_lodash` import is no longer used.
Do we need to also change the `-` prefix?
I think we should just remove the SNS here.
Why do we need to check `expected != result`?
Why is this removed?
I think we should add a `BeforeQuery` method to the `currentQuery` interface.
This is a bit of a hack, but I think it's better to have a `libopenstorage/pkg/correlation` that is used in the `libopenstorage/pkg/correlation` package.
This is a breaking change. It's not a big deal, but it's a bit confusing.
This is a breaking change. The `p.mu.Lock()` is not a `spanProcessorMap`, so I think we should just remove the `spanProcessors.Load()` function.
This seems like a good change. I think we should just make the `.Configure` call here.
@jridgewell Is this a bug?
This will break if the last check is `false`
I think this is the only change that is needed.
I think this test is not needed.
This is the only place where we need to keep the `signed_in?` method.
Please rename this to `AddonsExtraParams`
I think this is a leftover from the previous PR.
Use the new Ruby 1.9 hash syntax.
What is this supposed to do?
I think this is a good change. It's not a good idea to test the `EnsureBinary` method.
I think we should be using `instanceDescription.State.reconcileLBAttachment` here.
I think this should be done in a separate PR, but I'm not sure if it's worth it to make it a little more explicit.
I think you can remove `--bfbs-builtin-attrs` now.
I think we can remove this and just use `apimachinery/pkg/apis/meta/v1` in the `api/v1` package.
Nit: I think this is a bit confusing, since it's a `const` statement.
I think we should add a new constant for this to be able to use the new constant in the future.
why do we need this?
Is this change necessary?
This is a bug fix. The problem is that we don't need to do this anymore.
You can use `format_address` here.
This test is not related to this PR, but I think it should be reverted.
I think we should just remove this and just do the same thing in the `@@additional_pkgs` file.
This is a bit of a hack, but I think it's better to have a `pluginID_t` method that takes the `taskIndex_from_TaskIndex` and then just return `taskIndex_from_TaskIndex` if it's not set.
I think this is a good change. It's not a big deal, but it's a bit odd to see how the query query is set.
Is this the correct version?
This is not a good idea, but it should be a separate issue.
This file is not used anymore.
This is the only change that affects this change.
Is this function used anywhere?
I think we should change the names of the metrics metrics to be more generic.
Can you add a link to the deletesToDelete interface?
I think this is a good change. It's not a good idea to have a test for the name of the app. I think it's better to have a test that checks for it.
It's not clear why the category is the same as the one for the category icon.
can we use `Cause` here?
I think this is a good change. It's not related to the fix, but it's not a big deal.
I think this should be `return empty().drop(n).reverse();`
Please add a note that this is a `@private` tag.
I think we should just remove the `Ray` call here.
I think we should remove this
I think we should use the `Ray_carloannate` package here.
I think you can use `std::chrono::duration<double, std::milli>` here
can you add gitea copyright line to header (and keep gogs one next to it)?
This is a change in behavior, but I think it's better to move it to the top of the file.
I think this should be `static const std::string prefix = kPartsTable;`
Can we use a more meaningful name here? `pastebin_version`?
We should also check if the `sdktrace` is a valid name.
Why is this needed?
I'd prefer if this was a separate function, but I'm not sure it's worth it.
`strings` is not a list of files, so you can use `serials` instead.
Line is too long. [81/80]
This is the only change that affects this commit.
I think this should be `blockListeners := []ledger.BlockListener{}`
Please remove the readonly and just use `AsyncLocalScopeManager.IsSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupportedSupported
I think this is a little too vague. I think it would be better to use `fmt.Sprintf` instead of `fmt.Error()`
This file is not used anymore.
This is not a boolean, so you can remove it.
These changes are not related to your PR, but it's not a big deal.
This is a bit of a hack, but I think it would be better to have a separate method for this.
We should probably add an `error` here to ensure that the `error` is not available in the context context.
Why is this needed?
I think this is a bug fix.
I think we should be using `Debugf` here.
I think this should be `false`
I think this is a bit of a breaking change. What do you think about `--example-matches STRING`?
Should we use the constant for these tests?
Why not `isort`?
I think this should be `# grant_flows`
I think we should remove the comma here.
Is this the right place for this?
I think we should add a new key to the `logging` field to make sure that the `logging` value is set to `true`.
This is not a good change. The funder was specified at the end of the org_id in the org org org.
I think we should use `StringUtils.isBlank` here.
Why is this needed?
Why is this TODO removed?
This is a bit of a hack, but I think it's better to make this a ` StoreSession` method and return it in the `key` object.
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
I'm not sure if this is the right place for this. The `aws-sdk-s3` flag is used for the `#` case.
This is not a good place to put it.
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
Why do we need to do this?
I think this import is unused.
This is a bit of a hack, but I think it would be better to have a test that checks if `bokeh_version < '0.12.6'` and then check if `bokeh_version < '0.12.6'`
This is a no-op, right?
I think we should be using the `Infof` function here.
This is the main change.
I think this should be `@setup_profiler`
I think we should remove this from the default now.
I think we can remove this now that we are not using the `libseccomp` package anymore.
This is a change in behavior, but I'm not sure why the change is needed.
I think we can remove this function and just call `func FormatList(in)` on the next line.
This is a bit confusing, as it is not used in the code, and it is not used in the code, so I would just remove it.
Why change the variable name?
I think this import is unused.
I think this is a good idea. It's not a big deal, but it's a bit confusing to have a `IHttpParser` interface.
I think we should remove the `navbar-search navbarbar-light bg-light` part from the `navbar-search navbar-light bg-light` page.
Do we need to check for `isLocalhost` here?
Why is this change necessary?
What's the difference between `issubset` and `issubset`?
Why did you change this?
I think we should keep the old version as well.
This is a bit confusing, since it is a `std::cerr` and is a `std::endl`
This is a bit of a hack, but I think it's better to move this check inside the `if` block, and then use `return AST_FATAL` in the `if` block.
This is a change in behavior, but I think it's better to move it to a new commit.
I think this should be `var` instead of `var`
I think this is a good change. It's not a big deal, but it's a bit odd to see the `Headers` function in the `init()` function.
This is a bit of a hack, but I think it's better to have a separate `io.prestosql.spi.ExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternalExternal
This is a bit confusing, as it is used in the `_bad_builtins` package. I think it would be better to just have it be a `_bad_builtins` method that returns the `_bad_builtins` instance.
This is a very generic name. What do you think about `SparkDataRate MinDataRate`?
Is there a reason for this?
I think we should add a label here.
Why do we need to change the default behavior here?
This is a bit of a hack, but I think it's better to have a test that checks for the new `syncset pause` attribute.
I think we should use `Filepath.New()` instead of `.New()`
This is a bit of a hack, but I think it would be better to move this to the `BaseDenseHead` class.
I think this is a good change. I think it would be better to have a test that checks for the case where the exception is not valid.
What about the other options?
I don't think this is the right way to do this. I don't think we should be doing this, but I think we should just remove this test.
This import is unused.
I think we should just remove this line.
I think we should just make the NodeConfig as a variable.
I think this is not needed anymore.
why the change?
I think we should keep the old version as is. We should keep the old version as is.
I think we should add a `addHeaderHeader` method to this interface.
This is a bit of a hack, but I think it's better to make a `*this` here, and then use it in the `auto` block.
I think we should add a `time a node waits between mining successive blocks` and `clock.DefaultPropagationDelay.String()` to fix the problem.
I think this is not needed.
I think we should use `padding: 0` here.
I think this should be set to false by default.
Shouldn't we also do the same for the `tagLock` ?
This file is not used anymore.
I think this can be removed.
why is this needed?
I think this is a breaking change. It's not a big deal.
I think this is a breaking change.
I think it's better to make this method private.
I think we should be more specific here. What do you think about just calling `rescue` instead of `rescue`?
I think this is a good idea. If you want to check the `headers` value, you can just check if the body is a string.
I think we should use `const char *` here.
I think we can remove this line now.
I think this is a leftover from the previous PR.
@jridgewell I'm not sure this is the best way to fix this, but I'm not sure if it is worth it to just import this, and then import it in the `VLibNode` package.
I think this is a good idea. It's not a big deal, but it's not a big deal.
This is a bit confusing, as it will be re-executed when it is executed.
I think this is a leftover from the previous commit.
Nit: I think we should be consistent and use the `name` field here.
We should add a check for the new `DateUtil` instance instead of the new one.
Why remove this?
I think you can remove the `is_single` check and just do `return empty()`
why is this a pointer?
I think this should be `msg.ID.Spi` instead of `state.Proto` since it's a number of bytes.
This is a change in behavior, but I think it would be better to keep it as a property of the `fileCharacteristics` property.
Here we use the logger, right?
I think we should check if the user is not null, and if not, we should check if the user is null.
I think we should use the `Transport` class here.
nit: this should be `declare(strict_types=1);`
I think we should be more explicit about this. I think we should be more explicit about it.
This is a breaking change. I think it should be reverted.
This is a bit of a hack, but I think it's better to move this to a constant.
@nmittler - This is a bit of a hack, but I think it would be better to use `print("%5d\t%s captured"` instead of `print("%5d\t%s`
This is a change in behavior, but I think it's better to be more specific and more specific.
I think this is still not needed.
`many` is a bit confusing, why is it necessary to change the `_` prefix?
This should be `e.LogPersister.Errorf("Failed to apply manifest: %s (%v)", m.Key.ReadableString(), err)`
This is a little confusing, as it is used in the `DynamoModel` class.
This is a very minor thing, but I think we should be able to use `ariaQuery` instead of `aria-query` as the default value for `aria-query`
Why is this needed?
This is a breaking change. I think we should just make the `Trigger` a `triggerCond` and call it `azkaban`.
This was a mistake before.
I think we should just remove the `ProposeDeal` call here.
Why not use `(timeoutMilliseconds) > 0` instead of `(timeoutMilliseconds)`?
Please remove this.
This import is unused.
This is a change in behavior, but I think it's better to use the `id` and `id` here.
This is a little confusing. If the user has a "value" and the "value" key, they are not "value" and they are not "value" but they are "value" and they are "value" and they are "value" and they are "value" and they are "value" and they are "value" and they are "value" and they are "value" and they are "value"
I think we should keep the original value here.
I think we should check if `headingLength > 0` here.
I think we should use the `TaskCLONE_IP__"` constant here.
I think this should be called `onStartSendRequest`
We should add a warning in the error message.
I think this is a good change. It's not a big deal, but it's a bit confusing to have a `EnumeratedPropertyDescriptor` and `CollectionUtil` in the `PropertyDescriptor` package.
This is a very confusing name. It's not a very good name. It's a bit confusing to me.
This is a breaking change. I think we should be using `running` instead.
I think this is a bit of a hack, but I think it's better to have a test that checks for the first messages.
Shouldn't this be `stats_dto`?
I think we can remove this and just use `fmt.Sprintf("%s-worker-0`
I think we should add a TODO to remove this.
shouldn't this be `const` instead of `h['puppetbin']`?
This is a breaking change. I think it's better to keep the `database` prefix as it's used in the `_mapQuery` method.
This is a bit of a hack, but I think it would be better to use `g.Entries.merge(other.Entries)` instead of `g.Entries.merge(other.Entries)`
Do you need to define this include in the OSX file?
I think this is a good change. It is not needed.
Why is this test removed?
We should probably remove the `workspace_` prefix from the `getName` and use `getName` here.
Please use the constant for the string.
This is a little confusing. I think it's better to have a single `ImageToTensor` that's used in the `img` module.
I think we should change the transport to "protobuf" here.
This should be `const writeConcernKeys = new Set(['w', 'wtimeout', 'j', 'fsync', 'wtimeoutMS', 'journal']);`
How about `underlayer`?
Why not just use `return new $factory($factory($container, Translator::class)`?
This is not a valid migration, but it's not a problem.
You should use `is_env_true` here.
nit: this is not needed
I think this should be `nil` instead of `err`.
I think this is a good change. It is not needed.
Defaults to (16, 16). to (i.e.,.,.,.,.,.,.,(w, h). to (16, 16).
I think this is a bug fix. The `commandBuffer` is not a `null` for the `commandHandle` case.
This should be grouped with the other goals.
Shouldn't this be a `std::stringstream`?
Block body expression is on the same line as the block start.
This change is not needed.
I think this should be removed.
Why not just have a helper function that returns a list of properties?
Why are we dropping the `genCount` here?
Why is this a pointer?
Is this still necessary?
I think we should just remove this. We should only do this if `r.Retryable == nil` if `nil` is true.
I think this should be removed.
This is a change in behavior, but I think it's better to move it to a new file.
I think this should be `2.3.0rc0`
I think this should be `AWS IAM` instead of `AWS IAM`
This is a bit of a hack, but I think it would be better to have a test that checks whether the `StructLike` is set to `0` and then pass it to `0.io.Serializable` and then pass it to `1.io.Serializable` and then pass it to `1.io.Serializable` and then pass it to `1.io.Serializable` and `2.io.Serializable`
Is this change correct?
This is a change in behavior, but I think it's better to keep the naming consistent.
I think we should be using `isDebugEnabled()` here.
I think we should change `volume` to `volumeField` in the `volume` parameter.
This is a breaking change. I think we should leave it as it was.
This should be `0.1.0`
This should be `from google.cloud.security.common.gcp_type import resource_util`
This should be `--ignore-errors`.
This is a breaking change. I think it's better to keep it in the `switch` statement.
This is a bit of a hack, but I think it would be better to have a method that returns the value of the HIPInternal.
I think we should use the `PluginsConfigs` field here.
I think this is a bug fix. The `probeSvr` is not a `probeSvr`.
Why not just call `Get`?
I think this should be `ZeroAddress.ZeroAddress`
This is a bug fix.
I think we should not have to do this. The user can do it for the "check" node.
This is a breaking change. The `getNamer()` method already has a `get iotFieldName` method.
I think the `-` should be in the first position, not here.
I think this should be `else if`
nit: move to line 8
This is a breaking change. The `<=` is not needed.
This is a test, I don't think it's necessary to change it.
I think this is a little too vague. What do you think about `map[string]string`?
This is not needed anymore.
This is the only change that affects the error message.
@franckc @bvaradar is it possible to have a backoff window within which we try to MD server?
Just wondering, why do we need to change this?
This is a wrong thing. The plugin should be loaded in the `if ($pluginPath)`, not the plugin.
Why not just `isSafeMode` ?
I think we should just remove the try-except here.
This is a no-op, but the `errs` was not being used.
I think this is a good change. The `assert` method should be called `mrb_str_new` and `mrb_str_new`
Why was this removed?
I think this interface is not used.
Is this change necessary?
I think this should be `.user(args).count { |arg| user_hash[:"#{arg}"] = send(arg) }`
Why not `@out_variant = TRUE.get("nullable", @out_variant);`?
I think this is a good idea. If you want to create SDK client, you can just create SDK client, and then create SDK client, you can create SDK client, and create SDK client, you can create SDK client
This is a change in behaviour. We should probably fix it in a separate PR.
This should be added to the other goals, not here.
I think it would be better to use a `block_processor_batch_size` here, and have it take a long time to create a new one.
This is a breaking change. It's not a big deal, but it's a bit confusing to have a single property on the client. I'm not sure if this is the right fix.
This is the only change that affects the `instanceof Run` command.
I think it's better to check for the name of the function and check for the name of the function.
I think this is a good change. It's not a big deal, but it's a bit odd to have a function that returns a name.
This should be removed.
This should be `need_unmap`
I think this should be `panic`
I think we should use `acquireTopologyCacheLock` here.
I think this is a little confusing. I'm not sure if it's worth it to have a `h.Dispenser` instance, but I'm not sure if it's worth it.
why is this cast needed?
Why remove this?
I think this should be `query.visit(v)`
I think we should use `sonm.Total` here.
I think this is a little too vague. I'd rather have a separate if block on a separate line.
I think we should keep this and just remove the `AWS IAM` parameter from the `ThrowUser` and `ThrowUser` parameter from the `ThrowUser` and `ThrowUser` both here and in the `ThrowUser`?
I think this is a good change. It's not related to this PR, but it's not related to this change.
I think this should be `@exclusion_patterns.any?`
This change is not needed.
I think this should be imported before `from mitmproxy.version import *`
This is a breaking change. We should be able to make the `BaseSpan` package private and use it in all places.
Why are we not using this?
I think this is a good place to put this.
this is a bit of a hack, can you fix it in a follow up PR?
I think this is a leftover from previous PR.
Maybe we should add a link to the issue about this and link to it.
I think this test is failing on Windows. The `<=` test is not working.
I think this is a bit of a hack, but I think it's better to just use `None` instead of `None` here.
This method is not used anymore.
I think this should be a different name, since the default value is `-1`
can you use a print instead of print?
I think this is a breaking change. I think we should just make the `CodeFlow` be `internal` and use `CodeFlow` instead.
I think we should import the `config` module from the `config` module.
I think this should be close()
I think we should just remove the `accounts` argument here.
I think this should be `!this.storage.config.localList.get().map( function( package ){ return { ref: package, score: 1 }; }`
This is a change in behavior, but I think it's better to move it to the `if (beanCls != null)` check above.
Is it possible to have a constant for the manifest?
Why do we need to change the type of `str` to `Iterable`?
I think this should be `public`
This is a breaking change. The `Payload` field is not being used anymore.
I think we should make this a `Map`, to avoid the need for a new `Map`
@mattcaswell, I think this is the right change. I think we should move the `clientset.Interface` to `goimports` and change the `goimports` to be `goimports`.
I think you can just do `if not class_agnostic: `
I think we should add a constant for this property.
Why do we need to pass the enum directly?
I think this is a good change. I think it's better to move it to the `@previous_document` class.
This is a bit of a hack, but I think it's better to have a method that returns a `dict` instead of a `dict` object.
Should this be `REG_##reg_partial`?
I think we should use `div_path` here.
Line is too long. [104/80]
Should we add a `map[string]string`?
Why is this import changed?
I think this should be `debug`
this is not needed anymore
I think this should be `if (is_CORES && !is_CORES)`
I think we should add a link to the issue about how we handle the case where we're trying to get the link to the issue.
I don't think this is needed.
This test is not related to the PR, but it is not related to this PR.
We should add a TODO to remove this and the other one in this PR.
This is a breaking change.
This should be `pkg/util/byteutil`, not `pkg/util/byteutil`.
I think this should be `constexpr`
This is a little confusing, as it is a bool that is a bool.
This is a bit of a hack, but I think it's better to move it to the `_set_load_status` method.
this is the only change that affects the API. I think we should keep it as true as the default value.
This is a bit confusing, as it is the same as the one below.
so glad we're removing this spec?
I think we should use the `caddy_rewrite_original_uri` constant here.
I think we can remove the `CertificateOutputFormatCombinedPEMKey` function now that we have the `CertificateOutputFormatCombinedPEMKey` function.
Why was this removed?
I think this is a leftover from the previous PR.
Should we also check if the `filter.ByBanned != nil`?
I think this should be moved to the `if (get_git_info_sha() && get_git_info_sha()) {` block above the `else` block.
This is a little confusing. What is the intent of this code?
Standards: Please add braces to this condition.
I think this should be `window.location.href`
I think you should check if the part is not part part?
This is a breaking change. I think it's better to have a test that checks that the result is not the same as the one that is being used.
Why is this method public?
This is the only one that is used for the `r-devel` package.
@deads2k @tnozicka this is the only change that will need to be fixed in this PR.
I think we should not have this in the `foreach`, because we are not doing that in the `performanceTestSample` method.
I think this is a breaking change.
You can remove this line.
This is not a public API, so I would just add it to the `@access` annotation
I think this should be `!(ret && ret.options && ret.callback)`
We don't need the `admin` action here since it's only used in the `have_css` action.
Do we still need to keep these old versions?
Is this a change in behavior? It seems like it would be a good idea to have a test for this.
I think it would be better to use `updateSymbols` here instead of `out`
I think we should move this to the top of the file.
This should be a `edges_tab`
I think we should remove `_base_repository` and `_base_repository` from the `mypy` module.
Please add `Specifies the SSH2 subsystem.`
This is a bit of a hack, but I think it's better to have a test that checks if the value is not set.
I think this is a leftover from the previous PR.
Can we remove this file?
(style) line over 80 characters
This is the only change that affects the `SectorSize` field.
Should we also add a `extdataplane` to the `README.go`?
@smarterclayton do we need to set the default value for the `SecurityGroupOverrides`?
I think we should use a more specific name for this.
I think this should be `el.tabIndex > -1`
I think we should use `mne.utils.services` instead of `mne.utils.services`
Shouldn't this be `sensitive.value`?
This is a little confusing, since we're using `encode` in the `__main__` function.
Is this change related to the PR?
should this be `shared_context` instead of `each`?
what is the motivation for this change?
I think this is a leftover from the previous PR.
I think we can just remove the `Http2` prefix from the interface.
I think we should just remove this, since it's not used anywhere else.
I think this should be `if (pAllocateInfo) > 0.0f`
I think we should be able to remove the transactionLastValidRound here.
This is a little hard to read. I think we should be able to just use `header.TransformerHeight` here.
This class is unused.
This is a good place to put this. The `!ImmutableRootMetadata` function is not actually used.
I think we should use `<` instead of `>`
Why are these changes necessary?
This is a separate change, but I think it's better to keep it as it was.
This is not needed.
I think this should be moved to `_format_msg`?
The `@SuppressWarnings` annotation is not needed, it is already used in the `Map` class.
I think this is not needed.
This is a bit of a hack, but I think it's better to just remove the `fetchMock` variable and just do `globals: {` on the `fetchMock` variable.
This is a change in behavior, but I think it's better to use `Object.equals(mFolder)` instead of `Object.equals(mFolder)`
Use the new Ruby 1.9 hash syntax.
you don't need to pass the user here, you can just pass the user as the first argument
This is a change in behavior, but I think it's not necessary to call `.backup()` on the `if` statement.
Can we use `Config.getServiceCustomFallbackEndpoints(404)` instead?
I think we should remove this path.
This is a bit of a hack, but I think it's better to move the `start` call into the `Set` method.
This is a breaking change. We should probably fix it in a separate PR.
This is not correct. `other == null || getClass() != other.getClass() {` is the default value of `other instanceof PartitionField`.
This is the only change that works. I think this is a good change.
This should be `scopes`
I think we should change the field name to `label` and `disable` to make it more clear what the field name is.
This is a bit confusing, as it is used in the listing.
What is the reason for this change?
This is a bit of a hack, but I think it would be better to check for `Count()` in the `try` block.
This should be `@param[in]...`
We should add a `json_defaults` attribute to the `<input type="tel"` and `<input type="json_defaults"` so that we can get rid of the `input` attribute.
This is a bit of a hack, but I think it's better to just do `if ($("input:radio[name='ncr_proposal[expense_type]']").click(function(event){` instead of just `if ($("input:radio[name='ncr_proposal[expense_type]])`
I think we should add a `default` here to make sure we don't have any files that are not in the code.
This is a bug fix. The `an.estimate` is not a `Data` object, so I would not change it here.
Why is this here?
You can remove this line.
This is a little weird, why do you need to check `_address`?
This is a bit of a hack, but I think it would be better to move this into a `if not os.path.join(os.path.abspath(entry['directory'])` block, and then just use the `abspath` variable here.
This is a bit of a hack, but I think it's better to have a separate function to return the error.
The docstring for this function is not really helpful. It's a little confusing to have a docstring for it.
Why do we need to pass the full list here?
Why is this change necessary?
I think we should add a new event handler here.
Why did you change this?
I think we should log the port here.
This is a change in behavior, but I think it's better to move it to a separate commit.
I think this should be `if subs != "" {`
can you use `go.opentelemetry.io/api/core` instead of `go.opentelemetry.io/api/registry`?
I think this should be `compute.max_rows` instead of `compute.max_rows`
I think we should add a `before_tests` function to the `resource-groups` module.
I think we should remove this import.
I think this should be removed.
This is a breaking change.
Why is this change necessary?
I think this is a little too vague. We should probably have a look at the implementation of `Insight_DataPoints` to avoid the `Matrix` field.
I think this is a bit of a hack, but I'm not sure if it's worth it to make the `summary_data` return a `0` instead of a string.
This is a bit of a hack, but I think it's better to use a `.setVisible(FeedMedia) media` instead of a `.setVisible(FeedMedia) media`
I think this is a bug fix. The `spec.HasSuffix` should be `""`.
I think we can just use `return d.empty || atomic.LoadInt32(&d.used) != 0`
This is a bit of a hack, but I think it's better to move it to the `canList` method.
I think this should be `_lastDomChildSibling` instead of `_lastDomChildSibling` because it is not actually used anywhere else.
I think this is a leftover from debugging.
I think this is a good change. It's not a good idea to have a separate API for the API. The API should be updated to reflect that the API is not the case.
Why is this nullptr not needed?
Can you use the `rebuild_instances` function here?
This was the only place where we used the `Status` in the `ChainBlockStatus_DEPLOYMENT_BLOCK_RUNNING`
This is a change in behavior, but I think it's better to move the `if (explictRole) {` check inside the `if (empty)` block, and then just call `getAttribute('title') || !!!!!!!.labelVirtual(virtualNode) || !!axe.commons.text.sanitize(title) );`
I think this is a leftover.
I think this should be `if not self.available_slots > 1`
I think this is a bit of a hack, but I think it's better to move it to the top of the file.
I think we should remove this and just do `return version(mver.GetVersion())` in the `NewResourceVersion` method.
Can you add golf!
I think this is a leftover from debugging.
I think this is a bit of a hack, but I think it would be better to just do the whole thing in the `if` statement.
is this false now?
I think we should use `////` here.
This import is unused.
This is a bit of a hack, but I think it's better to move this into the `createLogConfig` method.
Can we make this a `let` instead?
I think this should be `clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->clear->
This is not the only place where we need to support the modeled host prefix.
Why is this needed?
I think this should be `newopts.password = ""`
you can remove the file from the file
I think we should just remove this TODO.
What's the reason for this change?
Is this change related to the current change?
I think this should be `<=`
This is a bit of a hack, but I think it's better to be explicit here.
I think this should be `volatile` instead of `volatile`
I think we should just fix the `transaction.getSender()` method here.
I think this is a breaking change.
Shouldn't we do the same for `Sdk.SetSet(Sdk.SetExporter(promExporter))` ?
This is a breaking change.
I think we should just remove the `Passed` argument from the span and remove the `Context` parameter from the span.
I think this is a leftover.
This is a change in behavior, but I think it's better to move it to the top of the file.
I think this is a no-op, right?
I think we should be using the `resource.StatusStatus` here instead of the `resource.StatusStatus` above.
Is there a reason for not using `gofmt`?
This command isn't really needed.
Hmm, this is a change in behavior. We need to make sure that the `stpb` is not present in the `lib/go` folder.
`handle` is a string, so you can just change the type to `win.handle`
This TODO can be removed.
Can we just use `ctx.Handle(404, "Unsupported", nil)`?
I think this should be `return;`
Should we change this to `flash.now`?
I think this should be `__construct($controller, $logger);`
I think we should just remove the first test and just check if the value is `None`
is this a bug fix?
What's the reason for this change?
Why is the `Errno` not `EPERM`?
Please add a check that the new version is not available in the new version.
Would it make sense to move this to the `getSelectorEntries` method?
I think this should be removed.
I think this should be a separate PR
I think this should be in `tablist/list/`
I think this should be `t.timestamps null: false`
"Whether to generalize image using Windows Sysprep."
I think this should be `0.0`
Can you explain why this change is necessary?
I think this should be in the group below.
I think we should remove the check for errors.New("nonempty AuthAddr but rekeying not supported")
I think we should just remove this, as it's not used anywhere else.
This is a bug fix. I think we should not remove the `nextBoolean` check.
Why is this change required?
This should be `-1`
I think we can remove this completely, since it's not used anywhere else.
You can use lambda here.
I think we should change the name of the variable to `-1` and `-5` to make it clear that the name is not `-1`
This method is used only once, and the method is only called in one place.
I think we should use the same name for the enum.
This is a change in behavior, but I think it's better to use the `assert_offset += file_size` variable here.
I think this is a bug fix.
I think this needs to be `Microsoft.Naming`?
The `xwayland` is not needed here, because it is already checked in `server`.
It's not necessary to change this?
this import is no longer used
Is this change required?
I think this should be `zfs.py` instead of `zfs.py`
I think this should be `@environment` instead of `@environment`
This is a little confusing, as it is a `allowOptionalMappings` property.
out_channels (int) The number of input channels are optional.
I think this should be `@Export("inventoryQuantityFormat")`
I think we should add a TODO here to make sure we don't have udsServer and udsServer as part of the time we get the time we get the time.
I think we should use `findById` here.
This is a bit of a hack, but I think it's better to have a `boolean` statement here.
I think this should be `git rev-parse HEAD 2>/dev/null`
This is a bit of a hack, but I think it's better to use `findfind` instead of `is` for the same reason.
This is a bit of a hack, but I think it's better to do it in a separate PR.
This is a breaking change. I think it's better to move it to the `dumpEnvOutputOnFail` function.
This is not a good idea, it should be `itNegLogLikelihood`.
I think it would be better to check if the TOKEN_KEYWORD is NULL here.
This is a change in behavior, but I think we should be able to remove the `ReadAsync` call here.
Nit: I think this is a bit confusing. `file_exists` is the `const TCHAR` and `const WCHAR` are the same.
Can we make this `envName`?
I think we should be able to remove this function and just use `setAnnotations(annotations)` in the `SetAnnotations` method.
This is a bit of a hack, but I think it's better to move it to a separate PR.
I think this should be `break`
This is not needed.
I think this is a bit of a breaking change. What do you think about just doing `key != nil && key != nil && key != nil && key != nil`?
This should be `from selenium.common.exceptions import ElementNotVisibleException`.
You can use `state.putExtra(state, state);` here.
I think this is not needed.
This is not needed anymore.
Why is this change needed?
If the `ApplicationGitPath` is not used anymore, then we should remove it.
I think we need to add this to the `*tls.Config` and `*tls.Config` to the `*tls.Config` struct.
This is a duplicate of the existing one.
This is a bug fix.
I think this should be `!rawErrorData.get(CLASS) == null`
This is a bit of a hack, but I think it's better to have a `WithWithInitAddress` function that returns the error.
`handle` is a string, so you can just change the type to `win.handle`
I think this should be setZoomFactor(fact) instead of setZoomFactor(fact)
Why do we need to change the default behavior?
I think this is a little too vague. I think it's better to just remove the `Ready()` call, and just have it return the `Results()` call.
Why not `public`?
Why not use `Engine` directly?
This is a breaking change. The `awserr` is not a `err` in the `awserr` package.
Please revert this change.
Why not keep the original version?
I think this should be done in a separate PR, but I think it's better to have it in a separate PR.
I think this is not needed.
This should be `info`
what is the meaning of this line?
Why do we need to pass the `_viewsContainer` as a parameter?
Why is this needed?
I think we should be able to use `get_holdingpen_objects` here.
This is not needed.
This is not needed.
this is not needed anymore
I think we should use `LOG(THREAD, LOG_INTERP, 3, "Detected AVX-512 code in use\n")` here.
this is not needed, we have a VM files in the VM, so we don't need to make a new VM in the future
I think we should also add `k8serrors` to the `apimachinery` package.
I think we should be able to use the `Video` attribute here.
I think this should be done in `DeadlineExceeded` instead of `timeout`
Is this a bug fix?
Please avoid using wildcard imports.
Why is this changed?
This is the only change that affects this PR. I think we should move it to the `package.json` package.
I think this should be `return System.currentTimeMillis();`
This should be reverted.
"Compute service account to be used by importer. When empty, the Compute Engine default service account is used"
This is a change in behavior, but I think it's better to keep it.
This is a change in behavior, but I think it's better to keep the `<a>` tag here.
I think we should also check for `numpyImage` here.
This is the only change that affects this PR. I think we should change the `s.Vars` to `s.Workflow` instead.
Use `%d` as deep as `.to_s` and `.month` key instead of `%d`.<br>Line is too long. [90/80]
It's not clear to me why this import is necessary.
Why not use `*` here?
Why is this needed?
This is the only place where we need to log the log.
should we make a print_event and use that instead?
I don't think we need this. We already have a `Error` in the `Error`
Use the new hash syntax `if` statements
This is a leftover from the PR.
This is a change in behavior, but I think it's better to move it to a separate commit.
Why not just use `Run` here?
This should be removed.
I think we should not have the `if` here.
I think this should be `imated_imated_imated_imated_imated_imated_imated_conv`
Why is this removed?
I think this is a leftover from the previous commit.
Why not just remove the file?
The docstring for `matcher` is a bit confusing. I would say `path` is a bit confusing.
Why is this change required?
Can you explain why this is needed?
I think this is a bug fix.
I think we should add a `@Nullable` annotation here.
We should probably have a `identity dto_discovery.Identity` function that takes a `linklink` and then pass it to `linklink` and then pass it to `snake` and `snake` to `snake` and `snake`
I think this should be done in a separate PR, but I think it's better to move this down into the `if` block.
I think this should be `DEFAULT_ptr<RWMol>(SmilesToMol>(m->getNumAtoms() == 7).updatePropertyCache(strict);`
Why is this change necessary?
I think this is a good change. It makes the code harder to read.
I think this should be `layers.append(l.__class__)`
I think this should be done in a separate PR, but I think it's better to move this logic into the `SwarmTagUidHeader` class.
I think this is a debug log.
I think the `1` is not needed here, since the `org_letters` is already in the `1`
If we're not using the namespace, we should use the `name` field.
I think this should be `return -1`
This is a bit confusing, as it is in the `CreateParameter` method.
Can you please change the order of the parameters to be the same?
I think this import is unused.
This is a bit of a hack, but I think it's better to have a test that checks if fb is empty.
This is a change in behavior, but I think it's better to keep the `if` statement.
@wido Can you confirm that this is the only place where we want to make sure we don't have any other configs?
why remove the extra param?
this is not needed anymore
This is a bit of a hack, but I'm not sure if this is the right place to put this. The `auto *qa` is not really needed.
I think it would be better to use a `bool` here instead of a `bool` for the `wlr_output_base_present`
I think we should be able to use the `-` here instead of `-` as the value.
Why not using a setJsonParameters?
Why is this check needed?
This import is not used.
Is this a typo?
This is a bit of a hack, but I'm not sure if it's worth it to just say `^` or `^ server started successfully. Try pointing a %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s
I think this is a good change. The current ref should be the same as the current ref, not the current ref.
here we should use `self.semantic_feat` instead of `if c.shape[0] > 0`
why did you change this?
Another one out-of-order after the substitution.
I think we should add a new function to the interface to make sure the name is not empty.
This is a bit of a hack, but I think it would be better to check for the `-1` parameter instead of just the `-` parameter.
This is a very minor thing, but I'm not sure it's worth it.
Why not `lines`?
This is a bit of a hack, but I think it's better to move it to a separate PR.
I think we should add a warning here.
This is a breaking change. The `req.CommRs` is a `Color` function.
I think you can just use `pageSpeedLink` here.
I think we should change the version to `id` and `service` to be consistent with the other changes in this file.
I think this is a good change. It's not a good idea to catch any exceptions in the future.
This should be `utilities.print_info('Installing role dependencies ...')`
I think it would be better to move this above the `_set_load_finished` function, and move the call to `_set_load_finished` above, to keep the call to `_set_load_finished` in the `config` method.
Why are we removing the `projectsIdentityPartitionColumns` variable?
The `GET` is not needed here.
I think this is the only change that is needed.
remove empty line
This method should be renamed to `ToggleFlagLongClickListener`.
This is a bit of a hack, but I'm not sure if it's worth the familiar enough to check for NULL here.
I think we should add a `ClientMaxSendMsgSize` to the `ClientMaxSendMsgSize` and `ClientMaxSendMsgSize` to the `ClientMaxSendMsgSize` and `ClientMaxSendMsgSize` to the `ClientMaxSendMsgSize` and `ClientMaxSendMsgSize` to the `ClientMaxSendMsgSize` and `ClientMaxSendMsgSize`
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think you meant `import integration` here.
This is a no-op, because it's a list of bboxes to roi format.
Why did you change this?
I think this should be a separate PR
I think we should just remove this field.
why is this needed?
I think this should be `!=null`
This import is no longer used.
This is the only change that affects the call to `PrepareToStop` to ensure that the call to `remainingTime` is not in the middle of the function.
I think we can get rid of this `if result.stdout.empty?` and just do `unless result.stdout.strip.empty?` instead of `unless result.stdout.strip.empty?`
I think this is a good change. The `isStdLib` method is only used in the `isStdLib` method, so we should probably just remove it from the `isStdLib` method.
This is a breaking change. I'm not sure why you did it.
This is a breaking change. It's not a big deal, but it's a minor thing.
I think this should be R isNaN
why not `DockerLabels`?
`stream` is not used.
I think we should just call `c.buildActions` here.
This import is unused.
I think this should be `if ($this->getScopes() as $scope) {`
I think it's better to use `cniNet` as the default.
I think this is a good change. It's not a big deal but it's a bit odd to have a `computeIfAbsent` method that takes a `QueryConverter` as a parameter.
I think this should be `backendConfig`
shouldn't this be `<=` ?
This is a bit of a hack, but I think it would be better to have a test that checks for this and then pass it to the `controller_resolver` field.
This is a very minor thing, but I think it's better to have a single `__call__` method that returns a dict of `__call__` and then use that here.
I think this should be `if (!success || !registerEvent(event, node)) {`
I think this is a good change. It's not a problem, but it's a little hard to follow.
This should be removed.
Why is this struct needed?
This is a very odd change. I think it would be better to have a separate PR to fix this.
@smarterclayton do we need to do this anymore?
I think we should add a note about this to the docstring that it's not actually useful.
Why are these added?
This is not needed, as the class is already private.
This is a change in behavior, but I think it's better to move the `else` statement to a new line.
I think we should just remove this method and just use `testSuites.forEach(testSuite => {...}` in the code.
I think you can just remove this line, since you don't have to pass `--test-launcher-jobs`
I think we should also add the `buildInfoLogCxt := log.WithFields(log.Fields{0}` to the `GOMAXPROCS(0)` in the `buildInfoLogCxt` and `buildInfoLogCxt` to the `version` command.
I think this is a typo
This is a bit of a hack, but I think it would be better to have a separate function for it.
The hostname hostname structure is a little confusing. How about `--storybook-host=http://`?
`std::string &null` is not defined.
this is a nil column, so you don't need to pass @attributes
I think we can remove this line.
This should be added to the other PR.
We should probably remove this.
I think this should be `config.empty()` instead of `in`
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
This should be `TESTS.PartitionPartitionTests`
`bundle` is not null. `parameters.Count() == 0` is the default.
Why is this needed?
I think this should be `session.close()` instead of `session.close()`
Please remove the empty line here.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think we should use `CharUnaryOperator` instead of `append(element)` here.
I think this should be `custom_imports`
the question[:text][0] is not defined as the index on the component. can you please check the question?
I think we can just use `getInput(name, context, this.preload)` instead of adding a new method.
Is this used?
I think this is a leftover from debugging.
Why are we doing this?
This is a bit of a hack, but I think it's better to just use `self.location.pathname || '';` here.
This is a change in behavior, but I think it's better to have a test that checks for the `ErrWorkspaceNotFound` property.
I think we should remove the `ShutdownAsync` call here.
This is a bug fix.
This is the only change that affects the stats sent, so I removed it.
This is a good place to put this.
Is this change necessary?
Why not just make this `size int`?
This should be `github.com/mitchellh/go-homedir`
This is a bit of a hack, but I think we should probably just remove the `newboard.NewClient()` here and pass it to the `newboard.NewClient()` so we can get rid of the `newboard.NewClient()` function.
I think this should be `initStreams`, since it's not a special case.
This should be `declare(strict_types=1);`
I think this is a breaking change.
This is a breaking change. I think it's better to just use `.format_exception_only` here.
I think this is not right. It's not a good idea to use Number.MAX_SAFE_INTEGER. It's a bit of a hack to have a test that checks for this case.
What's the thinking behind removing headManifests here?
why do you need this?
I think this should be `if ra.actions == nil`
I think we should just remove this TODO.
Why did you change the default value of `1` to `1`?
This is a very generic name. I'd rather not have it as an option.
I think this should be `void close()`
This should be a separate function.
Can we just remove this? It's not used anywhere else, and it's not used anywhere else.
This is the wrong place for this.
I think we should check for `Map<string, String>` here.
Why did you change this?
This is a change in behavior, but I think it's better to move it to a separate commit.
This type is used in a couple places, and I'm not sure what the best thing to do is.
Why not use ArraySegment here?
Why? I don't think we should be using this for all versions.
Please revert this change.
The `debug` class is not used anymore.
I think this should be `handlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandlehandle
I think this is not right. It should be `association' && in_array($metadata['serial_TO_MANY, ClassMetadataInfo::MANY_TO_MANY)`
This is a bit of a hack, but I'm not sure if it's worth it to make it a bit more explicit.
I think this is a bug fix.
I think this is not used anymore.
I think we should just use `global.googlesitekit` here.
This is a bit of a hack, but I think it would be better to move this to a separate function.
Hmm, I think this is a good change. I'd rather not do it in a separate PR.
I think we should use `\n` here.
This is a breaking change.
@jridgewell I think this is the right place for this.
Why is this function needed?
I think we should check if the cluster is a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with
I think this is a no-op, right?
Why change this to `*v1beta1`?
I think we can also add index: true here.
@smarterclayton do we want to consider the `blockData` and `discoverData`?
This seems like it should be `true` for the `Config` case.
Nit: Move this to the top of the function.
I think we can remove this line now that we're using it in the `get_package_name` function.
Is there a reason why we're removing the "{\"org\":[]?
I think we should remove this line.
I think we should remove this line.
typo: vestigial -> vestigial
I think we should also check for the 3.13 here.
I think this should be debug.
This is a no-op, but I think it's better to be explicit here.
This file should be sorted alphabetically.
I think it would be better to have a method for this as well.
This is a bit confusing, as it is used in the `.get()` method.
Can we remove this?
I don't think this is needed.
This is not needed.
Should we just call it `clientSecret`?
The new flag for this is `--file-name` (and the new flag) as well.
I think this is a bit of a hack. It's not a problem, but it's a bit of a hack. It's a bit of a hack, and it's a bit of a hack, so I'm not sure what the best way to fix this is.
This needs to be `const` rather than `||`
I think this should be `mpl_renderer.comms['default'] = self.default_comm`
This is a bit of a hack, but I think it's better to move this to a separate function.
I think we should just delete this and delete the metadata file from the system.
@jmhooper @mitchellhenke would you mind adding a note here to make sure this is only used in the tests?
The `GET` is not needed here.
Should we check if the name of the iframe is not found?
Is this related to the change?
Line is too long. [81/80]
This is a bit of a hack, but I think it would be better to check the result of the `pos` variable and then check the result of the `pos` variable and then check the result of the `const` at the end of the method.
We should probably log the exception here.
This is a bit of a hack, but I think it's better to move it to the `app/views/image_content` file.
This is the only change that affects the `loadLoginPage` call.
"to" is a bit confusing, why not just "to"?
I think this is not needed anymore.
I think this test is still testing the actual implementation of the headers, so I think it should be removed.
I think we should use `parseConvert` instead of `types.Uintptr` here.
This is a change in behavior, but I think it's better to just make this `if (ApplicationError)` and make the `==` statement return an error.
This is a bit confusing, since the `mapTo` is a `string`, and the `string` is a `string` and the `string` is a `string` and the `string` is a `string` and the `string` is a `string` and the `string` is a `string` and the `string` is a `string` and the `string` is a `string` and the `string` is a `string`
I think this should be `go-sqlite3`
this change is not needed.
Please remove the space between the last `,` and the closing paren.
Why is this needed?
This is a breaking change, and I'm not sure if it's worth it to make it more explicit.
This should be a separate PR
I think this should be removed.
Why did you remove the `auto` here?
Why is this needed?
You should use `order_by` here.
I think this should be `prime-maintain`
This should be a static import.
I think this should be called `user-signer-endpoint`.
I think this should be `type=('build', 'run')`
I think this is a leftover from the previous PR.
I think this should be done in `dashboard_to` callback.
This class is not used.
@stuartwdouglas I think this is the right place for this.
I think this is not needed anymore.
I think this is not needed.
I think this is not needed, since we only have one place where we have two different instances of the same thing.
I think this is not needed anymore.
Shouldn't this be "RetrySettings"?
I think we should add a `Load` method to the interface and get the result from the `Saver`.
I think this can be removed now, since it's not used anymore.
I think this is a bug fix.
I think you can remove the `CreateDispatcherForGRPCOutbound` now that you're using it directly.
We should probably use `LOG.finest` here.
This is a bit confusing, as it is used in bin_safe. Maybe we should just make it a bit more specific, like `format_index`?
I think this should be a constant.
I think this should be `self.isNotified()`.
I think we should just make this an `LogManager.Flush` and call `LogManager.Flush(0)` in the `LogManager`
I'm not sure this is the right fix. The `U` is used for the `F` field.
I think this is a good change. But I'm not sure if we should change the other way around.
This is a test, but I think it's better to move this to the top of the file.
I think we can remove the castToDouble now, since we are now now passing the cast to Long.
Is this needed?
I think you can remove `toList` entirely.
I think we should add a `TODO` to make sure we don't have to.
I think we should not have this in the `width` block.
I think we can remove the `WaitForAllTxnsToConfirm` call here.
This is a bit of a hack, but I'm not sure if it's worth it to make the change here.
This should be `instance`.
I'd prefer to keep the imports sorted (as it is used in the `__init__.py` files)
Why is this check needed?
Please use `import pyspark.sql.functions as F`
I think we should use `*ResourceFunc` here.
I think we should move this to the `vol` block so that we can get the same error message.
I think this is a good change. It's not related to the fix, but it's not a problem.
I think we should just remove this and just do the `RefreshInterval` check inside the `if` block.
Why do we need to include the `mmcv.ops`?
I think this is a bug fix.
I think we should just delete this line.
I think we should check if the user has the `ResolvedWriters` value and not the `r.h.ResolvedWriters()` value.
Why not use `errors` here?
why change this?
I think we should use `topology.description` here.
remove unused import
This test is not related to your changes, but I think it should be removed.
@lisasy you should add a note that this is not a problem.
I think this is not the right place for this. The `@throws` is not the correct method.
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.
I think this is a good change. It's not a big deal, but it's not a big deal.
`_` is not used in this file.
Shouldn't this be `won_home`?
This is a no-op, right?
Can you add a note to the docstring about what the user is doing?
Metrics/LineLength: Line is too long. [123/120]
I think this should be done in the `if (ctx instanceof Activity)` block above
Can we add a `ctx.Handle(500, "RefreshRepositoryMirror", err)` here?
I think we should use the cache cache here instead of the cache cache.
I think this should be `LOG.finest(String.format("XPUB binding to %s, XSUB binding to %s", xpubAddr, xsubAddr));`
This is a bit of a hack, but I think it's better to do it in a separate PR, and then do it in a separate PR.
I think we should use `govet.Flow` here.
This is a bug fix.
This is a bit of a hack, but I think it's better to have a test that checks for the new type of `AbstractJavaAccessTypeNode` and `AbstractJavaAccessTypeNode` to be a `AbstractJavaAccessTypeNode`.
I think this should be `https2AuthorityPseudoHeaders = []string{`
nit: can we just use `.then(() => expect(client.topology.s.sessionPool.sessions).to.have.length(1))`
I think this should be `Preconditions.checkArgument(configProto.getTemplatesCount() == 1)`
Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is a little confusing, since we are using the `TRAVIS_OS_NAME` variable in the code.
Why change this?
I think we should use the "MutableUserDetails" helper here.
This import is used by the test.
I think we should remove this.
This is a bit of a hack, but I think it's better to have a test that checks for `QItemSelection` and `str` that is not `None`
I think this should be moved to the `try_lock_shared()` method.
This is a bit of a hack, but I think it's better to just have a test that checks for this in the test.
This import is unused.
I think this is a bug fix.
This file is not used.
I think we should also add a `case` struct.
Not sure if this is correct. The `cli` variable is not needed anymore.
so glad we're removing this spec?
This is a change in behavior, but I think it's better to keep the original function.
I think it's better to use `@public_plan` here, since it's a new one.
Why is this being removed?
This is a bug fix.
This is a breaking change. It is not used anymore.
Why not just call it `CASDefaultCstor pool_IO_DEFAULT_CSTOR_SPARSE_POOL`?
I think we can just call close() here.
I think this can be simplified to `||=`
This class should be renamed to `declare(strict_types=1);`
Please don't use `import datetime` imports.
I think we should use the `init_DRIVER` constant here.
This is a bit confusing, as it is a `const` statement.
This test is failing because `fileServer.Pages` is not being used.
Why remove the `operator` here?
Why not just use `const ServiceType = "wireguard"`?
I think we should add a `git grep` attribute to this list.
I think this should be `index[0]` instead of `index[0]` as we already have a type for the `index` value.
This is a change in behavior, but I think it's better to move it to the `Header` class.
Why not use a `&&` here?
I think this should be in a finally block
This is a little confusing, since it's a `const ItemType` and it's a `const`
I think this should be a separate commit
It's not clear to me why we need to check for NULL here.
I think this should be `date = Time.now.utc.strftime("%a %m/%d/%y (%Z)`
This is a no-op, right?
I think this is a bug fix. We should not be able to remove the `SplitOptions` here.
I think this should be `this.hot.isRtl() ? 'right' : 'left'`
I think this should be `os.Stat(path)`.
I think this is a good idea. It's not a big deal, but it's a bit odd to have a `Map` class that we don't have to do this.
I think this is a leftover from the previous PR.
Why change the id to `''`?
I think this should be `getState()`.
I think we should remove the `io_time` here and just do `_time = r._value, io_time`
Should we also check for `app.SiteLocalSettingsPath`?
This is a pretty generic name. It should be `get_package_registry`.
Is this really needed?
I think this is a bit of a breaking change. Can you add it to the other PR?
Why did you remove this?
We should probably log the exception here.
I think this is a bug fix. We should not be using the default version here.
Why is this message deleted?
I think this should be `flb_plg_error(ctx->lua->state, -1);`
This should be `dest='poppler'`.
this is not needed
Is this change intentional?
I think it would be better to add a docstring here that it's not a bigquery dataset, and it's a little confusing to me.
Is there a reason we need to return `nil` here?
We should probably be using `finest` instead of `info` here.
why change this?
This is a bit of a hack, but I think it would be better to have a test that checks for null values and then check for null here.
I think we should change the name of the variable to `paginated`.
Is this related to the PR?
I think we can remove `child-action` from `config` and use `config.deepcopy()` in the `config` package.
You can use `fmt.Sprintf("nodes")` here.
This is a bit of a hack, but I think we should probably have a look at the `if` statement here.
Why was this removed?
This should be `samplers.pseudo_sampler`
remove the empty line
What is the purpose of this change?
I think this is a leftover from the previous commit.
This is a debug statement, we should not use it.
I think this is not needed.
This is a bit confusing, as it is a bit confusing to have a method that does the same thing. What about `//AsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAsAs
I think this is a bug fix.
This is a change in behavior, but I think it's better to be explicit here.
Why not just `getHighestTerm`?
I think this is a good change. It's not a good idea to have a test for this.
This import is unused.
Why are we not using the `ProcessWorkflowConditionFailedError` here anymore?
Does this change have any effect?
I'm not sure if this is the right place for this. The `c` is not in `MPICUDABackend` (which is the actual problem) but the `c` is the right thing to do. The `c` is the default, so the `c` is not the right thing to do.
This should be `static`.
I think we should just remove the `if` condition.
Do we need to add `excludeEnoughBalanceFilter` here?
I think this should be `groups.add(entry.getKey())`.
I think this is a good change. It's not a big deal, but it's not a big deal.
I think this is a leftover from the previous commit.
Metrics/LineLength: Line is too long. [83/80]
This is a change in behavior, but I think it's better to use the new `String.format` here.
@smarterclayton do we want to change the url to `undefined`?
I think we should be able to use `key` here.
I think we should do this for all of the others, but this is a bit of a hack.
Is this used?
I think this is a bit of a hack, but I'm not sure if it is worth it to make it a bit more explicit.
You can remove the `Aggregatek Riemer` here.
This is a change in behavior, but I think it's better to use the `man/man5/man5/man5/man5/man5/man5/man5/man5/man5/man5/man5/man5/man5/man5/man5/man5/man5/man5/man5/man5/man5/man5/man5/man5/man5/man5/man5/man5/man5/man5/man5/man5/man5/man5/man5/man5
This is a good place to put this. You can just use `!parent.isPrototypeOf()` instead.
Is this a bug fix?
This test is failing because of the `ProcessReader` in `validateAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAll
Space inside { missing.<br>Space inside } missing.
This property is not used.
This is a change in behavior, but I think it's better to catch the `Throwable` here.
This is a bit of a hack, but I think it's better to have a test that checks whether `dynamic_mul` is `None` and then `inputs=[self, other]` is `None`.
I think we should keep these as `SEARCHER` and move the variable to `enum Category` and move the variable to `enum` (or change the variable name to `SEARCHER`).
I think we should use the `is` variable here.
This is a change in behavior, but I think it's better to change the `getModelManager()` method to return the value of the `a` object.
I think you can use `new Header[2]` here.
Is this needed?
Is this a bug fix?
can you please also update the tests to include the new tests in the future?
I think we should be able to remove this interface.
This is a bug fix.
I think this should be removed.
We should probably also remove the `&&` here.
This is a bit of a hack, but I'm not sure if it's worth it to make the code more readable.
I think we should add a note to the docs: "Use the new Ruby 1.9 hash syntax.
I think we should use the `latest_listen_ts` constant here.
@matt-gardner Is this a breaking change?
I think we should also update the version of the cmake to use the cmake version.
I think this should be `#`, since the copyright is not in the file
Could you add the `Organization` keyword here?
I think we should add a note that this is a new endpoint and not a new endpoint.
Why are we adding this?
Is this the right place for this?
I think this can be moved to `org.apache.tuweni.concurrent.ExpiringMap`
This is a bit of a hack, but I think it's better to just make it a `Release` field.
I think this test should be removed.
Please use `isort` instead of `getort().getort()`
This is a little hard to read. I think it's better to keep it as it is.
Should we also add a check for `Consumer.Store`?
I think we should just remove this, and remove the TODO above.
This is a change in behavior, but I think it's better to use the `in UInt256?` parameter.
I don't think this is a good change. The other changes are just to make the code more readable.
should we also check if the table is not null?
I think this should be `LibraryInstance.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.StandardCharsets.
This is not necessary because the `@bridge` can be `final`.
Why are we using this instead of the container?
Why not just call `AllowConnectionWindowIncrease func(sess Session, delta int)`?
I think this should be `new_ncr_proposal_path`
This is a private method.
can we use the same condition for paymentTxEncode
I think this is not needed.
Was this a bug?
@matt-gardner Is this a problem?
I think this needs to be moved to the `internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/internal/test
I think this should be `extension_condition = lambda pkt: pkt.extension`
I think the seed should be removed here.
This is the only place where we're using `is_client` in the `#ifdef CLIENT_INTERFACE` above.
I think we should add a `@Deprecated` annotation here.
Please avoid star import.
I think we can remove the `/` here now that we are not using it anywhere else.
this is not needed
This is a bit of a hack, but I think it's better to have a helper function that checks for the `signed_in?` and `signed_in_analytics` as the first argument.
I think we should use `File.Address` here.
Why not `md#autoRowSize`?
This is a bit of a hack, but I think it's better to just disable all the pylint checks here.
@kargakis this change is not correct. The fact that we are not using any API changes in the API changes, we are not using any API changes in the API changes. I think we should remove the API changes in this PR.
Line is too long. [87/80]
I think we should add a `bool` to the caller to avoid creating a new ` ops` instance.
I think this should be `_w3c_count`
This is a breaking change. I think it would be better to keep it as a `try/finally` and have it take a `try/finally` argument.
I think we should remove the `GET` parameter from the `defaults` method and use it here.
I think this should be `WriteToReadonlyNodeError`.
I think we should just return the error here, since the `res` call will always return the error.
I think we should use `Dict[str, unicode]` here.
I think it's better to use `SetChainID` as the name of the variable.
I think this should be `logger.error("Unable to get flow trigger by jobKey, ex);`
I think this needs to be added to the `nnictl create` package.
I think this should be a warning, not a openFileCost.
Why not just do the fallback?
Align the elements of a hash literal if they span more than one line.
I think we should just return the error here, as we are doing the check in `[sigBits]`
nit: can you make this ` OrderedDict`?
Why did you change this?
Why is this being removed?
why did you change this?
This is a no-op, because the variable is already defined in the `getRegion`, so it should be removed.
This should be done in the `foreach`.
Why not `InternetGatewayID`?
This method is not used anywhere, right?
I think this should be `debug` instead of `finest`.
These two lines can be removed.
I think we can just use `IcebergType` here.
Is it needed to add it to the `config.Writer` file?
This test is failing because `analytics_url` is not defined in the test.
This is a breaking change. The `IS_GLOBAL_STORE` field is not used in the code base.
This is a bug fix. We should be able to use the `CloseableIterable` in the code.
I think this is a leftover from the previous PR.
This is a bit of a hack, but I think it would be better to do `getImagePosition` in the `else` block.
This is a change in behavior, but I think it's better to use `pid` as the name of the function.
I think we should just remove this if statement.
I think this is not the right place for this. The `subnetPattern` is not a correct name.
I think this is a good change. It's not a big deal but it's a bit confusing to have a `#` here.
This is the only change that affects the existing tests. It is not really necessary to change the behavior of the code.
Is this change intentional?
Can you please rename the chain to chain instead?
I think we should add a new one here to make sure we don't have any device name for the same as disk name.
This is a little confusing, as it is not a public API and will be re-used.
This is a very minor thing, but it's not a good idea to use a `get` or `0` for the value.
I think we should keep this as 1.14.5
Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
shouldn't this be `initializer`?
This is a bit of a hack, but I think it's better to have a separate `Value` and `Set` method, and then use `Value` in the `Value` method.
I think this import is unused and can be removed.
Is this still needed?
why do we need this?
This is not a part of the code, but it's not a part of the code, so I'm not sure if it's worth it.
I think this import is unused and can be removed.
Why is this change needed?
I think this is a leftover from the previous commit.
Would it be better to test that the schema was created and we didn't have to do that?
@smarterclayton do you think we should use the `V` here?
I think this should be ` succeeded.pop_website_optimizer`
I think this should be `var FEATURE_NAME = FEATURE_NAME`
I think we should be able to remove this check.
This should be `const { MongoURIError } = require('../../src/error');`
@smarterclayton do we need to add this to the base class?
@smarterclayton do we need to change the `Fatalf` here?
I think this is a good change. It's not a big deal, but it's a bit odd to have a method that does the same thing.
I think we should add a new method to the interface that is used in the interface.
What is the purpose of this change?
I think this should be moved to the `if not obj` check above.
I think we should use `ApplicationConfig::get_command` here instead of `ApplicationConfig::get_command`
This is a change in behavior, but I think it's better to keep this as a warning.
Why the change toPriorityQueue?
I think this is a good change. It's not related to the fix, but it's a good idea to remove it.
Use `else` and `else` (not your fault): `if reduction != 'mean'`
This is a change in behavior, but I think we should change the order of the parameters to be 1.
We should avoid using the $balance here.
Don't change this.
This is a breaking change. The result will be logged in build/build_step.go file.
I think this is a bit of a hack, but I think it's better to have a separate PR to make it more explicit.
I think this is a good change. It's not a big deal, but it's a minor thing.
I think this is not needed.
I think we should check for `os.getenv` here.
Please add a space between `// in minutes` and ` // in minutes`.
I'm not sure if this is the right place for this. The `waitForThumbnailsBeforeUpload` option is to set `true` to `true` when `defaultOptions.lazy` is set to `true`.
I think we should just use `confS` instead of `users`.
Why was this removed?
This is a change in behavior, but I think it's better to return an empty list here.
This is not a good idea. It should be `getTagSetting()`
Please remove the extra space between the `// +optional` and `PodPhaseSelectors`
Can you add a TODO to remove this TODO?
I think you can remove this, as it's not used anymore.
I think this import is unused.
I think we should use `pattern.append("")` here.
This is not a good idea, but I think it's better to check if the subsystem is empty.
Use the new Ruby 1.9 hash syntax.
I think it would be better to just change the default value to `True` and then just use `None` in the `Bool` method.
This is not needed.
I think we can use `0.2.0` instead of `0.2.0`
Can we use `Run.js` here?
Is this the only place where we can remove the `isNodeProcess`?
I think we should remove the `Reliability` parameter from the `IEnumerable` and just use `IEnumerable` in the `BatchActivityAsync` method.
I think this should be `pdf[0, 2, 3]`
This is a bit of a hack, but I think it would be better if we just use `user.deliver_later` instead of `deliver_later` here.
I think this is a bit of a hack, but I think we should be able to use `strings.Join` here.
I think this should be a separate `SetOpenState` function.
Why is this needed?
I think we should add a new function `GetEx` to the `Put` below.
Why do we need to change the check for `&hdfsAsciiSourceData_[attr->getNullIndOffset] = -1`?
This is not a good idea. It should be `include ExceptionPolicy`
You can use `.each` here.
I'm not sure if this is the right place for this. The `ATOMIC_PTRSZ_ALIGNED_WRITE` method is used for the `default_mask`.
Why change this?
I think this should be `_freopen(STDERR_FILE, stderr) != NULL`
I think we should add a new event handler here.
Is this change required?
I think this should be `blockToRoutes`.
I think this is a bit of a hack, but I think it would be better to move this check inside the `if` block, and then just use `if Gem.win_platform?` block.
This is a breaking change. It's not a public API.
This is a breaking change.
This should be a separate PR
I think this should be `final`
I think this is a bug fix. The `backend` argument is not always defined.
I think we should keep this function as it is and rename the function `GetDeploymentChain` is not a public API.
Just curious, why this change?
why change this?
Why not directly pass in the `*` instead of just `common.Selector`?
I think this should be `FLAGS_data_path.empty()`
`handle` is a string, so you can just change the type to `win.handle`
I think this should be done in the `m` case.
I think this is a good change. It's not a good idea to change the default value.
`old.copyFromPump(tempBasal)`, should we use a different record?
I think we should remove this and just use `// ChecksumAddress is a representation of the short address with a checksum`
I think we should keep this here, as it's not used anymore.
I think this should be a `!`
I think this is a good change. It's not a big deal, but it's a little strange that the `Key` is not nil. I think it's better to just check if the `Key` is nil.
Can we make the `ungcellationToken` parameter a parameter?
Why do we need to add this flag?
Why not use `libbeat.Package`?
Why is this change necessary?
nice, I think this test is not needed
This is a change in behavior, but why is it not just a `approximation`?
This is a no-op, right?
I think this can be removed.
I think we can remove this file and just use `flake8`
Can we add a `ServiceAccount` field to the `SingleSingleSourceSpec` type?
I think this should be done in a separate PR, but I think it's better to move it to a separate PR.
This file is still used in the file, right?
I think this is a bit of a hack, but I think it's better to have a test that checks if the origin is not empty.
This is a very small thing, but I'm not sure why the `Game::playerExecuteParsePacketEvent` is a `msg` object. I'm not sure if it's a good idea to add a new `Game::playerExecuteParsePacketEvent` to the `createTask` that is used in the `createTask` and then just add a new `createTask` object to the `createTask` object.
I think this is a good change. It's not related to the PR, but it's not a big deal.
This should be `npm conf set strict-ssl false`
I think this test is still testing the wrong error.
I think this is a good idea. It's not a big deal, but it's a bit odd to have a function that returns a `*` and then call `*` on the `context.Start`
I think this is a leftover from debugging.
In the current PR, we should update the test to check if the value is null.
I think we should make this a `try` block.
I think we should use a more specific name for this.
This is a breaking change. It's not a big deal, but it's a bit odd to have a `isView` method that returns a `null` and then just return `null` if it's not null.
I think this is not needed.
Why not just do `item.UserData || itemType === 'Season'`?
I think this should be a class constant.
I think this should be `yield errorStoreActions.receiveError( error, 'getURLChannels', [ accountID, clientID ] );`
I think this should be imported before `from google.cloud.forseti.common.util import futures`
This is a very minor thing, but I think it's better to have a `cancel` function that returns a `cancel` object, and then use that in the `cancel` function.
This is a bit of a hack, but I think it's better to just remove the `xhtml+xml` check.
Not sure why we need this here.
I think we can use `[0-9][0-9])):))?(([0-9][0-9]))\\b")]` instead of `[0-9][0-9]))\\b`
Why is this change required?
Is this the correct way to test the project names?
I think we should add a `fbo.iscolumn()` method to the `isiscolumn()` method.
@matt-gardner Is this a bug? I think we should be able to get rid of the `if err != nil` check.
I think this is a bit of an overkill. I would also rename it to `create_table`
I think we can remove this and just keep the old name.
This should be `trigger_error('sprintf('The %s is deprecated since EasyAdmin 1.x and will be removed in 2.0 veresion. Use persistEntity instead', __METHOD__), E_USER_DEPRECATED);`
I think we should move this to the `config` package.
You can remove the `cancel` parameter from the `RunCompleteEventArgs` method and just use the `cancel` parameter here.
I think this is the only change that is needed.
Can we use `withOffsetSameInstant(ZoneOffset.UTC)` here?
Line is too long. [83/80]
Why not just remove this?
Why is this needed?
I think this should be `final`
If you're not going to do this, you can just do `admin_password = ARGV[1] || 'admin@example.com'` instead of `admin_password` here.
shouldn't this be in a constant?
Is this a typo?
I think we should add a note that this is not a big change.
Why do we need to remove the condition.Value?
Why are these lines changed?
This is a bug fix.
I think it's better to use `@ SERIALIZABLE` instead of `@ SERIALIZABLE` here.
This is a very small thing, but I think it's better to move it to the `CertificateSigningRequestIsCAAnnotationKey` package.
This should be a private constant.
This is a bit of a hack, but I think it's better to just remove the script.
This is the only change that affects the `continue` below.
This is not needed. The weights will be created with the weights.
This test is not needed anymore.
I think we should use `CONFIG` instead of `message-layer` here.
I think we should use a `MinSize` here.
I think this should be a separate commit
I think we should be able to remove this, and just do `this.startWorkspace_.setResizesEnabled(false);`
I think this should be `req.WithoutNS`
I think we should make this a constant.
nit: this is a bit weird, can't we just use `bool` instead of `bool`?
Why do we need to change the typeSolver?
I think this should be `./pants run-except`
I think we should add a new line after `config` to make sure we don't have access to the Realm already exists in the config file.
We should use `org.apache.commons.lang3.StringUtils#isNotEmpty` here.
I think we should also update `DescribeIdentifier` to `sha`
Why is this internal?
We should probably make this a `bool`, since it's not a part of the scope of this PR.
Why is this line changed?
Does this need to be a list of arguments?
This is a very generic message, but I think it's better to be explicit about the default value of 1070296.
I think this is not needed.
How about 'sets the payment_method on Purchase to free'?
I think this is a bit of an overkill, maybe just `return_to ENV['LEARN_REPO_URL'], target: "_blank", &block) &block`
`[]` can be null here.
I think we should use the `engine. breaksList` here.
I think we should add `isodate.parse_date` here.
Please remove the second `AssertEx.DeserializeNoError`
@jmhooper @mitchellhenke would you mind adding a spec for this?
I think we should be able to remove this.
I think this import is not needed.
This is a breaking change. We should probably add a `Namespace` argument to the `taskqueuepb` and `taskqueuepb` to the `taskqueue` interface.
I think we should just return `Field` here.
I think we should just use the `errorString` type here.
This is a bit of a hack, but I think it would be better to do something like `if(queuedFlows.getFlow(exflow.getExecutionId()) == null)` instead of checking if the snapshot is not null.
I think this can be removed now, since it's not used anymore.
This is a breaking change. We should probably add a `super` here.
This table is not used anywhere else, so I removed it.
This is a bit of a hack, but I'm not sure why we need to change the signature of `check_connection` here.
I think this should be `int8`
I'm not sure this is the right fix. The previous version was correct.
I think this should be "selectCastSink"
Why is this needed?
@matt-gardner Is this the correct place to put this?
Can you add a spec for this?
I'm not sure this is the right fix. The ` %.512` is the `Message` and `Message_ms` is the `Message` and `Message`.
Please remove this.
I think we should use `OutputOutput` here.
please use `this->get_type()` to avoid the warning
I think this should be a `@Json(0, delimiterIndex)`
This is a little confusing to me. If you're using `Nullable` here, then you can use `Nullable_name` instead.
Use the new Ruby 1.9 hash syntax.
This is a leftover from the previous PR.
I think we should use `strings.ContainsRune` here.
This is a change in behavior, but I think it's better to move it to the end of the function.
I think this is a good change. It's not related to the PR, but it's not a big deal.
I think we should use `_x` here and not have `_x` in the description.
I think we should remove this line.
This is a change in behavior, but I think it's better to keep the old name.
This should be `LOG.getLogger(__name__)`
This should be in the `time.Unix()` call.
I think this is a good change. The default is `1` and the default is `2` and the default is `2`.
I think this is a leftover from the previous PR.
This is not a good idea, as it will be a breaking change.
I think this file should be removed.
Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
This is a breaking change.
I think we should just remove the `!key` parameter.
This file is not in the file license.txt, found at the root, and the root file is not in the root file.
This is a breaking change. The `PACKAGING` is not in the `ProductImageField` (I think it is a `final`).
Do we need to check that the event is not match?
This import is not allowed.
Can we move this check to the `if` block?
I think this is not needed.
This is the only change that affects the port_, but I think it's a good idea to change the port_ to the (rather than the other "r" in the name)
Why do we have to change this?
This is the only change that affects the API. I think we should be able to remove the `Bucket` parameter from the API.
This is a little confusing, since the `*` is not used in the `lib/` folder.
Why not just use the `getIcon` method here?
This should be `golang.org/x/net/context`
This is a change in behavior, but I think it's better to use the `get` method here.
I think we can move this to the `Topic` model since it's only used in one place.
Why do you need to do this? It's not a big deal, but it's not a big deal.
This is a bit of a hack, but I'm not sure if it's worth it to make the return type of `debug` and return `debug` if it's not.
I think this is a good idea. It should be `self.bucket` instead.
This should be removed.
Is this used?
Why is this needed?
What is the default value for this change?
I think we should be able to use `fmt.Printf` here.
I think we should change the test name to something more meaningful, e.g. `test_renamed_message_register_message`
I think this is a leftover from the previous commit.
This is a breaking change. We should probably have a test for that.
why change this?
This class is unused.
This is a bit of a hack, but I think it's better to have a test that checks for the new `privacyController` class.
Why not just catch `Exception ex`?
This is not right. The `OUTPUT_VALUE` function is used to connect a value to a user. In the case of an `else` block, it will be removed.
This class is unused.
I think this should be `s.lstrip('0x')`
This is a change in behavior, but I think it's better to be explicit here.
This is a bit of a hack, but I think it's better to have a test that checks if the user has the same data.
This is a breaking change. We should probably have a test for that.
Why not just `return ErrConnectionCancelled || err`?
I think we should use `tm_cpp` here.
I think this is a leftover?
This is a bit of a hack, but I think it's better to just check if the flag is not there.
@deads2k @tnozicka this is the right place for this
why is 255 removed?
This is the only change that affects the file name. Is this something we can do in a different PR?
This is a change in behavior, but I think it's better to move it to a separate PR.
These changes are not related to the PR.
This is a breaking change.
I think we should also add a `@since` annotation here.
I think this is a good change. It's not related to the PR, but it's not a big deal.
Missing space after #.
I think this should be moved to the `_expands_user` module.
I think this is a good change. It's not a big deal, but it's not a big deal.
This should be a separate PR.
This is a breaking change. It is not necessary to change the default value.
This is a breaking change. I think we should remove it.
I think this is a little too vague. What do you think about just calling `is_log_op.isNull()`?
This is a bit of a hack, but I'm not sure if it's worth it to catch a specific exception here.
I think this should be `self->lastLogIdSent_`
I think we should just return the Provisioned status condition here, otherwise we will get a reference to the Provisioned status condition.
This is a function that is used to set the `tab` function.
I think you meant `Object.Times` here
Shouldn't this be `const std::string msg`?
Please remove the unused `m` prefix.
This message is not really helpful. It is a bit confusing to have a method that does the same thing. What do you think?
this was a bug, it was just a test
This is not a great idea, but I think it's better to have a `mentor_contact_link` method that returns the `mentor_image` object, and then use that here.
I think this needs to be done in the `handle()` method, since it's not used anywhere else.
I think this is not needed anymore?
I think this is a leftover from the PR.
This is a bit of a hack, but I'm not sure why we need to make a copy of the `std::recursive_timed_mutex` method.
Should we also check if the user has the backend and error?
Line is too long. [98/80]
shouldn't this be `application/x-shockwave-flash ?` ?
this is a bug fix.
I think we should use the `model.Rest.Azure.IResource` constant here.
Why is this needed?
I think this import is unused.
Line is too long. [83/80]
Why not `type(body)`?
This is a little confusing, as it's a different thing than the `agent` class.
I think it would be better to have a `@SuppressWarning("unchecked")` that would be used for the `@SuppressWarning("unchecked")`
This is a wrong fix.
This is a little confusing, since the namespace is not used in the `validateCommandAttr` method.
Layout/SpaceBeforeBlockBraces: Space missing to the left of {.<br>Layout/SpaceInsideBlockBraces: Space missing inside }.
I think we can remove this `#if` statement and just use `#if` here.
This is a bit of a hack, but I think it's better to check the `Spark Session catalog` and `SparkCatalog` as we do in the `if (options.get("type") && options.containsKey("uri")` and check the result of the `if (options.get("type")` instead of the `if (options.containsKey("uri")`
This is a change in behavior, but I think it's better to check the number of bytes in the `multipart/form-data` and check if it's a float.
Should we make this `SetCertificateRequestCA`?
I think this should be `const index = excessDomChildren[index] = null;`
This should be removed.
I think this is a leftover?
This is a bit confusing, as the `file` files are not supported in the directory. Is that intentional?
This is a good change. The image image is not a snapshot, so we should not have to pass in a image. The snapshot is a snapshot, so we should not have to pass in the image.
This test is not related to the PR, but I think it's better to keep it in the test.
Please add a license header here.
Why not just remove this method?
Why not `public`?
I think you can remove this method now that you are using the `queryRelation` variable.
I think this should be removed.
This is a leftover from the previous commit.
I think this is a breaking change. The `CompletedTask` is not a `Task` because it is a `null` check.
this is a bug fix.
This is a change in behavior, but I think it's better to have a test that checks if the table table is not present.
Was this removed because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test
I think this should be `debug.debug("Listing of namespace [{}] resulted in the following tables: [{}]", namespace, tableIdentifiers);`
This is a change in behavior, but I think it's better to keep it as is.
I think this should be `goodContentType = "application/octet-stream"`
@bparees this is the fix.
I think we should keep the `250 * time.Second` as it was before.
This is a bit of a hack, but I'm not sure if we should be doing the same thing here.
I think this file should be removed.
This is a bug fix.
I think this should be `project.Path`
This is not needed.
shouldn't this be `confirmation_height_processing`?
I think this should be `false`
I think we should be able to remove this setting from the `reportMouseShapeChanges` method and just call `showSpeechViewerAtStartup`.
Do we need this?
I think this check is not needed.
This is a no-op, right?
I think we should add these new properties to the span list.
I think this should be `date`.
Can we just change the spec spec spec spec to be more specific? I think that would be more appropriate for the spec spec spec to be more specific.
I think this is not needed.
This is a breaking change. I think we should move it to a new service
I think we should just remove the `ASSIGNMENT` field and just call `DEFINITION` here.
I think this is not needed.
This is a bit of a hack, but I'm not sure if it is worth it to make a PR to make this change.
I think we should use `getCurrentTimestamp` here.
@JeremyKuhne might want to check this, but I think we should keep this method for now.
We should check if the value is `bar` or `tcpproxy_off`
are you sure about this change?
Why did you change this?
I'm not sure if this should be done in the controller or in the `ci->simd_used`?
Why are these added?
nit: this could be a constant
I think this is a good change. But I think it's better to do it in a separate PR.
It's not clear to me why this isn't a `use` variable.
I think this should be `Timeo::epoch`
This is a very weird thing, but I think it's better to have a single `let cb_` property that's used in the `const` var.
Can we make this `prefMobileUpdateAllowed`?
I think we should add a `hive_kube_client_request_seconds` constant to the `hive_kube_client_request_seconds` constant.
I think we should be able to remove this, but I think it's not a big deal.
I think this is a bit of a hack, but I think it's better to have a function that returns the ref_booster (or something similar) in the future.
I think this should be `DbRound`
I think we should check if the cluster is a cluster or a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with a cluster with
This should be added to the `encoding` package.
This is a bit of a hack, but I think it's better to have a method that returns a boolean, and then check that it's a boolean.
Please remove this.
I think this is a good change. It's not a big deal but it's a bit confusing to have a window's every duration.
Can we use `newchainVersion` here?
I think we should use `for len(inputPlan.Roots)` here.
This is a breaking change. The rest of the changes are unrelated to the PR.
Why do we need to change the default?
I think this should be `ANDROID_NDK_HOME`
if (stepSpeed > 0) then the result will be 0.5
This is a bit of a hack, but I think it's better to have a test that checks if the manifest is a string, and then check if the key exists.
This is not the right fix. You should use `===` instead.
I think this is a good idea. It's not a good idea to add a null check. It's a bit of a hack, but it's not a big deal.
This is not needed.
This is a bit of a hack, but I'm not sure how to fix it.
why not just `new VerifyTestClassNamingConvention()`?
I think we should keep the number of arguments in the same order as the other fields.
I think this should be `return int(cell.idx / self.cellsPerColumn)`
I think this should be `@Nullable`.
I think we should use the `TCP` constant here.
I think this should be `import *`.
You can remove the `locator_list` declaration now that you're using it.
I think this should be `include '../../release.inc'`
I think we should use `.spec.duration` instead of `duration`.
I think this is a breaking change. It is not needed anymore.
Should we add a `AddData` method to this method?
I think it's better to use the same name for the function.
I think we should just return `http.StatusGatewayTimeout` here.
Why not delete the copyright year?
I think this is a good change. I'm not sure if we should be using the dir here.
The `spearman` is not the same as `s2` and `spearman` is the same as `spearman`
I'm not sure if this is a good idea. The `exes` should be a `const` (or a `const`).
I think we should just call `getStateHeight` here.
I think this should be moved to the `static` class.
Can we make this `BOOL`?
I think this should be `return 0;`
Why do we need a map here?
I think it would be better to just do `duration = typeof.getState(value)` instead of adding a new variable.
this is a bit weird, why are we logging the result here?
here we should only use `semantic_fusion` if `bbox_feats.shape[0] > 0`
I think you can just remove the `entriesMetadataTable` variable altogether.
Is this necessary?
I think this is not needed anymore.
Can we just do `result.options.startAfter && this.hasReceived ? 'startAfter' : 'resumeAfter';` instead?
I think we should move this logic to the `User` method, since it's a `find_current_user` method.
I think this should be `if (isset($params['layout']) && $params['layout']=='simple'){`
I think this should be `return null;`
This is a breaking change. The `py_version` is not a `version_info` so I think we should just remove this as well.
I think this is a leftover from the previous commit.
Why do you need to change this?
I think this is a leftover from debugging.
Is this necessary? I thought we already had it in `mockDBcache`?
Nit: remove empty line
I think we should remove this class entirely
I think this should be `[UnsupportedOSPlatform("browser")]`
I think this is wrong. You should be able to remove the `#if NET452` check.
Is this still needed?
I think this should be `find_instance_group_by_url`
Do we need to check for `3`?
This is the only change that affects this PR.
This import is unused.
This is a change in behavior, but I think it's better to keep it as is.
This is a bit of a hack, but I think it's better to move the `fileExists()` check inside the `if` statement, and then just set the `getMedia()` in the `if` statement.
you should also update the docstring below to mention that it's not None.
This is a breaking change. We should probably make it a private method.
Please add a `private` statement to make sure this is not used.
I think this should be `false` instead of `false`
I think this is a bit of a hack, but I think it's better to check for NULL here.
I think this should default to `true` instead of `true`
should we also test that the "^\w+\." is not in the form?
I think it's better to move this to the top of the file, and then handle the cache in the file.
I think it would be better to use `!= null` instead of `!= null`
I think this should be `os.path.join(path, 'html_files', filename)`, since it's a bit confusing to have a file in the first place.
I think this should be `errors.New("get environment %s config: couldn't find environment dev in the application my-app", "dev"),`
Why is this not needed?
I think this is a leftover.
Shouldn't this be `getConfig`?
Please revert this change.
I think this is a bug fix.
Why is this needed?
Prefer `if !is_a?(String)`.
I think we should use the `.admin` suffix here.
I think we should keep the version number as it was.
This should be removed.
I think we should add a `Status` field to the `Status` field in the `Status` field.
We should probably move this import to the top of the file.
I think this should be `six.empty.name`
This is a little confusing, as it is used in the `settings.py` file, which is not in the `settings.py` file.
I think we should use the `attributePrefix` constant here.
I think we should just use `t.IsNullOrEmpty()` here.
I think we should use a more specific name here.
These two lines are not really needed.
this change is not related to the fix, but I think it's better to revert it.
why was this changed?
I think this should be `_GLOBAL_DEFAULT_TIMEOUT_is_in_timeout` instead of `_timeout` since it's not a `_timeout`
This is a change in behavior, but I think it's better to move it to the `gasLimit` function.
Why is paths.begin() not needed here?
I think this is a good change. But I think it's better to move it to the globalize class.
I think this is a leftover from the previous PR.
This is a bit of a hack, but I'm not sure if it's worth it to make a PR to make this change.
This is a bit of a hack, but I think it would be better to have a separate `kds` check here, and then check if the `globalWorkSizeX` is `NULL`.
I think we should move this to the `create_config()` method.
Is this correct?
This should be `!empty($options['lazy']) && 'data-' : '';`
I think this test is still not needed.
Style/MutableConstant: Freeze mutable objects assigned to constants.
I think this should be `ContextContext`
Metrics/LineLength: Line is too long. [83/80]
I think this should be a warning instead of a warning.
This file doesn't need to be updated.
Do we need to make consumerIntf a consumer?
Can you make this a test case for the new pending case?
I think we should use the same naming convention for the `verbose_monkeypatch` API.
I think this can be removed now.
I think this is a leftover from the previous PR.
This should be removed.
This is a breaking change.
This is not needed anymore.
Why is this needed?
I think this should be `getTrue(false)`
I think it's better to keep it as deprecated, and just remove it from the class.
Why not use `GetTODO NLog 5`?
why change this?
I think this should be `err != nil`
I think this import should be removed.
this is not right. the problem is that if the user is not running the DR_MAX_OPTIONS_LENGTH, the DR_MAX_OPTIONS_LENGTH is not set, the DR_MAX_OPTIONS_LENGTH is not set. the problem is that if the DR_MAX_OPTIONS_LENGTH is not set, the DR_MAX_OPTIONS_LENGTH is not set, the DR_MAX_OPTIONS_LENGTH is set to DR_MAX_OPTIONS_LENGTH is set to DR_MAX_OPTIONS_LENGTH is set to DR_MAX_OPTIONS_LENGTH is set to DR_MAX_OPTIONS_LENGTH,
I don't think we need to do this, since we're not using the `let` anywhere else.
I think we should just use `num_stages` here.
Is this necessary? I don't think we should be returning `null` here.
This is a bit of a hack, but I think it's better to have a separate `for (; begin != end;` statement and then use the variable `toIterator`
I think this should be `Action_ptr ptr = Event_ptr(event);`
I think this is a little too late, since it's a `default`?
Is this needed?
This test is not needed.
I think this should be `var pos = -this.workspace_.scrollY + delta;`
I think this is not needed.
This is a bit of a hack, but I think it's better to have a `org.phoenicis.repository.dto.ScriptDTO` return the `String` object instead of the `phoenicis.repository.dto.ScriptDTO` instead of the `phoenicis.repository.dto.ScriptDTO`.
I think this should be `!this.enabledTypes && this.enabledTypes.length`
I think this should be `from mmdet.models.builder import ResLayer`
I think this should be `static`.
I think we should not do this in SparkBatchQueryScan, as we have a differentiate that is differentiate.
This is a change in behavior, but I think it's better to keep the `mappedClaim` case as it is.
I think we should just remove this variable and just use `createElement` in the `createAndservices` method.
I think we should also add a `utils/pointer` to the `utils/` package.
This is a change in behavior, but I think it's better to keep it as a parameter.
why 0 and not 0?
I think we should also add the `axes` param to the `ctxserver` param.
Why is this changed?
This is a no-op, but I think it's better to remove the `WaitUntilRunning` call here.
This should be `final`
I think it would be better to use `self.fetch("/options")` here instead of `self.fetch("/options")`
This is a bit of a hack, but I'm not sure if it's worth it to make sure that we're not actually using the old `unformatted` variable here.
This file should be removed.
I think this is a bit of a hack, but I think it would be better to just make it a `topo` and then use that.
I think we should add a `cloudDNS` param to the `azureDNS` interface.
@kennknowles do we want to remove this?
This is the only change that affects the existing code.
Is this used?
I think this is a good change. I think it's better to move it to the `if err != nil` check.
Use `<%= "geolink"data-key>`. Also, you can use `<%= "geolink" )` instead of `<%= "geolink"data-key>`.
This is a breaking change. I think we should just remove the `source` argument and just use `source` instead.
Shouldn't this be `NULL`?
Please use `std::unique_ptr` instead of `std::NetworkUtils::getAvailablePort()`
I think we should be able to use the default value for these.
I think we should use `TimeUnit.lowestOutput` instead.
I think we should keep the Schema input schema here.
I think you can just do `let searches = ...`
This is a duplicate of the existing one.
This is the only place where we call `cancel` in the `cancel` function. I think we can just remove the `cancel` function.
Why is this readonly?
Why is this change necessary?
I think we should use `SCANNER_OUTPUT_CSV_FMT` here.
This is a bug fix. The problem is that the `data` failed to be in the db.
Shouldn't this be `product->getRingInfo()->numBondRings(pBond->getIdx()) > 0`?
I think it's better to move these new lines to the top of the file.
why is this removed?
why not just use the pubSub struct here?
I think we should use `isort` instead of `usingusing`.
This is agnostic error.
This is a bit confusing, since it's a bit specific, and it's a bit specific, and it's a bit specific, and it's a bit specific, and it's a bit confusing.
I think we should use `./pants lint` instead of `/` here.
I think this is a bug fix.
Since you're removing the `config.mld_storage_path` variable here, can you rename `config.mld_storage_path` to `config.mld_storage_path`?
This is a bit of a hack, but I think we should be able to just use `Stop` here.
Why do we need to change the type of `Schema` here?
This is a bit of a hack, but I think it's better to remove it.
I think we should add a link to the service and move this to the service file.
I think we should use the `or` helper here.
This is a bit of a hack, but I think it's better to have a separate `_create_asset` method that returns a `string`.
I think we should just use the `opt` here.
I'm not sure if this is the right fix. The `len(elems)` is not needed here.
Please remove the extra lines
(style) trailing whitespace
We should use the `toTrim` type here.
I think this should be `config = RSpec.configuration.configure_group(self)`
I think we should use the same constant for the `updateNotInProgress` property.
I think this is a good change. It's not a big deal, but it's a little strange to me that the Spack has been applied to the Spack's `timeRemainingTicks` and `timeRemainingTicks` in the `timeRemainingTicks` function.
I think we should add the `*` prefix to the help message.
this is a bit weird, why do we need to make this change?
The interval should be set to `pull_interval` and not `pull_interval`.
This is not needed, we can remove it
I think this should be `return ROWS_CANNOT_MATCH || ROWS_MIGHT_MATCH`
This is a bit of a hack, but I'm not sure if it's worth it to just return `None` here.
I think this should be `if len(certificate.Status.Conditions) > 0 {`
I think it would be better to use the `camunda-integration` constant instead of the one in the `else` block.
I think this is a good change. It's not a big deal, but it's a bit confusing to have a context manager in the context manager.
remove empty line
This is a bit of a hack, but I think it's better to have a method that returns the `readPreference` instead of the `primary` field.
I think it is better to return `Optional[NotNullWhen(true)]`.
I think we should use a `getValidatorsForBlock` here.
This is a change in behavior, but I think it's better to keep the change in the commit message.
I think we can remove this.
I think we should use `<div>.<Start>` here.
I think it would be better to have a module called `a` and `b` here.
This is a bit of a hack, but I think it's better to just use `__future__` instead of `__future__` since it's a `__future__` (which is what we use in `__future__`).
Shouldn't this be `DATASEC_RARELY_PROT`?
This is a no-op, right?
I think we should just make this a `defaultTimeout` and use it in the `defaultTimeout` and use it in the `defaultTimeout` and use it in the `defaultTimeout`
Why was this removed?
is this change necessary?
Why is this necessary?
This should be removed.
Nit: I think we should just call this `NewUpgradeTaskJob`
This is a bit of a hack, but I'm not sure if it is worth it to make it a bit more verbose.
nit: "schema" and "change" are not used in this file.
This is a bit of a hack, but I think it would be better to have a separate method for the sequence number of sequenceNumber.
Line is too long. [83/80]
Why not use the `use TYPO3\Core\GeneralUtility` class here?
I think this is a bit of a hack, but I think it's better to have it in the view rather than having it in the view.
I think we should add a new type annotation here.
I think this should be done in the `clearTimeout` method.
Even though this is a public API, I think it would be better to do it in a separate PR, and then do it in a separate PR.
@jridgewell I think this is a good idea. I think we should not have a test for that.
Why did you change this?
(style) trailing whitespace
This is a bit of a hack, but I think it would be better to use `tabbed_browser.widget.currentWidget()` instead of `tabbed_browser.widget.currentWidget()`
This is a change in behavior, but I think it's better to just return the error here, and then just return the error.
Can you explain why this is necessary?
I think this is a good change. It's not a big deal, but it's a minor thing.
this is not needed
I think this can happen if you get bad numeric values in the request, just handle normal parser error as normal parser error
I think this is a good place to put this.
Why not `defined('CACHE_ENABLED')`?
Why is this change necessary?
I think this should be a separate commit
Can we make this a `application_default_credentials` instead?
I think this is a bug fix. The columnSelected check should be `0` instead of `1`.
This file should be removed.
This is a bit of a hack, but I'm not sure if it's worth it to just check for `assert.NoError` here.
This is a bit of a hack, but I'm not sure it's worth it. I think it would be better to have it in a separate PR.
Why is this needed?
I think this should be `~/.ansible/cp/%r@%h-%p`
Shouldn't this be `auto shifted_bearing = (0. <= bearing && bearing <= 360.);`
I would prefer to keep the imports sorted in the function signature.
I think we should have a default value for this.
This is a little confusing, as it is a bit hard to read.
This method is used in a few places, so I would just remove it.
I think this should be `<T>`.
I think this change is not needed.
This is a bit of a hack, but I think it would be better to have a separate function for it.
This is not needed.
This file should be removed.
This is a change in behavior, but I think we should probably leave it in for now.
hmm, what if we called this `@frozen_sort` instead of `self.get_sort`?
I think this should be a separate PR
I think this should be removed.
I think this should be `[syslog-prot] incomplete message!`
I think this should be `mcsIdx -- --WMol`
why not just call it `pendingCountLocked`?
Is this a bug fix?
I think this is a breaking change. The `loadReactAppOnceIfReady` method is only called in the client, so I think it's better to remove the `loadReactAppOnceIfReady` method.
@wachterjohannes Shouldn't this be `Xcode_9.4.1`?
Line is too long. [83/80]
Why not just `TestClient`?
I think this is a good change. It's not a good idea to have a test for that.
Why is this change necessary?
I think this should be `argNameVal[0]`
This is a change in behavior, but I think it's better to move it to the `if ($chars) {` block.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
`variableOptions` is not used in this function.
This check is redundant, because the `Preconditions` can be `null` if `selectedIds` is `null`.
this line is not needed
This is a bit of a hack, but I think it would be better to just have a test that checks if the user is not running.
This change is not related to this PR, but it seems like we should be using the globalize.translate instead of the globalize.translate
`LOG(WARNING)` should be `INFO`
This is a bit of a hack, but I think it's better to move this import to the top of the file.
I think this should be `Optional[namespace-partitions]` instead of `true` as the default.
Why is this needed?
What if we make this change in the `_activate_user` method?
I think this should be `node-labels`.
This is a pretty big change, but I think we should be able to remove the `input_def.root_manager_key` attribute and just use `input_def.dagster_type` here.
Remove the TODO, it's not used.
I think we should just make LARGE_BYTES a constant.
I think this is not needed.
Can we make the `BalanceRecord` take a `HashMap` as an argument?
This is a bug fix. The `wait_for_at_least_entries` function is not used anymore.
This is the only place where we need to set the `storeVersion` property.
Why is this change necessary?
I think we should use the constant for the timeout.
I think we should remove the debug message.
I think this is a bit of a breaking change. It's not a problem, but it's a bit of a hack, so I'm not sure what the best way to do is do is do.
why not just use a `newTopBlock := topBlock.DeepCopy()`.
why not use the mock?
I think it's better to make it a boolean, and then use it in the `@Setter` method.
I think we should use the `.connect()` helper here, as we already have the `.connect()` helper
Please use `schema.singletonList(bool, ...)`
This test was not working before. It was not working before.
Should we also add a `GoogleCloudProject` type to `go/index`?
I think this is a bit of a breaking change. What do you think about just making it a private field?
This is a change in behavior, but I think it's better to keep it in the PR.
can we use `DEFAULT_CONFIG_PATHS` instead of `DEFAULT_CONFIG_PATHS`?
I think you can just remove the `_dump_slack_output` function.
I think we should add a check that the user has the same id as the other one.
This is a change in behavior, but I think we should be able to use the `hive.openshift.io` package here.
Can you please add a TODO to remove this?
This is a bit of a hack, but I think it's better to have a method that returns the `<`
I think this is a good change. It's not a good idea to use `true` for the `true` to pass the `true` to the `true` and `false` to avoid the need for the `true` parameter.
Is this still needed?
I think this is a little too late, but I think it would be better to have a test that checks if the directory is not a directory, and then if the directory is not a directory, then the message will be printed as a directory, and the message will not be printed as a directory, and the message will not be printed as a directory.
Shouldn't this be `iou_thr=0.5`?
This is a change in behavior, but I think we should remove this.
This is a good place to put this check.
I think we should use `config.getTitle` here.
I think this should be `allowIncompatibleChanges`?
This is a bit of a hack, but I think it's better to move this to a separate file.
I think we should add a new line before `return r, nil`.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this test is still not needed.
We should probably also change the type of `Required-theme` to `cms::theme.active`.
Why not just `it != activeClientMap_.end()`?
I think we should be able to remove this and just use `Key(Document)` in the `Key(interface{})` method.
Why not just `FailedPrecondition ErrorCode = 7`?
I think we should use `default: nil` here.
I think this is a good idea to do it in a different way. The `_history` is not a valid `_history_prepared` that is not a valid `_history` (which is not the case for the user).
Can you please add a note that this is a separate package for the future?
This is the only change that affects the `input_shape` and `input_path` functions.
Is there any way to check for `max`?
please also add the `**` in the `build_system.py` file
This is a change in behavior, but I think we should change the default behavior to be more specific.
I think we should just use `raise Exception(", ".join(["fail to run task {0} reason: {1}".format(failure['arn'], failure['reason'])`
I think this should be `callback&.call(type: nil)` instead of `callback&.call(type: nil)`
Shouldn't we also check for `apimachinery`?
It's not clear what this is doing. It's a private method.
I think we should remove this and just do the `CloudMigrateDriver` above.
`end` at 12, 6 is not aligned with `expect(rendered).to include('2 episodes')` at 8, 6)
Why is this ex?
I think we should just remove torch.cuda.current_device() and just change the return type to `cpu` here.
This is a bit of a hack, but I think it's better to have a test that checks if the directory is not specified.
I think this method should be called `DataFile slimCopy`.
I think you can remove this line
Can you please add the `item.recording_start` check here?
I think we should keep the same behavior as the `Library Applied` setting.
I think this should be `Collections.of(List<T>)`
Why is this package private?
Why is this needed?
this is a bug fix.
I think this is a leftover from the previous commit.
I think this is a bit of a hack, but I'm not sure if it's worth it to make it more explicit.
Is this the only place where we can use it?
I think this is a bit of a hack, but I'm not sure if it's worth it to check for `num_ins` here.
I think this should be `const int arrayOverhead = Path.Length + arrayOverhead;`
Is this the right place for this?
I think we should add some more info about what the transport is and which it is.
I'm not sure if this is the right fix. The rankNum should be a constant.
Why do you need this? It's already in the `loss_normalizer` above.
I think this is the only place where we can use the `_WIN32` function.
Please avoid using wildcard imports.
The same for the types below.
I think we should remove this TODO.
This is a bug fix. The problem is that the copy is not a copy anymore.
This is a breaking change.
I think we should just make this `config.add_api_capability` and `config.add_api_capability_size`
I think this should be `[package.Value]?.Value<string>`
I think we should use `errors.StringValue` here.
Is this still needed?
Shouldn't this be `fs.unlinkSync(networkLogFile)`?
why not just remove the call to `CreateStoragePool`?
This is a bit of a hack, but I think it's better to move it to the `Map` class.
This should be `background_color` (or `res`)
I think this should be `static`
I think this is a leftover from the previous commit.
I think this should be `_('with_email_msg')`
I think we should use attach_case for the new parameter.
Can we move this to the next release?
I think this should be `if !a.NoValidataShapeMethods {`
Should we also change the `corev1` and `kubernetes` to `kubernetes.go`?
is there a reason why we don't want to make this change?
I think this change is not needed.
This is a very minor thing, but I'm not sure it's worth it.
I think we should move this check inside the `if` condition above, since it's not used anywhere else.
This is a little confusing, as it's a "OCD" and not a "OCD" of the code.
I think it's better to use `sl.New()` instead of `sl.New()`
I think we should remove this file.
Should we use `time.Sleep(2 * time.Second)` here?
I think this should be `@return the name of the jsonp callback, or <code>null</code>`.
This is a bit of a hack, but I think it's better to have a separate commit for this.
I think this is a good change. It's not a good idea to include the class name, but it's not a good idea to include it as a class.
This is a little confusing, as we're not using the `Exact Match` parameter in the `sphinx` function.
Please rename this to `FileSizeChecker`
I think this test should be testing the `innerHTML` property.
I think this should be in `args.getLong(1)`.
This is a change in behavior, but I think it's better to move it to the "subprocess_group" section.
I think we can remove this file now, it is no longer used.
This is a change in behavior, but I think it's better to keep the `createAutocompleteQueryBuilder` method and just pass the `SearchDto` as a parameter to `createAutoQueryBuilder` and `SearchDto` to `createAutoQueryBuilder` and `SearchInterface`.
I think this should be `tab.present?)`
I think we should use the `htmlFor` class here.
I think this should be `include->xcursor_theme == NULL`
I think this needs to be `BloomStructRef`
This is a change in behavior, but I think it's better to check for `self.drawn` and `self.keys[0]))`.
I think this should be `winUser.getDesktopWindow()` instead of `winUser.getDesktopWindow()`
The `Cpu` can be removed.
@smarterclayton do we want to keep this?
nit: can we call it `SuppressInstrumentationationation`?
I think we should change the signature of `AWSMachineProviderStatus` to `AWSClusterProviderStatus`, because it's not really part of the API.
This class is only used in the `@Deprecated` tag, so I don't think it's necessary to include it in the `@Deprecated` tag.
I think you can just remove this and just do `from typing import GenericMeta as _GenericAlias` here.
This is a bit of a hack, but I think it's better to have a look at the code in the code base, and then have a look at the code base.
This change is not needed anymore.
I think we should also add a new one for the new one.
I think this is a good idea. It's not a good idea to have a test for this.
I think the "recreating AlertManager StatefulSet because the update operation wasn't possible" is a bit confusing. Maybe "recreating AlertManager StatefulSet because the update operation wasn't possible"?
I think this should be set to true only when the compaction is not in the current state.
I think this is a bug fix.
Please remove the `<%= raw(@description>`.
I think this should be `result.pin`
Can you please add a `in` statement?
This is the only change that affects the `map` method.
This is a bit of a hack, but I think it would be better to have a separate PR to fix this.
Why are we removing the `rule` here?
This is not needed.
`Samples.SqlServer-{SqlServerIntegration.ServiceName` is now unused and can be removed
I think this is a change in behavior. We should not be using the `skip` here.
This is a change in behaviour, but I think it's better to make it clear that the `File` is not a list of files.
I think this is not needed anymore?
I think this should be `predicate.optional(t)` instead of `==`
I think this should be TAKES_HEAP_SNAPSHOT
This is a bug fix.
I think we should remove this.
I think this is a good change. It's not related to the fix, but it's not related to the fix.
I think this is a bit of a hack, but I think it's better to have a test that checks if the caller has the same effect.
This import is unused.
Layout/SpaceInsideHashLiteralBraces: Space inside { missing.<br>Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
I think this needs to be moved to the `MinVersion` package.
We should also check if the user is not null or not.
Is this change intentional?
Why is this needed?
This is a change in behavior, but I think it's better to make the change in the commit message.
This is a bit of a hack, but I think it's better to do `if len(opts.DockerfilePath) == ""` instead of `if len(opts.Dockerfile) == ""`
This is a very minor thing but I think it's better to have a separate function that returns a string, and then use a string that returns a string.
this is a migration, we need to consider adding an index to the index in the index
This is a bit of a hack, but I think it would be better to do `if os.path.expanduser(filename)` instead of `if os.path.exists(filename)`
I think we should just make this a pointer.
don't we need to do this for every single function?
This is a test, but I think it's better to move it to the `aws.v2` package.
This is a bit of a hack, but I think it's better to just make this `connected`.
I think this should be `create_no_window`
Why is this change necessary?
I think this should be `sys.get('version', '3', '2')`.
This is a little hard to read. I think the `Dims zeros(shape.size(), 0)` is unnecessary.
I think this should be `nil` instead of `empty`.
I think we should use `_x( 'adsense', 'AdSense', 'Service name', 'adsense' )` here.
The `use` statement is not needed, it should be removed.
I think we should just remove the `!featureToken` and `!featureToken.trim()`
I think we should also add a `ClusterIP` to the `destination*` and `destinationServiceName` to the end of the list.
I think we can just remove the `import wait_fixed` part and use the `JSON.fixed` instead.
This change is not related to the fix, but it seems like it would be better to keep the change as it was before.
This is a bit of a hack, but I'm not sure if we should be using the `proposals-completed` here.
This is a bit of a hack, but I think it's better to be explicit here.
I think we should use `InternalContext.TraceContext?.RootSpan` here instead of `InternalContext.TraceContext?.RootSpan`
I think this should be `java.lang.StringUtils`
This is a bit of a hack, but I think it's better to have a test that checks for the struct and the struct is not the same as the struct.
why is this a global variable?
Not sure if this is a good way to add prohibited to prohibited. I would just add prohibited_unless to prohibited_if and prohibited_unless to prohibited_if
this seems to be unused
This is a very minor detail, but I think we should be able to remove it.
I think we can just remove the `if` here and just do `return ...`
I think this test should be moved to `create_buckets_can_be_created_with_post` instead of `create_buckets_can_json`
I think we should change the test case for `testConvertToMap` to be consistent with the other tests.
I think we should use the `top` here.
Should this be `&&` instead of `&&`?
@jridgewell Is this a breaking change?
I think we can just remove this method and just call `expect(proposal.reload).to be_approved # sanity check`
this import seems to be unneeded
What is the change here?
Is this still needed?
I think this is a bit of a breaking change, but I think it's better to be explicit here.
I think we should keep the old `pytest-cov` and `pytest-benchmark` as well.
I think this is a breaking change. I think it's better to have it in the interface.
This test should be removed.
I think you can remove this if statement since it's not used anywhere else.
Is this change necessary?
I think it would be better to use a `boolean` constant here, and then use `boolean` in the `getPlaybackSpeed()` method.
I think we should just add the `POST` attribute to the `default` section.
Can we use `_state` here?
why did you remove this test?
I think this should be `if (req.getQueryString() != null && allowedPostRequest(req)) {`
I think this should be a public API
Why are these added?
Use the new Ruby 1.9 hash syntax.
Please rename to 'applicationName'
This is a little confusing, as it's used in the `lib/` package.
I think it's better to have a separate variable for all these three.
Shouldn't we check for `Buffer.isBuffer(payload)` here?
I think this should be `padding: 0`
This is a very minor thing, but I think it's better to be explicit here.
I think we should use `git.IsPrivate` here, as we do in other places.
I think we should just remove this, and just have it in the constructor.
Can you add a `TODO` here to make sure the traffic is not configured?
I think this should be ` getProducers`
@matt-gardner Is this the right way to set the relayTemplate ensure that it is a relayAddress?
why is this change needed?
Line is too long. [81/80]
This import is unused.
I think this is a leftover from the previous PR.
I think this should be `expect(formatter_output.string).to eql("message")`
@jcotela is this supposed to be version 1.7.3?
I think we can also remove the `isJava` method.
I think this is a breaking change.
this is not needed
This file should be removed.
This is a little confusing, as it's a bit confusing.
This is a public API, so I would prefer to have it as a class property.
You can remove this one.
`array` is not a public API, so this type should be `[namespace`
I think this should be `API-MS-Win-Core-Localization-Obsolete-L1-1`
This is the only change that affects this PR.
Shouldn't this be `return table`?
This should be `bus.save(Program.name)`
Maybe we should add a `volInfo.Volume.ObjectMeta.Namespace` to the volume name as well?
I think this is a good change. But I think it would be better to move it to the `else` block.
The `replace` should be removed.
I think this should be `abcdefghijklmnopqrstvwxyz0123456789`
Not sure if this is a good idea to test for this.
This is a bit confusing, as it is used in many places. Maybe we should just remove it from the `ast_error`?
This is a bit of a hack, but I think it's better to have it as a class property.
This is a bit of a hack, but I think it's better to just check if the user is in the data.
I think this should be done in the `setUnsubscribed` method, since it's not used anywhere else.
I think this should be in the `fetch` method, since it's not used anywhere else.
I think this is a leftover from debugging?
Why not just `const`?
Why is this necessary?
I think this is a breaking change.
Can we make this `prefQueueAddToFront` instead?
The `@counter` is not the correct type here.
You can use `TriggerManager.class` here.
This is a little confusing, since the header tags are the same.
This is a bit of a hack, but I think it's better to just use `tab_url(idx)` instead of `get_url(idx)`
This is a leftover from the previous commit.
I think this should be `reverseNum(digit, protected=0)`
I think this is not needed.
Do we need to change this?
This interface is not used.
I think we should use `dict(db.logger.Infof(...))` here.
I think we should add a `link` to the `shs` class.
This is the only change that affects the other changes.
I don't think this is needed.
I think this should be removed
I think this is a leftover from debugging.
This is a breaking change. I think it's better to move it to the top of the file.
I think this is not needed.
is this a typo?
For this function, we should also set the `device_id` value to `true` in the `Caffe::Brew` method.
Why do we need this?
I think we should add a check that `not isinstance` is not None.
I think this is a good change. The executor address is not empty.
Just a question, why is the error returned here?
Should we also check the `working_dir` here?
@smarterclayton do we need to get the return value from `Locale.ROOT`?
I think this import should be grouped with the other imports.
I think we can use some more descriptive name for this.
This is a change in behavior, but I think we should change the default behavior of `properties` to `forTable` and make it more explicit.
Maybe we should move this to the top of the function so that it is not only needed for the user?
This is a change in behavior, but I think it's better to keep it in the `utils` package.
I think we should move this to the `engine.updateTaskENIDependencies` method.
Why not just remove the `[return_owner, 'DB__ROOT')`?
This should be moved to `cFlags.go` since it's not actually used anywhere else.
I think this is a breaking change.
This is a pretty big change, but I think it's better to be explicit here.
I think the `error` is missing here
I think we should just use `ErrBadNetwork` here.
This is the only change that affects the API.
I think this should be `self.assertNotRetry`
Should we add a check here that the method is not CompositeType?
Is this still necessary?
This is not needed.
This is a TODO, but it's not really a TODO.
@kroitor since you're using the `throw` value here, you should use `typeof(name)`.
Is this test case still relevant?
This is a bit of a hack, but I think it's better to move it to the top of the file.
Why do we need to check for `tuple` here?
This is a change in behavior, but I think it's better to keep the `.walk` here.
I think we should be able to remove the `safe` argument from the `get_file` method.
This should be `str`
Why did you change this?
@matt-gardner Is this supposed to be a `else`?
The `Api` class is not used in this class.
I think this should be `.DeepCopy()`
I think we should remove this file from the PR
I think we should remove this line.
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
This is a bit of a hack, but I'm not sure if it is worth it to just add the `#ifdef ESP32` to the `#ifdef ESP32` above.
I think we can remove the `iFromPeers` variable now that we have the `ingressRule` variable.
I think this is not needed.
I think this is a good change. It might be worth moving it to a separate commit.
This is a duplicate of the existing logic.
This is a breaking change.
This is a little confusing, as it is a bit confusing to have a default argument.
Why do we need to do this?
why did this change?
I think we should keep the `Automatically send usage statistics` and just add the `Automatically send` tag.
I think this is a leftover from the previous commit.
This is a change in behavior, but I think it's better to move it to the `const` block.
I think this should be removed, since it's not used anywhere else.
Is this change necessary?
I think we should use the same logic for the other cases.
I think this should be `ecec.common.require`
Rails/DynamicFindBy: Use find_each instead of dynamic find_each.
I think this should be `if (ev->flags & ASIO_DISPOSABLE) != 0`
Is this a typo?
This is a bit confusing, as it is not used anywhere else.
This should be `GroupByError`.
The `state_data` is used to set the `StateTracker` to `false` in the `get_data_` method.
Why not just make this `public`?
Why did you remove this?
I think this is a good idea. But I don't think it's worth it to just remove this, since it's not a valid metrics.
This is a bit of a hack, but I think it's better to have a separate PR to fix this.
I think this should be `zpoolListRequestRejectCounter prometheus.Gauge`
This is a bit of a hack, but I'm not sure if it's worth it to just make this a method on the `/` instead of a verb.
I think this is a leftover?
Why is this needed?
do we need this in the base class?
You can remove this line.
I think we should use `--reupload` instead of `store_true` here.
I think it would be better to use the `// +k8s:openapi-gen` field here instead of the `// +k8s:openapi-gen` field.
I think this is not needed.
This is a bit of a hack, but I'm not sure how to fix this.
Why is this one not just a single `Commit`?
is this a typo?
I'm not sure this is the right fix. I'm not sure we should be using the semantic_form_for checkout here.
This file is not used anymore.
I think this should be `api`
I think this is a good change. The `text += FloatToStringtStringHex(val);` is the same as the `text += FloatToStringtStringHex(val);` in the `else` block.
I think we should use `AppName` here.
I think this is a breaking change.
Can we use `__dirname}` here?
This is a breaking change. I think it's better to keep the list as a list.
This is a change in behavior, but I think it's better to keep the `ObjectObject` and use the `ObjectObject` type here.
I think this should be `opts.fee` instead of `opts.fee`
I think this is a bit confusing, since the conditional is a conditional on the block.
I think we should use the `metav1.Time` here.
Why is the `VerifyFingerprint` needed here?
I think this is a leftover.
I think this is a leftover from the previous PR.
We should probably use `LOG.finest` here.
Is this a typo?
I think we should just remove the `ReadAsync` method and use `ReadAsync` directly.
I think this should be moved to the `spec.Xattr` package.
This is a very minor thing, but I think it's better to move it to the `ensure` package.
Please use `name.assign(demangled)` instead of `name.assign(demangled)`
I think we should add a link to the service to go-algorand.
Why is this change necessary?
Use `self.config.get('content-encoding', None)`.
This is a breaking change. We should probably add a `@private` annotation here.
I think we can remove the `delegate` field from the array.
This is the only place where we can use `host.skip_set_env?` instead of `skip_msg.nil?`.
I think this should be `go-algorand/protocol`
I think this is not needed.
@bartonjs, I think this is a leftover from the PR.
it's a minor thing but I think we should change the signature of `close` to `close` in the future.
@bparees I think you can use `Which` instead of `Which Dockerfile` here.
This is a bit of a hack, but I think it's better to just change the `.setOptions()` method to `.setOptions()` instead of `.setOptions()` since it's a `.set` method.
I think this is a bit confusing, since it is a bit confusing to have a list of offsets, and it's not a list of offsets.
I think we should remove the Reader field and just use the Reader field.
This is a change in behavior, but I think it's not a problem. The `peak_num_threads` is not a boolean, so it should be removed.
I think this should be `LOG.info(` instead of `LOG.info(`.
I think we should keep this.
This should be changed to `ArticleDataFixture::`
This is a bit of a hack, but I think it's better to have a test case for this.
why remove this?
This is a bit of a hack, but I think it's better to just pass the `auth_header` as a parameter to `with_for_update` and pass it as a parameter to `with_for_update`.
I think we should remove the `Check` method from the previous line.
I think this change is not needed
This method is used to create a new one in the query, so I'm not sure if this method is needed.
This is a bit of a hack, but I think it's better to have a test that checks for the sample block chain.
Why is this change necessary?
Can we change the type to something more meaningful? I think it's a good idea to include it in the code base.
This is a change in behavior, but I think it's better to use the `0x0804` constant here.
I think this should be `if (tmpInt >= 0 && tmpInt < 128)`
I think we should just use the `ramdisk` option here.
I think this is a leftover from the previous commit.
(Pre-existing) I'd prefer to have a test for this.
Why not just have the license header file here?
What is the difference between `HashSet(", ", ", ", ", ")")` and `HashSet(", ", ", ", ", ", ")")`?
"Approved" should be "Secrets"
I think this should be `return <ProgressBar small />`
I think this is not the right place for this. The `#` is not the `:` so it should be removed.
I think we can remove the `if` here and just use `if` instead.
> Also, please use %u for consistency with the rest of the file
I think we should add a new helper function to make sure we don't have any other code that we can easily easily detect the empty string.
I think this is a good change. It's not a big deal, but it's a bit odd to see how it works.
I think this is a leftover from debugging.
I think this should be set to true by default, otherwise it will be false by default.
This is not a good place to put it in the view. It's a bit of a hack, but it's a bit of a hack that's not a good idea.
Can you make this a bscMainnetPreverifiedHashes = []string{
This change is not needed anymore.
This is a very minor thing, but I think we should be using `FlagConnectionEnableAlias` here.
I think this should be `Null()`.
This is a bit of a hack, but I think it's better to have a separate method for it.
This is a little confusing. The `instr_is_scatter` function is only used in one place.
Why do we need to change the name of the variable?
This is a change in behavior, but I think it's better to have a name that returns the application.
You can remove this line
This is a bit of a hack, but I think it's better to check for the `httpplib` instance instead of just passing the `httpplib` instance.
This is not needed anymore.
I think we should change this to retry, rather than retry, right?
I think we should remove this file.
I think we can remove this constant now that we are not using it.
This is a bug fix.
I think we should keep the old version as well.
I think this should be moved to the `.().().().MaintenanceMode` package.
I think this is not correct. The `!(bs1 > Bond::STEREOANY)` is not needed.
I think this is a bug fix.
I think this should be `return sseq > o.asflr, osseq > 0`
This is a bit of a hack, but I think it's better to check for `null` here.
Can we use the `update_first` helper here?
I think we should be able to use `uint32_t count = nullptr;` here.
What is this line doing?
This is a breaking change. It should be `setParameter`
Is this the right way to do this?
This is a breaking change.
Is this used anywhere?
I think we should be able to get rid of the `PMIX_RELEASE` function and just pass it to `PMIX_RELEASE_IS_FREE`.
I think we should just remove this test.
This is not needed.
I think this import is unused.
This is a bit of a hack, but I think it would be better if we just `|| found_env_vars[:is_pe] == 'false'` and then check that the value is `true` if it's not `true`
I think this should be a `resource.Mutex` instead of a `resource.Mutex`?
I think this should be `const`
I think we should add a link to the name of the variable to make it clear that this is a `_check_attributes` field.
I think it would be more clear to use a `++count` here.
This is a breaking change. I'm not sure why the old code was removed.
I think this should be `flag.CommandLine.Parse(]string{"test.coverprofile", tempCoveragePath()})`
This is a little hard to follow. I think it's better to move it to the `dotnet` class.
I think we should log the error here.
This is a breaking change. I think we should change the type here to `<int>` and `<int> EventId` to `<int> EventId` and then change the type to `<int> EventId` to `<int> EventId` and then change the type to `<int> EventId` to `<int> EventId` to `<int> EventId` and then change the type to `<int> EventId` to `<int> EventId` to `<int> EventId`
Thanks for the fix. This is a bug fix.
Why is this function needed?
This should be `!def== NULL`
This is not needed anymore.
Is this change related to the PR?
This is a bit of a hack, but I think we should have a better name for this.
I would add a description to the description of the summary
This is a bit of a hack, but I think we should just remove the `TrimPrefix` function and return the `Header` object here.
Why is this change necessary?
this is not needed anymore
This is the only place where we're using the `unknown_internal_yarpc` function. I think we should just remove the `unknown_internal_yarpc` check.
This is a breaking change. It's not a problem, but it's a bit of a hacky to have a test that checks for the `Map<String, Integer>`.
This is a bit of a hack, but I'm not sure if it's worth it to return a `null` value here.
I think this is a bit of a hack, but I'm not sure if it's worth it to make it more clear what the problem is.
This is a change in behavior, but I think it's better to move it to a separate PR.
This should be `HealthCheckPath`
I think we should just use `vol.Annotations[string(v1alpha1.StorageClassKey)] = scName` here.
why not just `SubnetGatewayIPV4Address`?
This is a bit of a hack, but I think it's better to have a test that checks for the link.
The original code is actually correct, because we don't use this in the `equalise_attributes` file.
I think we should add a return here to make sure we don't have a `err` error.
We should probably just remove this line and just delete the line above.
Metrics/LineLength: Line is too long. [83/80]
I think we should keep this, but I think we should keep it as is.
@fboenzorrilla you have to do this in a separate PR. I think it's better to do it in a separate PR.
I think we should be able to remove this method altogether.
I think we should add `delete` to `requiresSecret`.
I think this should be `ReadRead`
This import is unused.
I think we should add a `Map` class here.
How about we move it to `corev1`?
You can use `&mc->simd[0]` here.
This is a change in behavior, but I think it's not a good idea to change it.
Why do we need to check for version version?
Why not `const`?
This test is not needed.
I think this should be `taskGroupNameDefault`
This is not a good way to do this, but it's not a big deal.
This is a change in behavior, but I think we should be able to remove the `2019` argument from the `BACK_COMPAT_TO` argument.
I think this should be a separate commit
I think we should be able to remove the block cache altogether.
I think this should be a `return isinstance(X, B, ...)`
Is this a breaking change?
I'm not sure if this is the right fix. The `omp_set_num_teams` is not used in this function.
why is this necessary?
I think this is a good change. But I don't think we need to add this.
I think this should be `find_by!` instead of `find_by!` since the service's `update_trails_state_for` method is called.
I think we should use `f.Close()` here.
I think we can move this check to `api/v1/api`
@jcotela is this change intentional?
I think we should add a `json.join` field to the `Tags` field.
I think we should just remove this function.
This is not needed.
I think this is a good place to put this file.
This method is not used anymore.
Do we need to check for `it.endBound` here?
Nit: I think this should be moved to the `Chain` package.
This is a bit of a hack, but I think it would be better to do it in a separate PR, and then do it in a separate PR.
This is a breaking change.
This should be in VERSION_RULE_ALL, not in VERSION_RULE_ALL
I think we should move this to the `loginOptions` list. We should also move the `loginOptions` logic to the `loginOptions` list.
This should be `focusElement_`.
This is a bit of a hack, but I think it's better to have it in a separate commit.
This is a bit of a hack, but I'm not sure why you had to change it.
I think this should be `if`
I think this is a leftover from the previous PR.
nit: I think this is a little strange to me, but I think it's better to be explicit here and just call the function `ACMESelfCheckFailurePolicyRetryForever`
I think you can just use `import` here.
This is a bit of a hack, but I think it's better to do it in a separate PR.
I think this needs to be added to the `IntegrationTests` interface.
I think this is a leftover from the previous commit.
I think this is a leftover.
nit: `const makeDir(getDirName(path) => writeFile(path, content))`
Is this the only place where we set the `go` option?
I think this should be `btc.+`
remove empty line
This function is only used in one place, so I would just call it `wl_callback_send_done`.
This is a bit of a hack, but I think it's better to just make this a `new_record` variable and then just do `!replacement` instead of `if persistable?`
This is a bit of a hack, but I think it's better to move this into the `if` statement, and move the `if` statement above the `if` statement.
I think we should just return `nil` here.
Just curious, why do we need to set the `userInputState` attribute here?
I think you can just remove the `find_project` method altogether.
Why not just use `NewFactory`?
I think this should be `nil` instead of `nil` since it's a `ErrUnimplemented`, since it's a `ErrUnimplemented`, not a `ErrUnimplemented`.
This is a breaking change. It's not a big deal, but it's not a big deal.
I think we should just remove this code.
I think it's better to use `HandleUpdate` here.
I think this test is not needed.
This is not needed.
I think this should be done in `resetIndexToServiceSpansCache`
Can you just test the content of the model?
Shouldn't this be `select-follow -t`?
This is a little confusing, as the `srcPort` is not a `*` of the `src` of the `src` of the `src` of the `src` of the `src` of the `src` of the `src` of the `src` of the `src` of the `src` of the `src` of the `src` of the `src` of the `src` of the `src` of the `src` of the `src` of the `src` of the `src` of the `src` of the `src` of the
This is a breaking change. I think it's better to make it public.
I think it would be better to use the `settings.icon` constant here instead of the class name.
Is this `RegisterBootstrapContainer` ?
@smarterclayton do we want to keep the `v` in the log message?
This is a bit of a hack, but I think it's better to check for `label` instead of `text` as the default value.
You can use the `getSchema` method here.
I think this should be `if cfg.ConfigTemplate != ""`
I think this should be done in `lib/common/constants.go` and `lib/common/constants.go`
I think we can remove the `.published` check here.
Why are we changing the behavior here?
I think we should add a TODO here to remove this and add a TODO in the future.
Nit: I think this should be `defaults.PRIVACY_GROUP_DOES_NOT_EXIST`
I think it's better to use `typ` here.
I think you can just remove `std::cerr << "Assertion (" << check_expr << ":" << std::endl;`
I think this should be moved to `testutil.create_lambda_function()`
I think we should keep the old name here as well.
I think we should be able to remove the `if (skewFromParent != null && isLocalSpan(node.value()))` check here.
Shouldn't we also have a test for this?
This is a little strange, but I think it's better to return a "", object, instead of using a `context.Context` object.
I think this is a good place to put this. This is a bit of a hack, but I think it's better to just have a function that returns the `events` and then just use that here.
I think this is a breaking change. The `favorite` is not a valid path for the `favorite` class.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
Can you add a spec.json and check if the height is empty?
I think this should be `[MetadataRevision]map[string]bool`
I think this is a good idea to move this to the `attempt_drm_backend` function.
This is a test, but I think it's better to move it to `yield`
This is the new fix.
I think we should not use the `name` value here.
Why do we need to change this?
Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this should be done in the `RestConst.REST_INVOCATION_CONTEXT` class, since it's not used anywhere else.
I think this is a good change. It's not a big deal, but it's a bit odd that the `File.Exists` and `File.ReadAllText` are only ever used for the `File.Exists` method.
Would it be possible to do this in a separate PR?
It's better to move this to wlr_input_device_destroy() and wlr_libinput_tablet_tool_destroy()
Is this needed?
I think we should check for `props.selected` here.
Unfortunately, this is not a change in behavior, so I would just change the default value to `True` and remove the `configureCmd += ' --mode=release'` in the build.
This is a bit of a hack, but I think it would be better to have a method that returns a boolean.
I think this is a good change. It's not a big deal, but it's a little strange that the `err` is not a `nil` check.
Why is this change necessary?
I think this should be `return positive(argName, number, null);`
is it possible to have an `id` as a string? i.e., `.to_sym` is not a string but it's not a string but a string?
This is a bit of a hack, but I think it's better to have a separate PR to fix this.
Shouldn't this be `CACertificate`?
I think this is a bit of a hack, but I think it would be better to just return `None` here.
This test was not working. I was looking at the test suite and it was not working before.
this is a little strange, since `vic-machine` is a `string`, right?
Why are we removing these?
This is a breaking change. The `Client` property is not used anymore.
This is a bit of a hack, but I think it would be better to have a separate function that returns a replacement.
I think this should be `@Deprecated`
This should be `tabwidget.TabWidget`
This should be handled by the `writer_->getGuid()`.
Please keep these as `*`
Why not just add the `public` field to the `CreateSourceSecurityGroups` field?
Is this change intentional?
This is a breaking change. We should remove the `Comparator getDocComparator` and remove the `ComparatorComparatorComparator` method.
This is a bit of a hack, but I think it's better to move it to a separate method.
I think this should be `enumerable`, since it's a boolean, not a boolean.
I think we should just remove this now that it's not used anywhere else.
Can we put this on the `spack.version`?
I think this should be `min_bound === null && $this->min_bound >= $i`
remove empty line
I think this should be `if (!tail_)`
Is this the correct error?
Use the new Ruby 1.9 hash syntax.
Why did you change this?
This is a bit of a hack, but I'm not sure if it is worth it.
I think we should add `delete` to `requiresSecret`.
This is a test failure.
I think this should be a `_is_editable_prop` method, since it's not a property.
Should we also add a `*` here?
This is a bit of a hack, but I'm not sure if it is worth it to make the code more readable.
nit: can we rename this to `plusMinutes`?
I think this should be `LOG(WARNING)`.
Redundant `self` detected.
I think we should add a `*` here.
I think this is a bit of a hack, but I'm not sure if we should make this a bit more verbose, and just have a `@return` statement on the `_trail` method.
I think this should be a separate commit
Why do we need this change?
I think we should add a new flag for this to be able to use the new one.
This is a bit confusing, as it is already added.
Is this used?
this is the only change needed here.
I think this should be a `Level *logging`
Why did you remove this?
Shouldn't this be a very small optimization?
This is a change in behavior, but I think it's better to make `resolutionOp` a `case` and `case *resolutionOp` as opposed to `case *resolutionOp`.
I think this should be `query.visit(v)`
What's the reason for this change?
I think this should be a separate PR, but I think it's not a big deal.
I'm not sure if this is the right place for this check. The `not_a_peer` function is used for the `peers` argument.
I think this should be `serge@jkiss.org`
Can you move this import to the top of the file?
This is a change in behavior, but I think we should move it to a separate commit.
Please use `SharedMemTransportDescriptor::` instead of `Library::`
This is a bit of a hack, but I'm not sure if it's worth it to make the test fail.
Line is too long. [90/80]
This is a little weird, why is this check needed?
I think we should just remove the `if` here.
Should we have a test for this?
This is a little confusing, since the conf config is not being set.
This is a bit confusing, as it is the first sentence of the method.
Should we also add `apicontainerstatus` in the `apierrors` package?
Why do we need to do this?
I think this is a good change. It will be nice to have a test that checks for the class name and the class name.
"will be serialized" -> "with the containing object does not have a field mask"
This method is not used anywhere else.
nit: `printMemberAnnotations` is not a boolean, so you can use `print(this, arg)` here.
Should we also move this import to the top of the file?
Hmm, this is a change in behavior. I think it's better to change the type to `operation`.
This is a bit of a hack, but I think it would be better to have a test for this.
This is a change in behavior, but I think it's better to check if the field name is set in SearchAttributes and not in SearchAttributes
I think this should be a constant in the `pkg/config.go` file.
This is a little confusing, why is this "Data will be deleted"?
Is this supposed to be `expect(object.numeric?).to eq(false)`?
Why is this file needed?
I think this should be `config.val.url.searchengines[term]` instead of `config.val.url.searchengines[term]`
Why is this no longer needed?
Missing `before_save` here.
This is a change in behavior, but I think it's better to have a test for `sorted()`
Please add a license header.
Please remove the `#include <fastdds/rtps/builtin/BuiltinProtocols.h` line.
The `expressionMetaModel` is used to create a new object, so I would just remove it.
This is a bit of a hack, but I'm not sure if it is worth it to include the header header, and then just include it in the header file.
This is not needed, since the constructor already has a CosmosElement
Why are we returning an error now that we never return an error?
I think it would be better to use the `localCache_` variable here.
I think we should keep this here.
I think this should be done in a separate PR
This test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test is failing because the test was failing because the test was failing because the test was failing because the
I think this should be `isVersion()`.
This is a no-op, right?
Why do we need this change?
I think we should also have a `GET` in the `/bzz-tag` namespace.
Why is this error ignored?
This is a bit of a hack, but I'm not sure how I feel about it. I'm not sure if it is worth it.
Is it possible to have a null value?
We can remove this file.
The `TODO` should be removed.
This is a bit of a hack, but I think it's better to just return `IsBuildDefFile` here instead of `IsBuildDefFile` directly.
Is this change intentional?
The subnets tag should be renamed to `subnets`
Should we make this a `region` field?
Why is this test being removed?
I think this should be `proposal_link_text` instead of `proposal_url`, since the feedback_url is already in the `app/services/mailer.proposal_link_text` namespace.
I think this is a good idea. It's not a good idea to use the `Puppet` variable here.
I think this should be called `getRecentlyFinishedFlows`.
`repo.className` is not a backup repository, so this is a backup repository.
This is a bit of a hack, but I'm not sure if it is worth it to make the method `@return` and `@return` the same as the one above.
This is not right. The error message should be "Failed to kill on some hosts/)"
`close` is called only once, so we can remove the `done` call here.
I think this is a good change. I think we should just make it a `rclone` field.
This is a very minor thing, but I'm not sure it's worth it to make the neg_prob a configurable configurable configurable neg_prob.
Why is this needed?
Is this change intentional?
I think this one is still useful.
I think we should just use `FakeID` here.
This was changed to `import (isort.util.influxdata/flux)` but I don't think it's needed anymore.
I think this is a breaking change. We should probably move it to a new class.
This is a bit of a hack, but I think it's better to have a test that checks for the message.
Can we make this `BOOL`?
Why is this needed?
I think we should keep this and have the same committee as the committee in the committee.
I think it's better to use QUERY_ID as the default.
I think this should be `a registration entry with trust domain[0]`.
I think this is a breaking change. It's not a big deal, but it's not a big deal.
This test is not related to the current PR, but I think it's better to remove it.
I'm not sure if this is the right way to do this. The `Rails.MINUTES` is not a valid default, so I'd just add it to the `Rails.MINUTES` class.
I think we should remove the ` setValues` prefix here.
I think this should be `else if`
Nit: I think this import is unused.
Is this a BC break?
I think we should use `ant` instead of `Encoded authorization failure message`.
I think we should keep this test in `UnitTestDocTests` and remove the `UnitTestDocTests` in `UnitTestADVect.py` and `UnitTestADVect.py` tests
Why is this needed?
could you explain why this is necessary?
I think we should just start upstream with error and start upstream with error.
Is this the correct way to do this?
This test is not really testing what we want. I think we should test for the `should issue deprecation warning` spec since it's a test file that doesn't have a test file.
I think this should be named `write.object-storage.enabled_enabled`
is the code that uses `String()` anywhere else?
Is it possible to have a constant for the size?
Why is this needed?
I think this should be moved to a helper method.
I'm not sure if this is the right fix. The `getuid()` method is used for the new pid to be used for the usock, but it's not really the case anymore.
This is not a good place to put it. It's also used to render the pipeline CFN template.
This should be `protected $clones`.
This import is unused.
Should we use `RefreshAndGet` here?
I think this is a good change. It's not a big deal, but it's a little strange that the caller has to pass in a `optdict` object.
Should we add a status status here?
This is a change in behavior, but I think it's better to use a different name.
Layout/SpaceAroundOperators: Surrounding space missing for operator /.<br>Layout/SpaceAroundOperators: Surrounding space missing for operator /.<br>Layout/SpaceAroundOperators: Surrounding space missing for operator /.<br>Layout/SpaceAroundOperators: Surrounding space missing for operator /.<br>Layout/SpaceAroundOperators: Surrounding space missing for operator /.<br>Layout/SpaceAroundOperators: Surrounding space missing for operator /.<br>Layout/SpaceAroundOperators: Surrounding space missing for operator /.<br>Layout/SpaceAroundOperators: Surrounding space missing for operator /.<
Why is this necessary?
I think this should be `_notebook_notebook`
I think we should remove this from the `command` module too.
This is a change in behavior, but I think it's better to have a single function that returns a single function.
I'm not sure if this is the right place for this. The `NEXT` part is not really needed.
I think this is not needed.
I think this is a bit of a hack, but I think it's better to move it to a separate method.
Can you make this `static`?
This is a bit of a hack, but I think it would be better to have a `var` statement in the `else` block, and then just return `info` here.
I think this should be done in `WriteDeadlineAsync` and not here.
I think this should be `public`
I think this is a breaking change.
This is a breaking change. I think we should be able to remove the IStringValueRenderer parameter from the class and keep the IStringValueRenderer parameter.
This is not correct. `ip6 = iter(ip6).next()` will return `None`, which is not the case.
I think you can just do `returnPartly;` instead of `true` here.
I think this is a good change. It's not a big deal, but it's a little strange that `core.TmpOutputFormat` is a list of paths, and it's not a list of paths.
Why did you change this?
This is a change in behavior, but I think it's better to do it in a separate PR.
Shouldn't we use `!=` here?
Final newline missing.
I think it would be better to use `|| scoreMode.TOP_DOCS || scoreMode.TOP_DOCS_WITH_SCORES` instead of `|| scoreMode.TOP_DOCS || scoreMode.TOP_DOCS_WITH_SCORES`
I think this should be `substitutionPatternName = "pattern"`
I think this should be `return null === $source`.
I think this is a bit of a hack, but I think it's better to have a test that checks for `compressed` and `binary` as the default.
Why not just have a `clusterRegionGetter` variable here?
This is a breaking change. It's not a big deal, but it's a bit odd that the `_serializer` is not being used in the `JsonSerializer` class.
This is not needed, we already have `check_client_version` in `app/websocket`
This is a bit of a hack, but I'm not sure if we should change the name of the variable here.
This is a good example of how the `guid` works. I think it would be better to have it in the `before_action` package.
I think this is a breaking change.
This should be `full_name` and `rule_name` (and the same below).
You can remove this line
I think we should use the `DataContainer` class instead of the `DataContainer` class.
I think this should be `std::string GBDT::DumpModel`
This test is not related to the PR, but I think it's better to test the Welcome to C2 and test the Welcome_mail.
I think we should just remove this, it's not used anywhere else.
This import is unused.
I think this is a little too late for me, but I think it's better to just remove it from the `name`?
` lines` should be on the ` lines` operator.
I think this is a bit of a hack, but I think it would be better to have a method that returns a `List` and then check that it's a `List`
This import is used by the other goals in this file.
I think this is a leftover from the previous PR.
This is a change in behavior, but I think it's better to use a method that returns a single `AuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuthAuth
The correct name here is `[assembly: System.Security.AllowPartiallyTrustedCallers]`.
Should we use `apimachinery/pkg/apis/meta/v1` here?
I think we can move this to the top of the file.
I don't think this is needed
Is this change necessary?
This is a no-op, right?
I think this can be removed now, since it's not used anymore.
I think we should just remove this entirely.
Please remove this line.
I think we should move this to the `manage` class.
I think we should just remove the refresh and use the refresh at the start of the test.
I think this should be `len(a) != 2`
Why is this needed?
This field is already attached. It is only used in the form, so it should be removed.
This import is unused.
I think this is a bit of a hack, but I think it's better to have a test that checks if the build is not running.
I think this is a good change. It is not related to the fix, but it is a good change.
Why not use the `StateNodes` property here?
I think we should be able to remove the `thrift_protocol_write_message_begin` altogether now.
Why is this change necessary?
This should be `oexec "exec"time"`
This is a very minor thing, but I think it's better to use a `ComponentResourceManager` property that takes the properties as a parameter and then pass the resources to the constructor.
I think this is not needed.
I think this is a bug fix.
I think this should be `GROUP_CHUNK_SIZE`
Please use ` &&` instead of `=`
This is a change in behavior, but I think it's better to use the `determineNonce` method here.
I think this is a bug fix.
This is a breaking change. It's not a big deal, but it's a bit confusing. I'm not sure if this is the best way to go.
I think this is a change in behavior. We should not be using the old version.
This is a bit of a hack, but I think it would be better to have a method that returns a `List` and then call `getFlattenedFieldConfigs` in the method that returns the `List` and then call `getFlattenedFieldConfigs` in the method.
This should be `Math.min(0, 0)`
This is not needed anymore.
This is a breaking change. It's not a big deal, but it's a bit confusing. I'm not sure if this is the best way to go.
I think this is not needed.
I think this is a bug, we should just use `AddStateChangeEvent` here.
Can we have a `*ManagedPlugin` type of `PluginConfig`?
This is a little confusing, as it will not be used in the `AWS_JSON_CONTENT_TYPE` module.
Why is this interface public?
Why do we need this function?
I think this needs to be moved to `System.Collections.Generic`?
This is a bit of a hack, but I think it's better to move the maneuver_overrides_file to a separate file.
This is a change in behavior, but I think it's better to move it to the interface.
Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think we should add a `versionDetailsPatch` constant in `version.js` and `version.metadata` to make sure we don't have any other template in the future.
I think we can remove the assertion on `DocIdSetIterator` now that we're removing the `getClass()` method from the `Dataflow` method.
I think this should be `os.makedirs(folder)==True`
I think this should be `0.0.0`
this is not needed. It's already in the list
This is a change in behavior, but I think we should be able to remove the executor_() call here.
Can you add a space after the comma?
This is a temporary temporary, but I think it's better to use `chown` instead of `chown`.
Please add a line like this to the top of the file.
This is not needed anymore
I think this is a leftover from the previous commit.
This is a bit of a hack, but I think it would be better to use the `0` constant here instead of the `0` constant.
I think this should be `AuthFree`
Why not just call `New` directly?
Why is this being removed?
Line is too long. [85/80]
Is there a way to do this without having to do anything?
I think it would be better to check if the array_key_exists is set.
Same as above, this is not needed.
I think this needs to be an overload of wsAppManager.
I think we can remove the `spanVersion                  ` field from the `spanAnswer` and `ClientImpl                            ` field from the `ClientImpl                            ` field.
This is a bit of a hack, but I think it's better to have a method that returns a `ValueFormatter` and then use it in the `get` method.
I think this should be `(self, by, axis=0, as_index: bool)`
Can you please add a `pkg/api/github.com/GoogleCloudPlatform/compute-image-tools/gapi-cloud-osconfig/v1alpha1` import?
@bparees this is the only change that affects the task task.
I think this should be `subtrace.IsNullOrEmpty(Tags.Origin)`
I think we should also add `metav1` here.
I think we should just make this method `getDispatchMethodEnabled` and remove the `getDispatchMethodEnabled` method.
I think this should be `qTimeout` instead of `setTimeout`
Why not catching exception?
This is a bug fix.
I think this is a good change. It's not a problem, but it's a bit odd to have a test that checks for the `escapeExpression` case.
I think this should be `newType.getDerivedStateFromProps!=null`.
I would use `45_date` here, not `date1`.
Why not just use the `$currencyData` variable here?
This is a TODO, but it's not a real problem.
This should be `final`
This is not needed.
@aloubyansky as far as I can tell, this is a bug.
The `name` class is not used anymore.
I think we should remove this entire file, as it's not used anywhere else.
I think this should be `i - H2O_MAX_TOKENS`
I think this is a change in behavior. We should probably have a look at the code to make sure that the `no-docstring-rgx` is not in the same package.
I think this should be `user-read-currently-playing`
nit: I think we should be able to use `const` here too
Shouldn't this be `LOG(ERROR) << "Remove exist dir failed of checkpoint : " << checkpointPath`?
This is not needed.
I think we should log the status here.
This test is failing because the clock is not in the test, right?
I think this was a typo.
I think we should use the `GROUP` field here.
this is a bug fix. It's not related to the fix, but it's not related to the fix.
I think this should be `*byte`
I think this should be a `Boolean` instead of a `Boolean`
1. Go to `date`? 2. I think it's better to have it be a `date` option.
please update the docstring
should be `NewMasterIndex()`
I think this should be a separate test, not a separate test.
Space inside { missing.<br>Space inside } missing.
I think we should be able to remove this variable from the code base.
I think this should be `else`
can we add a `:funder_content` column in the DB?
This test is not needed.
Is this really necessary?
This is a bit of a hack, but I think it's better to move this check to the `if (pzLocked)` check above.
This should be removed.
@jridgewell I'm not sure if this is the right fix. I think we should change the name of the field to something like `moduleSlugs`
I think this is a bug fix.
Can we add a `json.Map` type for this field?
I think we should test the output of the `propropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropropro
We should probably log this message in `LOG.finest`
I think this should be `volatile` instead of `volatile`
I think this is a leftover from the previous commit.
This is the only line changed in this file.
I think this should be reverted.
Why remove this?
This is a breaking change. It's not a problem, but if you want to be sure that the plugin has already happened, you should be able to use `[plugin]` instead.
I think this should be done in `loginView.requestFocus()` instead of `if (TextUtils.isEmpty(password))`
I think this is a good change. It is not a test, but it is a test case.
Not sure if this is a good idea. I think it would be better to check `exc_info.value == (exc_info.value)`.
I think we should add a `TODO` to the top of the file.
This is a bit confusing, as it is a `*` in the `*` and it is a `*` in the `*` and it is a `*` in the `*`
Why are we removing this?
Why is this line changing?
why not use RamUsageTester.sizeOf(dic.wordHashes)?
@matt-gardner Is this what you meant by `io.Writer`?
I think this is a bug fix.
can we add a `null: false` default here?
Line is too long. [87/80]
I think we can remove this and just use the `@Rule` annotation.
Could we have a `ManifestFiles.read` method that returns null?
Why not just pass in a `Update` method?
I think we should also update the timeout to be None.
This should be `w.LogWorkflowInfo("Workflow %q finished clean up.", w.Name)`
@jridgewell I think this is the right place for this. I think it's better to move it to the `REDIS_HOST` package.
You can use the LABORATORY constant here
I think this is a good idea. If we don't have any access to the password, we can just use the password in the controller, so we don't have to add any access to the password.
This is a change in behavior, but I think it's better to move it to the `utf8` class.
I think we should be able to remove this now that we are not using it anywhere.
Is this needed?
Wondering if we should make this a `expect` or `expect.not_to raise_error`?
`If True` is applied on numeric columns (including booleans) only.
I think this should be `Collections.emptyMap()`.
Why is this needed?
This is a bit of a hack, but I think it's better to check for `strtype` here.
remove this line
this is a bit of a hack, I think we should just have a migration to make sure we don't have a migration to change
This is a breaking change. The `Enabled` field is not set in the `System` field.
I think this is a good idea to move to a new file.
This is a very specific thing, I'd rather not have it in the `__init__` method.
I think this is a good change. It's not a great idea to testSuite.name.
Please don't change the doc of the tests.
this is a bug fix.
I think this should be `path.resolve` instead of `path.resolve`
I think we should be able to remove the `GoQuorum` argument from the `isQuorum` method and just call `getChainId()` directly.
this is a bit of a hack, but I think we should just have a `orElse` function that returns the `Insecure` object, and then check if `e.zone.ctx` is set.
I think this is a leftover from the previous PR.
This is a breaking change. I think it's better to keep it as internal.
This is a bug fix.
I think we should keep the same change in the `installFailingMessage` and `platform.gcp.project`.
Why do we need to change the type here?
I think this should be `log.Infoff(..., metadata.BuildAsString())`
This is a bit of a hack, but I think it's better to just call SSL_pending on the caller and call SSL_pending on the caller.
Could you add the doc to the doc string?
This is a bit of a hack, but I think it's better to just pass the `WriteTransactions` to `w.Write`.
This should be `byteutil`
Can we just use `Notification.isAlarmForStaleData()` here?
This is a bit of a hack, but I think it's better to just do `log.IsEnabled(LogLevel.Information) ? start.GetAsciiStringEscaped(end, MaxInvalidRequestLineChars) : string.Empty`
this is a change in behavior, but I think it's better to have a test for this
I think you can just do `if (dstCtx == srcCtx) return hipErrorInvalidValue;`
This is a breaking change. It's not a public API.
Is it possible to have a 0 or 0?
I think we should just remove the `_bio` and `_bio` here.
This is a bit confusing, as it is used in a bunch of places where we call it from the team_plan_quantity_select_attributes. I think we should call it `@team_page.present?` instead.
I think we should add a check here that `ivLength == 32` is not set.
Layout/EmptyLinesAroundClassBody: Extra empty line detected at method body end.
I think we should not be using this option here.
Why is this needed?
This is a bit of a hack, but I think it would be better to use `abspath` instead of `abspath(x)` here.
This is a bit of a hack, but I think it's better to have a test that checks for it.
This is a change in behavior, but I think it's better to move the `ctx.flowOperations` to `ctx.flow` and then call `flow.flowOperations.Add(flow)` in the `if err != nil` check.
Should we use the `a4adc8f4da9c7f55b73dd14df791c0e` here?
This seems to be unused
How about `resp = self.app.get('/')`?
This is a bit of a hack, but I think it's better to have a test that checks if the `status` is not an error.
The ` hiveTableName` is not used anymore.
This is a breaking change.
The `forEach` constant is not used anymore.
I think we should add a new property to the existing API and add a new one.
Please use `fullSynchronized` instead of `fullSynchronization`
SealedSecretEncryption is a little confusing, as my favorite is always a hardcoded list. I think it would be nice to have a list of sse and sse. Perhaps a list of sse is a good idea.
I think we should move this to the `server` package.
This is a change in behavior, but I think it's better to move it to the `utils` package.
I think this should be removed.
I think this is a leftover?
I think this is a good change. But I think it's better to move it to the top of the file.
I think we should remove ` task excluded_portal_link` from this file, since it's not used anywhere else.
I think this should be `gmail.com`
Can we use `Ani.test(key)` here?
This is not needed.
This is not needed.
This should be `final`
This is the only change that affects this PR. I think we should be able to remove this.
This is a bit of a hack, but I think it's better to move it to a separate commit.
Is there any way to make this `values=True`?
Rails/InverseOf: Specify an :inverse_of option.
I think this is a bug fix.
This is a little weird. I think it would be better to do `isSomeFileRemote = ...` instead of `isLinksFileRemote`.
This is a bit of a hack, but I think it would be better to just have a single method that returns a `OpenTelemetrySdkEventSource` that returns a `null` and then just return a `null` here.
Is this a typo?
I think this is not a bug, it should be `ReflectionParameter::getType`
I think this is a good change. It's not a good idea to have a unit test that checks for the new API.
Is this a bug fix?
I think we should just remove this method and just do it in the `AbstractAbstractJoiner`.
I think it would be more clear to name this `copy-prefix` (or something similar) as `copy-prefix` (or something similar)
I think this should be removed as well?
I think this is a good change. It's not a big deal, but it's a bit odd.
why not just `const` and `db.receiveSettings( {} );`?
I think we can remove this line now that we are removing the `GONE` call.
I think this test class should be removed.
I think this should be a `Hash getBlockHash` instead of a `Hash`.
Can we move this block to a new line?
The `json:"clockIds,omitempty"` is a bit confusing. How about `json:"clockIds,omitempty"`?
Why was this moved?
I think this is not needed.
I think this is a leftover?
This is a very minor thing, but I think it would be better to move it to a separate file.
(style) line over 80 characters
We should probably have a test for this
I think this should be removed.
This file is not used anymore.
Should we add a TODO here?
I think we can remove the `controlCallback` and just use `Bounds.me` here.
I think this should be `ansible.io/`
I think this is not needed.
Why do we need to use `_pendingRequests` here?
This is a bit of a hack, but I think it would be better to do something like `user_id not in (?)', observations.pluck('user_id'))` instead of `count` here.
nit: I think this is a leftover from the previous commit.
shouldn't this be `serveStatic`?
Why is this needed?
I think this should be done in a different PR
Why is this change needed?
I think we should be able to remove this TODO
I think this should be `Warnf`, since it's not a valid error.
This is a change in behavior, but I think it's not a huge deal.
I think we should use the same naming convention for the "fadirectRawBlock" and "fsType" in the name.
I think we can remove this now that we've added the new `is-ci` path to the `ci` path.
I think this is a good change. It's not a good idea to add it to the base class. It's a good idea to add it to the base class.
should be `toString()`
This file should be removed.
I think we should remove this file.
This is a bit of a hack, but I think we should just make this `[key]` and `Unhashable` (and `[key]`) instead of `[key]` since it's a bit more readable.
Why not use the License directly?
Why did you change this?
I think we can remove the `isNonNullValue()` function now that we have the same `isNonNullValue()` function.
This is not needed.
hierarchical_name is not used anymore.
I think this is fine, but I think it's better to keep it in the code.
This is a change in behavior, but I think we should not use the `request.reply` here.
You can use `null` here.
Why did you remove the `failed` here?
This is a change in behavior, but I think it's better to keep the error message as it was before.
Wondering if we should make this a `expect` or `expect.not_to raise_error`?
I think we should just log the time.duration here.
Why is this class needed?
Why are these being removed?
Can you update the doc accordingly?
This should be changed to `state/factory`.
I think this should be done in a different PR.
@smarterclayton do we want to use the new version of the test here?
I think we should add a `*byte` here.
This should be `const char *expval, int int line`
This import is unused.
nit: remove empty line
hmm, is this a typo?
This is a change in behavior, but I think it's better to move it to the `AccountState` function.
I think this should be called `clientconfig` instead of `clientconfig`
What does this do?
I think this should be `Collections.emptyList()`.
This is a no-op if the above is not `if routeUpd.Dst == nil`.
I think this is a bug fix.
This should be `_`
I think this should be removed.
I think this should be `[feval]`?
Why this change? It seems to me that it is only used in `AbstractnetEvmRegistries` and `AbstractnetEvmRegistries`
Why do we need to add `time.Duration` here?
This is a bit of a hack, but I think it's better to move the `service.Marshal` call into the `service.Marshal` method.
why do we need this change?
I think this check should be moved to the `listenSocket_` check above.
I'm not sure if this is the right fix. I think we should be able to remove the `credit_card_form` flag altogether.
Standards: Please add braces to this condition.
Is this change required?
I think this import is unused.
Can you add a docblock here that this test is testing what you expect?
I think we should be able to remove this field from the `zvolWorkers` module.
This is a little confusing. I'm not sure if we should be using the namespace directly.
I think this should be `go-selinux`
"LIFECYCLE_STATE_UNSPECIFIED" is a confusing name.
I think we should be able to use the `build-system/common/enable` constant here.
This is a bit of a hack, but I think it's better to have a test that checks if the block is not found.
This is a little confusing, since the `panic` function is used in a few places, and it is not a very good idea to have a `panic` function.
This is a change in behavior, but I think it's better to move it to a new commit.
This is a bit confusing, as it is a `&&` and it is a `&`
This is not needed.
This is a bit of a hack, but I'm not sure if it's worth it to just have a single space at the end of the line.
I think you can remove this and just do `GetTipSetStateRoot(tsKey types.SortedCidSet) (cid.Cid, error)`
I think this is a leftover from the previous commit.
I think we should keep these as is.
This is a bit of a hack, but I think it's better to move the `scratchBucket` check inside the `scratchBucketName` function.
I think we should just remove the `bios-grub` part.
This is a change in behavior, but I think it's better to move the `manifests` call into the `isEmpty()` method.
I think this should be done in a separate PR, but I think it's better to have a separate method for this.
Was this a bug?
I think this should be `warn`
I think we should keep the ` duraton` and `0` here.
I think this test should be testing the same thing as the test_median.
We should probably remove the `@return` here and just use `@return true`.
why is this needed?
This is a change in behavior, but it's not a problem.
This is a bit of a hack, but I'm not sure if it's worth it to make the test more specific.
Can we have a method for this?
Do we need to import IntegrityError from the package?
Shouldn't this be `std::recursive_mutex`?
Why is this needed?
This is not needed anymore
I think you can just use `writeStartElement` here.
I think we should just return `s.rest.Repositories.CompareCommits(ctx, ref.Ref, compareSHA, err)` here.
This is a bit of a hack, but I think it's better to move this check to the `ValidateAutoscalingAnnotations` function.
I think we should just make this `static`.
I think we should change the signature of `buildCommitFrequency defines` to `withwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwithwith
Please add `// FIXME: true` to the end of this line.
This should be `volatile` since it's only used in the `RequestMatcher` class.
@zachmargolis I'm not sure if this is the right fix. I think it should be "something.toString()", since the test is failing.
This is a very generic name. It is not a big deal, but it is a bit confusing to have a space between the `for` and `i`
This is a bit of a hack, but I think it's better to move it to the `AppendHistoryNodes` function.
This is a bit of a hack, but I think it's better to be explicit here.
I think this should be `if err != nil {`
This is the only place where we have a `mocha.reporter` function. I think we should just return `nil` here.
This is a little confusing. I'm not sure if we should be using `.encode()` here.
This is a bit confusing, as it is a bit confusing to have a single method that does the same.
@mfojtik @smarterclayton do we need to set the default value here?
@matt-gardner, I think this is a breaking change.
This is a breaking change. It is not a public API. It is a public API.
This file is not used anymore.
Nit: I think this import should go before the last group of imports.
I think we should add a note note note in the changelog as well.
I think we should just remove this and just do the same thing in `pkg/configurator`
Wouldn't it be better to move the `account` package to the top of the file?
How about `|| 0`?
I think this should be `_GLOBAL_DEFAULT_TIMEOUT_is_in_timeout` instead of `_timeout` since it's not a `_timeout`
I think this should be `opts.fee == 0 || opts.feeSat == 0`
Is this change necessary?
why change this?
I think this should be a separate PR, it's not related to the PR.
Is this change necessary?
Why was this removed?
I think this is a leftover from the previous PR.
I think this is a leftover from the previous PR.
This is not needed.
We should probably use `LOG.finest` here.
You can use `None` here.
Why is this needed?
I think this is a good change. It's not related to the fix, but it's a good idea to move it to a separate commit.
Should we log the stack trace here?
I think this is a leftover from the previous commit.
I think it's better to use the same for the other configurations, like `time_password` and `time_password_min_count`.
I think we should use `FileColumns.PARENT` here.
I think this should be `\\[([^\\]\\\\[0-9]*)*\\]"`
I think we should be able to use `Retry limit exceeded for #{name` here.
Should we also check that the upper level is the same as the one in `status_code`?
Can you please add a TODO to remove this?
I think this is a good change. It's not a problem, but it's a bit odd to have a different error message.
I think this should be `meta charset=\"UTF-8\">\n` instead of `head`
I think this is a little confusing. I'm not sure if it's worth it to just have a `new` statement here.
I think this is a little too vague.
I think we should be able to remove this if statement and just remove the if statement below.
I think it would be better to use the `Time.Value` property here, and then use the `get` property.
The `horizontalAdvance` should be in the `mLineEdit` list.
I think this is a little too vague. What do you think about just adding a `boltdir_type` constant?
I think we should use a more specific name for this.
can you make this `const` please?
I think this is a good change. It's not a big deal, but it's a bit odd to see the same thing as the one below.
I think this should be `await execa('npm', 'swap-package-links', 'inherit')`.
I think this should be moved to X86 above the line.
This is a bit of a hack, but I think it's better to have a `bool` method that takes a `bool` and then just use `bool` here.
I think this is not needed.
I think we should be able to use the `group` here.
This is a bit of a hack, but I think it's better to keep the `javax.util.Map` and `javax.util.Map` as the first thing that is used.
I think we should be able to get rid of this check.
I think this should be `Underlying`
I think this file should be renamed to MiningCoordinator
This is a bit of a hack, but I think it would be better to have a `root_script` method that returns the `root` object, and then call `.basename(script)}")` in the `.basename` method.
I think we should check if `to_replace` is not an array and if it is a tuple, we should check if `value` is a tuple.
I think this should be `Collections.emptyMap()`.
I think we should just remove this line.
Shouldn't this be `opts.java_primitive_has_method = true;` ?
I think we should use a better name for this.
What is the reason for this change?
These three lines are not necessary, they are not related to the PR.
Is this change necessary?
This is a bit of a hack, but I think it's better to move the `AbstractAbstractAbstractAbstractAbstractAbstract` to the `AbstractAbstractAbstract` class.
I think this should be `f` instead of `f`
I think we should add a `metadata.ClientInfo` to the `metadata.ClientInfo` and add a `metadata.ClientInfo` to the `metadata.ClientInfo` and `metadata.ClientInfo` to the `metadata.ClientInfo` and `metadata.ClientInfo` to the `metadata.ClientInfo` and `metadata.ClientInfo` methods.
This is a bit of a hack, but I think it would be better to move the file_exists to the `realpath` class.
I think we should use `Push BlockCacheLifetime` here.
This is a breaking change. It's not a big deal, but it's a bit confusing.
I think this is not needed.
I think we should use `_root_` here.
I think this should be `@return`
This is a bit of a hack, but I'm not sure if it's worth it to just have a `libunwind.h` flag in the `libunwind.h` file.
I think this is a good change. It's not a big deal, but it's not a big deal.
We should not have data in the data file.
nit: I think we should throw an exception here.
This is a bit of a hack, but I think it's better to have a test that checks for it.
Why not just remove the `NotFound`?
What if the test fails? I don't see any test coverage for this, but I don't see any test coverage for this.
I think this should be done in `build-system/utils/utils.go` and `build-system/utils/utils.go`
Should be `@param httpEntity()`
Why is this `_` needed?
This should be done in `err`.
I think this should be `continue` instead of `typeof callback === 'ChangeStream is closed'`.
I think this should be `DBURL`
This is a little confusing, as it is a different name.
Please use `var serviceNameMappings = source?.IsDictionary(ConfigurationKeys.ServiceNameMappings)`
I think this is a leftover from the previous PR.
This is not needed anymore.
This file is not used anymore.
I think we should add a check here that the resource resource is not nil.
This is a breaking change. The `createConfNode` method should not be called anymore.
I think this should be `if cond->getOptionalInteger(0)`.
I think this should be `config` and not `configMap`
This is a bit of a hack, but I think it's better to check for the `httpplib` instance instead of just passing the `httpplib` instance.
Why are you using the Request::HEADER_X_FORWARDED_ALL here?
This is a bit of a hack, but I think it's better to have a separate PR to fix this.
This import is unused.
I think this is a little confusing, since the user can't set the `scanner_index_id` value in the `index` key.
This is a test, but I think it's better to be explicit about it.
I think this should be in a separate PR, since it's not a big deal for the PR, but it's a minor thing to do here.
I think this is a breaking change. We should probably add a `@Nullable` annotation to this interface.
I think this test should be moved to the `Mol` package.
I think this is a leftover from the previous PR.
should this have a default value?
Would it be possible to use the task task in the state instead of the container?
these are not related to the PR, but we should probably add them to the PR
Why did you change this?
This is a very minor thing, but I'm not sure if it is worth it to make it configurable.
This is a good change. The `var/tmp/tmpostree-deltaobj-XXXXXX` is a bit confusing.
This is not needed.
This is a change in behavior, but I think it's better to move the outputs into a new line.
This is a bit confusing, as it is a bit confusing to have a config file that is not a user-facing endpoint. I think it would be better to have a config file that is not a user-facing endpoint.
"... and the parameter set that precedes them"
I think this import is not needed
This is not a boolean, so we should just remove it.
Why is this needed?
Not sure why you need to set the cache here.
I think we should import this only when we have the import.
This file is not in whiteline. It should be in the `@private` package.
I would prefer to have a method for this, but I would have expected it to be a `new_token = auth.refresh_access_token(spotify_user.refresh_token)`.
this is not a valid value, you can just use `erb.run()`
I think this should be `--network-host-project-id`
Hmm, this is a bug fix. The `setSourceData` is not a `Optional`.
I think this should be `internal` and `internal Violation` to match the other APIs.
I think this is a good change. It's not a big deal, but it's a bit odd that we have a `*proposal.Filter` that we can't just have a `*proposal.Filter` that we can't just pass in to `*proposal.Filter` and then pass in the `map` here.
I think we should just remove this, since it's not used anywhere else.
I think this should be `return dbusConnection.StartTransientUnit(unitName, "connection closed by user")`
Why is this necessary?
This is a bit of a hack, but I'm not sure if it's worth it to make the file match.
This should be removed.
I think we should keep the ` duraton` and `0` here.
This is a breaking change. I think it would be better to have a separate PR for this.
I think we can remove the `&&` here.
I think this is a little confusing. How about `MatchFold`?
This is not a good place to put it here. It's not a good idea to add it to the `h2` field.
I think we should remove this.
I think we should just check if the directory exists before calling `GetDirectoryName` here.
This is a bit of a hack, but I think it's better to do something like `os.path.path` instead of `path_` (or `path_`)
This is a bit of a hack, but I think it's better to move this inside the `--stress-test` block, and just call it in the `--stress-test` block.
I think this should be `arrayarrayarrayarrayarray`.
I think this should be done in a separate PR, but I think it's better to move it to the `Occur` class.
Is this a bug fix?
I think this is a bit of a hack, but I think it might be better to just do `multipart/form-data` instead of `multipart/form-data` here.
I think this is a good idea. It's not a good idea to use `require.close(t)` for the `span` function.
I think this is a good change. The `while (true)` is not needed.
I think it would be better to just have a `opt_verify` property that takes the commit verification and then pass it to the `verify` property.
why do we need to pass the db to the db?
Is this needed?
I think this is a bit of a hack, but I think it's better to have it as a class, and then use it in the `UserPrimaryImageTag` class.
Why is this removed?
I think we should add a `**kwargs` to the partition column type, and add a `**kwargs` to the partition column type.
Is this the only place where we need to support the `System.Design`?
Nit: I think this is a leftover from the previous commit.
Why is this needed?
I think it would be better to use the same tag for the `address` and `split` as well.
why change the cast to `int`?
Can you add a `defaults.extend({}` method to the `expandableRowHeaderColDef`?
Why is this line removed?
I think this should be `prohibitedAttrs: ['aria-label', 'aria-labelledby']`
this check is done in SyncService.verifyFee
Is this change required?
what is the reason for removing this ?
This is a bit of a hack, but I think it would be better to have a test for this.
I think we should use `isHeaderFunctions` here.
This test is not related to your changes, but I think it's better to remove it.
I think it would be better to use `combined` instead of `None` as the default value.
I think this should be `LoggerFactory`
Why remove the sourceName?
This is a change in behavior, but I think it's better to move it to a new function.
I think this is not needed.
I think this should be `NewRegionHeaderMaps`.
Why did you change the test?
I think you can remove this now.
I think we should just remove this and just use `func (ts *TrivialTestSlasher)` in the `get` method.
I don't think this is needed.
I think we should keep the same check for the `vertigo` case as well.
This should be `urlstr.toString('mailto')`.
I think this should be moved to `cmdUsage['_'][i]` instead of `cmdUsage['_'].length`
I think this is not needed.
Is there a way to make sure the lock is not also set?
I think this import is not needed
I think we should be able to remove the lock here.
I think this import is unused?
Why is this removed?
I think this is a no-op, right?
Is this still needed?
This is not needed.
nit: I think this is a bit of a hack, but I would prefer to have a test for this.
I think this is a bug fix. The `EncodeError` is not a bit odd, and it's not a big deal.
This is a bit of a hack, but I think it's better to move this to the `server.getAmpDoc()` method.
I think it would be better to use `options.addOption("AUTH-URL")` here instead of `.spec.build()`
I think this should be added to the `DD_CONVENTION` class.
I think this should be `UNUSED`
@bartonjs, I think we should be able to use the route route instead of the route.
What is the purpose of this change?
this is a bug fix.
Shouldn't we use the `resourceresource` type here?
I think we should add a new `GET` field to the `chunk/{address` field in the `/chunk/{address` field in `/chunk/{address` and `/chunk/{Format`.
This is a breaking change.
This is a bit of a hack, but I'm not sure if we should change the name of the test.
I think we should use the `file_exists` constant here.
This should be a constant.
Please revert this change.
why this change?
I think we should use `errors.isEmpty()` here
I think this is a bit confusing, as it's a bit confusing to have a `EndpointResolverError` that does the same thing.
Redundant curly braces around a hash parameter.
Why is this a map?
I think it would be better to use `self.config_filename` here instead of `None` since it's a default value.
I think this should be `padding: 0`.
I think this should be `const serverLacksFeature = require('../core', 'serverLacksFeature')`
Can we add a description about what this is for?
This should be `for(size_t i=0;`
I think we should be able to use the `address` argument here.
Nit: remove extra space
I think we should be able to remove the `header_NAME` method altogether.
I think this file should be removed.
This is a public API call.
I think we can remove this `if deadlineTimer == nil {... }` block.
I think this is a breaking change. The `GetRequestStreamAsync` is not used anymore.
(style) line over 80 characters
I think this should be moved to the other place where it's used.
In the past, we are not using the `ExternalApis::OpenAireService` anymore.
This is not a big deal, but it might be better to have a function that returns the return value of the function.
I think we should use the name here.
Can you please remove this and just use the `public` on the `IEnumerable<T>`?
I think this should be `require('../lib/lint')`
I think this is not needed.
This method is not used anymore.
this is a bit of a hack, but I think it's better to have a test that checks if the cttl is not a cttl, and then if it's not, then we can just do `t.Stop()`.
why is this needed?
I think we should add a new method that does the $codebase->reportUnusedVariables() even if it is not set.
Why is this needed?
What is the purpose of this?
This is a test class, but I think it's better to keep it.
I think it would be better to use `gocloud.dev.linklink` here.
I think we should change the name of the test so that it's clear what the result of this is.
This should be set to true only when the file is set.
This can also be removed.
I think this should be `volatile`
Since this is a `null: false` table, should we add a `default: false`?
I think this should be a `defer`
Why not `data_encoding=VALUES(data_encoding)`?
This is a little hard to read, but I think it's better to use a constant for the string.
Is this needed?
This is a little hard to read. I think we should just make the `RootfsMountMode` a struct and call it `RootfsMountMode` instead.
This is the only change that affects Cuda_device_id.
I think this should be a static class.
You can use `var` instead of `index` here.
I think this is a leftover.
Why is this necessary?
This import is unused.
This is a bit of a hack, but I think it's better to have a list comprehension that is not a list of things.
This is a string, so it should be `string|null`.
Should we make the constructor private?
I think we should also mention that the lock file is not finished.
is this intentional?
@mfojtik @mitchellhenen this is the fix.
Can you add a newline after this?
Why is this needed?
I'm not sure about this - we can just remove the `index_spark_columns` function entirely - it's used in many places - we can just remove it - we can just remove it - we can just remove it - we can just remove it - we can just remove it - we can just remove it - we can just remove it - we can just remove it - we can just remove it - we can just remove it - we can just remove it - we can just remove it - we can
The new parameter `data` is a dict, not a bool.
This is a bit of a hack, but I think it's better to have a separate `MessagingException` that is used for the `Pcontrib-check` case.
I think this is the only change that affects the `client` field.
I think this is a good idea. It's not a big deal, but it's a bit odd to have a `c.recorder.Event` return an error.
I think it's better to just delete the struct, and deleteAppOpts struct.
I think this is a good change. It's not a problem, but it's a minor thing.
I think this is a bug fix.
I think we should remove this, it's not used anymore.
Please don't use parentheses around the condition of an if-condition.
I think it would be better to use the same name for the specific values.
Is there a reason we are not using `controller` here?
I think this should be `opts.prefix_size || !opts.prefix_size`
This is a breaking change. It is not a problem, but it is a bit of a hacky to have a different function.
This is a little confusing, because the `callback` is not used in the `getLocalHook()` method.
This is a bit of a hack, but I think it's better to have a method that returns a `dict` instead of a `dict` object.
I think this is a good change. It's not a big deal, but it's a bit odd to have a `Read` function that returns a `nil` if the error is not found.
`internal` is not a public API.
I think this is a leftover from debugging?
I think we can just remove this `ResidualEvaluator residuals` and just use the `display: deletes` field.
I think this is not needed.
I think this should be `w.sourceExists(ci.StartupScript)`.
Is this change necessary?
Should we log something here?
I think this should be `void render_args_struct(t_function* tfunc);`
I think this should be `crypto2`
I think this should be moved to the `if` block above.
(style) trailing whitespace
this is a bug fix. we should just make this a wrapper.
This is a bit of a hack, but I think we should be able to remove the TODO.
Why is this needed?
This is a bit of a hack, but I think it's better to have it as a `@phpstan-param array<string, class-string> $bundles`
I think it would be better to just catch the error message and raise an error.
We should probably make this a `awsTagsFlag`?
I think we should change the default value of `dilation=self.dilation` to `self.dilation.offset` and `self.dilation.offset` to be consistent with the other `offset` values.
@jridgewell Is this a bug? I'm not sure if we should be doing this.
This is a little hard to read, but I think it's better to keep it as it was.
This can be removed.
Why is this change needed?
This is a bit of a hack, but I think it's better to have a separate method that takes the manifest into an interface.
This is a bit of a hack, but I think it's better to have a `.fetch(:adapter)` check that the value is not found in the blacklight.yml config file.
Can you please add a new `aws-global` to this list?
This is a bit of a hack, but I think it would be better to have a `qs` argument that would be used here.
I think this is a no-op, right?
Can you use `t.NewStaticWatcher` here?
This should be `ScanlineFilterCommon`
I think this should be `0.00`
Nit: I would prefer to have a single `FlattenedMethodAsyncCallSettings` type be used for the `PagedOptionalArrayMethodAsync` type.
This is a bit of a hack, but I think we should be able to remove the `internal` prefix from the `secrets` package.
Shouldn't this be `!!!`?
Why is this line needed?
This file is not used anymore.
I think we should just remove the one in `Handler` and use the `as(0)` in `Handler`
I think we should check if the block is not an error.
This is a bit of a hack, but I think it's better to move it to a new file.
Layout/EmptyLinesAroundClassBody: Extra empty line detected at block body end.
Why is this being removed?
This is not needed.
Nit: I'd prefer to have a separate test for this, as it's a bit more readable.
Should this be `NatPortRange       numorstring.Port`?
I think this can be removed now, since we have the imports in the file.
I think this file should be removed
I think this is the only place where we can't do this.
I think we should be able to use `str(int(str(int))` here.
Why is this needed?
This is a bit of a hack, but I think it's better to have a check that the value is not set.
Why is this needed?
I think we should keep the old name, as it's not used anywhere else.
Is this the same as the one in `ServerConstants.AZKABAN_SERVLET_CONTEXT_KEY`?
This is a bit of a hack, but I think it's better to be explicit here.
I think this is a leftover from the previous PR.
I think this is a little confusing. What about `get_node_first_ancestor_of_type_and_its_child`?
I think this is a good change. It's not related to the fix, but it's a good idea to test the error message.
I think this should be a separate PR
This is a bit of a hack, but I think it's better to have a `if (field.native_shared) {` statement here.
This is a breaking change. It's not a big deal, but it's a minor thing.
Should we also add a `trace` parameter to the `log`?
Is this field still used?
We should check if `maxDate` is not null here.
The enum enumspb.CONTINUE_BACKOFF_TYPE_UNSPECIFIED calls in the enumspb store. Do you have any other way to handle the enumspb store?
Shouldn't we check if the browser is a browser?
This is a very minor thing, but I think it's better to move it to `crypto/` and then use that in the `err` package.
This is a duplicate of the existing one.
This is a duplicate of the existing code. The existing code is a duplicate of the existing code.
I think this needs to be moved to the `getDispatchMethod()` method.
I think we should keep this as `FriendlyUrl[]` instead of `FriendlyUrl[]` since it is a `string`.
what is the difference between `Unknown` and `status`?
I think this should be a `state` instead of a map.
This is the only change needed to make the `Enable()` function return the `enableRules` object.
Should we add a `name` parameter to the `Url` interface?
This should be `.to_s.underscore.tr("/", "_")`
We should probably use `LOG.finest` here.
can we add a `!=1` check here?
I think this should be `window.getParameterByName = function (name, url)`.
Why not use the `Level()}` function here?
I think this is a good time to grab times before the timeout is executed.
This is a bit of a hack, but I'm not sure if we should be using the `__temporal_sys` here.
Can you remove this line?
I think this should be `if (blockNumber < IstanbulBlockNumber) {`
I think we should use `bin.BASH` here.
This is a breaking change.
I think this should be `| Exclusion list of exclusions for words or phrases where the original`
I think this is a leftover?
This import is unused.
I think this is a good change. It's not a big deal, but it's a minor thing.
I think you can just remove the #if here.
This is a bit of a hack, but I think it's better to use `ReplaceAll` here.
This is not needed.
Is this a debugging leftover?
This is a bit of a hack, but I think it would be better to have a test that checks if the file exists and then check if the file exists.
Why is this import changed?
This is a bit of a hack, but I think it's better to be explicit here.
I think we should add a warning about the warning about the user.
This is a change in behavior, but I think it's better to change the `logsDir` to `logsDirDir`.
I think we can remove these now that we have the configs in the core.
I think this is a bit of a breaking change. What about `think-time`?
I think this should be removed
I think this is a little too generic, but I think it's better to have a constant for this.
Can you add a line to the end of this line?
This is a bit of a hack, but I think it's better to have a `PathExists` method that returns the `m.paths.devices` object.
What is the purpose of this change?
This is not needed anymore.
This is a bug fix.
I think we should also add this to the `APIAddr` below.
These tests are failing because of the tests.
I think this should be `bin/build/v1-alpha1`
I think we should use the `CloudFormation::Stack` constant here.
Is this needed?
Nit: I think this import should be grouped with the other imports
This is a bit of a hack, but I'm not sure if we should be using the `request.respond` here.
I think this should be a `error.message` instead of a `error.message`?
I think this should be moved to the `ResponseParams` package.
I think this should be `aws_sts_endpoint_or_create`
I think it would be better to use the `fillObject` method here instead of the `fill` method.
I think this should be `final`
I think this is a bit of a hack, but I think it's better to have a test for this, and then test for the new functionality.
This is a bit of a hack, but I think it would be better to have a test that checks for `_get_type_index` and `_get_type_index` that is not set.
I think this is a good change. It's not a huge thing to do, but it's a bit confusing. I'm not sure if this is the best way to do it.
I think it would be cleaner to move the `owner = {};` below the `if` statement above the `if` statement above the `if` statement above the `else if` and `if (options.skipSessions && !session) { session: session });`
Why are we doing this?
Here's another example of why we're using `status_code` instead of `status_code`
I think this is a leftover from debugging.
Why is this change needed?
I think we can move this import to the top of the file.
I think we should just remove the `:load_time` and `:errors` here.
Why did you remove this?
This is a bit of a hack, but I'm not sure if it's worth it to just do `felixes[0]` instead of `felixes[0]` here.
This is a bit of a hack, but I think it's better to have a single function that returns a single function.
I think we should just use `AccountMaxVersionPrefix` here.
@deads2k @smarterclayton do we want to keep this?
Is this change related to the PR?
I think we should be able to use `kubernetes.Status` here.
Why is this needed?
Why is this needed?
This is not a good idea. It's not a big deal, but it's a bit odd that we're not using this in the code.
I think we should use `<%=` instead of `\n` here.
This is a breaking change.
I think this was a bug in the changelog.
This seems to be unused.
I think we should add a TODO to remove this and use a `EdgeNodes` to get the right value.
I think we should use the `.format` file here.
I think we should just remove the #3 and just do the #3 here.
I think we should have a test for this case.
I think this is the default version of the Proto version, not the Proto version
This test was not working before because the file was removed.
Why was this removed?
I think we should use `self.composite_root_resources = kwargs.get('composite_root_resources')` instead of hardcoding the value here.
This is a breaking change. The `WebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWebWeb
I think we should use `OutputOutput` here.
Is this change intentional?
Please add the `@since` annotation
This is a bit of a hack, but I think it's better to move the `/tmp/non-existing-dir-%d/process_test.pid` check to the `/tmp/non-existing-dir/process_test.pid` file.
I think this is a good idea. It's not a very good idea to have a method that has a `Views` instance.
This should be removed.
The `Price` is not needed here, it should be removed.
I think we can remove this import now
Why is this needed?
I'm not sure this is a good idea. It's a bit of a hard to read.
It's not a good idea to use a `m.Group("/branches", func() {`
I think this should be `VolatileValue`
I think we should use `if (attribute.Equals(default(KeyValuePair<string, object>(key ?? string.Empty));` here.
I think this is a leftover from the previous PR.
This should be in another PR.
I think it would be better to just make the default `useDefaultSources` and use it in the constructor.
this is a change in behavior, but I think it's better to move it to the `addEventListener` method.
I think this is a good change. I'm not sure if we should be using the API API for the API.
It seems like this should be `subject := string(subject)`
Do we need this?
I think we should just pass the `balance` here.
I think we should use `boolptr` here, as we already have the `boolptr` in the `map` and `map` methods.
I think we should add a new method `toLowerCase()` to the interface.
I think we should just make this a function, and have the pool_param return a bool.
I think this should be reverted.
Is this the right place to put this?
I think this test is not needed.
@jridgewell I'm not sure if this should be `conflictDetectionFilter` or `conflictDetectionFilter` or `conflictDetectionFilter`
this import seems unused
I think this should be `Tags.RuntimeFamily` instead of `SetTag`
Is this used?
I think we can remove this link_to and use the link_to method in the link_to method.
I think we should add `.ProtocolNum(ProtoIPIP)` to the `.ProtocolNum(ProtoIPIP)`
The `GET` is not needed here.
I think we should remove the second parameter from the `second_digit` and `removing` calls.
I think this is a good change. It's not a big deal, but it's a minor thing.
I think we should add a `Set()` method to the `ResponseCors` interface.
This is a bit of a hack, but I think it would be better to use the `instance` method in the `uint8` method instead of the `instance` method.
I think this is a leftover from the previous commit.
Is this needed?
I think this is a good place to put this.
This is a breaking change. The only reason we have this method is to make sure the actual class is in the `BlockHeader` and not the `BlockForProcessing` method.
Why not just make this `super`?
I think we should import this at the top of the file.
`name already exists and is not being deleted: %s`
Should we use `ddev` here?
How about using Devnet?
I think the `vic-machine` header is required here, since the `vic-machine` header is not required.
I think this should be `minimumUmask = -027`.
I think this is a good change. We should keep it for now.
This is a bug fix. The `wait_for_at_least_entries` function is not used anymore.
I think this is a bit of a hack. I would prefer to have a test for this, and not have a test for it.
This is a little confusing, because `num_args` is a `[0]`, but I think it's a little confusing.
again import order
This is a breaking change.
Please update the doc.
I think this is the only place where we can use this. I'm not sure if it is worth it.
This is a change in behavior, but I think it's better to be explicit here.
I think this should be `if (math.MaxInt64-action.ExecutionBaseIntrinsicGas)/action.ExecutionDataGas < dataSize {`
Why not `@group` ?
I think this is a little confusing. I think it's better to return a `err` instead of `nil` here.
Please don't change the doc here.
I think we should use the `changed` helper here.
I'm not sure this is the right place for this. The default is `0u` and the default is `0u`.
is this false now?
This is a breaking change.
This should be `onUIUI`
I think we should just remove this and use the BlockTree class.
This is a bit of a hack, but I think it's better to have a test for this.
I think we should keep this as it was.
I think you should be able to remove the `and` part here.
I think this should be `X-PriorityTag`
Is this correct? It seems like it should be a separate pull request.
I think we should just remove the message altogether.
I think we should use `changed_string` instead of `changed = FALSE;`
I think we should remove this.
This should be removed.
I think we should use `!==` instead of `!=`
I think you can just use `.Hex()` here.
I think this should be `type='token'`.
I think we should add a `before_filter` to `before_filter` as well.
I think this should be `abspath: str`
I think this test is not testing what we want. We should be able to test the user's default.
This file should be in the `#ifdef OPENSSL_CHECK_CHECK_CHECK` block
Is this needed?
This is a very minor thing, but I think it's better to have a default value for the `default/` and `default/` in the `./pants lint` file.
Is this function used anywhere?
Hmm, this is a bit confusing, why is it needed?
This is a bug fix.
Shouldn't this be `url`?
We should probably also check for `./scripts//scripts/` here, as it's a bit confusing to have a method that returns the plan.
This is not a part of your PR, but it's not a big deal.
I think this should be `GeckoSession.SelectionActionDelegate.ACTION_UNSELECT.equals(action)`
this was a bug, it was a bug
You can remove this now that you've added the `ContextAware` attribute in the `Product` interface.
I think this is a good idea. It's not a good idea to do it in the `base.IsPrivate` function.
Why not just use the `time.MaxInterval` variable?
This is not needed anymore.
This should be `ControlPlaneLoadBalancerScheme ClassicELBScheme`
I think this should be `circular-json`
I think we should just use the `MergeState` variable here.
This is the only change that affects the directory.
Is this still needed?
You should add a new line after `['services']` and then use it here.
This is a bit of a hack, but I think it's better to have a method that returns a boolean.
I think this should be `make_monkey_monkey_monkey_monkey_monkey_monkey_monkey_monkey_monkey_monkey_monkey_monkey_monkey_monkey_monkey_monkey_monkey_monkey_monkey_monkey_monkey_monkey_monkey_monkey_monkey_monkey_monkey_monkey_monkey_monkey_monkey_monkey_monkey_monkey_monkey_monkey_monkey_monkey_monkey_mon
This is a breaking change. I think we should use the `https://*:80/"` instead.
I think we should be using the `MAX_USER_CONNECTIONS_PER_HOUR` as the default, not the default.
Why is this variable set?
I think you can just use `x.order.map?` here.
Is this a breaking change?
This should be `config:"string;"`
I think we should use `NewInt` here.
I think this should be `List<FieldMetrics<?>>`
I think we should be able to use the `ENGINE-16002` constant here.
I think this should be a static import.
This is not needed anymore.
I think it's better to move the `this->process_blocks` check inside the `if (thread.joinable ())` block above the `if (thread.joinable ())` block above the `if (thread.joinable ())` block above the `if (thread.joinable ())` block above the `if (thread.joinable ())` block above.
This is a very minor thing, but I think it's better to have a method that returns the same value as the default.
I think we should just remove the SDK in the V2 code.
This should be a flag.
I think this should be a constant.
I think we should use some sort of permissions here.
this is a bug fix
This is a bug fix.
I think we should also remove the import from the import import from the import import import import import
why is React from 'react'?
I think we should just remove the `==` and `==` to be consistent with the rest of the code.
this is not a part of the PR, but I think it's better to move it to the top of the file
I think this is not the right place for this. It's a bit of a change in the code, but I think it's better to be explicit here.
This is a bit of a hack, but I think it would be better to just use the `entity` variable here, and then use the `getRow` method.
This is a little hard to read. I think it's better to have a constant for these values.
This is a breaking change. We should be able to use the existing `MESSAGE: connectid` and ` ConnectID` here.
This is not needed.
I think this should be `final`
I think we should use `opTimeout` instead of `opConfig` here.
why not just `GasLimit`?
This is a bit of a hack, but I'm not sure how to fix this.
I think this is not correct. The `onGlobal` method is only called in `onGlobal`.
this should be `azure-parameter-grouping`
Why is this being removed?
Why not just make the line-length `[a-z0-9\/\:_\-\*\[\`?
This is a bit of a hack, but I think it would be better to just do `get(version=api_version)`.
I think we should also add `recording_msid` to the `listened_at` list.
Is this change necessary?
Is this a BC break?
I think this should be `if 'text_align' not in style:`.
I'm not sure if this is the right place for this. The `#if` should be removed.
Is this change related to the current PR?
I think we should have a `RoutingDelegate` method that takes the ` viper` and then pass it to `shuffleKey` and then pass it to `shuffleDelegate`
We should also change the `format` prefix to `formatTimeAgo`.
I think this should be `onTrigger` instead of `onTrigger`
I think we should be able to use the `NumericConstant` version here.
I'm not sure this is the right approach. The `1000` is not the correct way to go.
Why is this changed?
I think this should be `this.GetType().Assembly`
I think we can remove this now that we are not using it anymore.
I think this is a bug fix. The problem is that the topic name is not allowed in the variable name.
This is a little confusing, since the `@param` tag is not in the `@param` tag.
I think we should use `<%= 0` here.
I think this is a change in behavior. We should probably move this to a new PR.
I'm not sure this is the right way to do this. I'm not sure if this is the right way to do it.
What is the impact of this type of database transaction?
is this used?
Should this be `!uid_t uid = getuid();`?
I think this is a little confusing. It's not a big deal, but it's not a big deal.
This is a bit of a hack, but I think we should just log the error and logBody.
This is a bit of a hack, but I think it's better to have a `-` here instead of `-` since it's a `-` and it's a `-` (or a `-`).
I think we should be able to use `strings.HasPrefix` here, because we don't have to check for any other `antrea-controller` in the future.
This is a breaking change. I think we should keep it in the globalize.
I think we should change the `Context` to `List`.
why not use the existing `Rewards` function in the constructor?
I think we should just make this a constant.
This is not needed.
This file is not in the BSD-style file, so it should be removed.
I think we should add a new one here.
Why is the `_tree` needed here?
This is a change in behavior, but I think it's better to make the change in the `QueueUserWorkItem` method, and pass it as a `ConnectionAbortedException` instead.
We should probably have a TODO here.
I think this is a good change. The `SynchronizeVersion` should be `/deploy/Nuget/Datadog.Trace.nuspec`
I think this is a bit of a hack, but I think it would be better to move it to a separate function.
I think we can use `StringUtils.isNotEmpty` here.
Should we also mention that this is a `type`?
The `if` should be on a new line.
Is there a reason for this change?
I think we should just remove this and just do `CredentialExpiration time.Time`
Can we use a more meaningful name here?
Why are we passing the string here?
I think we should be using `EmitEvent` here.
Rails/DynamicFindBy: Use find_by instead of dynamic find_by_.
I think we should move `/avatar` to `sonar.java` as it's not used anywhere else in the code base.
This is a bit of a hack, but I think it's better to do it in a separate PR, and then check if the file exists before calling `cancel`
This is a change in behavior, but I think it's a good idea to change it to `app_name` and `app_name` to be consistent with the other commands.
This is a good place to put it in a package.
Why are these lines changed?
I think this should be a public API
So, I think this is a good change. I think it would be better to use `gentsfaddrs.yaml` instead of `gentsfaddrs.v2` as the default.
I think this is a bit of a hack, but I think it's better to move the expectation to the top of the file.
I think this is a breaking change.
This is a good change. We should probably move the logic to `removeShutdownHook`
I think we should remove the repo from the repository as well.
Why not just add the `//` to the class?
We should probably make this change in a separate PR.
why is it public?
I think this should be `status_FINISHING` instead of `status_FINISHING`.
This is a change in behavior, but I think it's better to have a test that checks if the `ServeHTTP` is not `""`
This is a little confusing, as it's a `NullPointerException` and it's a `NullPointerException`.
Why is `ctx` a `default`?
I think this should be a `skip`
This is a change in behavior, but I think it's better to keep the `uploadStream.abort().then(null, function (error)`.
Should we also add a `clientset` to the `pkg/client` package?
I think this is a good idea. It's not a big deal, but it's a bit confusing to have a method that takes a `ISpan` as a parameter.
This is a duplicate of the one below.
Why do we need this?
This is not necessary because the `bridge` isn't in the `page` method, and it will be removed in the `build_page` method.
I think you can just remove the `_`
Does this need to be a pointer?
why is this needed?
This is a breaking change. I think it's better to keep it as is.
I think this should be `[DisallowNull]`
I think we should use the `list_tables` constant here.
This is a good change. I think the `0xffffff` should be `0xffffff`.
I don't think this is a good change.
This is a change in behavior, but I think it's better to use the default value of `parentBaseFee` as the default value of `parentDelta` to be 0.
This is a bit of a hack, but I'm not sure if it is worth it to make it a bit more explicit.
This is not needed.
why not use the context context directly?
This should be `callback.onError(t1)`
nit: remove extra spaces
Can we add a check for `ConfigurationKeys.ENABLE_QUARTZ` to set this?
please use spaces instead of tabs for indenting.
This is a change in behavior, but I think it's better to make the message more explicit.
I think we can remove `@Nullable` here.
This is a private method.
This is a bit of a hack, but I think it would be better to have a function that returns the label, and then use it here.
I think this is a bit of a hack, but I think it's better to have a function that returns a `m.Body` instead of a `m.Body` that returns a `m.Body` (or something similar) instead of a `m.Body` (or something similar)
I think this is the only change that is needed.
Is this still needed?
This is a bit of a hack, but I think it's better to move it to a new class.
I think it would be better to use the `else if` here instead of `if (api_version <...> <...> <...> <...> <...> <...> <...> <...> <...> <...> <...> <...> <...> <...> <...> <...> <...> <...> <...> <...> <...> <...> <...> <...> <...> <...> <...> <...> <...> <...> <...> <...> <...> <...> <...
I think this is a good change. It's not a good idea to check for a specific `job_failed` value.
I think this is a bug fix.
Please add a license header here.
This should be `info.info("Bound legacy RC support");`
I don't think we need this, since we already have a `proposals` and `proposals` that is already in the `get_proposals` method.
This is a BC break.
This is not needed.
We should probably add an explicit `isinstance` check here, and add a TODO to remove the `if` and `(kser.spark.data_type)` check below.
This is a very good idea, but I'm not sure what the answer is.
This should be `@ps`
I think this is a little confusing. I think it would be better to have a `for` statement in the `__apply_single_override` method.
I think we should check for `_test_v2_test.py` here.
I think this is a bit of a hack, but I think it would be better to move this to the `setup_tab` function.
this is a change in behavior... we should not have to do this in the PR.
I think this is a no-op, right?
This is a bit of a hack, but I think it's better to have a test that checks if the items passed in is not a dict.
I think we can just use `@products.ordered` here.
I think we should use `Node::toLispString` instead of `tree.getChildren().map(Node::toLispString).mkString(" "))`
I think this is a leftover from the previous PR.
I think this is a bit of a hack, but I think it would be better to move this code to the top of the file, and then have it in the `if (self->config.header_cmds.size != 0)`.
This should also be a refresh.
why is this removed?
I think this should be `!TRAF_SYSKEY_COLNAME`
I think we should remove this TODO.
I think this is the only place where we can return `import.second` here.
This is not a valid default value.
I think this should be on the `onResponse` method
I think this should be a debug level.
You can use `std::unordered_map` here.
This is a change in behavior, but I think it would be better to keep the `HttpWebRequestInstrumentation` as the default for the `HttpClientInstrumentationOptions` parameter.
Can we also test for `3`?
This is a bug fix. We should just check if the `RawAddress` is nil.
I think this should be reverted.
nit: new line
Why is this needed?
I think this import is unused.
This is a little confusing, because the `GAUNTLET_MAP` is already in the `destroy` field.
I think you can just remove the `app_name` and `app_instance` altogether.
Nit: I think this is a bit confusing to have a `panic` function that takes a `opt` as argument.
isProtected used anywhere?
Can we use a more meaningful name here?
I think we should just remove the setter and pass the context here.
Use the new Ruby 1.9 hash syntax.
Why is this removed?
@mfojtik this is the fix.
Please add a space after the `if`
I think we should add a check here that the user has the same meaning.
I think we should use the `environment_script` variable here.
Would it make sense to catch the exception here instead of catching exception?
I think we should use `io.prestosql.sql.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store.Store
`dt.max(f.A.max())`?
Is this change necessary?
This should be `[Option(..)]`
I think you can just use `fillObject(n, element)`
Should we rename this to `services.AddOpenTelemetryTracing`?
This is the only place where the lastId is set.
This is a bit of a hack, but I think it's better to have a test that checks for it.
I think we should check if the length is 0 here.
Isn't this the same as the `appong`?
This is a very minor thing, but I think we should be able to remove the `resp` from the `NotNil` list.
I think this is a leftover from the previous commit.
Why is this class public?
I think we should be able to remove the `case 10:` after the `case` statement.
I don't think this is necessary. The `not_to have_content` will always be called when the last argument is `incomplete_trail`.
This is a breaking change. The `std::numeric_limits` is not used in the `if` statement.
I think this should be `org.apache.iceberg.exceptions.CloseableGroup`
How about `input_dim + 1`?
This will fail on all platforms. You can use `Run.Base.Run(args)`
I think this should be `snprintf` instead of `snprintf`
This is a real Ruby type.
this should be `github.com/jmcvetta/randutil`
I think we should change the name of thept-get install -y unzip to be the same as thept-get install -y unzip git.
This is a very minor thing, but I think it's better to be explicit here.
I think this is a bit of a hack, but I think it's better to have a `projected_monthly_revenue` property that can be used here.
This is a breaking change. I think it's better to move the logic to the `subSequenceRangeCheck` method.
I think this should be `registry == null && executor == null`
Not sure if we need to add these new fields.
I think we should just use `type CNIHash = "a134a973585b560439ed25ec3857e4789f"`.
I think we should use `self.config.FILEIDENTIFIER_LENGTH` instead of `FILEIDENTIFIER_LENGTH`
You should also add this to the `web_debug` below.
We should probably have some more context for this: `label_as_spammer`
Why is this needed?
I would use `format_like` here, as it's a string, not a string.
This should be a "schema" part of the message.
I think this is a good change. It's not a big deal, but it's a little strange that we don't have to do this.
I think we should just set the full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full
if we're going to have this check here, we should probably have a more specific check for the fee.
I think we should check if the node has an error.
This is a breaking change.
Is this function used anywhere?
I think we should remove these two import from the rest of the code base.
I think this is a bit of a hack, but I think it would be better to just use `nms.get('type', 'nms')` instead of `nms` here.
I think this should be `options.reject`
I think we should just make the `config.Fairbank` part of the `stateDB`
I think this is a good change. It's not a good idea to include the `ui.message(_("Focus mode")` in the `else` branch.
This is a bit of a hack, but I think it's better to just return `false` here.
I think we should remove the `onNewPasscode` check and do the check for `requestCode == SPRequestHandler.IDP_REQUEST_CODE` here.
Why is this necessary?
I think we can remove the `send` here
This should be `e.LogPersister.AppendErrorf("Unable to remove canary resources: %v", err)`
is this going to be a problem for the new message?
Do we need this in the controller?
I think this is a good change. The `AttributeError` is not a valid DataFrame, so it's not a big deal.
Why do we need this?
You can use `@user.org` here.
This is a test, but I think it's better to have a test that checks the output of the output.
Prefer single-quoted strings when you don't need string interpolation or special symbols.
What's the difference between `setInProgress` and `stopInProgress`?
Why not just have `CStorPoolController` and `blah` here?
This is a change in behavior, but I think it's better to keep the old method and just pass the `normalizeIdentifier` to the `getIdentifier` method.
I think this is not needed. The `file_being_parsed_` will be defined in the `#if` condition.
Is this supposed to be in here?
I think we should be returning here instead of error.
Let's add a ` det det det det` here.
This is a breaking change. It is not a public API.
you should also add the parameter in the constructor
I think we should use the `finally` part here.
I think it would be better to use the constant here, and use the same constant for the other `implode("\n`
Nit: I think this should be on a single line.
I think this is a good change. It's not a big deal, but it's a bit confusing to have a test that checks for a `JSONUtils` and `JSON` and `JSON` as a `JSON` and `JSON` as a `JSON` and `JSON` as a `JSON` and `JSON` are not used.
I think this is the only change that affects the `__CLASS__` method.
This is a change in behavior, but I think it's better to change the config to use the `Mailer` class instead of the `Mailer` class.
Can you also add these to the `config` package?
What is the TODO for?
I think this should be `traceparentHeader = "Traceparent"`
This is a bit of a hack, but I think it's better to have a test that checks if the path exists.
Should we keep import of `.*` here?
Why not use the `outboundservice` constant?
I think we should use the same helper for the feedback_url and the other one in the JS file.
I think this is not used anymore.
Should we add an `err` to the top of the file that we've added in the `stripe_token` page?
Why do we need to change the `sizeof` here?
I think we should add a `json.json` to the `DestinationGroups` field and have it take a `json.json` instead.
I think this is not correct. It should be `cursor_part - 1`
I think this is a breaking change. The original code was correct. The `p.ShardOwnershipLostError{}` is not in the `DynamoViewModel` which is not the only usage of this function.
This is not needed.
This test is not needed.
I think this is a breaking change.
I think we can remove this and just use `PDState` in the `Session` field.
Use the new Ruby 1.9 hash syntax.
I think we should add `delete` to `requiresSecret`.
This should be `getNumDocs`
Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think we should also update the `.Labels` to `.DeleteLabels(id interface{}, sel selector.Selector)`.
This is a bit of a hack, but I think it's better to move it to the `handleCaretMove` method.
I think this should be `tag_error_response`?
Please remove this and add a `use` statement.
I think we should use a more specific name for this.
I think we can remove this method and just use the default one in the `esc_close` method.
This is a bit of a hack, but I'm not sure if it's worth it to just have a `func (pubsub.Publish(topic, data []byte) error` here.
I think this should be `debug`
I think we should keep this as a separate commit.
Please update the changelog as well
This is a bit of a hack, but I think it's better to move it to the `Airbrake` class.
This spec doesn't seem to have anything to do with the `user` key.
This is a bit of a hack, but I think it's better to have a test that checks if the `CLIENT_RANDOM` is not set.
Is this change intentional?
I think this is not needed.
This should be `\DateTime`
Is this needed?
I think we can just use `metav1` here.
why is this port not being used?
I think this should be `return FileUtil.determineFileType(file, fileName);`
This is a bit of a hack, but I think it's better to do something like `use_directory_cache?(:bundler)` and then just add `use_directory_cache?` to the `cache?` method.
This is a bit of a hack, but I think it's better to have a separate method for this method.
This should be "str"
I think this test is not needed.
I think we should use the same value for the `heartbeat_timeout_seconds` value.
I think you can just use `if` here.
"not" is not a valid team"
Can you please add a TODO to remove this?
Should we assert that the exception is not thrown?
I think we should add a check here that the new one is in the new one.
I think this is a good change. It's not a good idea to remove the node from the parent.
I think this is a leftover?
Plz add a blank line between tags and summary for better readability
This is a bit of a hack, but I think it's better to have a method that returns a boolean.
this is not needed, the code will never be executed
This is a very specific issue, but I think it's better to have it in a separate PR.
Nit: I'd prefer if we could use a single `client.V(4)` here instead of a hardcoded list.
This is a bit of a hack, but I think it would be better to have a test that checks if the field is not empty.
This is a breaking change. Please revert.
This should be a separate PR
I think this is a little confusing, since the local variable `last_thread_tls_exited` is used in the `get_thread_private_dcontext` method.
I think this is not needed.
The change seems unnecessary.
I think this should be `user.Username` instead of `user.Hostname`
I think this should be `attribute_compatible` instead of `attribute_binary`.
This is a change in behavior, but I think it's better to move it to the `if` statement above.
These changes are not needed.
This is a very specific API, I'd suggest to move it to the `CreateSpan` class.
I think we should use `filesystem` here.
remove empty line
I think this can be removed.
The formatting of this is unnecessary.
This is a breaking change. I think it's better to just return a List<T> instead of using a List<T>
Why is this removed?
This import is unused.
Please add a line break after this.
This should be `SYSLOG_INTERNAL_WARNING`.
I think this should be `getWeightForDoc` instead.
This is not needed.
I think this is a leftover from the previous commit.
I'm not sure if this is a good idea, but I'm not sure if it's worth it to make a helper function for this.
I think this should be `void close()`
This is a bit of a hack, but I think it's better to have a test that checks if the value is empty.
I think we should use a different variable name for this.
Please add `transaction.phone` to the list of files.
I think this is a good time to remove the LOG_INTERP check.
I think this should be a static final constant.
why is this needed?
I think we should add a docstring here that it's not really useful.
You can remove this line.
This is a breaking change. It is not a real problem, but I think it is a bit of a hack. I'm not sure if we should be doing this.
I think this should be removed.
This is not readonly, it is not readonly.
Is this change necessary?
I think we should keep these imports in the same order as the other modules.
I think this is a good change. It's not a big deal, but it's a bit odd to have a client client in the client and not the client client.
I think it's better to move this to the `<-s.interpreter.limiter>` section.
Should this be `SetApplicationError`?
`string` is not defined here.
We should log the exception here.
Why is this necessary?
The controllers.get is used for both controllers and controllers.get is used for both controllers.get and controllers.get is used for both controllers.get and controllers.get
I think we should use `redirect_to` here.
Trailing whitespace detected.
I think we should use `opts.on('--perf-data', 'no2')` instead of `opts.on('--perf-data', 'no2')`
This is a breaking change, it's not a breaking change.
I think this should be "selectCastSink"
Why are we returning an error here?
I think this should be `long = int`.
This is a little confusing, since the debug file size is not in the debug file size.
This is a bit of a hack, but I think it's better to just return `None` here.
This is a change in behavior, but I think it's better to use the `conn->req.input.path` as the default.
This is a change in behavior, but I think it's a good idea to change it to `app_name` and `app_name` to be consistent with the other commands.
@smarterclayton do we need to set the IPFamily to the IPFamily?
Do we need to do this for every test?
I don't think we need to change this.
I think this should be moved to `disable_snapshot_annotations` since it's only used in the `if` statement above.
I think this should be `raise` instead of `raise`
I think this is a bit of a hack. It's not a good idea to use `sig[0]` as the default value.
I think we should add a new type for this to work.
This is a bit of a hack, but I think it's better to do a `if entity == "recordings":` check here.
This should probably be `len(flows)`.
This is a breaking change. I think it's better to have a separate `longConf()` method that returns a `String` and then use it in the `String` method.
I think this should be a try/except instead of an error.
I think this should be `@cmdutils.argument('tab', value=cmdutils.Value.cur_tab)`.
nit: I think we should just remove the TODO, and just do the same thing in the other PR
I think this is a good change. It's not a big deal, but it's a bit odd to have a path to a path.
I think we should be able to use the connection version here.
What if we called this `accounts` in a non-empty string?
I think this is a bit of a hack, but I think it's better to have a test that checks for this, and then just pass in the `self.kubernetes_config.max_retrials` to the `kubernetes_config.max_retrials` method.
This is a bug fix. We should not be using the `depends_on` method.
This is a bit of a hack, but I think it's better to move the `validateVarsSubbed` check inside the `if err` block.
I think we should remove this import.
This change is not related to this PR, but it seems to me that we are not doing this.
Is this change necessary?
I think this should be `final`
I think we can change this to `bad_request`
This is a bit of a hack, but I think it's better to have a `Set` method that returns the job object.
Is this needed?
This is a bit of a hack, but I think it would be better to check for the value of the `getQuantity` function.
Why did you change this?
This is a bit of a hack, but I think it would be better to use a more descriptive name like `getAt` or something like that.
This is a bit of a hack, but I think it's better to move it to a separate file.
I think this is a good change. It's not a big deal, but it's a little strange that the `float` is not a `float`, so I think it's more readable to just be `float`.
Can we use `@Deprecated` instead?
I think this is a leftover from the previous PR.
Why does this need to be in the schema?
I think this should be `else if`
This is needed because the `windows.h` header is already included in the `windows.h` header.
This is a change in behavior, but I think it's better to move it to the `if (desc) {` block above the `if (desc) {` block.
why not use `NotFound`?
This is a breaking change. We should probably add a `GetDefaultVersion` method to the `NewVersion` and have it return the default version.
I think this is a good change. We should be able to remove the URL opener from the URL, and have it be a separate PR.
This is a breaking change.
I think this should be `SettleDepositAndRequest`
This is not the only change that is needed.
Why did you change the default value of 0?
I think this class should be marked marked as being marked as being marked as being marked as being marked as being marked as being marked as being marked as being marked as being marked as being marked as being marked as being set.
I think this should be a global setting
I think this is a good change. The `isDebugEnabled` check is not needed.
This is a bit of a hack, but I'm not sure if it's worth it to just check for `assert.NoError` here.
I think we can just make this constant private.
I think this is a bug fix. The `.onStatus` should be `.is2xxSuccessful()`
I think you can just remove `PathRef` here and remove the `PathRef` below.
Why do we need to check for `js.catalog.Find` here?
I think you can just remove the `return` statement.
This is not the right place for this. The `notification_service_factory_class` property is used to set the `notification_service_factory_class` property. The `notification_service_factory_class` property is used to set the `notification_service_factory_class` property.
I think this method should be public
I think we should use `HandleNewTipset` here.
This is the only change that affects the tests.
Use the new Ruby 1.9 hash syntax.
I think this should be `char fmt[] = "O";`
Is it possible to have a `--channel` option for the `--enable` option?
I think this is a good change. I'd prefer if we keep both the code and the code.
Is this a bug fix?
I think we should keep this and just remove the `clickView` call here.
I think this check should be moved to the `checkCompounds` method, since it's not being used anywhere else.
I think this is a bit confusing, since it is a promise, not a promise.
Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
This is a bit of a hack, but I think it's better to just remove the `if` and `if` and `if` here.
Should this be `if (iv_state) {`?
This is a bit of a hack, but I think it's better to just remove the `no_crash` call here and just use `_primer_stdlib` in the `build_no_crash` function.
I think this should be done in the `if` statement above.
This is a bit of a hack, but I think it's better to just do `-find` instead of `-find` here.
this is not needed. we can remove it
I think this is a good change. It's not a good idea to use `error` here.
Why is this being removed?
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think we should use `.namesLookback(namesLookback);` here.
I think this is a bit of a breaking change. I think it would be better to just have a `reindex()` method that returns the error.
I think this should be done in the `elseif` block above, as it is not used anywhere else.
I think this is a good change. It's not a big deal, but it's a bit odd to have a test that checks for the class name and class name.
I think this is a bit of a hack, but I'm not sure if we should just use `find_or_create_by!` here.
I think this is a bit of a hack, but I think it would be better to check for the message in the message instead of just the message.
I think this should be `<p>`
This is a bit of a hack, but I think it's better to move it to the `if` block, and then check if the `if` statement above is in the `if` block.
I think you can remove the `std::lock_guard<std::mutex> lk` check
Why is this change needed?
"The default number of space can be created" -> "The default number of space can be created"
This is a bit of a hack, but I think it's better to have an overload that is not a list of files.
This is a change in behavior, but I think it's better to move it to the top of the file.
I think this should be `pubsubsourceclientset`
@annando what do you think about using a default value here instead of a default value?
This is not needed anymore.
I think this needs to be added to the `X-api-v1` package.
I think you need to use the `-` option here.
I think we should be using `exit(0)` here, because we don't have a single call to `exit(0)` in the call to `exit(0)`
I think it would be better to keep this as a `@Override` annotation.
I think we can remove this constant and just use the default value.
do we need to change the role to be the same?
Why are we removing these?
I think this should be `return null;`
Can we make this `prefSocksProxyUser`?
`ExplicitValues.CollisionEnergy` is not needed here, it is already added in the `get` method.
I think this is a good change. It's not a problem, but it's a bit odd that we're not doing any validation for the `lambda x` list.
I think this is a bit of a hack, but I think it's better to do it in a separate PR, and then check that the `forced_empty_list` is not a list.
I think we should be using the `isInv2` package here.
This change is not related to this PR, but it is a change in behavior.
I think this should be `!rawErrorData.get(CLASS) == null`
I think this is a good change. It's not a big deal, but it's a bit confusing to have a `if` statement here.
should we remove this?
Nit: I would prefer to have a more specific name, e.g. `OnNext(value.Key, value.Value);`, which is more clear.
I think this is a good idea. If we don't have any access to the password, we can just use the password in the controller, so we don't have to add any access to the password.
I think we should be using the `List<LoggingRule> LoggingRules` instead of the `public` because it is not a list of items.
I think we should use `set(pser_or_pdf.index.names)` here.
I think this should be `!=` instead of `&&`
This should be `_destroy_and_UnknownUrlSchemePolicy`.
This is a change in behavior, but I think it's better to change the signature of `Object` to `object`.
This method is unused.
I think we should use `range(reference.GetNumAtoms(onlyExplicit=True))` here.
I think this is not needed.
This is the only change that affects the `username` format.
I think we should use `mdc-tab` instead of `mdc-tab`
i think we should change the `date` to `%s`
I think this is a bit of a hack, but I think it would be better to have a separate `words.Join(words[0:wordcount], []byte{' '})` that would be a bit more clear what the expected behavior is.
This is a no-op, right?
I think we should keep the old `sqlite` and `temporal` as part of the new `sqlite`
I think this should be `for (int i = 0; i < proc_num_simd_saved(); i++)`
I think this should be a separate commit
I think we can remove the `BuildConfig.BUILD_TYPE` variable and just use the default value.
I think this should be `log.V(logf.TraceLevel).Info("not found", "err", err)`
This is a bit of a hack, but I think it's better to have a test that checks if the `limitsExceeded` is not set.
I think this is a good change. It's not a big deal, but it's a bit odd to have a test for it.
@bparees this is the fix.
I think we should use `.identifier` here.
`import sys` the next line
remove empty line
Shouldn't this be `getContentDescriptionDescription`?
This is a bit of a hack, but I'm not sure if it's worth it to make the `mHbManager` a `SetEyeBufferSize` method, and then use the `mType` in the `SetEyeBufferSize` method.
Is this used?
I think we should be able to remove the `hashToFullRules` and `hashToFullRules` altogether.
I think this should be `List of config values.format(inner_type=inner_type.name)`
I think we should use the `global_local_resource` constant here.
This is a bit of a hack, but I think it would be better to have a static import of the class, and have it be a static final field.
I think we should use `api_versions.min_by(&:to_f).to_json` instead of `&:to_f`
Please remove this file.
I think this should be `base.Duration(c, r)`
@bparees this is the fix.
I don't think this should be a separate change.
This is not a good example of how `import json` works.
I think this is a breaking change. The default value of `singleInt` is `2.0f`.
You can use `getAccounts` here.
These two lines can be removed.
This is a bit of a hack, but I think it's better to just do `if (!field.required)` instead of adding a new field.
Line is too long. [89/80]
Nit: I would prefer to have this in a separate PR, e.g. `Doc generateModule(PythonDocConfig config)`
I think this is a little confusing. How does the PMT-specific hash come from?
This check is not needed.
Is this used anywhere?
Is this change necessary?
I think it's better to have a `ClientClient` and `ClientClientClient` as a `ClientClient` and `ClientClientClient` as a `ClientClient` and `ClientClientClient` as a `ClientClient` and `ClientClientClient` as a `ClientClient` and `ClientClientClient` as a `ClientClient` and `ClientClientClient` as a `ClientClient` and `ClientClientClient` as a `ClientClient` and `ClientClientClient` as a `ClientClient` and `ClientClientClient` as well.
I think this should be a single `toString`.
This is a little confusing, since it is a public API and is not a public API.
Metrics/LineLength: Line is too long. [83/80]
I think this should be `getCompCompScore(int docId)`
@mfojtik why did you remove this?
Why is this change necessary?
Don't we need to add this to the `aws-sdk-s3` package?
Why are these 15000?
I think this is not needed.
I think we should just return `nil` here.
I think this should be `null`
I think we should also make a `timeoutSeconds: 300` here.
This is a change in behavior, but I think it's better to use the constructor name here.
`this.max` is not needed.
This is a bug fix.
Use the new Ruby 1.9 hash syntax.
This seems like it should be a separate commit
I think this should be done in `tag.executed`, since it's not a tag, and it's a tag.
I think this is not needed. It's used in the `on-instance` package.
I think this should be `&&`
I think we should just make this `IsManaged` since it's not a valid name.
I think we should change this to `api_sig`
This should be a `::`
I think this is a bug fix. The `OK` is not a valid value.
This is a bit of a hack, but I think it's better to have a test that checks for the new `uoensResult` class.
I think you can just do `return strings.Join([]string{resourceType, resourceNamespace, resourceName}, "/")`
I think we should use the same name for the new one.
This is a change in behavior, but I think it's better to move this to the `addContext` method.
This is a little confusing. I don't think it's a good idea to have a null `ToString` method that does the `TraceError` instance. I think it's better to have a null `ToString` method that does the `TraceError` instance.
This is a test, but I think it's better to keep the assertion as it was.
This is a bit of a hack, but I think it's better to have a test that checks for the new `result` value.
Why are these changes in this PR?
I think it's better to move this call to `setFirstPingTimer` and remove the call to `setPingTimer` in the `if (s.getTimer())` block.
This file is not used anymore.
This file was removed because it was not used anymore.
I think this is a breaking change, and it's not a hard requirement.
This is a bit of a hack, but I think it's better to check for `plans_path` here.
This is a bit of a hack, but I think it's better to move it to the `gmbal` package.
I think we should be able to remove the `X509DistinguishedName` and `X509Name` entirely.
This is a change in behavior, but I think it's better to change the name of the function to ` AddPeers` instead of ` AddPeers`.
I think we should add a `JSON.HttpOnly` function that returns the value of `SetCookie` and then just set `JSON.HttpOnly` to `""`.
This is a change in behavior, but I think it's better to use the `error` version here.
Why not use the `!image` variable here?
This test is not related to the bugfix. I think it should be moved to a separate PR.
I think this should be a `List<string,object>` instead of a `str`
Why is this change necessary?
Should this be `networkMode.Marshal(firelensResIn)`?
Shouldn't this be `<linkplain ASTClassLiteral>`, since it's not used in the `<linkplain ASTClassNetwork>`.
I think we should be able to remove this `and` statement.
I think this should be `Map.finish()`
why is this change necessary?
Is there a reason for this?
`sac` is a bit confusing, why is it necessary to have it in `_shared_inplanes`?
I think this is the only change that affects this PR.
This is a bit of a hack, but I think it's better to have a test that checks for it.
There is no need to call `loadPlayerByName` here, since it's not used anywhere else.
I think this should be `prometheus_notifications`
In theory, if c.trace is nil, we should not set it to nil, right?
I think this should be `||` instead of `||`
I think we should add a `json:"MeshDriverName,omitempty)` here.
This is a change in behavior, but I think it's not necessary to do this.
This is a breaking change. It's not a big deal, but it's a little confusing.
I think this is a good place to put this. It's not a big deal, but it's a bit confusing to have a service in the service.
nit: I think we should have a test for this
I think this is a good idea. If the user doesn't have a `a>` then it should be a `@Nullable`, not a `@Nullable` (which is not the case).
I think this is a debug log.
Why not just use the volume.Id as the volume url?
I think this is a little too vague. I think we should just use the OCI %q field for the OCI %q field for the string.
I think this is a bug fix. The `min_size` is not a valid date.
Wouldn't it be better to use the `Stream.isEqualTo(3)` method instead of creating a new method?
This should be `info`
@jcotela is this going to work with any version of the version in the future?
I think we should be able to remove this function and just pass in the `FetchCertAlternatives` function.
I think we should be able to remove `form` from `build` and `build` here.
Can we move this to the `updatedFiles` list?
This is a little confusing, since the `utf-8` and `utf-8` are the same.
I think we should remove the `Chain` and `IndexDBPath` from the config.
do we need to add `limit` to `LOG.warning`?
Why is this needed?
I think you can remove this and just do `Should accept two parameters: preds, train_data.`.
Style/ClassAndModuleChildren: Use nested module/class definitions instead of compact style.
@bparees this is the only change that affects the change.
I think this should be `result` instead of `result`
This is not needed.
I think this should be a `Log.w(K9.LOG_TAG, "Unable to convert preference key [" + defaultEnum.getDeclaringClass(), ex);`
I think we should change the `is` and `isDocURL` to `const docURL = "https://v2.docs.influxdata.com/v2.0/reference/stdlib/built-in/transformations/window/#calendar-months-and-years"`
This is a little confusing. I think it should be `encode('utf-8')`.
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
I think this should be `return len(n) == 0`
Why is this no longer needed?
I think this should be reverted.
I think we should keep the error message here.
I think this is a bug fix.
can we call this `_text_path` or something?
I think we should just delete this error and delete the error.
I think we should just make this `allow.image.test.version` and remove the `sys.require_to_version` constant.
I think this should be `Could not save WebCal-calendar`
Why was this removed?
Can you please also update the doc string to reflect the new name?
I think this is a bit of a hack, but I think it's better to have a test that checks for the header and not the header.
Why is this removed?
I think we should remove the `commandStartExternalEditing` parameter from the list
This is a change in behavior, but I think it's better to move it to the debug level, and move it to the debug level in the debug level.
I think it would be better to keep thesanitize=True since it's not used by the caller.
I think we should add a `has_many` here
I think this is a good change. It's not a good idea to have a test that checks if the dependency is not provided.
I think this is a bit confusing, since it's a bit confusing to have a method that returns a string, and it's not a blocker.
I think this is a leftover from debugging.
I think this should be `argumentsString` instead of `argumentsString`.
I think this is not needed.
Why do we need to do this?
I think we should add a `*SecretEncryption` field to the `*Notification` field in the `*SecretEncryption` field.
I think this is a breaking change.
Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
you don't need this struct, you can just pass it directly directly the `State`
Why is this necessary?
this is a bug fix.
I think we should just use `getText` here.
This is not the right place for this. The port will be the default, and the port will be the default.
Why did you change this?
I think we should use `@SuppressWarnings("")` instead of `@SuppressWarnings("")` here.
I think this is a good change. The `ticks` function is used to avoid the `timerSleep` function.
This is a change in behavior, but I think it's not necessary to change the signature of the executor.
same here, if (backend->impl && backend->impl->destroy) {
I think we should be able to remove configFileName from the manifest since it's not used by other places.
Why is this change necessary?
This is a very minor thing but I think it's better to have a config for the batch size.
why do we need to pass `time.time()` here?
I think we should make this a `GrpcConfig` instead of a `GrpcStubTypeName`.
This should be `internal`
I think this should be `catchpointWriting`?
Model is a list of of Model names, so this should be Model or Model names
Can you revert the docstring?
Why is this needed?
you can remove this
Why not use an abstract class here?
The second parameter `index` is a `String` because it's a `String` and `index` is a `String`
This is a duplicate of the lines above.
I think this is a good idea. It's not a big deal, but it's a bit confusing to have a test that checks if the test fails.
What is this for?
Should we also add the `*` tag here?
I think we should use `--protected-allow-unprotected-tx` instead of `--protectedTransactionsAllowed` here.
These are the only places where we need them.
This change is not related to this PR, but it seems to me that the test is not correct.
I think this should be `set` instead of `set`
Please update the doc accordingly.
This is a change in behavior, but I think it's better to move it to a new method.
This is a breaking change.
@mmaxim do you know why this is necessary?
I think this is a good change. It's not a big deal, but it's a bit odd to have a Math.random() at this point.
This is a bug fix.
I don't think we need to do this. It's a bit of a matter of taste, but I think we should just do `.matches?(true, value, c, '$all')` instead of `.matches?(true, c, '$all')`
Why not `hostManagers_`?
I think we should change the name of the column to `router-expose`.
I think this should be `health_check` instead of `health_check`
I think this is a breaking change. The `ICoreLogger` is not used in this PR.
@mmaxim do you know why this is `json:"-"`?
I think you can just do `exception_class_name, :failure + ":"`
is this a bug?
Why are we using `cbor` here?
I think this should be `volatile`
I think we should remove the `function (groups)` as well.
(style) need consistent spacing around '*' (ctx:WxV)
I think we should just remove this method entirely.
This is not needed.
This is a change in behavior, but I think it's better to keep the previous behavior.
This is a breaking change. I think we should be using `running` instead.
Why not just remove the config file?
Is this needed?
This is a bit of a hack, but I think it's better to have a test that checks if the host is not a valid host.
I think this is a bit of a hack, but I think it would be better to have a test that checks whether it's not `None` or `None` or `None` or `None` if it's not `None`
I think we should use `containsKey` here.
This is a bit of a hack, but I think it's better to have a test for this, and then use `save` as the default.
I think we should keep this method and just have `getActiveFlowHelper` here.
Why is this needed?
This method is not used anywhere.
i think you can just remove this function, it's not used anywhere
I think this should be done in a separate PR, but it's not a big deal.
Can we add a `*uint32` here?
This is a little confusing, why is it needed?
I think this should be a `synchronized` method, not a `synchronizedFiles`.
I'm not sure if this is the right place for this. The `<a>` tag should be the same as the `<ul>`.
This should be changed to `errors.go`
This is a bit of a hack, but I think it's better to have a method that returns a boolean.
why not use `logging.Base()` here?
This is a change in behavior, but I think it's better to check the other things.
why are we changing the number of bytes here?
I think this can be removed.
I think this should be `publicLink`
This is a bit confusing, as it is used in the `IP` package. What about `ipAddresses`?
Can you add a `ReportDeploymentCompleted` to this function as well?
I think we should use a `find_v` constant here.
This should be removed.
I think this is a bit of a hack, but I think it's better to just use `f[conn]["alpn_proto_negotiated"] = None`
Should we use the `ina` namespace here?
I think we should use `||` instead of `||` here.
Why not just `task-timeout`?
I think we can remove this `serializeHtml` variable and just use `sortAttributes` in the `spy` method.
I think we can remove this and just use the default value for `0Gi` and `0Gi` to make it more clear what the default value is.
This is a bit confusing, as it is used in the `else` block.
This is a breaking change.
nit: I think this should be a `createElement` instead of a `createRef`.
I think this is a bit of a hack, but I think it's better to have a test that checks for the certificate durations.
Why are we removing this?
Please use `storeSamples` instead of `storeTranscriptions`.
Can you also update the test to reflect the new gcloud-beta-prod wrapper-latest wrapper?
This is a change in behavior, but I think it's better to make the interface interface more generic.
What is this change doing?
This is a change in behavior, but I think it's better to move it to a separate commit.
I think this change is not needed.
I think this import is unused.
This is a bit of a hack, but I think it's better to have a test that checks for this in the `NewBatch` function.
I think we should be able to use the default here, and just use the default in the sync block cache.
@bartonjs, I think this is the right fix. The `DDEV_NO_SENTRY` is not needed here.
I think this is a good example of how we could add a column to the column that would be used for the column.
This test is testing the wrong place for this.
Is this a BC break?
This is a bit of a hack, but I think it would be better to move this into the `if` block above the if statement and move the if statement above the if statement above.
I think this is the only place where we can log the error.
I think we should remove the `name: ...` part.
I think we should use `.limit(1)` here.
I think this is a bug fix.
I think we should check if the user has the same name, and if not, then we should check if the user has the same name.
Shouldn't this be a const?
I think we should add a new method to the interface that is used in the future.
I think this is not needed.
This is a very minor thing, but I think it's better to move it to a separate file.
I think it would be more consistent to use the `Action` type here, rather than the `Action` type.
I think we should also add a `id` object to the `exit()` method.
Can you please add a return type to this function?
Why is this change necessary?
I think this is a bit of a hack. It's not a good idea to have a test that checks for the type.
This is a no-op, right?
Why is this needed?
Can you please also change the `spec().$container.find('.handsontableInputHolder textarea').val()).toEqual('B1');` to `.toEqual('a1');`?
I think this should be `clear_hashed_changesets`
I think we should add a license header here.
Is this the right way to do this?
Is this change necessary?
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this is a good change. It's not a big deal, but it's a bit odd to have a context manager to set the task name.
I think this should be done in a separate PR, and not in the tests.
This is a bit of a hack, but I think it's better to have a test that checks the username and password as the result of the method.
I think this should be `o.LameDuckDuration = dur.LameNOT_duck_duration of %v, minimum is 30 seconds", dur)})`
What's the reason for this change?
I think we can use `global.googlesitekit = {}` instead of `global.googlesitekit`
Why do we need to check for nullptr?
This is the only change that affects the `apikey` property.
We should remove this and just call `/* eslint-disable sitekit/camelcase-acronyms */`
I think this check is redundant, since `SystemEmail` is already on line 446.
I think we should use `extend` here.
This import should be removed.
I think this could be a little more specific, e.g. `compute.ops_on_diff_frames` or something like that.
I think this should be a different name, since it's not a part of the API.
why not just `klog.Warningf`?
Should we also add `deprecated_fields` and `ChannelNumber` here?
I think this should be a debug level.
`reqreq` is not needed here, you can remove the `reqreq` call below.
This is the only change that affects this.
Is this change necessary?
this was the only place where we had had a result.
this is not needed. `form_behabor` is already called in the `form_behabor`
I think we should use `query/memoryCircuitBreakerThreshold` instead of `query/useCircuitBreakers`
I think we can remove `SoftKiller` now that we have the same `stop` now.
This is a bit of a hack, but I'm not sure if it's worth it to just add a `const` statement to the `code_gles2_format_set_add` function.
I think we should remove this.
The `std::distance` function is used for the `std::stringstream` case. I think it's better to use `std::stringstream` instead.
I think this is a bit of a breaking change. I think it would be better to have a separate `nvda.py` method that takes the `nvda` instance as a parameter and then pass it to `nvda.py`.
I think this is still not needed anymore?
I think this is a good place to put this.
I think we can just use `dockerClient.EXPECT().InspectContainerExec(gomock.Any(), gomock.Any()).Return(&types.ContainerExecInspect{0}`, and remove the `dockerClient.EXPECT().InspectContainerExec(gomock.Any(), gomock.Any()).Return(blank).forInterval(0)` in `dockerClient.EXPECT().endContainerExec(gomock.Any(), gomock.Any()).forInterval(0)` in `dockerClient.EXPECT().endContainerExec(gomock.Any(), gomock.
Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is a bit of a hack, but I think it's better to have a `Filters` method that returns a `Filters` object, and then use that in the `Filters` function.
This is a very good change. I think we should just make this `unicode_escape` and `unicode_escape` as it is a `String` function.
I think we should remove the `uri` parameter from the `Info` to avoid the warning.
I think we should use `Input.SpecialAddresses` here.
Should we check for enumspb.CONTINUE_AS_NEW_INITIATOR_UNSPECIFIED and check for enumspb.CONTINUE_AS_NEW_INITIATOR_WORKFLOW also?
This is a bit of a hack, but I think it's better to move this to `test_user` and `test_user` (or `test_user`).
I think we should keep the ` duraton` and `0` here.
I think this logic should be moved to a separate method.
This is a little confusing, because the key_to_parts is used in the `__init__` method, and the key_to_parts is used in the `__init__` method. I think it would be better to use the `key_parts` method here.
I think this is not needed.
`%s/fparing/a4a/fparing/a4a/fparing/a4a/fparing/a4a/fparing/a4a/fparing/a4a/fparing/a4a/fparing/a4a/fparing/a4a/fparing/a4a/fparing/a4a/fparing/a4a/fparing/a4a/fparing/a4a/fparing/a4a/fparing/a4a/fparing/a4a/fparing/
I think we should just use `llvm` here.
Is this change necessary?
This is the only change that affects this change.
I think it's better to make this a `statements` rather than a `*Statement`?
I think it would be better to have an enum for this.
I'm not sure if this is the right place for this. I'm not sure if it is the right place for this.
I think it would be better to use a new function instead of a new one.
I think we should be able to remove this bit.
This should be `true`
This should be `public`
We should use json here.
This should be a static method.
nit: this variable can be private
Should we add a `Wubocop-any` prefix to this?
Can we use a more specific name like `INQ`?
This is a breaking change. I think it's better to move it to the `conflicts` method.
I think this is a good place to put this code. This is a bit of a hack, but I'm not sure if it's worth it to make it a bit more explicit.
I think we should not call `loadExtension` here.
I think we should remove the `rescanDeps` function from the `QueueTarget` method and just call `QueueTarget` here.
Is this needed?
I think this should be `Deprecation.warn(self, "get_search_results")`
Use the new Ruby 1.9 hash syntax.
This is a little confusing. It is a bit confusing to have a `.None` that is the only way to do this.
Please use `Config::get('Config::get('Config::get('Config::get('Config::get('Config::get('Config::get('Config::get('Config::get('Config::get('Config::get('Config::set('Config::get('Config::set('Config::get('Config::set('Config::get('Config::set('Config::get('Config::set('Config::get('Config::set('Config::get('Config::set('Config::get('Config::set('Config::get('Config::set('Config::get('Config::set('Config::get
I think this is a bug fix. The test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was failing because the test was
Why is this changed?
This is a change in behavior, but I think it's better to just use `selection_specs` instead of `selection_specs`.
I'm not sure if this is the right description for the test, but I think it's better to have one test that checks for the expected output.
do we want to print the key here?
Can we just remove this?
I think this is not needed.
Why not using a setJsonParameters?
Why is this needed?
I think this should be `tabBar_get_active`
How about we move this to line 203?
This is a breaking change. It's not a good idea to use the `const` keyword in the `pushObject` method.
Why do we need to check the exact same defaults?
I think you can just remove the `using ParameterList` here.
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.
I'm not sure if this is the right way to do this, but I'm not sure if we should just make this a file or something.
This is a bit of a hack, but I think it's better to have a test that checks the result of the FPGA_EXCEPTION and raise an error.
better to add a new parameter for this to be a new parameter.
Is this supposed to be here?
I think we can just remove this function now that we're already doing the `defer` in the `ReadAll` function.
This is a change in behavior, but I think it's better to be explicit here.
Should this be `new ArgumentGroup`?
This is a bit of a hack, but I think it's better to use `getQuantityString` instead of `getQuantity(..)`
This is a bit of a hack, but I think it's better to have a method that returns a boolean.
I think this is not needed.
I think this needs to be added to the `Lamba-apollo` section above.
why not just `ptr unsafe.Pointer`?
This is a breaking change. The `json.put ("active_elections_size", 10000);` is the default.
I think you can just do `options.unmount = function(vnode);`
This is a bug fix. The `indices` parameter is not set in the `span` parameter.
I think this can be simplified to `if ((not_updated and new_length and any(len(source.data[n]) != new_length[0] for n in new))`
I think you can remove this `SET published_at` and `remove_column` altogether.
This should be `BetterErrors.editor = :subl if defined? BetterErrors.editor`
This is not needed.
This is a bit of a hack, but I think we should be able to run the command line in the `[OpenTelemetrySdkBenchmarksActivity]` instead.
I don't think this is needed.
Please revert the change to the version
Why is this change necessary?
This is a change in behavior, but I think we should change the value of `liveliness_ms` to `2.5` and `2.5` to make it clear that this is a `2.5`?
I think we should just use `ecs` here.
Is this intentional?
This is not the right place for this. You should use `pathParam.substring(0, pathParam.indexOf(';'));`
Why is this changing?
I think this should be removed as it's no longer used.
@bparees this is the fix. It should be `filterExpressions == null || filterExpression() == Expressions.alwaysTrue()`.
This should be `decode?`
Why do you need this change? It seems to me that `norm2_name` is not a `conv2` object, so I would just remove it.
I think this is a good change. But I think it's better to keep it in the same way.
I think we should use the default value here.
I think this is a good idea. If we don't have any access to the password, we can just use the password in the controller, so we don't have to add any access to the password.
I'm not sure if this is the right place for this. The `proc_set_num_simd_saved` function is called when the number of bytes is a number of bytes. The `proc_set_num_simd_saved` function is called.
The `hash_table_nextkey` is always defined here, so it's not necessary to call `hash_table_size` here.
For consistency, we should probably also check that the value is `""`
I think we should just pass the `Edges()` to the function and pass the `() => x.Edges()` to the function.
I think this is a good idea. But I don't think it's worth it to have a test for this.
This is a change in behavior, but I think it's better to keep the `returns` and `returns` methods in the constructor.
This is a breaking change. The `sampleParamConfigMap` method is only used in one place.
I think this should be splitTableRegion
I think we can remove this and just use `ErrorNotification` directly.
I think we should log the error here.
This is a breaking change.
I think this is a leftover from the previous PR.
I think this can be removed now.
This should be in the group below.
Is this change necessary?
This is a change in behavior, but I think it's better to be changed to `const int int dilation_h = (kernel_h - 1) / stride_w + 1;`
This is a breaking change. I think it's better to keep the list as a list.
I think we should remove this and just use the `New` function.
Why is this a pointer?
This is a little confusing. I think it's better to return a string here, and then just return a string.
This is a bit of a hack, but I think it's better to move it to a separate function.
I think we should remove the log level from the message and use log level directly.
Style/RescueModifier: Avoid using && instead of and.
why not use `encode('hex') for i in xrange(n))`?
Can we remove this?
You can use `tree.isNotEmpty(tree -> matcher)` here.
Why remove this?
This method is not used anywhere else. Can we remove it?
I think this should be `public`
why do you need to do Array?
Metrics/LineLength: Line is too long. [83/80]
I think this should be done in `DismissText` and `DismissText` as well.
I think this is a bug fix. The `UpdateSpan` should be `controllerContext`.
This class is unused and can be removed.
Is this a breaking change?
I think this should be done in the constructor of `getRTPSParticipant()`
This is a change in behavior, but I think it's better to keep it, and just use `Log.Error(ex, "The process does not have sufficient permissions to read performance counters. Please refer to https://dtdg.co/net-runtime-metrics to learn how to grant those permissions.");`
I think this is a very common pattern for the `<see cref="Span"/>"/> collection to the agent writer.`
I think this is a leftover from the previous PR.
Is this change required?
Why is this being removed?
This is a no-op, but I think it's better to return `default` instead of `default` here.
I think this is a good change. It should be `Assert.IsNotNull(Bytes.FromHexString("0xf8c61953f3b7e063e0772")`
Why did you remove this?
I think this should be a separate PR, it's not a problem for the user to know what the environment variables are doing.
I think it would be better to use attackedSet.count() instead of attackedSet.end()
@salesforce/design-system-react/components/carousel/__examples__ should also be part of the public API.
I think we should also add `electrum` to the `data_files` and `data_files` to the `electrum` interface.
I think this is a breaking change.
I think this is a good idea. It's not a big deal but it's a bit confusing.
@executable = '' is not needed here, you can just use `@executable_text`
I think this is a good idea. If the `Unlock` is not a `KeyError`, it will be called after the `sendPing()` call.
This file is not used anymore.
I think this test should be moved to `get_firewall_rules`
I think this should be a `Post(api.CreateReleaseOption{}) v1.CommitById`
I think we should be able to remove the `getRegistry` method from the `getRegistry` method.
I think this is a bug fix.
Should we do this only for `HeadEvents()`?
why do you need this?
This is a bit of a hack, but I think it would be better to use `.expand_path` here instead of `.get_file_path`
I think we should use `serviceDefinition.Extensions.ContainsKey` here.
Is this a temporary interface?
@matt-gardner Is this a breaking change?
This should be a mock.
Is this a BC break?
I think this is a breaking change.
I think we should remove this and just change the `AWS IAM` to `IAM`.
Should we add a `before_PublicKey` field to the end of the struct?
I think this should be `.spec.duration`
@smarterclayton do we need to keep the lowerCamel and lowerCamelApiTypeName in the constructor?
This is the only change that affects the existing `IsCompatibleTo` method.
This is a breaking change. We should probably move this to the `JivaPVCArtifacts` namespace.
I think this is a breaking change. It's not a big deal but it's a bit confusing.
Should this be 20?
I think this is not needed.
Is this still needed?
nit: I think this is a bit of a hack, but I think it would be better to have a name for the parameter instead of a parameter.
I think this is a good change. It's not related to the rest of the changes, but I think it's better to move the `flattenedTree` call into the `querySelectorAll` method.
This is a breaking change. I think it's better to have a test that checks for it and then just use the default config.
I think we should just remove this and just do a `LoadImageTimeout` in the `if (isort.Minute)`?
this import should go above the other group of imports
You can use `_operation.Responses.Keys.ForEach(key => isNonNullableReturnType)` instead of `!== null` here.
I think this is the only change that is needed.
I think this is a little confusing. What is the reason for this?
I think this should be `throws`.
nit: `!(options && options.beforeHandshake === true)`
Is this used?
What about the TODO above?
This is a bit of a hack, but I think it's better to have a test for this.
I think this should be done in the `serviceId` package.
" Checks" is a negative object. Zero is not considered negative.
I think it would be better to move this check inside the `if` block above the `if` block above and move the if statement above the `if` block above the if statement above.
Should this be set to v2.Corpus?
Why is this import needed?
I think we should remove the 95 and use the default here.
I think this is not needed. It's already a singleBccRecipient
This is a change in behavior, but I think it's better to keep it as it was.
I think this is not needed.
Nit: I think this import should go above the `testing` package.
I think this should be removed.
I think we should use `Root` here.
I think we should just remove the `primary` variable and just do `itititititititititpicking: the `itititpicks` is not used anymore.
I think this should be `return nil, nil`
I think we should use `group` here.
This test is no longer needed.
This is a bit confusing, as it is the same as the "CreateDefinition" method.
I think this should be `long left = Math.Max(LowestInsertedHeader?.Number ?? 0, headNumber);`
This is a bit of a hack, but I think it's better to have a test that checks if the Fake isn't in the middle of the FakeApp, and then use that instead.
Please remove the trailing whitespace.
I think this is not needed anymore.
hmm, this is a bug fix.
This is a change in behavior, but I think it's better to keep the `SmartStoreInspectorActivity` and `SmartStoreInspectorActivity` as the only way we can use it is to avoid the `QuerySpec` and `QueryQueryType` if it's not needed.
I think this should be `Optional[str]`.
why change this?
Can you add golfirmed import order?
I think we should use the same constant for all new services.
This is not a good idea. It should be `not(textarea)').length`.
I think this should be left as-is.
This is a change in behavior, but I think it's better to use the default value for the default value.
I think this should be in the `BuildIDOSEnv` package.
Is it possible to have a log message here?
This is a bit of a hack, but I think it's better to move it to the `gmbal` package.
I think we should check for `window.instanceRegister` here.
I think we should add a TODO here to make sure we don't have any real scenario here.
`close` is already called in `start`
Why is this needed?
why change the primary node?
I think we should just remove this condition.
I think this import can be removed now, since it's not used anymore.
nit: I think we should use `type_error_message` here.
Should we also update the `Allowlist` type?
I think we should keep the [$formatName and not have the [$formatName as a parameter.
Should we also update the `containerAccess` in the `if`?
Why not use the class `use` ?
Why not just make it a const?
I think this should be `MarshalOptions`, right?
Why is this change necessary?
Why not just use HiveConf directly?
This is a no-op, right?
Why not just do this in `getDefault`?
"" is not zero"
This is the only change that affects the `overlaid` field.
I think we should just remove this, since it's not used anywhere else.
I think this should be removed.
Please avoid using wildcard import.
This is a bit of a hack, but I think it's better to move it to the `gmbal` package.
I think this should be `StartTimingWrite`
I think we should just remove this, and remove the `config` in the `config` list.
Please use `import *`
This should be moved to the location of the location of the location.
I think this is not needed anymore?
This is a change in behavior, but I think it's better to move it to the top of the file.
I think this is a breaking change.
Why is this needed?
Unrelated change, but I think we should keep this in a separate commit.
I think this should be `slave.path_from_code_set_id(code_set_id)`
The role is a role of ClusterSet member cluster?
I think this is a good change. But I think it's better to just check `!= "gc"` instead of `is` for this.
Why is this needed?
remove empty line
Why was this removed?
Why is this `Handler` being ignored?
This is the only change that affects the `editor` field.
I think this is a good change. It's not a good idea to change the `timestamp` type to `nil` if the `nil` is nil.
do we need this?
@mattpap @ruflin @harry-cpp - Is this a bug fix?
you can just do `np.abs(np.array(levels)-clmin)`
I think this is a good change. It's not related to the fix, but it seems like it would be better to just pass in the `NewWorkingSet` as a parameter to `NewWorkingSet` and then pass in the `Set` as a parameter to `NewWorkingSet` that is the only place where we're using it.
I think this is a bit of a hack. It's not a good idea to add a new method to the `array_unique` and `is_array()` call.
I think this should be `--branch-o`
I think this should be a constant.
This is a bit of a hack, but I think it would be better to move this to the `if self.version_id:` block above the `if self.is_version()` check above, and then call `query_args` inside `get_version()` (or something similar) as `query_args` above.
This is a change in behavior, but I think it's better to move it to the `else` block.
should we also add a `TODO` to make sure we don't accidentally include it in the specs?
This is a bit of a hack, but I think it would be better to have a test that checks whether the value is `None` or not.
Why is this needed?
I think this is a bug fix.
I think we can move this file to the `off/some` package since it's not used anywhere else.
This is a bit of a hack, but I think it's better to just do `self.set_value(text)` instead of `self.raise_window(objreg.last_focused_window())`
This line is not necessary.
I think this should be `EnablePrometheusMetrics: true`
I think we should use the `Object.type` helper here.
I think this should be `coin == 'bch'`
I think this should be `persist_mode_on_change`
Should this be `Headers`?
Why is this needed?
This is a change in behavior, but I think it's better to use `String.format` here.
Why not just `s.stream().NoError(err)`?
I think this should be removed as well.
I think this test is not needed.
This is not a good idea, but I think it's better to just remove the default value from the `__init__` method.
I think this should be `debug` instead of `Warningf`
I think this should be `void Flush();`
So we're not using the manifest file anymore?
I think we should change this to `matchWithNoTerms`
I think this should be done in `var checks = result.checks;`
Please update the docstring accordingly.
This is a breaking change.
Should we use `props.selector` here?
I think this is a good change. It is not related to the fix, but it is not related to the fix.
@jridgewell I think this is the only change that will break existing tests. I think we should change the test name to `lib/`
I think this line is still needed
I think we should add a `# noqa: F401` to the `__init__` list.
I think this is a leftover from debugging.
This is a little confusing. I think it would be better to have a `strcmp (name, ".")` return the filename.
I think we should keep the `IConfig` prefix here.
This is a no-op, but I think it's better to keep it in the test.
I think we should use the `s.getCronExpression()` here.
This is not needed.
Please use `_x( 'Analytics', 'Service name', 'google-site-kit' )` instead.
Metrics/LineLength: Line is too long. [83/80]
I think this should be `@Restricted(NoExternalUse.class)`
Line is too long. [81/80]
I think this should be `def getAlgorithm(self)`
I think this is a good idea. It's not a big deal, but it's a bit confusing to have a method on `ContextMenu` that returns a boolean.
This is not right. `model.schema.base.options.strictPopulate` will always be false.
Why is noiseRemoved needed?
This should be `str`
I think this is a leftover from the previous PR.
This is a change in behavior, but I think it would be better to use a constant for the reader to be passed in.
This is a no-op, but I think it's better to keep the `file_hash` argument in the `make_contents` method.
remove empty line
Is this still needed?
I think this should be `static`.
Let's not change this here, as it's not used anywhere else.
Is this necessary?
I think this should be `violations.format(model_name)`
I think this can be extracted to a helper method.
This is a bit of a hack, but I think it's better to just call the function `serviceEventHooks` instead of `serviceEventHooks` since it's a little bit of a hack.
this needs to be revisited for cases with multiple cpus per model
Is this really necessary?
I think we should remove the part from the test since it is now the same as the part that is testing the same.
Is this TODO still required?
I think this is a bug fix.
I think we should use `overwrite` here.
Why is this needed?
This is a bit of a hack, but I think it's better to move it to the `python_utils.py` file.
I think it would be better to have a separate method for this, and have a similar one for the other modules.
I think this is the only place where we can set `msg.Data` here.
I think this should be `if country != nil && countryString = "Unknown"`
This is a bit of a hack, but I'm not sure if it's worth it to make the QOverload a new variable.
This is a bit of a hack, but I think it would be better to move this into the `installChroot` package.
I think this should be `private ModelProtobuf()`
I think we should rename `reason` to `cancelled` or something like that, since it's a bit confusing to have a single `script` field.
This is not a big deal, but I think it's better to be explicit here.
this is not needed anymore
This is a little confusing. What is the `--no-mode` flag for?
why is this added?
I think we should be able to use the `errors.Wrapf` here.
I think we can just delete the old setting. It's not necessary to keep the old setting.
Nit: I think this should be `--filename-suffix`.
this is not right. It is not supported on rhel4. It is not supported on rhel4. It is not supported on rhel4.
I think this is a breaking change. The `NullabilityHolder holder` class is only used in one place.
I think we should be able to use the `RootPath                     ` variable here.
I think this is a bit of a hack, but I think it's better to just set `pin` to False in the `if` statement.
I think we should add a `@Nullable` annotation here.
We should not have any cleanupPlugins in the code base.
Why not use the `Objects` class here?
Might want to keep the old version as well
Please remove this line.
This is a no-op, but I'm not sure if this is the right fix.
I think we should be able to remove this, since it's not a part of the scope of this PR.
This should be moved to the `if` condition above.
I think we should just use the config here, as we are already setting the default value.
This should be `playbackManager.getPlayerState(item.RunTimeTicks / 10000) : 0`
I think we should keep the `unsubscribed_from_emails` arg here because it's not used anywhere else in the code base.
I think we should keep the directory in the instance from which we mount to agent managed.
I think we should also add a `@Rule` annotation here.
I think we can remove this line.
This is not needed. The width will be set to true when the flowfile is not set.
This is a change in behavior, but I think it's better to move it to the top of the file.
This is a TODO, but it's not really a problem.
I think you can just remove this entire block altogether.
why did you change this?
I think we should also add `kubernetes` to the `kubernetes` package.
This is not needed.
This is a breaking change. I think we should just use `index.toString()` instead of `index.toString()`.
Why is this needed?
This is a bit of a hack, but I think it's better to have it in the `Presenters` class.
I think this should be moved to `na.limits`?
@marosset @jridgewell Is this a bug?
What is this change doing?
This is a bit of a hack, but I think it's better to move this to the `fetched_index` method, and then call `emplace_back` in the `fetched_index` method.
This test is not needed.
Why is this needed?
I think we should just make this `getSchema`
I think this is a good change. The `< 11>` is not a good idea.
I think we should remove this TODO.
Why is this needed?
I think we should use `UPDATE(0x00000000)` here.
I don't think this is the right way to test. I'm not sure if this is the right way to test this.
This is a breaking change. It is not a public API.
This is a change in behavior, but I think it's better to move it to the `else` branch.
I think we should use `connScan.Scan()` here.
I think this is a bug fix. It's not related to the fix, but it's not a problem.
This is a pretty generic name. It's a little confusing to me. What about `List[col].dtype`?
I think this is a good change.
This is not needed.
This is a good change. It's not related to the fix, but it's not related to the fix.
I think this is a bit of a hack, but I think it's better to move it to the `_write_packet` method.
I think this should be in a separate PR, but I think it's better to have it in a separate PR.
I think this should be `coco_instance.py`
Remove the space between `>=` and `>`
I think we should just call this `AspnetRouteTemplateResourceNamesEnabled`
I think we should be able to remove this and just call `NoIID` from `MetadataBurstRate` in `lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/lib/
Why is this - 1?
Why do we need to pass BOOLEAN to these?
This is a little confusing. I think it would be better to have a separate method that takes a new param and then pass it to the constructor.
Should this be `NatPortRange       numorstring.Port`?
I think this should be `writers_`
This is a change in behavior, but I think it's better to move it to the `setUp` method.
I think we should add a column called `permit_params` to the `name` and then we can add a column called `name` and `description` to the `name` and `description` to the `name` and `icon`
why is this change needed?
I think this test should be moved to the `Test` package.
Why not use the existing method?
I think we should be able to remove this and just call `SupportAssetsPrecision` from the code base.
Wouldn't it be better to check if the join has been added once before and not before?
I think this is a leftover?
This is a bit of a hack, but I think it's better to have a function that returns a `ListEvents` that returns a `ListEventsResponse`.
Should we also check that the sqlcipher version is not in the `@Test` tag?
I think this is a leftover from the previous PR.
I think this should be `raise ValueError("new_tab, TGA, TGA, TGA, TGA, TGA, TGA, TGA, TGA, TGA, TGA, TGA, TGA, TGA, TGA, TGA, TGA, TGA, TGA, TGA, TGA, TGA, TGA, TGA, TGA, TGA, TGA, TGA, TGA, TGA, TGA, TGA, TGA, TGA, TGA, TGA, TGA, TGA, TGA
I think we should just make this a `requestTimeout`?
I think we should check if the shiftAmountInt is 0 here.
why is this removed?
I think we can remove the `bigquery` and just use the `current_bigquery` variable.
Use 2 (not 3) spaces for indentation.
This is a breaking change. It's not a problem, but it's a real problem.
Why is this needed?
why is this needed?
This is not needed.
This is a no-op, right?
This is a change in behavior, but I think it's better to make the `Run` take a parameter, and then use it in the `Run` method.
I think this is not needed.
I think we should add a link to the batch here.
I think we should just use `EXCLUDE_CMS // TODO-lucas How can we achieve this w/o changing the BftExtraDataCodec base class`
Line is too long. [83/80]
I think I'd prefer to have a separate class for `TracerProvider` and `TracerProvider` as well.
I think we can remove this
This should be `iframes != NULL && axe._audit != NULL && axe._audit != NULL && axe._audit != NULL && axe._audit != NULL && axe._audit != NULL && axe._audit != NULL && axe._audit != NULL && axe._audit != NULL && axe._audit != NULL && axe._audit != NULL && axe._audit != NULL && axe._audit != NULL && axe._audit != NULL && axe._audit != NULL && axe._audit != NULL && axe._audit != NULL && axe._audit
I think this is a bug fix.
This is a breaking change.
I think this is not needed.
I think we should remove the `isomorphism_kind` call here.
This is not a part of the PR, but I think it's better to move it to the top of the file.
This is a very minor thing, but I think it's better to put it in the `paych` package.
It's not clear to me why we need this change.
Why not keep the `public` variable here?
This is not needed.
Why do we need to check for the flow flow?
I think this should be `volatile` instead of `volatile`
Why is this interface needed?
This is a breaking change.
This should be a warning, right?
Is this change necessary?
This is a little confusing, as `isHydrating` is not defined in the `create` function.
This is a bit of a hack, but I think it's better to have a test that checks for the schema file, and then check that it's not in the schema file.
I think we should use the `getBucketPool` function here.
This is a little confusing, because we are not doing this in the `MatchFold` field. Is there a reason we are not doing this in `MatchFold`?
I think this import is not needed.
I think we should remove `EnableProcessBlockStats` from here and remove `EnableProcessBlockStats` from the `create` method.
why is this removed?
I think this is a good change. We should be able to just use `isinstance` here.
This is a bit of a hack, but I think it's better to have a separate feature for this feature.
I think this is a good change. It's not a big deal, but it's a bit odd to have a test that checks for a non-default value.
I think this should be `public long FindBestHeader() => _blockTree.BestSuggestedHeader?.Number ?? 0;`
Is this method used?
Please add a space after the comma.
I think we should remove this function and just call `GetDataVersion` in the `copy` method.
This is a change in behavior, but I think it's better to just change the type of `.inject` to `.instance_methods`.
This seems like it should be final.
Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is a bug fix.
This is a public method, so I removed it.
I think this is a leftover?
I think this is not needed.
I think we should add `product_product_gem` here.
This is a bug fix. The `put` method is not called on the `Account` method, so it should be called on the `AccountNumber`.
This is a no-op if the result is not set.
Is this change necessary?
I think it would be better to move this check to the `else` block above.
I think this would be more readable if it was `parent_of`
I don't think we need to change this.
This is a bit of a hack, but I think it's better to move it to a separate function.
I think this should be `buildEnvStored *storedBuildEnv`
I'm not sure if we should be using the `session.BalanceTracker` variable here.
I think we should remove this, it's not used anywhere else.
This is a bug fix. It's not related to the fix, but it's a bug fix.
I think it's better to move the import to the top of the file, so that we don't need to import it here.
Why is this typeWidth?
I think we should change the function signature to be more explicit about the function name.
This is a bit of a hack, but I think it's better to keep it in the `use` statement.
I think this is a leftover from the previous commit.
This is a bug fix.
I think this should be `go fmt`
I think this is a bit of a hack, but I think it's better to just have a test that checks for the package.
This is a breaking change. The `Retrieval` is not a `Swarm` method.
Is this change related to the current change?
I think this is a leftover from debugging.
I think we should just make this `Resources.NoDotnetDotExeFileExist`
I think you can remove this line
I think we can remove the `&&` and just use `return` for the `float` and `is_nodata` on the next line.
This is a change in behavior, but I think it's better to use the `defaultOrganization` constant here.
This is the only change that affects Pants.
We should probably be using the `SSL_connection` helper here.
I think this is a leftover from the previous PR.
Should be `<=2.2.0, <2.2.1`
I think this is a no-op, right?
You can use the `if` statement here.
This is a bit of a hack, but I think it's better to make it a `protected final` and use `protected final` instead.
@jridgewell I think this should be `Store.renderers['bokeh'] = Bokeh.instance()`
I think this should be moved to the `init` package.
@smarterclayton do we need to change this?
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this should be `combatPtr` instead of `Combat_ptr`
@deads2k i'm not sure if this is the right fix. I think we should just remove this, and keep the old behavior as it was.
These imports should be removed.
Why is this change required?
This is a bit of a hack, but I think it would be better to have a test for this as well.
We should use the constant here
I think we should move this to `serviceAccountTokenCreator`
I think this import is unused.
This is a duplicate of the feature that is now being removed.
Should we also add a `spire/pkg/common/profiling` constant in the future?
I think you can just use `. 100` instead of `.fa`
Isn't this going to cause a problem if the stream is nullptr?
This was a bug, and it was not related to your change, but it was a bug.
nit: I think we should just call this `await`
I think we should just pass in the `error` here.
Line is too long. [98/80]
I think you need to add a new line after this one.
I think we should use `Put` here.
Does this mean we don't need to pass `pubkey` here?
This is a breaking change. I think it would be better to just have a `predictedFieldInfo.class` that is a `_not_to_current_fieldType` that is not in the `KEY_service_fieldType` method.
I think this should be `g_events->eventPlayerOnTradeRequest(player,tradePartner, tradeItem)`
This is a change in behavior, but I think it's better to keep it.
I think this should be a `ScopeListener` instead of a `Scope` object.
I think we can remove the old option now.
@tgamblin Do you have any idea why this is needed?
I think this is a good idea. It's not a big deal, but it's a bit odd to have a method that returns a `ViewModel` and then only set it once.
What is the reason for this change?
I think we can remove this
Please remove this.
can we use a more specific name for this test?
Can we move this to the `if` block?
I think this is a leftover from the previous commit.
Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think it would be better to use a constant for this timeout, and have it be a constant for each one.
Why remove this file?
I think we should check for `transaction` here instead of `bootstrap_weight_max_blocks`
This is a bit of a hack, but I think it's better to move this to a separate commit.
This is a bit of a hack, but I think it would be better to have a test that checks for the class.
This is a change in behavior, but I think it's better to keep the old behavior.
Shouldn't this be `const char*>(&tagId)`?
I think we should add a default value here.
I think this is a breaking change. I think it's better to move it to the `URL` package.
I think this should be `public RewriteDataFilesAction maxParallelism(int parallelism)`
This should be `this._super(arguments);`
This is a bit of a hack, but I'm not sure if it's worth it.
I think this should be `except UnicodeEncodeError: ...`
There is a typo in the name
I think this should be done in the `pkg/system/guest` package.
I think this should be `var rev string`
I think we should remove this.
I think we should add a new function `_on_value` that we don't need to pass the `bool` here.
I think this should be `_logger.Warn($"{address} nonce is {nonce}"`.
Why did you change this test?
I think we should just remove the `UpdateMetadata` function and call `DeleteByTLF` on the `UpdateMetadata` method.
I think we should be more specific about the name of the variable.
This is the only change that affects the test.
I think we should be able to remove the `x` parameter from `vStringPut` and `vStringPut` calls in `x`.
I think this is a little strange. What about `blacklistTypeStr`?
I think we should log the port here.
Why do we need to define these variables?
I think we should add this to the `train_cfg` interface.
Will this work? I think we should be able to run `-c` and `-o` in the same way, but I think it's a little hard to follow.
Is this a bug fix?
Why do we need this?
I think we should remove this TODO.
I think this is a bug fix.
`lua_pushstring` is only used in the `if (player)` block, so you can remove the `&&` here.
I think we should just make the test configurable.
This should be moved to the `async_thread` list.
I think the `parent` can be removed now, it's used in the `if` statement above.
I think we should just remove this function.
This is not a static import, it is not a static import.
This is a change in behavior, but I'm not sure if this is correct. The `memset_s` call should be `0` instead.
I think this is not needed.
I think this should be `antreaDestinationStatsElementList + len(antreaLabelsElementList)`, since it's not a part of the scope of this PR.
Why is this needed?
I think this should be `2.2.0`
I think this is a leftover from the previous PR.
Please revert this change.
I think this is a bit of a hack, but I think it's better to have a test that checks whether the value is `True` or `False` or `True` or `False` if the value is `True`
I think this should be `cluster_config.py`
I think we should be able to get rid of this `after_update` method and just do `after_update :reconcile_published` in the `app/views/devise/devise/devise/devise/devise/devise/devise/devise/devise/devise/devise/devise/devise/devise/devise/devise/devise/devise/devise/devise/devise/devise/devise/devise/devise/
I think this is a little hard to read. Maybe we should just add a `*PodReference` field to the ExternalEntity and have it be a `*PodReference` field?
Not sure if this is a good idea. The ` <<` should be moved to the end of the line.
I think we should just make this a `.replace()`
I think we should rename this to `HOUSE_OWNED_BY_ACCOUNT`
This is a bit of a hack, but I think it's better to have a test for this.
Why do we need this?
I think we can remove this and use the `.version` property.
I think you can remove this debug statement and use `print()` in the `if` statement.
I don't think we should change the type of the ` getDefaultSettings` to `setDefaults`
I think this is a good change. It's not a problem, but it's a bit odd to have a test that the user can see the same number of rules.
@bparees this is the change that will break all of the existing ` That`s.
Why are we doing this?
This is a little confusing, as it is a function that does nothing. I think it's better to do it in the `GetBlkOrActResponse` function.
I think we should just make this `backgroundFlusher`
I think it's better to have it in the main goroutine rather than just the one in the main goroutine.
I think this should be `getWebQuery` instead of `getWebQuery`
I think this should be `public`
I think we should make this configurable, and make it configurable.
This is not the right fix. It's not related to the PR.
I think we should add a link to the new example here.
Why not using `!isely` instead of `!isely`?
I think we should just remove this TODO.
I think this should be a debug level.
This is a bit of a hack, but I think it's better to move this into the `if` block, and add a TODO to remove the `if` block.
This is a bit of a hack, but I think it's better to move this check to the `URL` function.
I think this is not needed.
I think it would be better to use a `status` object instead of a `status` object.
I think we should use `aria.copyOf` here.
I think this should be irregular_dims
Why are we logging this twice?
This is a bit of a hack, but I'm not sure if it's worth it to just use the `<=` part of the `<` format.
Please remove this line.
I think it would be better to use `if not altModifier` here instead of `if altModifier` as the default.
Do we really need this line?
Line is too long. [86/80]
I think this is a leftover from the previous PR.
This is a bit of a hack, but I think it would be better to check if the value was `false` before calling `setStatus`?
I think we should use `/DELETE` instead of `/schedpolicy`
This is a bit confusing, as `Kernel.srand` is a subclass of `items` and `edit_in?` is a subclass of `Kernel.srand` and it's a subclass of `items` so I think it's better to have it be a subclass of `Kernel.srand`
I think this is a bit of a hack. It's not a big deal but it's a bit of a hack.
Can you add a doc for this new parameter?
I think this is a good idea to use `*Stream` in the `FullClose` package.
I think this is a good place to put this. It's a bit of a hack, but I'm not sure how to fix it.
I think this import is unused.
I think it's better to put the timezone in the `base` block, as it's a bit more explicit.
Shouldn't this be `count`?
I think this should be a new one, not a new one
I think this should be `&&` instead of `&&`
I think this should be `rc == 0 && above(rc == -1)`
I think we should remove the TODO here.
Is there a reason for this change?
I think this should be `debug` instead of `debug`
This should be removed.
can we make this a pointer? it's not a pointer
I think this is not needed.
I think this should be `loadExtension`
I think we should be able to use the `--cert` flag here.
I think we should be able to remove the `hashToFullRules` and `hashToFullRules` altogether.
I think we should add a `beforeAddress` function to the `checkQuery` function in the `beforeAddress` function.
This is a bit of a hack, but I think it would be better to have a test for this.
This is a bit of a hack, but I think it's better to just pass a `nil` here.
I think this is a good idea. I'm not sure if this is the best way to go.
This should be a separate const ReactComponent
I think this is a leftover from the previous PR.
Please add the spaces between `'Places'` and `'Places'`.
"bootstrap.js" is a bit confusing to me. What about "bootstrap.js"?
Why is this needed?
I think this is a good change. It's not a good idea to use a cache here.
I think this is a good change. It is not needed.
I think this check should be done in the `getNotificationData` method, since it's not being used anywhere else.
I think we can drop the `URL` argument here.
Use 2 (not 4) spaces for indentation.
I think we should be able to get rid of this `if err != nil {` statement.
I think it's better to use a specific constant here, e.g. `config --TLSVersionVersion` or something like that.
Why did we change the default behavior here?
Is this change necessary?
This is a bug fix.
Can we use a more meaningful name here?
This is a breaking change.
I think we should change this to use the new Date("2021-01-19")
I think this should be `if (strcasecmp(functionName, "levitate") == 0) {`
I think this should be `goimports`
I think this should be a static field in the base class.
This is a bit of a hack, but I think it's better to move it to the `TreatmentsPlugin` class.
I think this is a bug fix.
should this be title?
I think this should be `getClass().replaceFirst("^AST", "")`
Is this a BC break?
This is a change in behavior, but I think we should change the version number to 0.0.0-beta.5
This file is not needed anymore.
I think this should be `go.uber.org/zapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapap
I think we should be able to remove this bit.
This is a breaking change. I think it would be better to have a separate PR for this.
This is a breaking change. We need to remove the `:` in the list.
This is a breaking change. I think we should just make the `getOnMouseClicked` method return a `ImmutableList` object.
I think this should be `CopiedAnnotations[]string`
I think this is a leftover from the previous commit.
I think we should be able to remove the cfn.
This is a bit of a hack, but I'm not sure if it's worth it to check for `event.stopPropagation` here.
I think we should be able to remove etc here.
I think we should remove the `// echo "user-data"` part.
Should we just use `samplingPirority` here?
Why not just use `ca.crt`?
Why is this change required?
I'm not sure if this is correct. The `[NotNullWhen(true)]` on the previous line is the only one that's not supposed to be used.
(style) trailing whitespace
I think the `NO_TRACING` should be `true` here.
This should be `newSERCOM0_SPI`
I think this is a good idea to have a separate test for that, but I think it's better to have a separate test that checks if the feature is disabled.
if any(arr for arr in arrays) for arr is wrong, do we need to handle that here?
I think this should be `Collections.emptyMap()`.
I think this should be a constant.
I think you meant `JSON.V`
I think this should be `@var string Hint to show above the code editor`
I think this is a good change. The test was not passing because the test was failing.
This should be done in `scrollView.CenterView` instead of here.
We should probably have a `.Merged` here, as we do forgotten to change the behavior of the `render json` to be `Object`.
Why not just use `this`?
I think this should be `create_no_window`
Can you add a `TODO` here to make sure the traffic is not configured?
This is a very minor thing, but I think it's better to be explicit about it.
I think we should just remove the `selected-apis-forwarding` part.
I think we should just remove this, and just use `zero` in the `mne/fixtures/custom`
Why is this needed?
I think it would be better to move this check to the `bridge.getConfig().getString("server.url") == null` check above.
"... if using `Unknown_Util.get('Unknown_Util.get('Unknown_Util.get('Unknown_Util.get('Unknown_Util.get('Unknown_Util.get('Unknown_Util.get('Unknown_Util.get('Unknown_Util.get('Unknown_Util.get('Unknown_Util.get('Unknown_Util.set=Unknown_Util.set=Unknown_Util.set=Unknown_Util.set=Unknown_Util.set=Unknown_Util.set=Unknown_Util.set=Unknown_Util.set=Unknown_Util.set=Unknown
This is a breaking change. We should not change the signature of this function.
This is a change in behavior, but I think it's better to keep the old copyright copyright.
I think this is a good change. It's not a good idea to check for `matches` here.
I think this is a good idea. But I don't think it's worth it to just check for `ec2client` here.
I think this should be `self.__version=True`
Why is this protected?
do we need this?
Metrics/LineLength: Line is too long. [123/120]
I think this check should be done in `isIgnoreIncrementalAnalysis` and not here.
we should also have a `deleteMany({}` in the `cancel` method
I think this is a leftover?
I think this should be removed.
I think we should use `replace` instead of `replace` here.
why is this change required?
This is a change in behavior, but I think we should leave this alone.
Can you move this import to the top of the file?
I think we should just remove this and use the `Clientsets` interface.
This should be done in the `getRef` method.
why not use `str(info)`?
I think we should use a more specific name for this.
This is not needed. You can remove the `#if NET45` and `#if NET452` below.
This is a bug fix.
I think this was a bug, we should not remove it.
I'm not sure if this is the right way to do it, but it seems like it should be `(device_type != std::string("cpu"))`
I think this is a good idea, but I think it's better to move it to the top of the file.
this is not right. `getServiceConfig()` is called only in `NodeConfig` and `NodeConfig` is called only in `NodeConfig` and `NodeConfig` is called only in `NodeConfig`.
This is a bit of a hack, but I'm not sure if it's worth it to make it more explicit.
I think this is a little too late for a while. I think it would be better to have a separate test for that.
I think we should keep the old name as ` ServiceDefinitionDocumentType` and make the same as ` ServiceDefinitionDocumentRuleMergeState`
Use the new hash syntax `.current_page == 1 ? 1 : @response.start`
Is this a bug fix?
I think we should be able to remove this, and just use `dict()` here.
`s.hooks` and `s.s.hooks` are the same, can we just use `this.base.conditional`?
I think we can remove the `.NamespaceMatchSelf` attribute here too.
I think we should be able to use the default `MIN_AMOUNT` instead of the default `MIN_AMOUNT`
I think this should be a `data` (or a `crash-data-subrow`).
Why is this removed?
@mfojtik this is the fix.
I think this is a little confusing. What about `return apisv1alpha1.PoolConfig.DefaultRaidGroupType == apisv1alpha1.PoolStriped`?
I think this should be a `const`
Can you explain why this change is needed?
(style) trailing whitespace
Can we make this `BOOL`?
This is a breaking change. It's not a big deal, but it's a minor thing.
Should we also update the `participant` in the `init_config` method?
why not just `tmImplementation = "cpp"`?
This is a good example of why we need to use the same name for the url.
Why was this removed?
I think you can remove the `else if` and just do `if (mongoClient.s.options.autoEncryption.cryptdConnectionString != null) {`
This will be removed in #410
Can we change this to `return spanIdGenerator.ThreadInstance.CreateNew();` to be consistent with the above?
This is a bit confusing, since the message is not really "not" because it's a "not" of the message.
I think we should just remove this and use `lookup.Done()` in the `New` method.
I think this should be `internal`, since it is a `@private` tag.
Why not just have the copyright at the end of the file?
I think we should just remove this.
I think we should just use the hash from the hash.
This method should be called `GetDataData`
I think we should keep the old name as a constant.
I think this should be `target->getZone() == ZONE_PVP`
I think this should be done in `include/fixup/fixup/fixup/fixup/fixup/fixup/fixup/fixup/fixup/fixup/fixup/fixup/fixup/fixup/fixup/fixup/fixup/fixup/fixup/fixup/fixup/fixup/fixup/fixup/fixup/fixup/fixup/fixup/fixup/fixup/fixup/fixup/fixup/fixup/fixup/fixup/fixup/fixup/fixup
I think this should be `@articles`
I think this is a bit of a hack, but I think it's better to move this to a separate function.
I think it's better to keep the code as it is.
I think this should be `validateFlowExporterConfig` instead of `validateFlowExporterConfig`
Should we make this a `statsEngine`?
Not sure why you removed this
I think we should remove the `update` call here.
This should be `invalid_indices_of_rows`
I think we should use the same `linuxOS` variable here.
This is not needed.
I think this is a good idea. If the `UIA_notification` argument is `4` and the `UIA_notification` flag is `4` and the `UIA_notification` flag is `4` and the `UIA_notification` flag is `4` and the `UIA_notification` flag is `4` and the `UIA_notification` flag is `4` and the `UIA_notification` flag is `4` and the `UIA_notification` flag is `4` and the `UIA_notification` flag is `4` and
This is the only change that affects the `addr` field.
I think this is not needed. The `HOST` check is not needed.
Could you please explain why this is needed?
I think this is a good change. But I think it's better to have a test that checks if the id is not empty.
Why not using the $event->getCacheFilepath() method directly?
why is this needed?
This is a change in behavior, but I think it's better to keep the change in the test.
This is a change in behavior, but I think it's better to move it to a new commit.
`consts` is not used in this file.
I think we can remove this spec completely, since we are now using `import PartitionSpec.equal`
I think we should also change the signature of the `service.MatchingServiceClient` to `service.service.service.service.service.MatchingServiceClient`
I think we should just keep this as an optional, and just have a default value to indicate that it is an optional parameter.
This should be `HTTPNotFound_error`.
I think this should be `Tags.Measured` instead of `Tags.Type` since it's a `SetMetric`?
I think this is the only change that affects this commit's commit.
Why is this change necessary?
This is a change in behavior, but I think it's better to keep it in the `env_vars` method.
Is this still needed?
This should be `global_set_option`
I think we should remove the `HistoryShard` interface now that we are passing the `filter.Builder` interface.
Why is this change needed?
This is a bit of a hack, but I think it would be better to use `str(str)` instead of `info` here.
so glad we're removing this spec?
I think we should use `self.config.options.listen_host` here.
This is a breaking change. It's not a big deal, but it's not a big deal.
I think this should be `setLastPosition` instead of `setLastPosition`
This is a bit of a hack, but I think it's better to keep the `.partition()` calls in the `if` statement.
I think this is a bit of a hack, but I think it's better to make it a `LOG(FATAL)`.
This is a breaking change, and should be removed.
Shouldn't this be `o.appName`?
This file should be removed.
Instead of adding a new constant, can we just use `GROUPS_DOMAIN_SUPER_ADMIN_EMAIL`?
This is a breaking change. It's not a problem, but it's a `abspath` method.
Please use `DisableInMem` to make it more clear what is the difference between `DogStatsdConfig` and `M3`
I think we should be able to remove this and just use `test_approver` in the `GSA18F_APPROVER_EMAIL` method.
I think this is a good change. It's not a problem, but it's a bit odd to have a `obs` field that is not a `obs` field.
I think this should be `exceptexceptexcept KeyError:`.
Why not just add the copyright?
This is a bit of a hack, but I think it's better to move it to a helper method.
I think we should remove this code.
This should be done in a different PR.
I think this should be `.Items()`.
this is a breaking change
This is a bit of a hack, but I think it would be better to check the error message and check the error message.
I think we should make this constant so that the default value is 10.
This is a bug fix. The `org.joda` is not a part of the `Period` class.
Why not `default`?
This is a bit of a hack, but I'm not sure how to fix this.
This is not needed anymore.
This is a little hard to read. I think it's better to just have a `switch` statement.
Remove the extraneous line break.
I think this can be removed now since it's only used in the `if` statement above.
This spec seems to be missing a `skip`
Shouldn't this be `import`?
This is a breaking change. We should be able to use the `getState` function in the `server.command` method.
This is a change in behavior, but I think it's better to move it to the `Next` block.
This is a bit of a hack, but I'm not sure if we should be using the regexp here.
This is a breaking change.
Why remove the copyright?
I think this is a bit of a hack, but I think it's better to have a method that returns a `POD_FAILED` that returns a `Config` instead of a `Config` that returns a `Config` that returns a `Config` that returns a `Config` that returns a `Config` that returns a `Config` that returns a `Config` that returns a `Config` that returns a `Config` that returns a `Config`
Is this change necessary?
Is this method used?
This was a bug, but now it's a `false` value.
This is a breaking change. I think we should just make this `@Nullable`
This is a breaking change. It's not a test class, but it's not a test class.
`string s = reader.Value?.ToString();`
I think we should add a `TODO` here.
I think we should add a `@Deprecated` annotation here.
I think this is the only change that is needed.
This is a bit of a hack, but I'm not sure if it's worth it to make the `./` part of the string, as it's a bit more readable.
Please remove this.
Use 2 (not 0) spaces for indenting an expression spanning multiple lines.
I think we should just check if the limit is the correct caller.
Should we keep the `c.AddOptions` call here?
I think this is a good change. It should be `setTemplate` and `setTargets`
This is a bit confusing, as it is a boolean, and we don't have to call `info` on the `error` variable.
This is a breaking change. It looks like the changes in this file are not related to the PR.
I think we should just remove this TODO.
This should be set to 0.
I think this is a good change. But I think it's better to check the error message in the `if` statement.
I think this should be changed to "Fee is more than ' +1'
Shouldn't we use an int here?
I think we should just remove the SDK from the SNS class.
I think this can be deleted now, since it's not used anywhere.
I think we should use `rand.Seed` here.
I think we should add a description about what this means.
