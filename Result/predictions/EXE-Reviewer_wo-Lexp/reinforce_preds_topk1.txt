Is there a reason we need to use `transport` here?
I think we should setPageSize($config->Index->record_batch_size, as the batch size is not defined.
I think it would be better to use `@DO NOTframe` here, as it's used in the other places where we use it.
This is a bit unrelated to the PR.
I think this is a little confusing. What about `isNavigating()`?
This should be `ID2col(const Mat& im,Mat& col,`
@jackfrancis I'm not sure if this is the best way to do it.
This is a bit of a hack, but I think it would be better to have a simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple simple
This should be `if not hkl:`
This is a breaking change.
Use a constant?
I think it would be better to use `GetSharedSharedValue()` here, as it is used in the `shared` function.
nit: I think we should use `add` or `add-render` here.
ToHexString should be done in the same PR as the rest of the PR
I think we should use `w.logger.Error("failed to update image", provider.Name()))` here. The `provider` image is an `nil` value.
Is this not needed anymore?
This is a breaking change.
(style) Macros with complex values should be enclosed in parentheses
I think it should be changed to use the `status` in the `error` block.
I think this is the only change that will cause the wlr_input_device to be changed.
This is a bit of an unrelated but I think it might be worth adding a new task to ensure that the task task is not available.
I think `NONEXIST_ENABLED` should be `disabled`
This is a breaking change. It is not a problem, but it is a real problem.
I think we should add `isEmptyType()` here
This is the main change.
I think it's better to just say "the command history"
I think this is a leftover from debugging?
This should be in `__init__`
Metrics/LineLength: Line is too long. [98/80]
This is a bug fix. It should be `withStatusDirectory`
This namespace is not used.
**Question:** Should we make a `result.stdout` member variable in the `exit_code` instead?
Why not use `s.clear()`?
I think we should move this to `alerters`
I don't think this is correct.
Is this related to the issue?
Why not use `byte` here?
This function is only called in tests, so it can be moved to a shared location.
I think this interface is not needed. It is not a good idea to have it as a dependency.
I think we should use `SetTag` here instead of `ServiceName` as we do in other places.
I think we should remove this line.
This should be 2014, 2004, 2009, ...
`BiConsumer` is not used in this class. Please remove it.
I think we should use `.to_s` instead of `queue_as` here.
Why do you need to use the `getCartOfCurrentCustomer` method here?
Isn't there a better way to do this? I don't think we should add the `validators` field to the `transaction_pool` field.
This import is unused.
This is a bit of an unrelated change, but I'm not sure how to get this from the original version.
I think we can use `for (int i = 0; i < feeds.size() {`
This is not needed. `if solid_subset is None` is the default value
@jridgewell Is this change intended?
Should we make the `chain` parameter be added to the `TipSet` interface?
I think we should be able to get rid of this `cleanup` and `cleanup` and `low` keys.
This is a bit of an unrelated change, but I'm not sure what the best way to fix this is.
I think it would be better to use `time.validate(time.Second)` here instead of `time.validate(time.Second)`
I think this should be ` ProvidedPromise`
I think we should be returning a `s.pkg.MarkTargetModified` instead of a `s.pkg.MarkTargetModified` here.
I think this should be `_name__` instead of `_name__` since the class name is the same as `arch.FREEBSD`.
I think it would be better to use `return false;` instead of `return false;`
This is a breaking change.
why change this?
This should be `return {` to match the other `return` blocks.
why not just `(int) (plan.Node, bool)`?
This is the only change that affects TF providers.
I think we can just remove the `else` here, since we're only using the OpenID
The `balance` should be `balance`, right?
why is this a string?
Is this needed? I don't see any `_infrastructure` defined anywhere.
I'm not sure that this is the right fix. The `ghost_velocity` function is used to set the default value for the first parameter.
Why is this `return true`?
I think you should add `padding: 0` to the end of the loop.
I would prefer to assert that `sibling->parent == subsurface->parent` is subsurface.
change to string to avoid mixing up the code
Can we change this to "inDDL"? "inDDL == """
(style) please, no space before tabs
I think this test should be moved to the `with_middle` class. It's not used anywhere else.
This is a bug fix. It should be `webenginesettings.default_profile`
shouldn't this be print as well?
This is a change in behavior, but I think it's better to make the error message more specific.
Can you add a TODO to remove this?
This is a change in behavior, but I'm not sure why it was there before.
This should be `Optional[str]`. The replace variables should be in the docstring.
why do you need this?
Do we need to keep the `w.Vars` ID?
The position of the file in a manifest, or the concrete directory.
This should be a separate commit
I think this is a leftover
I think this is the only change that affects TF providers.
`localConnection` is not really needed. `if (Blockly.highlightedConnection_ != localConnection)` is enough.
We should probably move this to the `container` package.
I think this should be `const { Readable } = require('stream')`
I think this should be done in `popo` and not `store`
This is a change in behavior, but I'm not sure why we need to init here.
Should we move this to the top of the function?
origin = element || origin || POINTER
why not just `if`?
Is it possible to get rid of the `toplevel` level?
This is a bit of an unrelated change, but I'm not sure it's worth it.
I think this should be removed.
I think we should not need to fetch theReference here. The ID is not the Executor type.
I'm not sure why this is removed? It seems like the `typeof` check was not needed.
`return el.getAttribute('aria-hidden')`?
I think this import can be removed?
Is this used?
I think this is the only change needed for v1alpha1.
Should this be `PortBinding`?
What is the reason for this change?
I think we can just remove the poll method and call the poll method in the `RequestId` instead.
I think this should be `axe.utils.Array`
I'm not sure if this is the right place to read the link?
This should be removed.
why not use a `@var` here?
I think we should keep the old version as well.
This is the only place where we can use this path.
The default is `default` so I would use it here.
Since this is the `Linq` file, I think it should be removed.
I think this should be `req = req.open(url).read()`
`breakpoint` is a bit confusing, can we just use `self.breakpoint = break.breakpoint`?
I think this should be `self.location = self.value`
I don't think this is needed.
Is this a breaking change?
`std::distance(first, first + 9)` is enough.
I think we should be able to use `kubeletObjectName` here. We should probably use `app.kubernetes.io/prometheus-operator` instead.
What's the reason for this change? I don't see any changes to the code that actually does the null check
Shouldn't it be `ioctl/cmd/xrc20`?
I think this should be called `maybe_context_cls_inst`
This field is not used.
This should be `media`
Why is this false?
I think this can be `typeof.toString.call(obj).match(/\s(\w+)/)[1].toLowerCase();`
Can we just use `ctx.context.ctx` here?
I think this is still not needed.
This is a breaking change. This is a breaking change. The codeGenVersion is a breaking change.
This should be `this.uppy.setFileState(file.id, { response }`
I think this is a bug in `readChan`?
This is a change in behavior, but I think it's better to move it to the `err` block.
Without string should be a function or a function.
I think this is a leftover from the previous commit
The tags in `tags` tags should be `nil` or `false`
I think this scope is not used anywhere.
This should be moved to the `on_connection_closed` function.
I don't think we need this file.
The `mask_separator` is used to pass the value into the h2o_next_token() function. It's not a h2o_iovec_t *iter, int separator, size_t *value, int coma_separator.
nit: I think we can remove the `cycling` and `headerCache` parameter from `ksqlCache` and `ksqlCache` and `ksqlCache` in `ksqlCache` and `ksqlCache` and `ksqlCache` and `ksqlCache` are only used in `ksqlCache` and `ksqlCache`
This is a change in behavior, but I think it would be better to move the `v3` check into the `v3` class. It would be easier to understand if we just use the `v3` class in the `v3` class.
why is this change necessary?
This is a breaking change. It is not used anywhere.
I think this should be `from_motorway && node_based_graph.GetEdgeData(eid).flags.road_classification.IsLinkClass());`
I think this should be ` master_certname => host,`
why is this needed?
Why is this change needed?
I think we should be able to remove this if statement.
Use `-name` instead of `-name`
Is there a reason why you removed the old code and not just removing the nodeTypeEdge check?
I think we should also remove the explicit `notificationManager`
I think we should only do this if `c.Call` is `nil`.
I think it would be better to move the `GenerateAPIKey` to the top of the file, and just call it directly in the `a *WebAPI` module.
this is a bit weird. why is it not?
this is not compatible with 0.5, 0.5, 0.5
I think this should be `calledThrice`
This should be `obj_message` instead of `obj` since it's a `message` action.
I think we should use the new messages here instead of the new messages.
Style/StringLiterals: Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this is a bug fix.
I think we should be able to remove this and just do `ia2Web.Ia2Web.Ia2Web.Ia2Web.Ia2Web.riedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedriedried
This should be `protected E data`
This is a bit of an unrelated change, but I'm not sure it's worth it.
Please include the header from `src/p2o/`
I think it would be better to just call this `AlertQuerystring` and just call it `alertQueryUrl`?
This is the only place where we need to handle the case where the ip is not set.
This test is failing because latin test fails with an error.
Why are we using a test ID here? I don't see it being used anywhere.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
This is the only change that affects catching the `ClassNotFoundException`
I think we can remove this and the other fields too.
This is a bit of a hack, but I think it's better to keep the same pattern for the other changes.
I think we should keep the old version as the other packages.
`java.util.Iterator` is not used anymore.
I think it's better to use `ips` instead of `each` as the second parameter.
This is a breaking change.
Line is too long. [87/80]
Please use `import 'react'`
This is a very minor detail, but I think it would be better to have a default value of `true` and then use it in the `sStoreStipendNeeded` constructor.
This test is testing the wrong thing.
I think this should be `i.service_fieldId() == ManifestFile.SPEC_ID.fieldId()`
Why are we returning a string here?
I think we should use `const` here. The `allEvents` is not a boolean.
This should be in `lib/auth/auth.py`, right?
I think this should be done in `if (dom != null && !isHydrating && !isHydrating && !isHydrating && !isHydrating && !isHydrating && !isHydrating && !isHydrating && !isHydrating && !isHydrating && !isHydrating && !isHydrating && !isHydrating && !isHydrating && !isHydrating && !isHydrating && !isHydrating && !isHydrating && !isHydrating && !isHydrating && !isHydrating && !isHydrating && !isHydrating && !is
I think this is not needed anymore.
This should be changed to use the new `teardownClass` constant.
Since this is only used in `authenticate_user!`, I think it would be better to check the check_disabled_client.
I think this test should be moved to the `query_string_parameters_into_account` method.
I think we should apply the `custom_facts` constant here instead of the `apply_helpers` one.
Why is this class needed?
why change this 1?
This is a bit of an odd name. I think it would be better to have a method that returns a string.
I think we should add this property to the properties class instead of creating a new properties class.
This function is only called in one place, so it's probably best to just add a function that returns a `var ([]byte, error)` and then just use that function.
This is a bit of an unrelated change, but I'm not sure how to test this.
This is a bit of a hack, but I'm not sure we should change it here. The `/home/DDITAdministrator/myagent/_work/_temp` directory is used to generate a directory that contains the directory that contains the directory that contains the directory that contains the directory that contains the directory that contains the directory that contains the directory that contains the directory that contains the directory that contains the directory that contains the directory.
Nit: import order
I think we should use `_header_for_item` here.
This is the only change that affects TF providers.
I think this is a leftover from debugging?
Why not set the ARM_32 as defined?
I think this field can be removed now, since it's used in the `ApiModel`
this is the wrong place to put this. the `getAvatarFilename` function is called in the `getAvatarId` function
I think this should be error.
I think this should be `DefaultTextMapPropagator` and not `DefaultTextMapPropagator`
Why is this line removed?
I'm not sure if this is the right fix.
Maybe we should move this to a separate file, so that we don't have to worry about it?
This is a very good change. If you want to change the default value, you should change the default value to `required*`
I think this should be a `costMethod`, not a `costMethod`.
I think we should add a `StoreStore` to the `sql` interface.
`putOpt` is a `response` object, so it should be `response.toString()`.
This is the only change that affects the test.
I think this should be `!empty($dqlFilter)`
return error?
I think it would be better to make this `@output_buffer_out` (and then remove the `@line_prefix`) since it is now an alias for the `out` parameter.
This is a bug fix. You should be able to use `binary_labels` instead of `labels` here.
I think this is not needed.
remove this line
No need for separate `user` action, just to be sure that we don't have to.
I think you can remove the Dimension parameter now
I think we should keep the old name here as well.
this is the actual fix.
this was the bug
This should be `github.com/pkg/errors`
`capabilities` is not null, so `null` is unnecessary.
I removed this because it was already in the previous commit
Space missing after comma.
We should probably add a note that this is not a global setting.
Why is this change necessary?
I think we should also check for `fastcgi.go` here.
I think we can remove this now that we don't have any other code using it.
I think this is not needed
This is not needed.
Why is this removed?
I think it would be better to use `<img>` here instead of `googlesitekit-publisher-win__small-image.`
I think this is a leftover
This is the only line that is needed.
I think this needs to be `location_factory`
This should be `static void engineUp(const std::string &engineType,`
I think we should use `0` instead of `0` to avoid the risk of the `1` value.
I think this is a leftover from the PR
This is a bug fix.
This function is only called from one place, so I think it's better to just pass the registeredEvent chan to the stopLoop chan.
I think it would be better to use `src/**/*.wav` instead of `wav` as the default.
I think we should add the same type to the `-4` and `-4` parameters. The same applies to the other `-4` and `-4` parameters.
this is the same as the other one
This is a slightly cleaner way to do this.
`contains` is a bit confusing with `contains`...
This is not used.
Use `test_client_requests` instead of `test_client_requests`
I think you can just use `ptr==NULL`
I think this should be `url_*` instead of `url_*`
I think we should be able to handle the server's lock here.
Can we enableDownloading by default?
This method is not used anymore.
Maybe `HttpServerErrorCodes` is better?
I think we should also add the new values to the `Client` model.
I think this is a bit confusing. Can we have a `ConfigSetParams.FILE_PATH` method that does the same thing?
This is a bit of a hack, but I think it would be better if we just use the "root" directory here.
I think we can remove this `me_path` check now, it's not used anywhere else
I think we can move this to the `beaker/options` file since it's only used in `libbeaker/options` file.
I think `year.between` is a better name.
I think this is the only place where we need to handle Container is in `dockerChange` and `dockerChange`
@mmaxim this is the fix for the bug.
This method is only used in one place, so I think it's better to move it to the interface.
Why is this removed?
Metrics/BlockLength: Block has too many lines. [32/25]
Why is this needed?
This is a bit of an unrelated change, but I'm not sure it's worth it.
This is a breaking change.
This is a bug fix.
Another problem with using os, not os, not os.
Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.
I think we should be able to remove the `404` part of the `else` block.
I think we should keep the dependency on `python_requires`
You can use `return disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled disabled
` aws_test` is not used in this file, can we remove it?
I think we should keep the `instruments` value in the test as well.
Can we just use `eval.BlockEvaluator` here?
I'm not sure this is the right fix.
This is a private method, so I'd remove it.
Why is this removed?
This should be done in `src/server/server/server.js` as well.
I think this is a bit confusing. I would say that the method name should be `Hive_` instead of `wasHive_`
nit: unused import.
This should be grouped with the other standard library imports.
Can we call this `c.GetterGetter`?
do we need to add this to the base class?
I think this was a typo.
this is a BC break
Why are we adding this?
How about: `iss.Email != nil` and if the email address is empty, we wouldn't want to check the error.
I think this should be `getAvailablePort`
I think this should be `var_loc_keys=self.loc_mng.get_locator([{'name':' ...`
I think this is the only place where we can get the project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project project
Why is this needed? It seems like it should be nullable.
this is the same code as above, we should return `true`
WriteAsync method is deprecated, so this method can be removed.
Do we need this?
This method and the similar methods in `approver_email_address` need to be defined in `approver_email_address`.
`attach` is not used in this method. `String` is a better name. `attach` is a `attach`.
This method is called in `initDefinitionLevelsReader` which is called in `IOException`.
I'm not sure if this is the right place to force the SSPS config.
I think it would be better to move the `find()` method into `Game::getPlayerByNameWildcard` and then call `Game::getPlayerByNameWildcard()` in the `Game::getPlayerByNameWildcard` method.
This is a bug fix.
This is a bit of an odd name. I would suggest `gulp help` or `gulp help`.
I think we can keep this as `public` since it is public.
this->getRequest()->get('view_missing_traductions_only', 1), is this a bug?
@matt-gardner, what is this `validatePackage` for?
this is a bug, we are not using `self.items()` anymore.
This is a bit of a hack. I think it would be better to move the `Withdraw` logic into `chain.promiseSettler.Withdraw` and then use `chain.promiseSettler.Withdraw` directly.
This is a bug, since the `IsValid` is not a valid value.
This is a good change. It's not a good idea to use the same name.
Rails.application.config.blacklight_export_secret_token is used in the Bookmarks. No need to add it here.
Please use `assertRaises` instead of `ValueError` for the variable.
Why not use `dmc->size == size`?
This is the wrong place for Hosts. The code is not using the default value of `ecs/`.
@smarterclayton do we want to use `ipsecESPOverhead`?
I think `OnEnd` should be `GetProcessor`. The `GetProcessor` should be `GetProcessor` and `GetProcessor` should be `GetProcessor` and `GetProcessor` should be `GetProcessor` and `GetProcessor` (or `GetProcessor`).
This import is unused.
I think we should use the server's `.User` here.
This test is not related to this PR but I think it's worth it to remove it.
I don't think this is the right place for this.
Is this change necessary?
`miningCoordinator.isMining()` is a member variable.
I think it should be `getConfig` instead of `offline_mode` since it's used in multiple places.
Is this the only place where we call `renameAndDeletionLock.Unlock()`?
why change this?
This is the only place where we use this URL. I think we should use `<9J2OjH8Ao_A>` instead.
I think we should use `from io import 1` here.
I think we should just remove this and the other unsupport version
I think this should be moved to `_CleanFpInfoAttr_` instead.
I think it is better to use the variable name `RAY_TRACING_NV`
`out` is a great idea, because it's a `exercise` object, not a `permit`.
ExerciseWithProgressQuery.java is a better name
Why are these public?
I think this is not needed.
I think we should keep the old version as it is.
I think we can just do `consensus.SaveConfigurableConsensus(nc.algodDataDir, consensus)` instead of `consensus.TeTeensusProtocols` and do `rebuild.Teensus` in the constructor.
Why is this import removed?
Why is this change necessary?
I think this should be ` MONGOS_LEGACY_HELLO`
I think this is the only place where we retry it. It was a bit confusing. It was a bit confusing. It was a bit confusing that the code was not being used. It was a bit confusing to me. It was a bit confusing to see that the `privilege_SYNCH_SKIP_CLIENT_THREAD` is not called.
This should be removed.
I think we should add a check for the error here, otherwise we will have to add the error.
I think we should just return `dokan.ExistingDir` instead of `true` here.
This will need to be moved to listRegions, right?
This is a bit of an unrelated, but I'm not sure if it's worth it to just use `editor.container` instead of `editor.container`?
I think this should be `get_search_form($argument)` because it's a boolean.
This should be removed.
I think we can remove this once we're removing.
I think this should be `azkaban.jvm.ARGS`
I think we should just remove the `transl` part of the `__`
I think we should just use `GetCancelledZeroTask` here.
I think this is a good idea. It's not a good idea to have if the image was a good idea.
I'm not sure if this is the right place to put it in `auto block`, since it is a `const` statement.
I think this is a bit confusing. What is the difference between `run` and `message`?
Why are we adding this?
I think we should use the default value here.
Why is this removed?
I think it would be better to use a different name.
I think we should move this to `start_moto_server` so that we don't have to move the TODO move to `PORT_SES`.
This is a pretty big change, but I think it's a good idea to add it to the `__init__` method.
Is this a public constant?
This is the only one that needs to be fixed.
I think it should be `annotationsPropertyMetaModel`
Why was this removed?
I think this should be `use`
This should be removed.
I think we should use `charset.getName()` instead of `charset.getName()`.
why is this needed?
why not `omitempty`?
I think we should call `Start` here, as `Close` is already called in `tty`.
I think we should keep the `implicit` attribute in the `setUp` method.
This is not needed anymore, right?
This is a bit confusing, as we are already using OS config in the config file. What about just using `skip_config_not_supported`?
I think this should be `validType` instead of `enclosureTypeValid`.
I think this is a good idea. It's not a good idea to have a `Client.http` function.
(style) code indent should use tabs where possible
This is the only change that affects the PR.
I think this is the right fix.
I think this should be `read(pfd.fd, &count, sizeof(count))` and then `read(pfd.fd, &count)`, otherwise the error message will be more readable.
I think this is a good idea. It should be a separate PR.
This is a no-op, can you remove it?
I think this should be a `File<file schema>`
I'm not sure if this is the right place for this. The `.to_s` check is unnecessary. The `.to_s` check is already in the `BSON::Decimal128`.
I think we should require `bolt/plan_creator` here. We'll need to move it to `application/plan_creator` so it doesn't require `bolt/plan_creator`.
I think this should be 20 minutes
This is a private function, I don't think it's necessary to remove it.
I think this is a leftover from debugging?
This is a little confusing, why not just do `Start(ctx, err)`?
This is a bit unrelated to the PR but I'm not sure what the best way to fix this is to use the `test` limit. I think it's better to just use `stress_test` in the `add_setting` method.
why remove this? This is used in `release_history` and `release_pool_` in `reader_payload_pool_`
You can use `DrandEntries` instead of `drand.Entry`.
I think this should be `Optional[current_key]`. It's not a `None` value.
why not use `mode`?
Shouldn't this be `Step<DefaultTimeout> 0`?
I think it would be more clear to just say `limit` and `limit` (or whatever we're doing)
I think we can remove this and `index_consts`
How about rename rollbackPrimary to rollbackPrimary?
why did this change?
I think we should also add applyFixesToNode
nit: I think this function can be called ` fakeListOk`.
I think we should be using the `client.go` file instead of the `client-go` file.
Nit: I think this import is unused.
This is the only change that affects pipeline changes.
I think this should be `with`
Can you add a license header here?
I think it would be better to use `skipRowsToPreventHalloween_` here.
I think this import is not needed.
I think this can be removed now, since `insecure` is now a global variable.
I think we should be able to use the existing `HTTP/1.1` route, since we don't have to worry about the HTTP path.
this test is not testing anything
This is not the right place to put this method in MakeFunc() - it's not really needed.
Why did you change the names of the window?
This is the only place where we need to handle the case where the ip is not set.
This is a bit of a hack, but I think it would be better if we just always pass the self.Promise into the WebOS, and then pass it in the self.Promise to the WebOS (which is the case where it's not the case).
If `skip_targets` is no longer used, then this will skip the `skip_targets` part.
Maybe we could use `_is_function_arn` here?
if np.socketProtect is nil, this will not be true.
The `DeleteAll` interface is used to save some time. I think we should just call it `DeleteFile` to make it clear that we are using it in the `DeleteAll` interface.
I think we should remove these now
I think it would be better to use `Config.config` instead of `Config.config` as the name of the class.
This is the wrong place to put this. The EnableTelemetrySdk is the source of the source.
I think this was a typo.
nit: can we have a `volatile` that does the same thing?
I think it would be better to have a `isHydrating` check that it's not null, and then check that it's not null.
I think it would be better to use `call_user_func_array` here instead of `array_merge` directly.
I think this should be `sc.IsValid(ctx, ctx)`
I think we should add a new parameter to this one and add a new one to the other. Otherwise, we will have to add a new parameter to the other one and add a new one to the other.
I think we should use `self.headers.copy()` here
What is the motivation for this change? I don't see any `keyword` fields that are passed in from the `keyword`
I think this is the only place where we use the `S2` command, not the `S2` command. I think we should just use the `S2` command here.
I think it's better to use `TogglePrefetcher.getEntity()` instead of `TogglePrefetcher.getEntity()`
I think this is a typo
This should be added to `mne/utils/config.md` as well.
I think we should be able to remove this check.
Could we get rid of this `getAllprojects` method and just return `getResolvedArtifacts`?
The `data` is a bit confusing, it's a bit confusing to have a data-lists in the list.
I think we should check if conf.use_winpcapy and (not conf.use_pcapy) and (not conf.use_pcapy) and (not conf.use_pcapy) and (not conf.use_pcapy) and (not conf.use_pcapy) and (not conf.use_pcapy) and (not conf.use_pcapy) and (not conf.use_pcapy) and (not conf.use_pcapy)
I think this should be `core.asset_defs`
I think this is the only place where we use `strncpy` is used.
I think we should use the `only` keyword here.
This is a lot of public methods in this file, I think it should be done in `require` block.
Should we make this `int`?
I think we should be using `kinto.config` here.
The `!r` should be fine, but I think it should be fine.
This is the only change that affects the openerFrom* method. It's important that the key is not empty.
I think this should be removed.
I think we can remove this line.
I think this should be `options: {babelrc: false,` instead of `options: {babelrc: false,`
why is this changed?
This is a bit of an unrelated change, but I'm not sure it's worth it.
I think we should keep the old name here, otherwise we'll have to change the existing name. The new name is `write`.
I think we should keep the old name here as well.
This is a private function, so I would leave it.
I think it would be better to use `if (OnlySAN, featureset.LongDomainFeature()) {` instead of `if (OnlySAN, featureset.LongDomainFeature) {`
This is a very minor thing, but I think it would be better to use `<=` instead of `>` here.
This should be added to the `master` block.
This is a breaking change. We should probably add a `maven2.org` to the `search` package.
This is a breaking change. It should be `NET.http`.
I think this should be `gc UTF-8 strings`
Is there a reason why we wouldn't just call `SolrInputDocument` here?
This is the only change that affects the rest of the code. The rest of the code is not needed.
I think we should remove the `issueTitle` because it's not used anywhere else.
I think this is a leftover?
I think we should do the same for `setup_single_post_style` too.
How about rename to `remote_TO_TO_TO_TO_TO`?
This function is not used anywhere.
I think this is the only place where we need this code.
Why was this change made?
I think this is a bug fix.
I think this should be `volatile`.
I think this should be `@since`
I think it's better to use `ASSIGNERS` here, since it's a `SAMPLERS` in the `ASSIGN` module.
I think this is the only change that affects TF providers.
This is a bit of a nitpick, but I think it's better to use `stats.has_b?` instead of `stats.has_b?` here.
This should be in the `case` statement.
This file has been removed.
I think we should add a note to the docstring that the user can see what the user can see.
Line is too long. [83/80]
I think this file should be removed
I think we should use `location.count()` instead of `location`
should we rename this to `executionproto`?
I think this should be removed.
This is the only change that affects EINVAL.
`time.Time` is a little confusing. It's a little confusing to have a `Time` or `Time.Time`.
This doesn't seem right. It is a problem, but it's not a problem.
This should be `OptionalMethod`, right?
I think this should be a public method.
This should be removed.
I think we can remove this assert, since we're now using it in `_validate`
this is the same thing as the other command, do we really want to make sure that the command is the same as the command's name? `winrm_nodes` is the same as the command line, so this should be fine.
Copyright -> copyright year
Isn't this going to be true for every single page, if we have a specific page, then we should return `false`?
I think this should be cachedValue
I think we should use `ui-grid-icon-plus-squared` instead of `ui-grid-icon-plus-squared`
This is a breaking change. I think it's better to remove the id in the `id` section.
@jridgewell I'm not sure why this change is needed. We have `\n` in '\\@ and '\\\'.
This interface is not used. It is only used in tests, so we can remove it.
I think we should check if `cfg.SynchronizableEntitiesPrefix` is nil.
I think this should be `pathlib`
I think this can be removed now
This is a bit weird. I think it should be `self._tab.is_deleted()`
I think we should just call it `profiling_enabled` to make it clear that the port is present.
why not `c.ssh.forward_agent = nil?`?
Can we make the default a bit more explicit?
I think this should be `config.FlagKeepConnectedOnFail` instead of `work`
I think this is a good change. We should probably be consistent and use `size()` here.
Align the operands of an expression in an assignment spanning multiple lines.
I think it would be better to keep the original implementation of the interface.
I think this should be a `Row.siteInfo`
I think we should remove this line. The code below is not working.
I think we should be able to use `maxImageRampup` here.
I think this should be `-foo` instead of `-foo` since the `-foo` is the default.
I don't think this is the right place to put this. It's a no-op, so I'd rather avoid this warning.
The schemaMan is not nullptr.
This import is unused.
I think this should be done in `interpreter.Eval` instead of `enable.scope`.
Why are we adding this?
Why does this default to false? I think it should default to true.
I think we can move this method into the `get_margin_value` method, since it's used in the `Admin::get_margin_value` method.
Please don't remove this import
I think it would be better to just say `path to the addon` since it's the same as `path` above.
Why is this change required?
Is there a reason why you wouldn't use `wx`?
This is the fix.
this is the fix. It should be reverted.
I think this is a bit too broad.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
Why are we returning an error here?
I think this is a leftover from debugging?
This should be removed.
Is this a BC break? If so, we should probably change the default value to `None`
`flattenIndex` is not used in the code base.
add a link to the link to the link here
This is the only change that affects the download-file. It's not the correct way to do this.
I think this is a leftover statement.
Just a question, why not just use `dialect`?
It's not possible to use an enum with a multi-valued chan by name?
Is this the right error to return here? If it's not, it should be `err.Code(err)`
I think we can remove the "if not specified" part and the "if not specified" part.
I think we should probably use `load` instead of `open` here.
@dvoytenko I'm not sure if this is the right fix. The `params.qstring.event` check is still needed here, but if it is, then the `if` statement is redundant. The `if` statement is only needed for `params.qstring.event` check.
should we set this to null?
This should be done in `pkg/api/server/server/v1.go`
This is the only change that affects the code.
I think we can keep the `dataverse.rserve.user` and `dataverse.rserve.password` params.
I think this should be `strnlen_s` instead of `strnlen_s` since it's the same as `tmp_optarg` and the `endptr` is the same as `tmp_optarg`.
I think we should add `from:from` to the `cc` model, as it's not a single field.
Why did you move the `act` call here?
@jridgewell this is the change here.
I think this should be `LegacyFormHelper::getType('form')`.
I think this is not the case. The port should be `opt_port`
So, the `name` for the categoryNames array is now unused?
This is a very large number of app items. What about `Unknown`?
I think it would be cleaner to just use `v.length === 24 && v.length === 24` here.
I think we should be able to get rid of the vote and use the constant directly in the validator.
I think we should assert that the error is not logged.
This is a bit confusing, as it's not a valid value. I would expect the `registry.Address` to be set to `nil` in the `registry.Address`
This is a bit of an unrelated change, but I'm not sure it's worth it.
I think we should use the `time.Since` here.
This test is testing the wrong thing. It's not clear what the w+/ tests are testing.
I think this is a bug fix.
This is a breaking change. The `Wire` method is used to pass the `sql.DB` to the `sql.DB` so it can be used directly.
I think we should remove the `Namer` property from the API.
I think this should be `resolve_files`
I think we should move this to `pkg/config` and move it to `pkg/config`
I think this is a good idea. It's not a good idea to set `BlockChanSize` to `true` if `Dispatcher` is set to `true` but `BlockSyncChanSize` is set to `true` when `0` is set to `true`.
I think we can just do `plans.reject { |plan| ... }`
This should be `UART_RX_PIN`
I think this should be `dnsDiscoveryUrl`.
Is this file still needed?
I think we should change the key name to be `None` here. The key name is not the key name.
I think we should be able to remove this 3.
Please don't use braces for these kind of conditionals.
`desiredUID` to `desiredRole`
I think this import is unused
I think we should just return ok and return ok.
This is the only change that affects the null check. I think we should be able to remove the `passwordModificationTime.getTime()` call.
This check is not needed anymore, if `ProcessStart` is not null, it will be false.
Is this the only place where we need to use the `Printf` function?
This is a breaking change.
I think we can remove the ActionByActionHash method altogether.
I think we can remove this method now that it's not used anywhere.
This should be reverted.
This should be a single line string.
I think this should be "The above logic is further specialised"
I think it would be better to use `storage.target` instead of `target`
I think this is the only usage of `client` being used in this PR.
Why is this needed?
`editController` is not used anywhere else, can it be removed?
I think this is a good idea. It's not a big deal, but it's a little hard to see.
what is the reason for this change?
This is a breaking change. If the element is not present, the `value` attribute is not present.
This should be done in `saveTaskIPAddress`
I think it would be better to use the same color color as the cache_[theme] = output;
This is not used anywhere.
This should be a part of the message.
This line is not necessary
I think this should be done in `RCLONE_CONFIG_PASS`
I think this test is still not needed.
I think we should just remove this.
This should be `beamResult` instead of `PlanResult`
I think we should just pass the error to `ExponentialBackoff` and remove the `nolint` here.
@matt-gardner How do you feel about this? I think we should be able to use `hu.FairbankBlockHeight()` instead of `+a.foundationBonusLastEpoch` to avoid the `+a.foundationBonusLastEpoch` and then we can just use `hu.FairbankBlockHeight()` in the `if` block.
why not use a space between the img's accessible name and other
` FieldLenField` is not used anymore.
I think this should be done in `index` instead of `index.index()`?
I think we should be able to remove this `maxQueryLength` field from the `_` in `pkg/config/client.md` and just use `_` in the `_` field.
Is this a change in behavior?
This is a public API, I think.
shouldn't `moreM_PERIOD` be a `arg` here?
Remove empty line?
I think this is the only place where we want to call this. This is a change in behavior that we want to pass the name to the function.
I think we should be using the `onSteadyStateDependencies` function in `result.go` instead of `onSteadyStateCanResolve`. In this case, we should be able to use the `result.go` function in `result.go` and `result.go` to get the `onSteadyStateCanResolve` function.
So, if the plan is active, the `plan?` is active, and the `has_active_subscription?` is active, right?
I think this should be a warning instead of a warning.
This should be changed to `configconfig.Namespaces.AllowList`.
I'm not sure if this is the right place to put the compid in the first place.
I think we should be able to use `py` here, since it's a bit more specific.
Why is json being used here?
Is this a BC break?
Is this supposed to be `// +build integration,deploy`?
Perl_croak() is a very good idea, can you change the parameter name to something like `Perl_croak_`?
I think we should be able to use the `IEnumerable<Transaction> SelectTransactions(long gasLimit);` here instead of using the `IEnumerable<Transaction>`.
This is the only place where we need to do this.
Can we rename SCAN_WITH_STATS_COLUMNS to SCAN_WITH_STATS_COLUMNS?
I think we should use ReportStat directly.
shouldn't this be removed?
why min and not min?
This is a bit of a hack, but I think it's better to use the `SchedPolicy` function instead of the hardcoded string.
This is the only place where we need to check for the `:exercises` here.
I think this should be `modeman.isDebugEnabled()`. You should be able to use the `accept` method in the `Key_Backspace` mode.
I think we can remove this setting.
The `waitForResponse` function needs to be renamed to `esc_empty`.
I think we should be able to use `!string.IsNullOrEmpty(xForwardedFor)`.
Why is the `status` type removed?
I think we should use the `convertView.setEnabled(false)` here
I think this should be a part of the `query` prefix.
This is a breaking change, it's not needed.
Why is this needed?
This is a bit of an unrelated change, but I'm not sure what the best way to do this is. I think it would be better to have a method that returns the context of the `req.Id` and then use it in the `writeAllAuditFields` method.
This is a bug. The previous behavior was that if `contract.Visibility == TypeMemberVisibility.Family`, the `FamilyOrAssembly` will be true.
I think this is not a good idea. The `depositToRewardingFund` variable is already set to `false`.
Is this an unrelated change?
I don't think this is needed.
It's should be relative imports.
`allow_None=True` is the default. I think it should be `allow_None=False`.
I think we should be able to use the `downstream` here.
I think we can remove `go-acd` from the API
I think this should be set to null.
This is the only line change needed.
I think this should be `methodUsage.empty()` instead of `methodUsage.of()`
Why is this change needed?
I think we can remove the `change` parameter from the config
This is the only place where we need to keep the old method. I think we should keep the old method and remove the new one.
Maybe we should add a `Bla` import for this to avoid having to add it for everyone.
I think we should not need to call `recids` here. The user will not be able to access the ids from the user.
Is this something that needs to be done in the middle of the `NewWriter` function?
I think this should be `obj.focusRedirect` instead of `obj.sleepMode`
remove empty line
This is a change in behavior, but the default job name is no longer used.
This file is not in the go file.
I think we should be able to use `Console.WriteLine` here instead of `#if`
I think we can remove this and use `instrumentation_INSTRUMENTATION_NAME` in the config name.
Can we make the warning non-nullable?
I think this is not needed. Please remove it.
Align the parameters of a method call if they span more than one line.
This is the fix.
I think the password is `Basic %s` and `Basic %s` are the same. The password is `Basic %s` and the `User` is `User` and the `Basic %s` is `User`
I'm not sure if this is correct. BAZEL_TEST_DATA_PATH should be BAZEL_TEST_DATA_PATH
I think we should not expose this as a warning.
I think this should be `Int32 *roleList, granteeList`
I think we should be able to just use `subscriptions_subscription` here. The other option is to use `subscription` instead of `subscriptions_subscription` as we do for other services.
Unnecessary spacing detected.
I think this is fine, but I think it's better to just remove it.
why is this removed? we are not usingFinal() anymore
I think this should be `<= 1` instead of `<= 1` since we have a `<= 2` in the `has SupportsHeight` method.
I think it would be better to use `com.playonlinux.ui.InstallerInstaller`
Does it make sense to use `start_time` and ` 58_time` to avoid the double negative values?
Is this still needed?
You can use `github.com/Name/endpoints/sdsv2` here.
This is a bit of an unrelated but I think it would be better to use `!= null` instead of `!= null`
Out of curiosity, why is this required?
This is the only place where we need to call `libcontainer.Exec()` in the container.
This is the only change that affects the other changes.
I think this should be `64_tname`
Another advantage of using `term.update` is that we can do this in a single place. I think `!project.WINDOWS` would be more appropriate here.
This is a breaking change.
I think we should use the `sanitizeWith` constant here.
Please remove the trailing space
Use the new Ruby 1.9 hash syntax.
This is not needed.
I think we can keep the `approval_response_path` and `approve_proposal_url` one.
Please don't do this. You can use the data as the module.
Style/StringLiterals: Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
This is a bit of a hack, but I think it's better to just return `return` if it's not doing anything.
This should be `Optional<String, StringComparison<String, StringComparison<String, StringComparison<String, StringComparison<String, StringComparison<String, StringComparison<String, StringComparison<String, StringComparison<String, StringComparison<String, StringComparison<String, StringComparison<String, StringComparison<String, StringComparison<String, StringComparison<String, StringComparison<String, StringComparison<String, StringComparison<String, StringComparison<String, StringComparison<String, StringComparison<String, StringComparison<String, StringComparison<String, StringComparison<String, StringComparison<
I think this is not needed. `require` should be `width`
I think this is the right place for this.
Why are we changing the default value here?
I think this is reseted too specific.
I think this should be done in `io.prestosql.plugin.config.fee_per_command`.
Is it possible to remove the `ACTIVITY_TIMEOUT` arg?
This is a bit of an unrelated change, but I'm not sure why it's needed.
I think this is the wrong place for this. The `iFromPeers` field is `nil`, so `iFromPeers.IPBlocks` is `nil` and `iFromPeers.AddressGroups` is `nil`.
Is this needed? I thought the `Pending` was already being set to `true`
This is the wrong place for this.
I think this can be removed if the `nextPageTokenName` is not used
Please use the new Ruby 1.9 hash syntax.
I think it would be better to make the string string a constant, e.g. `when 'guide'`, and then use that in the ` flags` block.
I think this is a bit confusing. What about "may be _not_ user with a negative value"?
Do we need this wrapper?
I think we should keep this and remove the old one.
This is a change in behavior, but I don't think it's necessary to check for `nodeName` here.
This is a breaking change.
I think this is a bit of a hack, but I think it would be better if we just use `if len(sha1) > 7 {` and then check if it's a `1.7` in the `if`
I think this is a leftover?
I think this test should be removed as the test is testing the same as the test name.
why is this change necessary?
How about `orderPath`?
I don't think this is used anymore.
I think this is the only real change.
Is this really needed? It seems to be used in the `object` interface.
This is a breaking change. It's not a problem, but it's a `TODO` so it's not a problem.
Can we add a link to the docs that the filename is present?
I think this import is unused.
It seems that this is a bit of an unrelated change?
I think this import is unused
I think we should also add a `Start()` method to the `consumerID` interface.
I think it would be better to keep the override type as it was before.
I think this should be `recently_published_first` instead of `recently_published_first`
This is a change in behavior, but I think it's better to use `\n` instead of `\n` here.
Should we use iptables-pos now?
I think we should use `json.IsNullOrEmpty` here.
This include should be removed.
This is a bit unrelated to the PR.
I think we should just delete the `CreateLaunchTemplateVersion` call here. We should not be adding the `CreateLaunchTemplateVersion` call here.
This is a breaking change. It is not used anymore.
This is a bit of an overkill, but I think it would be better to have a single method that returns the string.
Why not just pass the context as a param?
I'm not sure why this is removed. The old code was wrong, but I don't see any other code that uses this code, so I removed it.
Why is this import removed?
this is the only place where we run the `run` method, we don't need to run it again in the tests
I think this should be `String.Empty` instead of `null`
I think this should be done in the `if` block.
I don't think this is used anywhere.
I think this should be `MetricStreamConfiguration`
why do you need this?
> Type::None [](start = 8, length = 6) nit: the type of `unknown` should be `None` instead of `string`
This is the only change that affects the test.
This is a bug fix. It should be in the same PR.
Why is this changed?
I think this is a leftover from the PR
I think we should be able to remove this function.
I think we should log the error message instead of just logging it.
This is a bug fix.
This change is unrelated to the PR.
Prefer single-quoted strings when you don't need string interpolation or special symbols.
Redundant `self` detected.
`inputs` should be nullable
I think this should be `g teg`.
I'm not sure if this is the right fix. It should be `!`
This is the only change that affects the server side. I think we should be calling `j.BlockServer.Shutdown` instead of `Background()` here.
I think the `fraction` is not needed here, because the `fraction` is already closed.
Is there a reason for moving this out of the loop? I don't think it's worth it. I think it's better to just have the `peer` message be a `dict` and then just pass the error to the `service` message.
I think this should be `false`, right?
Should we keep the plugin's name?
I think this check can be moved to `getAttribute('alt')` and the next line will be removed.
I think we should still have this on users, and if users are not going to be used, we should just remove it from the `userscripts` class.
I think we should be able to remove this ` MongooseBuffer` method and just use `0x00` directly. The `value` is already the default, so we can remove this method and just do `return new MongooseBuffer(value.value(true), [this.path, doc])`
This is a bug fix.
I think you can remove the `and` here.
I think we should use `getCurrentEntityURL` here instead of `getCurrentEntityURL`
is this change intended?
What is the reason for this expectation?
This should be a global setting.
This change is unrelated to the PR?
This should be a constant.
I think the original check for `||` is redundant here, because if the `pthread_attr_init` method is called, then the `pthread_attr_init()` will return `false`, which is not the case.
I think this should be a boolean
I think this should be a separate commit
Can we use `false` here instead of `true`?
I think we can remove this
This should be `None`
Why is this being removed?
Is this a typo?
I think this is a bit confusing. I would have expected it to be a separate file. I would have expected it to be a separate file.
`self._doc.setHtml('<b>{}</b>'.format(html.escape(self._opt.text)))` is a bit confusing. I think it would be better to use a more specific name like `_doc.setHtml('{}'.format(html.escape(self._opt.text)))` and then use the `self._doc.setHtml('<b>{}</b>'.format(html.escape(self._opt.text)))` to avoid the difference between the two.
Can we use the same constant for the `//`?
This is not the right place to put the var call inside the function. In that case, it should be the first call to `update`.
I think this should be `LINUX_VERSION_CODE` and not `LINUX_VERSION_CODE`. The `LINUX_VERSION` is the only one file descriptor, so it should be `2, 6, 27`, not `2`.
This field is not used.
would it make sense to log the stack trace?
Please add a space after the `if`
Does it make sense to use the same patch in the logger?
Why is this needed?
Line is too long. [81/80]
This is a breaking change.
I think this should be return true.
I think this is a good idea. It should be a separate PR.
I think this is not needed anymore
Is this a debugging leftover?
I think it would be better to use a default value here, as the default is not supported by default.
I think this is the only change in this file.
Why is this being removed?
This can be set to `mConfirmDiscardStarred`
I think this should be `is_string($media->getBinaryContent()))` instead of `is_string`
This field is not used anymore.
This is a very minor detail, but I think it's better to just use `func()` instead of `func()` here.
I think this is a good idea. I think it's better to use a different name.
This should be set to null.
You should use `defaults` instead of `array` here.
I think this should be done in the `else` block.
This is not correct. `installedVersions.remove` will never be null.
I think it would be cleaner if we just put this in the `bridge` module.
Why is this change needed?
This is a change in behavior, but the `SerializableTree` is a bit confusing. Why is it not?
why is this removed?
I think we should keep this and remove the `disable_iptables` function from the UI. The `google_compute` function is now unused and can be removed.
go is not used anywhere
This is a breaking change.
I think we should be able to remove the `panic` part of the `if` condition.
I think this variable can be removed.
Why not just `readPreference.mode !== 'primary'`?
This test is not really needed.
This import is unused.
I think this is not right. `cur_path = cur_path.gsub(/\//,'\\')` is the default.
I think we should use `<%= [pathpath]` instead of `<%= [pathpath]`
This link is not correct. The plugin uses {@link SamplesGenerator} is its its its its coordinates.
I think this should be `add_undo` instead of `add_ Bounds`
I think this is the only place where we need this.
What if the keyboard navigation is not present?
I think this should be `if (checked === 'checked' in newProps)`
This is the only thing that provides the glue-code. It's probably not the right thing to do here.
Does this need to be a `Set`?
Can we add a link to the docs to this table?
I think this should be done in `src/server/server/server/server.go`
I think we should just use `qutebrowser.io` here.
we should keep these as constants.
I think we should be able to remove `lvis_v1_instance` from here and remove `lvis_v1_instance` from `coco_instance`
`warning` will be called from `warning` if `info` is not found.
I think this is the only place where we need `RaiseSingleton` is called. I think we should just call `NewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNew
I think this should be `JobExecutorTests.class`, not `JobExecutorTests.class`.
This is a change in behavior, but I'm not sure if it's worth it to check for a specific error.
The `clone` here is a bit ambiguous. It would be better to use a simple `x` or `x.clone`.
EcsApp is a lot of noise. Can we use `KindEcsApp`?
I think this should be `withTree`
why is this removed?
This is a change in behavior, but I think we should change the key to `KeyNode` in the `kubernetes.io/hostname` to be consistent with the other key names.
I think we should remove the `config` import from `urfavecli`
I'm not sure this is the right fix. The problem is that if you're going to use this, it will be `break`.
This function is only used in a couple places. Can we just use a function that returns a `NewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNewNew
This is a breaking change. It is not related to this PR, but it is not related to this PR.
I think this is not needed.
I think we can remove this method and use `Long.compareUnsigned(block, EPOCH_LENGTH)` directly.
Why did you remove this?
I think it would be better to return `string` here, as it is more likely that we don't want to return type.
This is a breaking change.
why is this needed?
Please add a license header.
Please remove the usage of `action`
I think this is the only place where we need this method.
This is not the only place where we need to do this.
Is this not needed?
This is a bug fix.
I think this was a mistake in the wrong order.
I think this is a leftover.
This is not a good idea. You can use `!reference.get_row_count()` instead.
I think this is a bit confusing. How about `req.Pagination.Token == 0`? And if `fake.Pagination.Token` is nil, then `req.Pagination.Token` will be nil.
I think we should use `vector` instead of `Vectorized`
This should probably be `respond_to` since it's not a valid return value.
The dal = dal;` should be fine.
`^^id` may be more accurate here, since `^id` may be used in other places.
Is this really needed? It seems to me that we are not using `Complete` in this case.
this is the fix. if you want to fix the bug you should fix it
Instead of having a URI name, can we name it `URISafeName`?
I think this is a breaking change.
I think we should be able to remove this line.
This should be `Error` instead of `expected` as it is a `Error`
This is not right. IsThreadAgnostic is a boolean value?
Should be `LoggerFactory.getLogger()`.
Do we need to check for the limiter here?
Why is the `Success` here?
This is a bit unrelated to the rest of the PR.
I think this should be `procCodeA.localeCompare`
This is a bit of an unrelated change, but I'm not sure it's worth it.
I think we should use `ManagedMachinePool.Spec.RolePolicies` instead of `s.scope.ManagedMachinePool.Spec.RoleAdditionalPolicies`
Why is this removed? The facet is used by the `sort_count` option.
Why are these two lines changed?
What if the `isEmpty()` returns null?
This field is unused.
Why are these lines changed?
Can we change this to `table.path`?
I think this is probably OK, but I don't think we need to require this here.
I think it should be `payments/crypto`
Bibliographic is not used in the code, it is not used in the code.
I don't think this is the right place for this constant.
I think this should be a `url` instead of a `None` value.
Can you remove `hashivault` from the `localsecrets`?
I think this should be false, not false.
I think we should remove this line
Please revert this change
CheckErr is not needed anymore.
This is a bit confusing, we are using the `dscp<<2` bits to determine whether the value is calculated by shifting the given value. Is there a way to avoid the bits being used?
I think this is a good idea. The `cxSmiles` variable is not a boolean, so it should be `StringData = MolToSmiles(*mol);`
I think this should be an `Optional[string]` instead of an `Optional[string]`.
I think it's better to keep the old constructor and use `@SuppressWarnings("unused")`
Why not just use entity.name?
I think we should also check that the `outboundIp` is nil.
I think this namespace can be removed.
why did you change this?
I think this is a bug fix.
I think this should be `gasPriceUnitIOTX`
The parameter `wait` was unused.
Can you add gitea copyright line to header (and keep gogs one next to it)?
Wouldn't it be better to keep the synchronized as a method?
should we add a `:edit` here?
I think this should be "Este" instead of "Este"
I think we should move this to the `__init__` file, as it's not a test.
This err check was not working.
I think we should be able to remove this now that we don't have to worry about it.
Is there any way to make this ` trail.complete?`? I don't see any `.complete?` part of the code that uses `.map[string]`
I think we can just return outpostARN.
Trailing whitespace detected.
This test is not tested.
IMO this is not a good idea. It's not a good idea to have IMvx. It's a bit of a hack, but it's not a good idea to have it be a good idea.
This should be a separate PR
I think we should not have a `cleanupSyncsSoupIfNeeded` method.
I think it would be better to move the `artist` option to the `SingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingleSingle
I'm not sure this is the right approach. It's a good idea to add a new function to this function.
nit: this test should be removed
This should be `if browser != 'firefox'` (and similarly for the other options below)
You should be able to use `None` here instead of `and`.
I think this should be `user_id` instead of `id`
Why is this needed?
Isn't this already in ADC pins?
This is a change in behaviour. We should be able to remove the `messageReceipts` part of the `*` and `*` part.
@juanvallejo fyi, this is the `ngrok.io` file that is used by the build system.
I think we should use `Backend` here.
This is causing the MacOS build to fail. This needs to move to the top of the file.
This is a bit confusing, as it's not a `Image` instance. I think it would be better to have a `StartMetricsSession` that returns the `DisableMetrics` instance.
This test is not testing what it does.
I think it would be better to just call this `metric` and not have it in the `ProvisionFailedTerminal`
This is a pretty big change. It's not a big deal, but it's not a big deal. It's a little hard to see. We could just use `Name` as the default.
Can we use `hardcoded` instead?
This is not needed. `buildFilter` is already called in `buildEdge()`.
This is a breaking change.
I think this is a leftover?
why is the name change?
nit: remove empty line
Can we just use an array?
This should be in a separate PR
I think we should just call this `Deflater_JDK8252739`
why is this public?
This is a change in behavior, but the code is still not correct.
This is not needed. It will be better to check the string.
I think this should be a global option.
I think this is the wrong place for this. The default behavior is to allow the default for the default for the default for the default.
This is a function that does the same thing.
I think this is the only change that affects the fix.
I think this should be done in the `GetCreateCreateAndStatus` method, right?
Can we add a `GetLatestEventsEvents` method that takes a `AutotoolsPackage` and returns a `boolean` object?
I would prefer `peering_port = network_params.network.default_node_port;`
This was a bug, right?
Can we remove this?
I think this is not right. We should only be adding roleText if roleText is not roleText.
The `dcontext` should be `true` here.
nit: remove empty line
This is a change in behaviour.
I think this is a good change. The current code is not correct.
I'm not sure if this change is correct. The `tag_3002_col_2` is used to handle the `prop` parameter.
I think we should remove the date date here.
This file is not used anymore.
I think we should be able to remove this in a separate PR.
`strncmp` is a string. It should be `str.length == 0`.
I think this is a bug fix.
I think it would be better to have the Fork<C> as a parameter.
I think this is a leftover from debugging?
This needs to be added to the `deactivated_on` view.
I think we should add a `@SuppressWarnings("unused")` to avoid the `positional` annotation.
I think this is not right. If the version is 11, the spell is 11, then the spell is 11, and the spell is 11, then the spell is 11, and the spell is 11, then the spell is 11, and the spell is 11, and the spell is 11, then the spell is 11, and the spell is 11, and the spell is 11, and the spell is 11, and the spell is 11, and the spell is 11, and the spell is 11, and the spell is 11, and the spell is 11, and the spell is 11, and the spell is 11,
This is not needed anymore.
`html_safe` is not used anymore, can be removed.
I think we should use `StringUtils.subject` here
I think we should keep the defaultSamplingProbability and use the defaultSamplingProbability as the defaultostostost or the defaultostostost
I think we should use `generateDeploymentStrategicPatch` here.
info() is no longer needed.
This is a bit of an overkill. I think it would be better to use DCHECK directly.
Why is the default not empty?
I think this should be `component.__hooks._pendingEffects = []`
Please revert this file.
I think it's better to move `videoConstraints` to `init()` so that it's not a `rails library`.
This class is unused.
I think `config.Options.WasmAbi` and `config.Target.WasmAbi` can be empty.
This is a bit of an unrelated change, but I think it's better to just call `Append` here.
This is a bug fix. We should not use `entries` as the span is not a `ctx`.
I think this is a bit weird. I think it would be better to just have a `GetTopology` function that returns the `SearchTopology` object.
I think it would be better to move this to the `sliderItemList` class above, as it's a new one.
I think this is a bit of an overkill. I think it would be better to just have `claimFromRewardingFund` and `ClaimFromRewardingFund` as the value of `claimFromRewardingFund` and then have `claimFromRewardingFund` as the value of `Marshal` and `Marshal` as the value of `Marshal` and `ClaimFromRewardingFund` as the value of `claimFromRewardingFund` as the value of `Marshal` and `Marshal` as the value of `Marshal` as the value
This is a change in behavior, but I think it's better to use `NOGIL gil` instead of `MatchVectType matches`.
Can we just have this block height in the constructor and reuse it in the constructor?
I think this is a good idea. It should be a separate commit.
Why do we need to check for `QueryInput` here?
@mhoemmen why did you remove the `for` here?
I think we should keep the old behavior as it is.
should we add a validation to ensure we are not aware of this?
I think this should be `[]`
I think this is the wrong place for this. It is used by the `*028*` version of the `*vkGetQueryPoolResults-flags-028` version.
I think you can just do `String.AddDbKey(String key, key)`
I think we should just use `x.tbk.Size()` here.
Is this needed? Isn't the name already in `IsAppInsight`?
This is not used.
This is the only change that affects TFM.
Why did you change this?
I think we should be able to remove the `CPU` here.
I think this change is not necessary since `setup_rvm` is a `nil` attribute.
I think this is a good idea. It might be nice to have a `TODO` here instead of a `TODO` for the `Set` case.
What if we just use `from_ts`?
Why is this change needed?
The peer is not a peer, so we should remove it from the struct.
I think it would be better to just say `if len(redirects) > 0` and then check that it's 0.
This is the only line that was removed.
I think we should remove this and use `import` everywhere.
I think this is a good idea. It should be a separate commit.
I think we should be able to remove the config altogether.
I think this is a good place to change the `listUserRepos` function.
I think we can move this into the `Rails.rb` file, and use the new `Rails.rb` file instead.
Is this a "width" option? Shouldn't it be "width"?
I think we should use a more specific name for this.
Why are you returning `#ifdef AARCH64 || x64` here?
This is a bit of an unrelated change, but I think it would be better to move this to the `join()` method.
This option is not used in this PR.
This is a good idea. It's not a good idea to use the `TryParse` method.
This is a change in behavior, but I think it's better to use a `==` check here.
`confidences` is a bit confusing, why do you need to change it?
@jridgewell I'm not sure if this should be `DATADATA-ipvs0` or `DATA-ipvs0`? I think it's better to have a `DATA-ipvs0` property that is passed in from the `DATA-ipvs` package.
This is a breaking change.
I think this is a good place to return the `signed` resource.
I think this is a leftover from a previous PR.
I think we should use `JSON_DATA` instead of `JSON_DATA`
I think the `IScopeManager` is still a little bit confusing here. We're just using the same `IScopeManager` in the `IScopeManager` and not the `Instance` in the `IScopeManager`
I think it would be better to use the same name as the field name. It would be more consistent.
This is a bug fix.
This should be `final`
`_poSSwitcher.ForkchoiceUpdated(newHeadBlock!.Header, finalizedHeader);` should be changed to `_poSSwitcher.ForkchoiceUpdated(newHeadBlock!.Header, finalizedHeader);`
I think we should use `StandardError` here. The `Sync` package is already in `ImporterDiskName`, so it should be `Sync.ID()` instead of `Sync.ID()`
This is a little confusing, as we have a method that does the same thing. I think we should be able to just use `self._internal.index_scols` here.
Why do we need this map?
This is a good change. I'm not sure if it's a good idea to use a function to get the result of the loop.
Since we are removing this from `ChannelImplementation` we can remove it from `antID` and remove it from `ChannelImplementation` in `utils.go`
nit: I think this should be `removeFiles` and not `removeFiles`
This is a change in behavior. The ` idxCurrentSort` is used to set the `idxCurrentSort` value to -1.
This should be `IMPORTANCE_HIGH`
why is this change required?
I think this should be `convert_to_timestamp`.
I think this is not right. The code that uses `isValid` is not called in the `if (!isValid)`. The code that uses `if (!isValid)`. The code that uses `if (!isValid)`. The code that uses `if (!isValid)`. The code that uses `if (!isValid)`. The code that uses `if (!isValid)`. The code that uses `if (!isValid)`. The code that uses `if (!isValid)`. The code that uses `if (!isValid)`.
This is a bit of an overkill, but I think it's better to have a default in the `flow` model.
This is the bug, we can't do repeat. It's a `objectName` and the `objectName` resource.
Why was this change made?
(style) trailing whitespace
The ADIOS_HAVE_PHDF5 is used for ADIOS_CPP.h, so I think it should be fine.
This is a breaking change, right?
I think we should also check for solicited here.
I think this is a bug fix.
I think it would be better to use the "non-safety" helper here
I think we should just use `Stop` here.
I think this is not the right place to change. The `util.Errf` message is used to check for the `output.Errf` message.
I think we should log the error message here.
I think this is not needed anymore?
I think this should be `team_plans`.
this should be `undefined`, right?
This is the only change that affects the `ChangeForReader_t` callback. The `REQUESTED` field is used to set the `ChangeForReader_t` callback.
I think this import is not needed. You can just use `WordWidgetTopLevel` instead.
I think we can remove the `avroSchema` package from the `postSchemaUtil` package. The `avroSchema` package is already defined in the `public` package.
nit: can we move this to `dependenciesFilters`?
This is a bit unrelated to the PR, but I think it's better to use `_data_map` instead of `data` as a `is_data` (and `_data_map` is the same as `is_data`).
I think this is a breaking change.
What is the difference between `SecurityProtocolType` and `12288`?
This is a no-op, so I removed it.
I think this should be `logger.error` instead of `logger.info`
I removed this because it was already here before.
I think this is a leftover from reduce vs code
reason is not used anywhere else, remove
Is this really needed? It seems to be used in the `Read` namespace.
"TLS" does not support TLS"
I think we should be able to just check if the response is empty. If we want to be sure we don't want to raise an error, we can just return the error.
I think this is a leftover from debugging?
I think this should be a warning instead of a warning.
Why are we making the public?
This is a change in behavior, but the test is still testing that the g_free is not in the middle of the string.
I don't think this is needed
I think this import is not used
Not sure if this is needed.
I think this is a good change. It's not a good idea to add a new parameter to this function.
This is a bit confusing. It's not clear what the `lookup` means.
I think it's better to change the EMRFS commands and not EMRFS commands.
I think this needs to be `maxrequestbody`
I think this should be a separate PR, but I think it's a good idea to make it consistent.
Just a question, why not just use `dialect`?
Please update the docstring accordingly.
I think this should be called `Stream` instead of `class`
This is a bit of an unrelated change, but I'm not sure what the best way to do it is. I think it would be better to have a `C:\...` method that does the same thing, and then you wouldn't have to do this in the `C:\...` method.
Why not just `if (tmp) {`?
nit: can we use `keyProjection.schema()` instead of `valueProjection.schema()`?
`Status::Error` is a very common pattern, so I would use `spaceId` here.
I think we should use the package-level package-level imports.
This should be `EventUtils.equals(controlTypes.ROLE_DELETED_CONTENT, controlTypes.ROLE_INSERTED_CONTENT)`
This is a leftover from the PR
I think we should change this to `lookupPath(buffer, "0", "4CIDR", "4CIDR", "4CIDR", "4CIDR", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4
I think this is the only change in this PR.
why is this needed?
I think we should keep this for now, but I think we should keep it for now.
I think this should be `this.flowFinished && this.execId`
I think we should add a `Workflow Workflow` to the `CompletionCompletionManager` and then we can add a `CompletionCompletionManager` to the `CompletionCompletionManager` and `CompletionCompletionManager` to the `CompletionCompletionManager` and `CompletionCompletionManager` methods.
I'm not sure if this is the right place for this, but I'm not sure if it is the best place for this, since the `symbolic link` is the first one.
Why did you remove the `@param` here?
This line is not related to the PR.
I think we should be able to get rid of this `getSVG` method.
Is this change necessary?
This is a change in behavior, but is it possible to have a default value for `isInaret`?
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is a bit unrelated to the PR.
This is a bit of an unrelated but I think it's better to be more specific and use `Get` instead of `Get` here.
`addrs.ok()` returns `false` if there is no `empty()` return `false`.
I think we should use `Settings.JSONBool` here.
I think we should use `get_column_TO` here. It's not a problem, but it's a little hard to see what the problem is. I think we should use `get_column_TO` instead of `get_column_TO` and `get_column_TO` as the second argument.
Same here, let's use `groupsable` instead
I think we should be consistent and use `Duration.Minute` here.
The `posNext` limit is not necessary. The `var limit = input.IndexOfAny(new[] { '+', '-', ']' });)`, and the `var limit = input.IndexOfAny(new[] { '+', '-', ']' });)` call will not be needed.
I think this should be `checkAvailableStock`.
Is this a good idea to use the `klog` package?
Layout/MultilineMethodCallIndentation: Align .hash with .hash on line 112.
Is this a good place to change this?
I think this test should be moved to the `count` package.
I'm not sure why we need to set `http_proxy` here.
I think it would be better to check if the null checks are set and if it is not set, then check if it is not set.
Why the change from `https` to `https` here?
Can you move this logic into `splitSize`? It's not used anywhere else.
Why not `×`?
I think this should be a different map, not a set.
This is a bit of a hack, but I think it would be better to use the `GET` object instead of the `GET_CONTEXT` object. It would be better to use the `GET_CONTEXT` object in the `borg.sonar.server.large.commands` module.
I think this should be `throw new ParquetDecodingException("could not read page in col, e);`
I think it would be better to add `positional=False` as a default value to avoid having to pass the param param.
This is a breaking change, right?
This is a bit of an overkill. I'd rather have a `TestCase` that would be called `spark_session_local.resource_fn(None)` and then a `TestCase` that would be called in the `TestCase` that would be called in the `TestCase` that would be called.
I think we should use `application.Duration` instead of `application.Duration`
sp2 is a valid number of items that are not valid. I think we should use the same name for the number of items.
I think this should be done in `else` block.
I think this should be removed.
I think this is a leftover
This is the only change that affects the `NewTestCtx` function.
why is this type needed?
Is this needed?
Is this a problem?
This is a breaking change, please revert
I think this change is not needed.
Is this change required?
I think this should be `isFirstAdmin`
This is a change in behavior, but the type is not `Type`
This method is unused.
Should this be `Id`?
This should probably be `args.add_argument(args.result, args.ann, *args.max_dets, ...)`
Why are you adding this ?
This is a change in behaviour.
from config import template
I think we should make it `boolean`
Remove empty line?
I think we can remove the `StaticNodes` property from `Post` and change the default value to `false`.
I think this should be `bool`
This is a bit of an unrelated change, but I'm not sure it's worth it.
@matt-gardner, I think this is the right fix.
Is this needed?
I think we should add a TODO to remove this or add a TODO to verify that it's not needed.
I think this is not needed. `this.process = null` is enough.
This should be a single line string.
This is the only place where we're using OP_isb here. I'm not sure if it's worth it.
@jridgewell Is there a reason we don't use `translate` in the `if` block?
This test is testing the same as the one on line 405. This test is testing the same as the one on line 405.
maybe call it `tls.TlsHandshakeHook`?
This is a bug fix.
I think we should keep the `getUrlFromRouteCache` method and use the `id` instead of the `getUrlFromRouteCache` method.
The `this.activeEditor` is not used anymore.
Is this the correct error to return here?
I think you can just do `&&` and `Aggregate(layout => layout.StackTraceUsage.None, (seed,layout) => this is IUsesStackTraceUsage.StackTraceUsage ?? ...`
Can we remove this?
Align the parameters of a method call if they span more than one line.
Why is this no longer needed?
I think we can just return `None` here and return `~` instead of `~` here. We can just return `~` here.
Style/SymbolArray: Use %i or %I for an array of symbols.
I think we should keep the same name as the last parameter.
I think we should remove this line.
is this a typo?
This is a bit of a hack, but I think it's better to be able to just use `Task engine` instead of `Task engine` for the `Task engine` for the `Task` for the `Task` for the `Task`
This was just a mistake before, but I don't think it's needed.
Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
We should add a `getFilter()` method to this class.
This is a very minor thing, but I think it would be better to have a test that checks if the value is an integer.
This is a bit of an unistall release, but I don't think it's a good idea to have this in the `__construct()` method.
Should we just read the file and then read the file?
Why is this change necessary?
I think this file should be removed.
I think this is a good idea. It should be a function in the `CredentialProvider` and not a function in the `Credential` module. It should be a function in the `Credential` module.
this is a bug fix. we should not use the existing `GasPriceOracleAddress`
Use the new hash syntax `:host_tags             ` and `:project` for consistency with other similar instances
This is a change in behavior, but I think it's a good idea to use a `session.get()` function to avoid the need for a `session.get()` call.
I don't think this is right. We should only check if theCulture is 'zh-hk' or if it is in the "zh-hk" file.
This is a bit weird, why not just pass the `QueryVisitor visitor` directly in the constructor?
Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is the only place where I'm seeing the `os` in the `CreateCreateCreate` method. I'm not sure if this is the right fix.
I think this should be `ObjectObjectWithSelector`.
Do we need to call `InitContext` on `init()`?
I think this should be a different type of error. The `window` window is not in the `window` window, but the `default` window is in the `window` window.
We should avoid this if statement and just do `newProps.checked !== dom.checked`
I think this should be `trace`
Should we add a `//` field to the `Scheme`?
This is a change in behavior, but I think it's better to have a helper function that returns theVersion.
I think we should be able to fill up when we are not doing the full processor.
This is a bug fix. The `Address` is already in `Address.go` so it should be `addr.ChecksumAddress`
why are we using `HeaderRestart` here?
I think it would be better to have a `getHeaderHeader` method that returns a new value. It would be more consistent with the other changes in this PR.
Is this a typo?
I think this should be `options.has_many : sitemap`
This is a leftover from the previous commit.
This is not a good idea.
This is a bug fix. We should not use the `alias` method in the `scol`.
I think this should be `if devName == "/dev/sda1" {`
This is a change in behavior that will break the event.
if p.value_size is not None, p.value_size is not None else 0
I think we should add a doc for this field.
I think this should be `WindowText.replace(CHAR_LTR_MARK,'').replace(CHAR_LTR_MARK,'').replace(CHAR_LTR_MARK,'').replace(CHAR_LTR_MARK,'').replace(CHAR_LTR_MARK,'').replace(CHAR_LTR_MARK)`
This is a bit of an odd name. It's not really a good idea to use the package name.
This should be `(uint64_t)mmap_errors`
I think this is the only change in this PR.
I'm not sure if this is the right place to put `it->second` here.
I think this should be moved to the `if` statement.
Why is the Span now changing?
I think this should be `match_low_quality (bool, Whether to allow quality matches. This is true)`.
I think we should pass config to config instead of passing it in.
I think this should be `aria-label-hidden` since it's a special case.
I think this should be `pyspark`, `mlflow`, `pyspark`, etc.
This is a bit of an overkill, but I think it's better to use `@param {string}` instead of `@param {string}`
what is the reason for this change?
I think this is not a good idea. The original code is not correct. The original code is not correct. The original code is not correct. The original code is not correct. The original code is not correct. The original code is not correct. The original code is not correct. The original code is not correct. The original code is not correct. The original code is not correct. The original code is not correct. The original code is not correct.
I think we should remove the `isHTTP` check here.
I think we should just return `errNoClient.Export(ctx, &colmetricpb.ExportMetricsServiceRequest)` here.
Just a note: we're not going to have any problems with these tests?
What is the purpose of this?
You can use `dep_status` here.
This file is not used anywhere.
Is this supposed to be here? I don't see any `appsec_blocking_enabled` defined anywhere.
This is a bit of an unrelated change, but I think it's better to use a `spiffe/http/pprof` package.
I think this should be `log.debug("Freed from parent console process")`
Why not use ` - see`?
I think we should use `Math.round(minutes)} mins)` here.
same here, let's not add it
Code Climate says this is not tested.
can you make it `r.Client, globalPullSecretName, corev1.DockerConfigJsonKey`
Why do we need to sleep here?
I think we should return the KV version here. If we do, we should return the KV version in the case of KV.
`V0` is a bit confusing, why is it needed?
I think this should be `/wow/...`
remove empty line
@deads2k do we need this?
This is a little weird. I think it's better to keep these as constants.
I think this should be `host.Host`. The host host is not a global func. The host should be a global func.
This is a bit of an odd name. I would suggest `goBackInTime`
I think it would be better to setLanguage directly in the constructor, and then set the base64
Is this change intended?
I think it would be more readable if we used `public static final` instead of `public` (or `public static final`).
This is a bit of an odd change. It's not a problem, but it's not a problem. It's a bit odd to see the `accepted` value in the `kube-config.js` file.
This link is not correct.
I think we should use a constant for this.
This is a bit of an unrelated change, but I'm not sure what the best way to do this is.
I think this is a bit too much. We're going to be able to use the `HOSTS` constant here.
Why are these lines changed?
This was a bug, we can't just use `StartTime` to get the `StartTime` value from the `IsNullOrEmpty`
I'm not sure this is the right place to dump the logger. It's a bit confusing to me. What about just dump.is_pe?
There's a typo here.
This is a bit of an overkill, but I think it would be better to use a more descriptive name for this.
I think we should use `ValueTask<Keccak?> AddTxResult?)` here.
This is a bit weird. I think it would be better to use a `Map<String, String, String, String, String, String, String` and use `String.Empty` instead.
This is a change in behavior, but it seems like it should be a separate commit.
We should use `InstallCRD` instead of `true` here.
I think we should be using the `hive.openshift.io` here.
I think this is a good change. It seems like we should be checking if the `nil` is nil, and then we don't want to return nil if the `nil` is nil.
I think this is still a good idea, since it's a cross-origin resource sharing (CORS), not a cross-origin resource sharing (CORS), so it's not a big deal.
I think we should remove this in `PrepareCache` and remove the `repo` in `UpdateUser` as well.
Use `params` instead of `message.blank?` to be consistent with the rest of the code.
I think this should be `if (this.toolbox_.position()) {`
I think it's better to use `ReSharper` here.
I think we should use `dbConnection` here.
I think we can drop this.
`@sig` is not used anymore.
Does this need to be a `PolicyRule`? The flow should be the first flow, not the first flow.
This is a bit of an unrelated change, but it seems like we should be using the `function_id` function instead of the `function_id` function?
I'm not sure if this is the right place to put this. The ActiveExecution class is a very specific thing to do.
This is a good candidate for a test to check.
why did you change this?
Why is this removed?
This is the only change that affects TF32. You can define a `_WIN32` define.
This is the only change that affects the output of the output.
I think this is the only place where we want to set the `waitForMetadReady` to true.
I think `first` is a good name for this import.
I think it's better to use a `visibilityProcessor.NotifyNewTask` that is the one that is in the visibility processor.
I think this import is unused?
can we change the "FIPS region not allowed in ARN" to "resource not allowed in ARN"?
why do you need this?
Missing space after `,`
why ` bt.currLimit()` is changed?
This is a bit of an overkill, but I think we should be able to do something like `RSPEC_SKIP_IMPLEMENTATION = ::RSpec::Core::Pending.instance_method(:skip, ...)`
I think we should just make this `pod` and use `pod.GetSelectorSpecs()`.
This is a bit of an unrelated but I'm not sure what the best way to do this is. I'd rather have `codecs.register` in the `select` method, and then `select` in the `register` method, and `select` in the `register` method, and `select` in the `register` method, and `select` in the `register` method, and `select` in the `register` method, and `select` in the `register` method, then `select` in the `register` method.
This is invalid.
I think we can just use `this.driver_.getExecutor().w3c` here.
this is the actual fix, right?
should we add a `Process` attribute to the `Widget`?
This is a change in behavior, but it's a bit unrelated to the PR.
I think this is the right approach. The `blockNum` is used to determine if the RPCRes is synchronized or not.
Should be `spire_backoff`
This should be changed to `#include`
I think we should use `time.Default()` instead of `1 * time.Second`.
I think this should be `return ALWAYS_UPDATE()` instead of `return ALWAYS_UPDATE()`.
Please add a `tab` parameter to this function.
nit: unused import.
I think this is a good idea. It should be done in a separate PR, but I'm not sure if it's worth it.
I think this should be `os.Exit(2)`. Otherwise you'll get a `help` error.
`InitialWorkingDir` is not identical to initialWorkingDir.
Do we need to check that these are all lowercase?
This is the only place where we're using XSP_SZ, so I'm not sure if this is the right solution.
I don't think this is needed. It is only used in `getermsOfUse`
This method should be public
I think we should add a new method to send the user's url.
I think we should use `RELEASE_FROM` here.
I think this is the only change in this PR. The `hash` part is not correct.
Can we just use the bool here?
I think this should be `if (evloop_latency_ms) evloop_latency_ms`
`_getHash()` is called in `push` so it can be called in `push()`.
I think this is a good idea. The `gen` block is already in `block`.
I think we should remove this.
This should be done in `pkg/api/types.go`
I think we can move this to the top of the file, since it's only used in one place now.
I think this is a bit confusing. I think it would be better to use `isinstance(offline, list) and _write_to_pcap` instead of `isinstance(offline, list)`.
This should be a `NotImplementedError`
This is a breaking change.
This should be done in `windowState`
Why is this change needed?
>size [](start = 4, length = 6) nit: the cast is unnecessary here.
I think this should be a different check.
This is the fix. The `hello` is not the right approach.
I think we should use `skip_links` here.
This is the fix. The `GetPhysicalDeviceDisplayPropertiesKHR` function will return nullptr.
Is it possible to have `IsDockerEngineRunning` return a boolean?
This is the `dialect.name` and ` 700` are the same. The `dialect.name` is the same as the `full_name` and the `dialect.name` is the same as the `dialect` above.
This is a bit of a hack. I would suggest to use `buf.size('size prefix)`.
act_cfg should be added to the `bias` argument in `act_cfg` too.
if we're going to use this, maybe use `if options['args'] = profile.as_json(...)`?
I think we should include the version in the `folly/resource/link.h` file.
`name` is a ns, so it should be a string.
I think we can remove the `row` property from the `hiddenRow` class as it is not used anywhere else.
I think this variable should be removed.
This should be a database migration
why min_x 0 and min_distance are 0?
It's not immediately clear to me why we are not checking if the maxp is zero. I would suggest to check if the maxp is zero before calling `wr := waitingRequest{client: c, reply:matrix, n: batchSize, noWait, expires: expires: expires: expires: expires: expires: expires: expires: expires: expires: expires: expires: expires: expires: expires: expires: expires: expires: expires: expires: expires: expires: expires: expires: expires: expires: expires: expires: expires: expires: expires: expires: expires: expires: expires: expires:
This is the only place where we need to use the `Internal` var.
Prefer single-quoted strings when you don't need string interpolation or special symbols.
I'm not sure this is the right approach. I'm not sure if this is the right place for this.
This is a bit of a hack, but I think it's worth it to make it more clear that we're not using the `<p>` tag.
I don't think this is needed.
I think we should return a transaction on the transaction body instead of returning a transaction on the transaction body.
`DefaultError` should be changed to `DefaultDefaultError`.
Why not just use `antrea.io/antrea/pkg/features`?
I think this is the right place for this.
This is a bit of a hack, but I'm not sure we should change it here since we're using the `_opensearchdescription` option.
This is the only change I'm not sure about. I'm not sure if this is the right fix.
I think we should keep the old code as well.
I think we should add `base.file()` to `doCommit(base, metadata)` and add `TableMetadata(base, metadata)` to `doCommit(base, metadata)` and add `TableMetadata(base, metadata)` to `doCommit(base, metadata)`
I think we can move this to the proper `detach()` function, since it's a very large function.
This should be a `cls.__class__.__class__.__a]`.
This should be `_no_window`
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think we should remove the `clear` route from the `err` route.
This is a bit of an unrelated change. I think it would be better to use `causalConsistency=true` instead of `causalConsistency=true` here.
This change is unrelated to the PR.
This is a bit of a hack, but I think it's better to use a `Set()` method to get the value of the `AccessControlAllowOrigin` and `AccessControlAllowOrigin` to get the value of the `in` instead of the `in` loop.
This is the only change I'm not sure. I'm not sure if we should just return the error here.
Why not just pass `array`?
I think this function could be called `NewMethod` or `NewMethod` since it's a function that returns a boolean.
This class is not used in this PR. It is only used in `kar.kar.notification`. Can you add a TODO to remove it?
import \* is unused
Why is this change necessary?
This should be `Object.keys`
@matt-gardner, what do you think about this? I'm not sure why `// +build !` is needed.
Why is this removed?
I think it should be `options.Histogram = Options('style', 'black')`
I think we should keep the `He2` and `Hx2` to keep the original name consistent with the other two.
I think this should be a `@rule`
I think we should throw `KeeperException.NoNodeException` here instead of `throw new KeeperException.NoNodeException`
This is the correct way to go. The `download_url` is always blank, so we can remove the `download_url` parameter.
This message is misleading as we are not getting the message twice. I think we should be more explicit about the message. The message is "support will be removed in Bolt 3.0".
I think we should check if the filter_options is a string, not a string.
I think we should just delete the ops.deleteFromFavorites() and delete the ops.deleteFromFavorites() directly.
I think we should just use `rowCount` here.
I think this should be done in `createErrorFunc` and not here.
I think we should be able to remove this check if `false` is nil.
I think we should be able to remove the `relationship` here
// Encoding of the handler, optional, and used for introspection. This should be used for introspection.
I think we should also include the `blob` field in the `metric` package.
This is a bit weird. Why is it necessary to have a separate `DoubleGauge`?
Why is this change necessary? Isn't the `t.p.t` always the same as `t.p.t`?
This is not right. It should be `if (p_jmsg["compress_method"] != nullptr) {`
This is the fix. The `tr` is not the correct return value.
Please add a `TODO` to this file.
I think this is a bit of an unrelated change, but I'm not sure it's worth it.
I think it would be better to use `t0 = time.time()` instead of `t0`
The border color when the client is floating. The border color when the client is selected. The border color when the client is selected. The border color when the client is selected. The border color when the client is selected.
I think we should use `NOT_out_out` instead of `NOT_out_out`
This is a bit of a hack, but I think it would be better to check for `path.endsWith("/");` here.
I think this is a leftover from the commit
Since this is the same pattern as the Prometheus name, we could just use `Node.Meter.Name` here.
You can use `!==` instead of ` &&`
I think we should be able to use `NULL` here instead of `if` and then `if` here.
I think this is a bit confusing since it's a `.raw_info` and not a `.raw_info` but it's a `.raw_info` object. I think it's better to be explicit here.
This is a pretty big change.
Is it possible to remove the `[0]`?
I think this should be `braille-patterns.cti`
Is this not skip generatingMachinePool?
Shouldn't this be a separate file?
can we use a more descriptive name here?
this is a bit weird, why do we need to do `accounts.to_sql`? `paginate` doesn't work, `to_sql` is a `accounts`
This should be a separate change
This is a good place to put it in a separate PR.
This is a change in behavior, but I'm not sure why it was here.
This should be implemented as well.
This is a bug fix. I think it should be in a separate PR.
I think it's better to move this to `scheduler_messages`
this is a BC break.
I think this is the only change in this PR. The `HttpHandlerDiagnosticListener` is used to create a new `HttpHandlerDiagnosticListener` instance.
I think you can remove `BODY` and `parameterGenerator` as it is not used anywhere else.
I think this is a bug fix.
Is the status status a bug? Shouldn't we use the status?
I think it's better to use a more descriptive name like `l.trackerMu.RLock()` instead of `l.trackerMu.RUnlock()`
This is a test, not a "user_%d" ...
is this needed?
I think we should use the `spec` function to get the pinging nat holes.
I think this should be `image.getAuthdata(image, authData)` and not `Config.Email`
This should be `IEnumerable<T>`
Should we use the `regex` constant here?
This is a bit of an unrelated change, but I think it would be better to move it to repo.CreateRepo() and call it here.
We should probably add a note about how we do this for the `auth` path.
This is a bit odd. If we have a `0` key in the list, we should probably just use `element = 0` here.
Not sure if we should use this in `PageMapper`.
Line is too long. [87/80]
Can we use `this.table.io` here?
I think this should be done in `refreshFromLocation`
remove this line
This should be done in travis/scala.
I think we should add the API name to the groupmanager. Instead, we should add the API name to the groupmanager.
I think we should use the same name as the api api. RpcApi QUORUM
checkCoinbase is a pointer, so this is not a pointer.
This is a change in behavior, but I think it's a good idea to keep the test name consistent.
I'm not sure if this is the right place for this.
I think this is a little confusing. I would expect a `example answer` value to be a `dict` if the type is `example answer`
Should be `context`
I think this should be `URL.Flavor`
This is the only place where we need to use `uninstall` because it's a `use` statement.
This is a bit of a hack, but I think it would be better if we just use `RSpec.warn_with` instead of `warn_with` and then use `RSpec.warn_with` here.
Can we use a constant here?
This TODO is not related to the PR. The `actually` TODO is removed.
This field should be removed.
I think we can just pass the string here, since it's the same as the one above.
Is this used?
The commit message should be updated to reflect the new include name change.
I think we can remove the `example` and `rspec/core/resources/` part of the `rb:5` and `rspec/core/resources/`
why the change here?
I think we should be using `OS_VOL_SUPPORT` instead of `OS_VOL_SUPPORT`
I don't think you need to add NULL here.
Why is this necessary? The `doc` variable is already defined in the `node`.
This should be a separate PR
This is a bit of a hack, but I think it would be better to have a separate function for the service, and then call it `CS` or `CS` (or something similar)
I think this should be a constant?
This is a bug fix. It should be `!==1.x`
can we make this private?
Is this used?
Can you revert these changes?
This is a bit weird. Can we just do `!cci->num_simd_skip == 0 /* save all regs */`?
Nit: Seems like a newline is missing at the end of this line.
This test should be reverted.
Does this mean we can't use `type` for the `tv` type?
This is a bit of a hack, but I'm not sure what the best way to fix this is.
Line is too long. [81/80]
I think this should be done in `__init__` instead of in the `__init__` list.
You don't need to check for the first two.
Is this a constant somewhere?
I think it might be better to use the `DATA` package instead of the `path` package.
Missing a `:contact_us_url` and `:contact_us_url` are used in the `get_contact_us_url` function.
why is it normal? I don't see why it is needed.
I think we should make this grpc if we don't have access to the current thread in grpc.
I think this should be done in a different PR, if the `if (tmpStream != NULL)` condition is not needed.
This is a bit of an unrelated change, but I'm not sure what the best way to do this is. I think it would be better to have a `public` method that returns the `removed` object, and then call `set_all_changes()` in the `try/catch` block.
I think this is a leftover
Maybe `GroupMemberPodGroup` is better?
I think we can remove the `Span` prefix as well.
I think we should just remove this TODO.
Why do we need this?
This is the only place where we need to handle 8 bytes.
This should be `from os.environ["MP_API_KEY"]`
Use the new Ruby 1.9 hash syntax.
Why are we returning the error here?
Nit: import sorting
I think we should just call this instance `instanceID`
I think we should add a `dict()` here, as it is not used anywhere else.
I think this should be `HOST`
I think it might be better to just remove the `dataset` parameter from the constructor.
I think it would be better to make the implementation more readable and use the same one for the other blockProcessor.
Why not use `insightfilestore`?
I think this is the right place for this. It's the right place for `def bisect_round_started` to be called.
This is a change in behavior, but I think it's better to add a widget to the `qtbot` function.
This is a breaking change. We should probably have a look at the `Symbol` field in the `SKIP_SESSION` and `SKIP_SESSION` in the `Symbol` file.
I'm not sure if this is the right way to do this. The `\u2E00-\u2E7F\\'` will be the same as `\u2E00-\u2E7F\\'` and `\u2E7F\\'` will be the same as `\u2E00-\u2E7F\\'`
Please add the new stuff to the `maint`
I think this is a bug, we should be able to remove the `out_file` from the `imresize` above.
This is not right. You are using `\ get` in the `if` block.
This is a breaking change. It's not a problem, but it's a problem.
I think we can get rid of this check now, since we don't have any other code that calls `r.URL.Path`.
Why is this change necessary?
Why not use `ErrorListener`?
This is a bug fix. `ResourceType` is not a valid value, so it should be an empty string.
this is a bug, we should just pass the ID to `ChainID` instead of `config.ChainID()`
I think we can remove `@see NativeClient` and `@see NativeClient` from here and remove the `@see NativeClient` annotation
Wouldn't it be better to use something like `violation.get('resource_name', ''),` or something like that?
I'm not sure if this is the best way to do this. The wl_resource_get_user_data() is called when creating a wl_resource_create_user_data() which is called when creating a write to the "texture" data.
I think we should use `DATE_msid` here.
I think this should be `strstr_py`
Does it not work with the `protobuf` package?
This is a bug fix.
We should probably add a license header here to make sure we don't have any other option for Rating config.
You should use `det_bboxes.shape` here.
I think we should use `bucket` here.
Is this the same timeout?
This should be a tab.
Nit: "with_nms=True" now means "As far as I can tell, "As far as I can tell, "As far as I can tell, "As far as I can tell, "As far as I can tell, "As far as I can tell, "As far as I can tell, "As far as I can tell, "As far as I can tell, "As far as I can tell, "As far as I can tell, "As far as I can tell, "As far as I can tell, "As far as I can tell, "
Important change from website to website.
I think the content-pages value should be `_r.drilldown`
I think this is not needed. Are we trying to remove the retrying?
I think it would be more clear to name this `EnableAdminAPI`.
>prevm::dyn_cast_or_null<Swift>(Expectedift_type) [](start = 28, length = 1) I don't see where this is used.
I think we should use `configMaps` here.
This is wrong.
I think we can remove this.
I think this should be done in loss_loss_weight_with_loss_weight()
This makes it sound like it's only used in conflict suffix. Is there a conflict suffix we can use here?
should be `@context`
I think we should remove this.
I think this test is not testing what it does. It's not testing the right thing.
I think this should be `eni.guard.RLock()` instead of `eni.id()`
This is a bit of an unrelated change, but I'm not sure it's worth it.
We should use `int64` here.
This is a breaking change. The `__getitem__` method is used to return `self._size` which is `None`.
Do we need to keep the default value for the default?
The `ti.offsets` is now an int.
Why is this in the database?
Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is a bit of a hack, but I'm not sure if we want to support `/usr/local/ghc/#{ghc_version` in the future.
This should be just `\dots-horiz`.
do we need to set this to 1.0?
if serialNumber == 0, i = mathrand.Int63n(100000000000000000)
This is a breaking change.
This is the only change that affects the tests. The tests are failing because of the tests.
Is this a bug fix?
This is a bug fix.
This is a change in behavior, but I think it's better to be explicit about the block API.
Isn't `AttributeCode` the same as `SYSTEM_ATTRIBUTE_PREFIX`?
I don't think this is needed.
I think this should be `Duration.Duration(in.Spec.Scheduler, schedulerField.Child("cron")`
This error is now handled in the `err` field.
This is not needed.
Why did you remove this?
Is this a change in behavior?
I think it would be better to set the `tables.lock` field in the `run` instead of the `tables.lock` field.
Can we just use `_tab.Key_Enter` here?
I think this line is too long. [2.6/15]<br>Surrounding space missing for operator `gles2_texture_in_context`.
Is this the correct way to do this? I'm not sure if the `decode` call is necessary, but it seems like it should be a `.decode()`?
This is not needed. `respond_to?` is already done in `superclass`.
The variable $char is not used. It is used only once in the function.
Why is this change required?
(style) trailing whitespace
This is a change in behavior, but I think it's not a good idea to change the behavior here.
This is a bit of an overkill, but I think it would be better to have a method that returns the account, and then call it `address` (or something similar)
The original linux and windows linux don't seem to be defined.
I think this should be ` v := range i.w.Sources[k]` instead of `workflow` since it's a `workflow` field.
I think this is a bug fix.
This line is redundant. If you remove the last one you get a few lines down below, you will get a `\r\n` string.
I think this should be a list of supported values, not just the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root of the root
I think this should be a constant.
I think we should keep the AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS AWS
This is a little unrelated to the PR.
No need to set `ipsets` here, it's already in the `set` folder.
I think this import can be removed.
should we also mention that the `guid` started guides will be used for getting a storage location?
This is a wrong value. The value should be `true` or `false`
The values.NewUInt() is a number of values values.NewUInt() is a number of values.NewUInt() is a number of values.NewUInt() is a number of values.NewUInt() is a number of values.NewUInt() is a number of values.NewUInt() is a number of values.NewUInt() is a number of values.NewUInt()
I don't think this is the right place to put this. It is not the only place where we need to change the cache, but the other way around is to make sure we don't have to change it.
Why was this removed?
I think this should be `media` instead of `event`.
I think we should add an index on the key name to make sure the key name is not set.
This is a bit odd, as it is a list of files that is not a list.
This should be `updated_at.to_i` instead of `to_i` since it's an updated loop.
The commandLine will be set when the app is created.
I think we can use `StandardCharsets.UTF_8` to avoid the confusion.
This is a problem, but I think it's better to be able to import `from astroid.brain import brain` in the next line.
Why do we need to check for `_corruptedRequest` here?
Seems like a bugfix.
Why is this abstract?
why not just `it 'only includes active plans' do`?
I'm not sure this is the right place to put this. The `is_ipv4_or_v4_mapped_address` check is used to avoid the `remote` limit.
This is a change in behavior, but the code is still not correct.
This is a breaking change. The ` ChromeDriverCommandExecutor` is used to implement `--allow-explain-property`.
I think you can use `type0.getType().equals(type1.getType().isEnum())` to get the enum class name.
Can you add a docstring here?
I think we can remove this file.
I think this is a good change.
I would prefer to have a `last log` here.
The `prepend` is not needed here, because `T` can be `T extends`
What is the purpose of this change?
This should be a single string.
I think this should be a warning, right?
This is a breaking change. It's not a problem, but it's not a problem. It's a `WebSpan` that is used by the `HttpMethod` interface.
This is now going to be removed as we can't use the logger directly in the `FrameworkDescription.Create()`
can you please update the `AwsSdk` to `AwsSdk_`
this is not needed anymore right?
Not sure if we should use `proposals` here.
I think this should be a constant, not a constant.
nit: `does not match the service name received in the response, sent %q, got: %q", treq.Service, resSvcName)`
I think this should be `kwargs["protocol"] = kwargs.get("protocol") or "https")`.
Can we make this `private`?
This should be `Collections.emptyMap()`
@matt-gardner, what was the reason for this change? I'm not sure what the best way to do this is.
why not just `ctxUser.Tr("dashboard")`?
This is a bit of an overkill, but I think it's better to have a `Simple_id` flag that returns the same object as the one `Simple_id` flag.
I think we should return error instead of results[1].Interface(), otherwise we will not be able to use it.
I think we should make this a constant.
This should be `options.compareEndDate]`
`Clear` is a `null` check. If it's a `boolean` it should be `null` instead of `Clear`.
is this the only place where we need to handle the case where the object is not empty?
I think this should be removed?
I think it's safe to just remove the `expect` altogether, because it's not true anymore.
I think this is a good change. The `if isinstance(key, tuple, list, pd)` part is not needed.
I think we should remove the `cancel` here. The `RunId` is already being set in the `cancel` function.
I think we should put these in a single string.
I think we should be able to use the server here.
I think we can remove this and use the same logic as in `dotnet`
This is a bit odd, maybe the plan should be the same as the name?
Should we remove the TODO?
I think we can remove `AccessibilityIdentifier` from the interface since it is no longer used in the interface
I think this is the wrong place for this.
Why did you change the type of int here?
This is a bit confusing, why is this error returned by `expectzer not supported`?
I think this is not the right place to remove this, because if we have a user provided a user, we can't use a user provided one.
I think we can remove the `RegistryURL` keyword now that we have the `--match` flag.
This import is unused.
I think we should check if the inputs are IE11.
I think you can just do CheckSum.readLong(checksum) instead of CheckSum.reverseBytes
This is a bit of an unrelated change, but I'm not sure what the best way to do this is.
Why not use a single string?
I think we should not add the column column column here. The column column is not set.
This should be a `Set`.
Do we need to make this change?
This is a change in behavior, but I'm not sure if it's worth it to just return `obj` here.
I think we should remove this string.
Is this a change in behavior?
I think we can just remove the `n` here.
I think this is a bug fix. We should not modify the code unless we're in a non-host mode.
This test should be reverted.
This should be split across multiple lines.
This is a breaking change. We should be able to make the keyFilePath final.
I think we should just use `Optional.forTable(table)` here.
Why is this file changed?
This is a bit of an unrelated change, but I think it would be better to use `SecureRandom.GetBytes(bytes)` instead of `SecureRandom.GetBytes(bytes)` as it is a bit more readable.
I think we should remove this, it's not used anywhere
I'm not sure why this is removed?
I think it would be better to add the ``use_legacy_coordinate`` arg to the ``if not required, then ``use_group_of``
Can we just use a bool here? I think it's a little bit confusing to have a default value, and if it's not a bool, it's a bool.
I think it's better to add a ` teacher_gravatar` helper class to this file.
I think this is the wrong place for this.
I think this import is not needed.
Why is this backend necessary?
Can you add a TODO here to make sure the `null` check is not null?
I think this is a breaking change. We should not have a default dependencies as the default dependencies is not set.
I think we can remove this now that we don't have any other KeyValuePair
This is a breaking change. It's not a big deal, but it's not a big deal.
This will fail on error if the Stop is set to `opts.spinner.Stop("Error!")`
This is a very large number of places.
I think it's better to move this to the `log.info` file.
is this change intended?
`proto->set_name(type())` is always set to `name`, so why not just do it in the loop?
Why not use the `aws.` package?
Why not just `#ifndef`? We don't have any `spawn.h` in the `lib/` directory.
This is a breaking change.
I think this should be `PublicPathType` and `PublicTeam` should be `PublicPathType` and `PublicTeam` should be `Public` and `PublicPath` should be `Public`
I think we can move this method to the `User::for_approver` method, since it's not used anywhere else.
This is a bit of an unrelated change, but I'm not sure it's worth it.
why is this check needed?
Should this be a `const`?
`String domainName, Boolean members, String tagKey, String tagValue`
This is a bit of a hack, but I think it would be better to have a `default_deprecation` method that returns the `warn` and then call `default_deprecation_io` directly.
This should be `process.argv.length = 1` right?
` validate_found` is used only in one place and can be removed.
I think this is not needed. It will create the volume in the `driver` call.
nit: "The `<`
I think we should remove this method and use the new one instead.
I think this should be `if not isinstance(as_index, bool):`
`currentVersion` is not used in the constructor, so it should be removed.
I don't think this is the right approach. We should be able to just override the version in the `skip_uppy` function.
I think this is a leftover?
Can you add a log message here?
I think this is not needed.
Block has too many lines. [39/25]
Should we add a `omitempty` field to the `cluster` field?
Make string is a string
I think this is the only place where we need to check for the `_run` variable.
This should be done in `setUp()`
This test is not testing what it does, but I think it's not.
Is this change related to the PR?
I think this import is unused
This is a bug fix.
This should be `!== -1`
This is the only place where we need to handle the old data.
I think this is a bit confusing, since the `if` can be used in the `PORT_S3` block, and the `PORT_S3` can be used in the `if` block.
I think this should be a `org.sonar.java.util.StringUtils`
I think this should be a pointer, not a pointer.
This should be `#include "fmt/format.h"`.
Can you add gitea copyright line to header (and keep gogs one next to it)?
This return is unnecessary.
Is this change necessary?
Why is this removed?
I think we should not add the XML to the exception.
Please remove the case "good case2" in the test case.
I think this is a breaking change.
why change this?
I think this should be a separate PR.
Why is the default value set to `object`?
Is this used?
I think this import is unused.
I think this is a good change. It should be the source name, not the source name.
You can use `_this.getValue(path)`.
This is not the right place to put `parseInt` in `tabIndex`?
This should be 'ssh'
Why did you change this?
Debug statement should be removed?
> it table of this table and commit the change. Are you sure this is correct?
this is a bit weird, why is the default 0 twice?
why do you need this?
You can use `String.format` here.
Is there a reason why we wouldn't want to use the `webkit` variable here?
This is a bug fix.
can you make it a tuple?
Is this necessary? It looks like the only caller of the container is to pass the container to the registry.
I think this should be `set_test?` instead of `set_test?`
I think we can keep this private and use the constructor instead.
Please remove this empty line
I think we can remove this `world` function and `world` function. The `world` function is already called in `toggleMenu` so it's not needed.
why not `SigKey1`?
I think this is not needed. It should be a `django.TestCase` or a `@SuppressWarnings("unused")`
I think it would be cleaner if we just put this in the `bridge` module.
I think this should be `ExtractSomeIfAny`
This is a debug statement, I don't think it's necessary to do this.
I think we should keep this line.
Should we use `Rails.Context` here?
I think we can just pass 0 to the constructor and pass 0 to the constructor.
This is the only place where we need to make sure PrepareRequest is set.
I think it would be better to use `VuFind (\d+\.?)+$/` instead of `VuFind (\d+\.?)`
I think we should get rid of this line and get rid of the `getConfigName` call below.
I think this is not right. If there is a bug, `snapshot.manifests() : CloseableIterable.empty()` will return null.
I think it would be better to move this class to ` ArrayInitializationVerbosenessRuleTest`.
I think this should be `Set[str]`, otherwise it's not a string.
I think this test should be moved to `workingBalance`?
I think we should remove the `!` here.
This is a change in behavior, but I'm not sure if it's worth it.
I think this should be `@user = user.xxx(send_user, user)`
This is a bit of an unrelated change, but I think it's worth it to just use `tiny` instead of `llvm`.
I think this is the wrong name. It should be `UnusedVariable`
I think this is not needed.
I think this is a bit of overkill, but I think it's better to just remove the `oldDom` variable and just do `oldVNode._dom`.
Why is this change required?
`numAccounts` is not really needed here, since it's a `map` field.
This is not needed.
Shouldn't this be `0.Context`?
This is a change in behavior, but the test was failing because of the `org.infinispan.client.hotrod.test.GetDefaultAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAutoAuto
This is a bug, we should use `cborStore` instead of `Put`.
I think this is a bit confusing. How about `temp_file_logical_keys`?
This should be `ResponseTypeProcessor`
feat_is_unconstrained is a string, not a string.
`process` and `apply` seem to be unused?
I think we should add a TODO to remove this.
This is a bit of an unrelated change but I think it would be better to have a `eventname` property that is passed in.
available WebInstanceInstance import QWebEngineWidgets
I think we should be able to remove this in the `NVDAObjects.window`
I think this should be `<h2>`
I don't think this is correct. It's not a good idea to check if the manifest is the manifest key.
I think we can remove this
Nit: Can we use `Console.ForegroundColor = ConsoleColor.White;` instead?
I think we should remove the `except` here.
All should be ~0x8000
I think this is a bit too much. What about something like `bee_only_cobra_only_s`?
I think we can remove `admin` from `loaddb` and `loaddb` to `admin`
I think this option should be in place.
Should this be `public`?
@deads2k I think this is the reason why we need to change the API.
I think we should use `pandera<0.8.0` here and in the other cases.
I think you can use permission.list instead of permission.
I think we should just remove the firstThreadPool.submit method and use the new one.
I think this is a bit too broad.
I think we should be using the `OriginalRequestCtxKey` here
Is this a copy/paste error?
I think this should be `host1.example.com`
I think we can remove the `Tracer.Instance` variable and just use the default value.
So the same thing here is that if `trainer` is not null, it will be null.
I'm not sure about this. It seems like the `state_block_impl` logic should be moved into `state_block_type()`.
Delete the repo here
Line is too long. [87/80]
This is a breaking change.
This should be `An`, not `An`.
Why 10 * time.Second?
I think we should use `classification='array'` here.
I think you can remove the `<text-box-wrapper>` part and just use the `<text-box-wrapper>` tag.
This file is not used anymore.
This is a bit of a weird pattern. I would use the version in the `__version__`.
I think we should keep this as `status`
remove empty line
I think we can remove this property now that we don't need it.
This is a bit of a hack, but I think it would be better to have the `calculatingResourceState` be the same as the `calculating` in the `else` block.
I think we should add a `@JsonProperty` annotation to the `name` method.
I think we should remove this and use the new one for the URL.
Style/EmptyMethod: Put empty method definitions on a single line.
Why is this one `upperClass`? It seems like it should be `getClass` instead of `getClass`
This should be `_N[0] == '.'`
cur center is not used anymore.
This is not used.
This one is missing the default
I think we should remove this
This is not correct. ` extract_next_token` is only used in `isspace` and `isspace` are only used in `isL ua`.
I think this should be `if c.Wireguard.EncryptHostTraffic && hastopHostTraffic {`
Can we add a description of what this field is for?
This file is not used anymore.
Is this a bug fix? It seems like the `driver` should be removed.
Is this still necessary?
@jridgewell Is this a typo?
It's not clear to me why we need to skip the CNP here. It's not a CNP, and it's not a CNP.
I think we should check for nil here, as it's not a NCR specific template.
What does `&.` mean?
I think this function should be called `validateWebDataStreamID` instead of `tableName`.
`c.parse()` can return `nil` if there is an error.
Shouldn't we use `states.discard` here?
This is a change in behavior, but the `SplitN` is not the correct place for this.
I think the container name should be `ports`
I think it should be `shardInfo != nil`
I think we should just remove this.
This is a bit unrelated to the PR but I'm not sure it's worth it.
I think this is a breaking change. It should be a separate PR, but I'm not sure if this is a good idea. It should be a separate PR, and it should be a separate PR.
`std::move` is a list, so it should be a list.
I think we should return `false` here.
I think we should be able to use the 250 number of bytes. I think we should be able to use the 250 number of bytes, and then use the 250 number of bytes.
I think this is a good idea. It's not a good idea to use a string here.
Why is this error ignored?
Line is too long. [87/80]
I think we should be able to remove this interface. It's not a public API, but it's not a public API.
I would prefer to use `.c_str()` instead of `.c_str()`.
I think this should be `protoFile.getProperty` instead of `protoFile`
I think it would be better to set this default to `SERIES_DEFAULT_NAME`.
Can we use the `validate` method here?
I think we should be able to just use `before` here.
I'm not sure if this is the right place to do this. It's the most important case, but it's the most reasonable case to just change the `inviter_name` to `invited_by`.
I think we should be able to remove this and just do `String::toLowerCase`
This should be `-32`
I think this is not a leftover?
This is a breaking change. It's not a problem, but it's a little hard to see.
Can you please rename this to `customsontable`? It's not a subclass of `customsontable`.
I think this needs to be moved up to `setup.go`
I think this should be `prompt.question` instead of `QLine`.
do you need this?
I think we can remove the `ipify` keyword from here
I think this is the only place where we can use the `time.Duration` value.
this should be called on app init
I think we should use `boolean` here.
Is it possible to get the int recordCleanupLimit to be a long?
@matt-gardner, what do you think about this?
I think we should keep this.
I think we should be able to use `options.ignoreUndefined = this.s.options.ignoreUndefined` here.
why not use a logger here?
I think this is a bit confusing. I think it would be better to keep the `queue` and `get` methods in the queue.
I think this should be a separate PR, since we don't want to have a `if len(txgroup) == 0` check.
I think we should keep the property name for clarity.
I think we should add `ci/__init__.py` to `gendoc.py` as well.
I think we should be able to call `Ready` in the `p2p` package.
Please use `std::unique_ptr` instead.
This is the wrong place for this test.
I'm not sure why this is necessary.
I think this is a change in behavior, but the `AWS` variable is not actually used.
I think this is not needed.
I think this is not right. We should check if `! isUndefined( decimal ) && ! isUndefined( decimal )` before calling `get(! isUndefined( decimal )`.
I think we should be able to remove this and just call `composite` from the `Transports` function.
I think we should defer here.
I don't think this is used anywhere.
Is this not needed anymore?
shouldn't this be a warning?
I think this should be a `Set`
I think this is a good time to add a new column to the `get_data` method.
rename this method to `renameClient`
This is invalid.
I think we should use `GetAssemblyName` here.
I think it would be better to use `SYSLOG_INTERNAL_with_package_INCOMPLETE_STRING` here instead of calling it in the `AbstractLOG_INTERNAL` method.
Is this required for the options to be set to `false`?
why change this name?
I don't think this is necessary. In the case of a new "OPERATION: getQueueProcessorActive" it is a bit confusing to have a "OPERATION: getQueueProcessorThreadState" in the context of the "OPERATION: getQueueProcessorActive"
missing '.' at end of line.
why is this changed?
This is a bug fix.
Is this change necessary?
`Math.min` returns `byte[]) val` if it's not `Math.max(byte[]) val`
I think it would be better to use `evb.CreateEnumerator("NONE", 0)` here and below to check for the full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full full
I think it would be better to use `getAPubSubabanURL()` instead of `getAPubSubabanURL()` for the zkFlow.
I think this should be `mask.dtype != nil`. If `mask` is `bool`, then `mask` will be `bool`.
This import should be grouped with the other stdlib imports.
I would log the entire message here, as it is not really useful.
why is theoptional change needed?
This is not a good idea. It will be better to use a different name.
I think this is not needed.
I think this should be a `volatile` class.
Since this method is only called once, and the async function is called when `syncIndexes` is called, it would be better to call this method in the constructor.
This is a bit of an unrelated change, but I'm not sure what the problem is here. I think it would be better to use `is_ec_id()` instead.
I think this should be a pointer.
This is not a valid error. It should be: `grpExpr->generateCacheKey(cwa);`
This is a bit of an overkill. I think we should just use `com.google.api.codegen.transformer.MethodTransformerContext` and `com.google.api.hidden.Name` instead.
Why do we need to check for the `get` here?
I think this should be a `pip install`
I think we should use `nameFile` instead of `e.config`
I think we should be able to use the `Trim` field in the `kegg` variable instead of passing it in.
I think we should add a `GroupCloudBackupID` field to the `FormForm` class and add a `FormForm` field to the `FormForm` class.
Can we add a `#includes` to the `SCPFCPCF`?
The `attr_value` is not the correct form for the `attr_value`
I think this is a bit confusing, since it's a public API, and it's a public API. I think it would be better to just have it in a `if` statement.
I think this should be done in `cu.ToolVersion`
Should we add a `sample` to the `typeof` block?
This should be `closeUTCTime.In(time.UTC)`
Do we want to make sure that backups is a tag?
this is a BC break.
Why is this change required?
This is a breaking change. It's a public function.
This is wrong. The `if` is nil if no `if` is `nil`.
I think this method should be called `DocIdSetIterator`
I think this should be removed.
Can you add a new line before?
I would use `max_retrials_to_get_pods` here
The default should contain 255 characters or less. If it is less than less.
Why did you change the timeout?
I think this is the only place where we have a `local_options` key. Shouldn't the `custom_options_options` be ` eviction_options`?
you can drop the `olr` part
Why not useIP?
I think we should remove partial here.
Why not use the `aws.amazon.com/aws` package? The `2014` package is already defined in the `aws` package.
I think we should be able to use `quote.EndsWith(quote)` here.
`client.close()` is called from multiple threads, so it should be called from multiple threads.
Is this change necessary? It seems like we should be able to pass the `string` parameter to `Policy` in the function.
I think this should be done in the `if err != nil {` block above.
I think this should be removed.
Why did you remove this line?
I think this should be `containerContainsText=_` and not `containerContainsText=_`.
This is a bit of a hack, but I'm not sure what the best way to do this is. It's a bit of a hack, but it's not a good idea to use `spack spec` to determine if the `PATH` is actually used. It's a bit of a hack, and it's a bit of a hack, so it's probably worth it to just have `JAVA_HOME` as a special form.
This is the only place where you need to define #else in the `#include` block.
The `waitForAjax` function does not return the correct wait name.
Why did you remove this?
I think you can just do `IdentifyTrackBreaks = Identify.id` instead of `IdentifyTrackBreaks.id`
Nit: please move the import to the top of the file.
This is the only change that affects TF providers.
I think we should remove the `interfaces` here and remove the `interfaces` parameter from the `TransportFeature`
Is this change necessary?
Why is this false?
can we use `key.append(reinterpret_cast<value>(spaceId), sizeof(spaceId));` here?
Can we use `src/` here?
why is this error ignored?
I think it would be better to add LibraryDetailsPanels to the LibraryDetails class.
This is the only place where we use `const char * *series` in the `persistdir` directory.
I think we can remove this function.
Should this be `incldued_wf`?
any reason why this is `variant` rather than `type`?
I think we should be able to remove this file from the `delimit` package.
I think it would be better to use a data variable for all the time. `aURL` is a `data` and `aURL` is a `data` (or `aURL`) and use that in the `aURL` class.
I think we should be able to use `0` here.
This is a breaking change. It's a breaking change. It's a breaking change. It's a breaking change.
I think this should be a constant.
This is a little weird. It seems like the `||` should be the default. It should be the default. If the value is `local.name == 'localhost'` then we should be able to remove the `||` part of the `else` branch.
This method is not needed.
Is this the only way we can have a "IsE" attribute?
This is a bug fix.
If you're using `self.show_warning("Invalid Public key")` here, then you should remove the `str(e)` call below.
You can use `String#Equals(String, StringComparison)`
I think this should be done in `updatePreviews`
I think we can just use `PodSelector` here.
I think the `sendDelta` is still still necessary here, since the `minRTT` is already an array.
I think this should be internal?
Use 2 (not 0) spaces for indenting an expression spanning multiple lines.
Nit: I'd prefer if we could use `\n` here instead of `\n` for consistency.
This is a bug fix.
This function is now unused.
nit: remove empty line
`promptText` is not a valid variable name, it's a valid var name. `prompt` is a valid variable name.
I'm not sure if this is the right place to put this. It's a little confusing.
This is the only change I'm not sure. I'm not sure why we need to do this.
I think we can just do `opnd_size_in_bytes(OPSZ_CACHE_LINE) == 64, "OPSZ_CACHE_LINE != 64")`
I think this should be `pb`
This will need to be a `null: false` so that the `subscriber_id` can be `null` if it's not a `null`
This function is not used anywhere. I think it should be removed.
This one is a little confusing. I think it's better to be explicit here.
I think this should be set to `properties`?
Style/SymbolArray: Use %i or %I for an array of symbols.
should we rename this to `iceberg.engine.hive.enabled` ?
I think we should delete this part.
Is this actually necessary?
I think this should be a separate PR, not a separate PR
I think it would be better to use `PasscodeMode.CheckCheck` here, and then use `newMode = PasscodeMode.Check;`
I think we should be able to use `0.2` here.
I think we should use `rake secret` here.
I think this is the only one that needs to be set in the `Json` namespace.
This is the only place where we call `path.Provision` which will return `nil`.
should this be stored in the same line?
I think this is still needed, right?
This function is a function that returns p. unordered and returns p. unordered.
Oh, this is a bug, we should be able to export the timing here.
I think we should be using the `config` interface here.
This is a change in behaviour.
This include block should be removed. The new `md5.h` includes the new `openssl` header.
I think this should be a public method.
I think we can remove the `CastToClient()->SendSpellBarEnable` method and use `IsEffectInSpell(spell_id, SE_Charm)` here.
`invocation_id` is not used anywhere else, so it should be removed.
why not use `break`?
Is this used?
This is a change in behavior, but I think it's not a good idea to remove it.
I think this should be `cachedChanges`
I think we can move this to the `execute_task` method, so we don't have to keep the old one.
I think this should be `Spriteriterite` and not `Spriterite` (e.g. `Spriterite`), not `Spriterite` (e.g. `Spriterite`), and `Spriterite` (e.g. `Spriterite`), and `Spriterite` (e.g. `Spriterite`), and `Spriterite` (e.g. `Spriterite`), and `Spriterite` (e.g. `Spriterite`), and `Spriterite` (e.g. `
I think this should be done in a `replicateLogs` function.
I think this is the wrong place for this. The `getFormType` is called in the `FormType` function.
This is a bit odd, but I think it's better to be explicit and use `google-osconfig-agent.min(yum -yum-agent-el6-unstable)`
Please use `StringUtils.isNotEmpty`
The test is failing because of the test cases. This is not the best approach. The test is that the tests are failing because of the test cases, so the tests are failing because of the test cases. The test tests are failing because of the test cases, so the tests are failing because of the test cases.
I think this constant should be named `timeReorderingFraction`
I think this is a good idea. We should also check for disk names in the disk names.
This file is not used anymore
@mfojtik why did you change this?
I think this is a leftover?
I think this is the only place where we can use `NewtonsoftEscapeJProperty` instead of `NewtonsoftEscapeJProperty`.
I think this should be `//`
This should be added to the `before` block.
This property is not required.
I think this should be `LGBM_SE call_state`
if (null === $mediaContext)) {
I don't think this is the right default.
I think this should be a `default_args`.
I think this test is not testing what we want. I would expect it to be testing the same thing as the `test_delete_collection_gives_number_of_in_headers` method.
I think it would be better to keep the `throw new enums("Session ID is null")` and just do `throw new enums("Session ID is null")`
Why do we need to do this?
why is this removed?
Why is this changed?
I think we should be using `test.DefaultValues()` instead of `block size()`
I think this is a bit of overkill. I think it would be better to just catch and try/except and then catch the error and then catch the exception.
I'm not sure if this is the right place to put this. It's a good idea to add the `suspense` flag to the `tasks` folder.
I think we should use the default value of `BATCH_SIZE_MAP` here.
Please remove the `==`
I don't think this should be `configConfigService`
Can we add a logr dependency on line 488 instead of just the v1?
Is this used?
Nit: We usually don't use `import` imports.
I think we should just be able to use `valueOf` here.
I think this should be removed.
This print statement should be removed.
Could you use `new BN(500000000);` here instead of `Interpreter.LOCKTIME_THRESHOLD_BN`?
I think this is not needed.
This is a breaking change. The string is not a string, so it should be `string`.
This is a breaking change. The `build` argument is not used in the `build` method.
I think this should be `USER_PRINCIPAL = 'basicauth:aaedca130273574dd2f3545b662a974fa4320'`
Why do we need this?
`ProgressBar` should be placed in `opts`, not here.
This should be `errors`
This is the only change that affects TF providers.
I think it would be better to add a `isinstance` check here, and then use that in the `avoid` method.
This TODO can be removed.
I think we can remove the `Metrics` prefix from here and remove the `Monitoring`
I think this should be an `add_info` instead of an `add`
I think it would be better to use `solveMethodInType` instead of `solveMethodInType`
why are you removing Load twice?
can we use the `block` attribute here?
This is a change in behavior, but I'm not sure why it was necessary.
I think it would be better to remove the whole `gulp dist --return` statement.
You can just do `self.bbox_head = context.bbox_roi_extractor`
@jridgewell Is this a typo?
It's not obvious why `Close ctx` is called here.
I think we should use the Heureka interface here.
Wouldn't it be better to set the fallback_dcn_on_head directly in the `dcn`?
I think we should just be able to just do `[--with-modern-grub]` instead of `[--with-modern-grub]` and we can just do `[--with-modern_grub]`
I think this is a bit of a hack. I think it would be better to move the client to the client and then use the client to pass the client to the client. I think it would be better to move the client to the client and use the client directly in the client.
this is the same as the one above, can we name it `/products/1-impl`?
I think we should be able to use `expectedAssignedCDs               ` here.
I think this should be `opts && this.conflictStack` instead of `this.stack` since this is a bit confusing. I think it's a bit confusing to have this in the deepStackTrace code.
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
Can you use `history_*` here?
Why was this added?
I think we should change this to `lookupPath(buffer, "0", "4CIDR", "4CIDR", "4CIDR", "4CIDR", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4?", "4
I think we should add `user_message_author` to this file.
Is it possible to get the agent from the `agent` and `enableLogging` instead of `ReactiveLogging`?
I'm not sure if this is the right place to put this. The `!3.0` check is fine, but it's probably better to move it to the `JsonErrorMessage` class.
This is a bit confusing, as it is used in the `if` statement.
Shouldn't this be an error?
I'm not sure why this was removed.
What is the TODO?
Should this be a warning?
This is the only change that affects the log.
What about `InUse.delete(notificationId)`?
`NotFoundErr` was removed from here.
You can use `getConfig` here.
I think this should be `@NotNull` instead of `null`
Should we use `title` here?
Why is this needed? It's already in the `Session` method.
This is a bit of an odd name, but I think it's better to have a dict and a dict.
What is the reason for this change?
This is a bit of a hack, but I think it would be better to move the `if` to the `else` block.
This is the wrong place for this. The `create_package` function calls `PackageFormat` in the `create_package` function.
I think we should be able to remove this.
I think this can be removed now since there is no pylint.
Please update the docs to reflect the new name
Do we need this?
I think we can remove this file too.
I think we can remove `hasData` from here and let let the reportArgs be used by hasData.`
@danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @danrot @d
I think this error message should be logged at the beginning of the function.
It's not immediately clear to me why we need to change this. What if we made it a string? What if we made it a string?
This should be `null $temporaryFilename`.
Can we remove this? We already have a `RowType` in the `rowType`
I think this should be `roots_drag_icon_update_position` and `roots_drag_icon_update_position` because it's a new method.
`\` is a device type, so you could use `\`.
We should probably move this to `configStore` so that it's not called anywhere else.
I think it would be better to move this to the `getHost()` method.
I think we should just remove the `GetIndexer()` function and just do the `GetIndexer()` in the `NetworkPolicy` function.
why did you change these?
I think we should be able to remove this in the `Close` package.
This is the wrong way to fix the error. The health check is not the same as the current user.
I think you can just remove the trace/subtrace here.
I think this file should be removed.
Why not just always LessSpecificReturnStatement?
is this log necessary?
This is not the right error code.
"Please enter the maximum value" sounds a bit weird to me, but it's not clear what the problem is.
I think this should be `this.on = this.emitter`, since it's a `build()` method.
I think this import is unused?
remove empty line
How about using `arily` instead?
I think we should add a new flag to say `positional-args: true` and then we can add a new flag to `ksql-args: true` and `ksql-args: true`
Can we use `self.re.search(r)` here?
Please remove the cast
Why do we need to check for `2012` here? I think it should be fine to just check for `2013` in the check above.
remove empty line
I think this is a leftover
This is a breaking change. We should probably add a TODO to remove this.
Just curious, why did you change the `docroot` to `_html` here?
This is not the correct way to do this.
This is a bit of an unrelated change, but I'm not sure it's worth it.
I think we can move this to the `helper_method` file.
I think this is not the right place for this. You should be able to use `nameof(NAME) >= ETH66` instead.
Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think we should be able to use `secretURL` here.
I think we should be using `TestOzonePartialURL` here.
This is a breaking change.
The wite lock seems to be the same as the `l.m.Lock()` function.
This is a big change, but I think we should keep the version as the default.
This file is not used anymore
I think it would be better to use `isCloud || protoPkg.contains("cloud", protoPkg.contains("cloud\\/", "");`
LobTgtFileFlags should be LobTgtfileflags, right?
This log message should be moved to `info`.
I think this is the only place where we need SSL_connect()?
I think we can just remove the `readActiveBlockProducersByHeightTests` variable and just call it `readActiveBlockProducersByHeightTests`
This is a change in behavior, but the code is not correct.
`skip` returns a boolean, so we don't need to skip the IOException.
This is a breaking change.
I think we should use `Interceptors: yarpc.Interceptors{...}` instead of `Interceptors: yarpc.Interceptors{...}`
I think we should use `e.config` instead of `e.config`
I think this should be `configmap` instead of `env`
This should be a warning, right?
not sure if we should add this to the `init` section
I think we can remove this now that we don't need it anymore.
This is the only place where we validate the validation validation.
This is a change in behavior, but I'm not sure why it's necessary to change this.
please avoid import *
I think this should be a warning.
I think this should be a separate PR
This is a change in behavior, but I think it's a good idea to add a `vNode` option to the list of options.
I think we can use `abspath` here.
I think we should just call `.reduce()` here, since it's a `Stream.rangeClosed` which is the only place where we can use it.
Is this needed?
I think this is a bug fix.
this is wrong
I think this change is not required.
@tgamblin I think this is the right fix.
This is a breaking change, we should be able to use `llnl.util.g` instead of `llnl.util.g`
This is not used anymore.
I think we can remove this from 3.6 since it's not used by anyone.
I think we can remove this online_weights table
I think this is the only place where we want to use the request's `Slice` function.
Can we use a more descriptive name like `executorashed executor/container`?
Please remove this.
I think this is a bit too much, maybe it's worth it to just use the `<%=` and `<%=` to determine the value of the page.
This is a bit of a hack, but I think it would be better if we just set the `RestConst.REST_INVOCATION_CONTEXT` in the `subInvocation` method.
Style/StringLiterals: Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
This is a breaking change. We should not be using the `Class` as the default.
This is a change in behavior, but I think it's worth it to make it more explicit.
`ConcurrentHashMap` is a `ConcurrentHashMap` so it can be `Integer` and `ConcurrentHashMap` can be `Integer` and `ConcurrentHashMap` can be `Integer` and `ConcurrentHashMap` can be `Integer` and `ConcurrentHashMap` can be `Integer` and `ConcurrentHashMap` can be `Integer` and `ConcurrentHashMap` can be `Integer`
I think you can use `if (r !== 0) return bProp` instead of `r == -1`
I think we should still have a test for this.
This is a change in behavior, but I'm not sure it's worth it.
This should be done in a separate pull request.
This should be `_x`
This should be `WaitForClosedForm`.
why is this type of struct?
missing new line
Can you use `String.format` here?
I think we should disable this in the future.
I think we can use the `http` keyword here.
Why not use the `null` constructor?
We should add a description here.
I think it should be "Duration" instead of "Time".
This is a bit of an unrelated change, but I'm not sure what the best way to do this is.
This is a test case I'm not sure what the right thing to do is.
I think this should be `err == nil`
I think this is not needed.
I think we should be able to just do `return err.Code == "BucketAlreadyOwnedByYou" {` and remove the `if err.Code == "BucketAlreadyExists" {` block altogether.
I think this is not needed. We can use the same constant for the other properties.
This is a leftover
This is a little confusing, why is this necessary?
Why is this removed?
I think we should be able to set the default sync to 10, and then set the default sync to 60.
This is a change in behavior, but I think it's worth it to make it more explicit.
I think this is a bug fix.
I think we can just remove SolrException entirely and just use SolrException.
I think you can remove `dt.rbind(4)` here.
I think this is the only place where we want to set the `KOALAS_USAGE_LOGGER` to `None` when the `KOALAS_USAGE_LOGGER` is `None`.
I think GasPriceConfig should be in the config file.
This is the only place where we have the `ctor` field, we have the `ctx` in the `ctor` field.
This looks like a typo
Should we also do the same for CertificateRequest?
I think we should just make `sender_gcpbroker` a constant.
This is a breaking change. It's not a problem, but if it's a problem, it should be `if (lit == null) {`
This test is failing because of the test failures.
I think this should be done in `check_DT_INSTALLED`
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
@smarterclayton do we want to keep this error message around?
I'm not sure if this is the right place to do this. In the case of `topology_at_rasterizer` it is set to true, but it is not the case of `topology_at_rasterizer`. I'm not sure if it is the right place to do this.
I think we should be able to remove assets from this file, it's not needed.
I think it would be better to change the `detectStaleConnections` method to be explicit.
I think this is a bit of overkill, but I think it would be better to use `in` instead of `in`
just curious, why is this a per-chan?
Nit: We can remove the `AWS IAM` variable now.
This should be reverted.
I think this should be a `hex.Encode`, not a `err`.
Why not just use `self::PRICING_GROUP_ORDINARY_DOMAIN_2`?
Is this used?
This is a very specific test, I think it's better to have a test that checks for the int and testing.
I think this is the only change that affects TF providers.
why this change?
I think we should keep the old constructor and use the new one.
This is the only change that affects the `rfile` below.
remove empty line
remove empty line
I think this should be `get_register_name(reg, DR_REG_LAST_ENUM)`
I think this should be `m/44/1`
I think we should be able to remove SelectQValue.Select() and set the default value to true.
I think we should add a new constant for this to be a better name.
I think this should be `reset_logger` or `logger._logger`
why is this changed?
This is a bit of a hack, but I think it's better to keep the `t` here.
should we also change the controller?
I think we should just remove this block altogether. We don't need to do this in the node cache anymore.
I think this should be a `UseUse Datadog.Trace` class instead of a `UseUse Datadog.Trace.Headers`
This is a breaking change.
@jridgewell I'm not sure if this is the right place for this. I'm not sure if we should change the content type here.
This is not needed. `this.splashWindow.isDestroyed` will be false anyway.
I think we should move this versions to the top of the file.
I would say that we should be more specific here. If we want to log the entire object, we should log the entire object.
I think this should be `setTimeout(functioneval, reload() );` and not `window.location.reload();`
I think we should remove this
I think we should keep the old metric='anomalyPredictions' in the config file.
I think we should be able to use `concreteQuery` here.
I think this is a bit confusing. Can we have a `TODO` or something?
I think it's better to use `messages` and `X` here. The `--pubsub.Message` is not the same as `X` in the `messages` namespace.
I think this is the wrong place for this. The `step_id` method is called when `approve` is called.
This file is not used anymore.
Is this needed? I don't see any use of it anywhere.
I think this is not needed.
This needs to be `show.kids_musical` to be `show.play` not `show.kids_musical`
I think this is a bit confusing. It seems like the `Task does not support noop` is not the best approach. It seems like the `noop` is just a `Task`?
I think we should remove this line.
I think we should keep the test for the `sodas` and `water` paths.
Why is the assign({} check removed?
This should be `flags.DEFINE_integer`
This is a good example of why we need to make this configurable.
` Lucene80Codec` is not used anymore
`random_pdfPageOrientation` is a very generic name. Could you please add a `default: false`?
I think this should be a separate migration instead of a separate migration.
Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
I think it would be better to just return LoadConfiguration(bool) and return LoadConfiguration(false)
This is a breaking change.
I think we should be using the stateDB here.
I think we can remove this field.
This method is not used anywhere.
How about we make the number of bboxes a number?
Why not use `Skip until`?
why is this needed?
This is a bit of an unrelated change, but I think it would be better to just use `var tasks = new List<Task>();`
I think this is a change in behavior, but I think it's not necessary to change the behavior here.
This is a little confusing, but it seems like we're only using this for `thirty_day_activity_id`?
This is the only change that affects the change in this PR.
I'm not sure if this is the right fix.
This is the only place where we want to check if the request is nil, we should check if the request is nil.
This is a good change. This is a good change.
I don't think we should catch this exception here.
I think this is the only place where we need to make sure we don't have a providers in the DB.
I think we should remove this field and use `GROUP_USERS` in the `GROUP_id`
I think this is a bit confusing. What if we have a path_exc in the variable name, but the variable name is not very descriptive.
I think this should be `protected final`
In theory we should probably change the name of the method to something like `created_at_year_in_s` and `created_at_year_in_s` to make it clear that the name is the correct one.
I think this is not needed. We already have a `build_package` in the `build.py` file.
This is the only change that affects the test.
Are you sure that `anonymous` is a unique map?
This seems to be a bit of an unrelated change.
why change this?
I think we should keep the `.url` here.
I'm not sure if this is the right place to put this.
I'm not sure if this is the right place to put this.
Why are we adding this value to the `null` value?
I think we can move this to `require 'pathname'` so it's not a valid config file.
I think this should be done in a different PR.
Shouldn't this be `short_names`?
Is this just a godoc?
I think it's better to use the `cloudformation` package name. It's a bit confusing to have a simple simple simple simple simple simple simple `cloudformation` and `pkg/deploy/cloudformation`.
This is a breaking change. This will be removed in the future.
This should be `InvalidScalarArgument` instead of `string`
This should be `static const`
This is the only change I'm not sure about. I'm not sure we should be using this in the past.
I don't think this belongs in `AdminRole`.
This is a bit of an API breaking change. It is not a problem, but it is not a problem. It is a bit of a problem, but it is not a problem. It is a bit of a problem, and it is not a problem, but it is not a problem. It is a bit of a problem, and it is not a problem. It is a bit of a problem, but it is a bit of a problem.
I think we can remove this file
I think we should use `waitForResponse` here.
This is a bit of a hack, but I think we should just make a `NewIdentityManager` function that returns a string.
I think this should be configurable.
I think we should just be `zip` here.
Why is this in the list comprehension?
I think this is the right place for this. The `pre_syscall_app_sigprocmask_valid` function will handle the signal signal instead of the first one.
I think it would be better to add a link to the docs that the returned list is sorted.
You can remove this line.
nit: I think we should use `resource_db` here instead of `resource_db` for the `ocsp_MODE_WORKER` case. The `ocsp_MODE_WORKER` is a bit confusing. It's not a problem, but it's a little confusing to me. If we're going to have to do this for a user. If we're going to do this for a user, we should do it in a different PR.
Can we move this to a separate file?
I think it would be better to use `str1.localeCompare(str2, undefined, {string} -1, 0, ...)` instead of `str1.localeCompare(str2, undefined, {string} -1, 0, ...)`
Is this a bug fix?
I think it's better to use the new name for this, it's more clear what the new name is
This is a breaking change.
Why not use `.unit`?
I think we should use `getConsoleWindow := syscall.NewLazyDLL("activscall")`
this is not the only place where we need to do this - we need to do this in a separate PR.
@nmittler - I think this should be `-1` since the `-1` is the default.
what is the difference between "UI" and "resolvedWriters"? I think it is more consistent to have "UI" as the name.
I think we should use the `import` here.
Why is this needed?
this is the only change I'm not sure about. The `substitution` package is used only in the `substitution` package.
I think we should be able to remove the `python` keyword from the name.
Shouldn't it be `openvpnPort` instead of `openvpnPort`?
The original code was correct. You're using `topology.connect` to create a new topology object, which is not the case.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is the only place where we need to keep the old name.
I think this can be removed now, since it's not used anywhere.
`BatchActivityProcessor` is not used in this class.
This is a bit of a hack, I don't think we need to require the `rspec/support` here.
This is a very minor detail, but I think it would be better to move it to the `ResourceResource` class.
This should be done in a separate pull request
`asmsecret` should be renamed to `src/asmsecret`
I think this is the wrong place for this.
Is this TODO still required?
I think we should use `ComputerName $(hostname` here, as we do for the other tests.
allowError will always be true, so this should be true.
This is a bit odd, why is this error ignored?
I think this should be `Metric`. Also, we should not have a `Class` class. Also, we should probably have a `Class<T>` tag that is used for VirtualMachineMetrics.
Why is this change necessary?
This change is not necessary. `name.slice(0, 0);` is the same as `n` slice.
This is a bit odd, since `fn` is a path, and it is a bit confusing to me. I think it would be better to use `files = os.path.split('/')`.
I think we should be able to use the same `Session` method for the `Class` method.
I think we should use the `Timer` variable here.
There's a typo here: `unique_ptr<ROMol> res{te.canonicalize(*mol)})`
Should we make this string translatable?
This should be moved to the top of the function.
this is not the same as the method above, please remove it
I don't think this is correct. It's not a good idea to check if the manifest is the manifest key.
The `Include` is not used, it is always `null`.
Can we add a TODO to remove this?
@jridgewell Is this change intentional?
I think we should remove the type annotation.
Use a constant?
I think we should default to `false` here, to avoid the need for the `direction`
this file is not used anymore, right?
I'm not sure if this is a good idea. What about all the other places where we have agree?
This is a bug fix. The only difference is that `cfg.gpus` is a ` processed_id` which is the default. I think it should be `model.tls_id` instead of `cfg.gpus`
Maybe we should log something here, instead of passing `info` to `info`?
Why do you need to fix this?
I think this should be `LinkedExistsPolicy.OverwriteIfNewer`
This line is redundant.
Why did you change this?
What about `additionalIngressRules`?
Why is this public?
This is a change in behavior, but I'm not sure why it was there before.
`blockHash` is unused, can be removed.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
you don't need to assign `self.weight[None, :, None, None` here.
I think we can move this to the top of the file
This is a bug fix.
I think this should be grouped with the other changes.
Is this a problem? It seems like a very good idea to execute the flags after the own thread is removed.
This should be `message`
Maybe we should use something like `io.core. Number Number`?
I think this is a bit confusing. What about something like `<pantsd --snap>`?
I think this is the only place where we go go and go-filecoin are set.
This should be `QUILT_USE_TQDM`
Why change this?
This is the fix. The previous code had an `else if` check.
i think this should be a `_data` field, not a `private` field
I think this should be `JAVA_OPTS`
remove empty line
I think this is a bit confusing. I think it would be better to do `if (pkt.tls_version or 0x0303 > 0x0200) and pkt.type == 23` instead of `if (pkt.tls_version or 0x0200) and pkt.type == 23)`
Remove this extra line. The other `log4j` imports are not needed.
I think this is a bit confusing. What about something like `application/x-stata-1, when we want to re-test, that's the correct location for this test?
This is a bit of a hack, but I think it's better to use mock_ecr0 and mock_ecs_agent to check if the user is using the same API as the other one.
I think we should keep the old version as the first one.
Why is this needed?
Why is this needed?
I think you can remove the `Object.setPrototypeOf` call since it's not used anywhere else.
This is a breaking change, but I'm not sure it's worth it.
I think we can remove the old_size parameter from the old_size.
I think we should remove this line.
This should be `public abstract boolean hasLongrunningOperation();`.
I think the password is `Basic %s` and `Basic %s` are the same. The password is `Basic %s` and the `User` is `User` and the `Basic %s` is `User`
I think it's better to call `self.all.order(updated_at: 'foo')` instead of `scope` since it's the same as `self.all.order(updated_at: 'foo')`.
This is a bit of an unrelated but I think it's better to use `Base.error` instead of `Base.error` for this.
This is a bit of an unrelated change, but I'm not sure it's the best way to do it. It's not a `width` attribute.
I think `plugins.getConfig("api").offline_mode` is better here.
I think this is not needed.
I think this is a bug fix.
This is a change in behavior, but I think it's a good idea to keep this around.
Why not just `time.Duration`? `time.Duration` is a bool and so it should be a bool.
I think we should be able to use the `v1alpha1` package here.
I'm not sure if this is the right place to put this.
This is a breaking change. It's not a problem, but it's a very minor thing.
Can you use the 3.0 version instead of the 3.0x39?
This needs to be reverted.
`Bolt::Config.user_path` can be set directly in the config file.
I think we should be able to remove this, but I think it's not a good idea to keep the code consistent.
Why did you remove this?
I think this is the only place where we need to define the `year}</version` as a parameter, so we can just use `version.now().year}</version` here.
I think it's better to use `strcmp(type, "goto error)` instead of `== 0`
Do we need this?
This should be moved to the group below.
Please remove the `@SuppressWarnings("unused")`
I think it would be better to have the toggle passed in as a param and then use it in the docstring. It would be better to have the toggle passed in as a param and then use it in the docstring.
Why are we setting DevStatus to 8?
`YAML_LIST` is a string, not a string.
I think we can remove this
I think this is a bit confusing. What is the reason for this change?
I think we should add a doc block here
I think this is the only change in this PR.
I think we should be checking for `options.readPreference` instead of hardcoding the `command` here.
I think we should be able to use `block.BlockNumber` here instead of `to-1` since the `to` is a `nil` value.
This is a bit of a weird place to put this on the `T` branch. I think it's worth it to just add a `T` to the `matchingEngine` interface.
Line is too long. [81/80]
I think this should be done in a separate PR, not here. We should be able to avoid this if-statement.
This is a bit unrelated to the PR.
I think this should be set to false.
This is a bit confusing. I think it would be better to move the `if Travis::Build.config&.ssl&.verify == false` check into the `if Travis::Build.config&.ssl.verify == false` block.
Why is this removed? Isn't `stopEventWalk()` already called on `onWalkComplete`?
why not use the `key` value here?
I think this should be `staging-install-media`
You should be able to use `num_scan` here.
This is a very large number of places where we have `partitions::NetworkUtils::getAvailablePort()` is called, and `partitions::NetworkUtils::getAvailablePort()` is called. I think it's better to use a `0` here instead of a `0`
Seems ` MinimumRate` is not used?
This is not needed.
This is a change in behaviour.
This is a good place to add a TODO to remove this. The `block_SEGV` is used to ensure that the code is being used.
This should be a `@private`
This should be `IntegerIntegerId`, not `IntegerId`.
I think this is a good idea. It should be `!=` instead of `>`
I think we should remove this type now.
I think you can remove the `if !config.XDPEnabled && config.XDPEnabled` check here
I think we should use `ERR_SPACE_NOT_FOUND` here.
I think it would be better to use `False for ResNet, True for Houglass. Default: False`
This is a breaking change.
Can we put this in a `exit` function?
I think we should also check for crt.Spec.CommonName here.
I think this test should be removed.
I think we can just use `self.spark_version` here.
This should be an error.
I think this import is unused.
I think we can remove this check as we don't need the config anymore
"aggregates changed to operate on"
This is a bit weird, why is this needed?
I think we should also change the default value of `ecs.Attribute`.
I think we should use the `FEATURE_CODE_USER_AUTH` constant instead of the `USER_AUTH` constant.
I think this is the only place where we use `8` for the `if` statement.
load this spec, and others don't.
This is a breaking change. We're using the `cancelled` to generate a `status` element.
I think this is not needed anymore?
I don't think we should do this. If the model is undefined, the `models` will be undefined.
I think we should remove this
nit: no need for the variable here
I think this should be `base.size() == 0`, otherwise the `numDocs` will not be null.
This import is unused.
It's not clear to me why we need bytes.Buffer here. Can we just return `nil` instead of `bytes.Buffer`?
We should probably have a `cert.NotAfter` method that returns a boolean.
Is this change intended?
I think it would be better to use `grid` here instead of `grid` in the future.
This is a bit unrelated to the PR. I think it's better to use the `clickPreference` function in the `on` function instead of the whole thing.
I think this should be `if deployment.ClusterName != ""`. It's not clear what the difference is here.
This test is not related to this PR but I think it's worth it to remove it.
This is a bit of an overkill. Can we just use `this.inputList[i]` instead?
I don't think this is the right default.
why not catching the file here?
This is a change in behavior, but I think it's better to be explicit here.
why change it from None to int? you have to pass the full path as parameter?
This is a change in behavior, but I'm not sure why it's needed.
This is a bit of a hack, but I think it's better to use `.format()` instead of `.format()`
I think this is the only change that will break existing users.
I think we can move the RTL check outside of the loop, since it's not a valid value.
Shouldn't this be `POST`?
This should be added to the `addFilter` method.
I think we should also add a new constant for FLOW_FLOW_VERSION_2
Why do we need this? Isn't it a bit of a hack?
Is this file still necessary?
We don't need the 800 here anymore.
This is a change in behavior, but I'm not sure why it was there before.
I think we should not check if the file exists before calling `privateMySQL`, otherwise it will be hard to read.
Please use s.IsHidden instead of s.IsHidden
I think we should be able to use `clef-signer-address` here.
This line is not needed
This is a breaking change. We should probably add a TODO to remove this and use the `SPCName` as the other way around.
I think this is not needed.
What's the rationale for `prefix`?
This is a change in behavior, but I don't see a need to do this.
Line is too long. [87/80]
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is a breaking change, right?
I think it would be better to use `url.url` instead of `view`
I think this is the only place where we want to use the PodDBAdapter.KEY_EPISODE_NOTIFICATION, but the other one is the version.
I think we should remove the `else` here.
Can you change this to `mobilesdk.cs1.my.salesforce.com`?
Please use `if (name)`.
I think we can keep this method as `getMetadataIdentifier` and use it in other methods.
I think this should be a boolean
I think it would be better to use `@since 5.0` instead of `default Set<T> reverse()`
I think we should be able to remove the `for header` in the `header`
This is the only change that affects `NETSTANDARD1_3` and `NETSTANDARD1_3` but not used.
This is a very minor detail, but I think we should probably just remove the `context` part of the package.
This is a bit of an overkill, but I think it's better to move it to the `#include` block.
Please revert this change.
Please use the random conduit node from the time being.
I think we should check if the return value is `false`.
This is a bit confusing to me. What about a single method that returns a boolean that is split by `scan`, and then a boolean that is split by `scan`.
I think this should be `<q>`
`mins` is not None. `mins` is a `mins` value.
I think this is a bug fix.
This is a breaking change.
Please use `logger.is_debug` instead.
I think we should just check if the script is disabled.
I think it would be better to check for `true` here.
This is the only place where we need to change the `id` to `NewUUID` in the test. This is the only place where we need to change the test.
I think this is not right. We should just check if theSummary is null or not.
typo here and below
This is a breaking change, right?
I think this is the only place where we call `run_in_parallel` here, but we should check if the block is active or not.
This should be a constant
I think we should be able to remove this.
Is this needed?
I'm not sure this is the right place to put this.
This is a change in behavior, but I think it's worth adding a method to get the table map from table map to table map.
I think we should remove `GoogleSitekitDashboardDetails` from the `ErrorHandler` interface.
I think we can remove this and make sure we don't have anyone using this NewVHS anymore.
The `missing_text` is not used in this file.
Can you add a link to the wether?
I'm not sure if we should just use `editing` here.
should we log the whole thing?
This test was not testing the false thing, so I removed it.
Could use `.isSameType(type, state.getTypeFromString("java.lang.String")`
This is a pre-existing change, but I don't think it's necessary to put it in the `Old` folder.
I think we should use `Package.Package` here.
I think we should keep the old import of the group by name.
This is a change in behavior, but I don't think it's necessary to change this.
I think we should use `strconv.StatusOK` here instead of hardcoding the name.
I think this is the correct namespace.
I think this should be `Debug.finally`
Please remove this line.
Is this needed?
I think this is a good idea.
This is a breaking change.
This import should be grouped with the other imports.
I think this should be done in the `GetLogsRequest` case.
should we change `sysfn` to `h2o_sysfn`?
I think we should use the `device_extensions` in the semaphore instead of the `kSemaphoreWasSignaled` function.
I think we should be able to use `None` here instead of ` percentiles`
I think we can use `user_id` here instead of `user_id` since it is a bit confusing to have a hardcoded string.
This is the only place where we need to handle the old data.
Shouldn't this be `when='linear'`?
I think this should be `if (RuleB(Pets, LivelikeBreakCharmOnInvis) || (!RuleB(Pets, LivelikeBreakCharmOnInvis) && (RuleB(Pets, LivelikeBreakCharmOnInvis))`
This is a breaking change for the key key.
This is a bit weird. I think it would be better to just call `onPlaybackEnded(mediaType, stopPlaying)` in the `onPlaybackEnded` method.
I think this should be done in `X11`
I think this class should be removed.
nit: remove newline?
Since we're now removing Logger from the package, should we remove it?
Use 2 (not 0) spaces for indenting an expression spanning multiple lines.
I'm not sure if this is the right place for this, but I'm not sure if it's worth it. I'm not sure if it's worth it.
I think this is a bit of an overkill. It's not a test, but it's not a test.
@deads2k this is the actual fix.
I think this should be grouped with the other imports.
This is the only place where we need to set the `ignore` attribute.
This test was not working as it was testing the same thing as the `testGetJsonBodyForSingleMapObject`
I think it's better to use the template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template template
This is a change in behaviour.
I think we should change this to `kinesalite`
This is a change in behavior, it's not needed.
I think it might be cleaner to use `stack.StackSummary` instead of `Stack`
this is wrong. You should use `self.loss_seg = self.loss_seg`
Is this change necessary?
I think we should remove this method.
Is this `nil` necessary?
@jridgewell I'm not sure this is the right fix. I'm not sure it's worth it. I'm not sure what the best way to do is to add a dot at the end of the file.
This should be done in a separate pull request.
is this a false positive?
This is a very generic name. You could just use `collection_id` or `collection_id` to indicate that the value is a valid value.
I think this should be done in `log.interactive` instead of here.
Why not just use the `Exception`?
Should we be using the message-based message-based message-based message-based message-based message-based message-based message-based message-based message-based?
This is not right. The spells[spell_id].feedbackable") is never never never true. The spells[spell_id].reflectable is false.
Should this be in a separate migration?
I think this error message could be misleading.
why not just `middlewares`?
Can you add a link to the new issue?
This is a breaking change. It's not a great idea to add the `computed` field to the base class.
Maybe we should set this to `true` in the test and then set it to `true` in the test.
This is a leftover
Can you explain why this change is needed?
I think you can just do `lowerDoc(doc, lowercaseFields)`
nit: can we just make this a local variable and use `New`?
looks like you're not doing anything here.
Would it make sense to add the `[JsonPropertyName]` property in the constructor instead of creating the array?
Is this a typo?
This should be done in a separate PR
This should be a separate PR
I think this is not the case. The port should be `opt_port`
I think IEnumerable should be IEnumerable<KeyValuePair>
This log message should be moved to `info`.
This is not needed. The `SpecPriorityAlias` is already in `SpecScale`.
TODO: we can remove this TODO
Can we keep this as `float` instead of removing it?
This is a bit of a hack, but I think it's better to use `&&` instead of `&&` for the default case.
I think this is the only place where we're using this. I don't think we should change it.
I think this is the only place where we need this `using` statement.
I think this should be called `pony_unregister_thread()`?
I think we should be able to remove these values from `30` and `70`.
I think this is a bit of overkill.
I think we should use `?string $url` instead of `string $url`
This is a change in behaviour.
This should be a constant.
This is a breaking change.
Should we add a `XFRAMES` constant somewhere?
I think this is not right. `gradlew` is not right. `gradlew` is not called anymore.
Please remove this line
@deads2k @smarterclayton do we want to get this in the future?
This test is not related to your PR, but I think it's still not needed. The test is already there, so it should be removed.
I think you can just do `pop.Some(UTF-8, characters)`
I think this file should be removed
This import is no longer needed.
I think it would be better to have a separate locale for the new locale. It would be better to have a separate locale for the new locale.
I think this should be a warning instead of a warning.
Probably should crash if bad format string
I think we should just remove this Service. Otherwise we'll have to update the PodReference to be the default.
why is this change required? I don't see any `DeviceName` being used anywhere?
This is a breaking change. I don't think we should be changing the behavior here.
I think this should be a constant, not a constant.
I think this can be removed now that we have `pylint` in the future
This should be `errors.New`
this if block is not needed
@jridgewell Is this a problem?
This should be done in a separate PR.
It's not obvious to me why we are removing the `small></td` from the `small` module from the `small` module. I think it would be better to have the `small></td` module as a `small` module.
This is a change in behavior, but the destroyLinks function should be renamed to `$resource`.
I think we should make this a little more general, e.g. `libbeat/config.md`
I don't see any new conccurent collections or other collections or other collections. Is this necessary?
This is a change in behavior, but I don't think it's necessary to change the code.
I think this needs to be moved to `#if TRUE` instead of `#if TRUE`
This should be done in `NullActivity`.
I think we should remove this.
Why did you remove the `nameArr`?
This is the only change that fixes the issue. The reason I'm not seeing is that the `use strict` is used is because the `strict` is used in the `use` package.
I think this should be `properties == null`
I think this should be removed.
What's the difference between `ns` and `getattr`?
I think you can remove the `if contentType !== 'mixed' && contentType !== 'mixed');`
This import should be above the github import.
I think this should be `true` instead of `true` right? The only thing I'm not sure is that the fronto call is the ` push_front_preference` function.
I think this is a good idea. It should be a separate commit.
This file has been changed to use the new one.
I think this should be `config.path('kinto.views.flush_enabled')`
I think this should be `prometheus.current_id`
I think this is a bug fix.
I think this should be a `FAILED` option.
I think it would be better to have a separate `peer` interface that does not exist in `ts`.
Can you add a note that this can be a link to the issue?
This was a bug in the service service.
This is the only change that affects TF providers. I would suggest that you only need to check if the first `cygwin_installed?` is installed.
This is a good idea. The `manifest` method is used to pass in a `*` in the `*` method. I think it would be better to use a `*` method in the `manifest` method.
I think it would be better to have a task that checks if the file is in the schema. It would be better to have a `file-scan-task` property.
I think this should be a debug string.
CheckErr is not needed anymore.
I think this is wrong. The enum should be renamed to `orderedSettings` and not `orderedSettings`.
Can you add a `@return {String}` to the `Array`?
This will throw an error if the `label` label is not present.
This is a little weird. I think the "application" part is fine.
I think this should be removed.
This should be `<p>`
I think this package should be called `sourceforge.pmd.lang.java`
I think this test should be reverted.
This should be `servicecomb.loadbalance.stats.timerIntervalInMilis`
`...` -> `...`
@Scottmitch why is this needed?
can we use the new `conf` variable here?
why did you change this 1.6.5?
Maybe we should add a TODO to remove this TODO?
why remove this? I think it is used by both `app` and `app`.
I think we should be using the same `if` statement here.
I think we can just do `sumFB = a.grantFoundationBonus(epochNum <= p.cfg.FoundationBonusP2EndEpoch)`
This is the only change that affects TF32.
This is a change in behavior, but I don't think it's necessary to change the default behavior.
I think we should use `if (Email) !== $this->strategy` instead of `if`
I think it would be better to check `dir` here, as it is a bit confusing.
This is not the right place to put HPX::m_hpx_initialized. HPX::m_was_initialized. HPX::m_hpx_initialized.
I think we should also check `info.RPCName` here.
I think this import is unused.
This is a bug, we should start the restart and restart
I think it would be better to have a single cache in the list of operations.
I think this is a bit of an odd change. I think it would be better to have a `cltest` class that only checks if the compiler is present.
I think this is a bit confusing. I would rather see a `new` argument in the `args` variable and then use that in the `callFunction`.
I think we should use the constant here
please add docstring explaining what this is
I think this is a leftover?
I think we should keep the old name here.
I think we should keep the old method and use `ReferenceEquals` instead of `Id`
I think this is the only place where we should be calling `al_comms` here.
This is a change in behavior, but I think it's better to move it to the top of the function.
This is a bit of a hack, but I think it's better to have a method that returns a nil object, and then check that it's nil.
This test is failing because of the change in `partitions` to pass the result result.
This is a bit of an odd change. I think we should just remove it.
I think this is a leftover?
Is this needed?
This should be reverted.
This is a bit of a hack, but I think it's better to have an `options` be a `dict`.
Why is this removed?
Why is this needed?
I think this should be `pass`
return nil?
I'm not sure why you changed the text/plain here.
I think we should also update the docs to use the `Flags` value here.
I think we should use `configParams.Set` instead of `configParams.Set`.
What if we called `fmt.Sprintf` instead of `ProgramHash`?
This is not needed.
I think this is the right place for this. The default is neither Sender, but the default is neither Sender, so I think it is better to keep it consistent.
Does this mean that when the tracer is not null, the tracer is not null?
Shouldn't this be `0`?
Can you use `DateTime::createFromInterface` instead? It's a little bit more complicated than a list.
I think this function is no longer used?
Can you add a space after the comma?
This is a bug fix.
This is a bit of a hack, but I think it's better to use the `sso` variable instead of the string.
This import should be removed.
I think we should use the `types.io` package here.
I think this should be `updateIndexQueueUid`
I think this is not a good idea. The original code is not correct. The original code is not correct. The original code is not correct. The original code is not correct. The original code is not correct. The original code is not correct. The original code is not correct. The original code is not correct. The original code is not correct. The original code is not correct. The original code is not correct. The original code is not correct.
I think this is the only one that is needed.
I think this should be `protected`
This log message should be logged at the beginning of the function.
`Vector<byte>.Count` is a static constant. It is used in many places.
I think this is a leftover from the core, not the core.
I don't think this is needed.
Ditto on using `validate_resolve_reference` instead of `print_table`.
I think this is fine, but I don't see any new changes in this file.
I think this is the only one that's needed.
I think we should be able to get rid of this.
I think this function is not needed. `defer func()` will return `nil` if `func()` fails.
I think we can remove this and use `coll FIL` in the `Run` method.
Is this going to be true for channel-specific attributes?
This should be `@param {string} [options.source]`
I think we should use the `@JsonProperty` annotation here. We can use the `@JsonProperty` annotation for the `fr` field.
(style) line over 80 characters
I think it would be better to have a `template.int` that we can use instead of a hardcoded value.
Is this change necessary?
I think `# `attr_value['string'] is not None` probably not required as `attr_value['string'] == value` is probably better.
`link_hovered` and `link_hovered_link` should be `hovered_hovered_link`. The `hovered` is a `_now_focused._last_hovered_link` option is not needed.
should we add a `TODO` to make sure it's not a valid string?
I don't think this class is needed.
I think this should be a separate PR, not a separate PR.
Please add a `@float` annotation.
I think this should be removed.
The name `AccessNode` is not very descriptive. It would be better to have a `AbstractJavaAccessNode` that does the same thing.
I think this class should be removed. The `player` class should be removed.
I think this is a leftover
This is a bug fix. It should be `final` not `final`.
What do you think about moving this TODO to a separate method?
Why do we need to change the `str` here?
I think this is not a good idea. We should probably make it a constant.
stdout is a bit confusing, maybe a bit more specific?
I think we should change the default value to `api`
I think this should be `defaults('optimizer')`
I'm not sure this is the right fix. The `components` is a string, so it should be a string.
I think this is not the right place to put this. If the `renderState` method is called only once, then the `renderState` method will be called.
if c.acc is a { then this will break
I think this is not right. ADIOS_HAVE_PHDF5 is defined, which is not the case.
should we also check that the string is present in the `non-string` path?
This is a bug fix. You should be able to use MAX_PERTABLE_ENTRY, and MAX_MASTERSTATS_ENTRY, and MAX_PERTABLE_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO_TO
Please add a `_bytesHttpVersion1_1` field in the constructor.
I don't think we should be using the `UseLane` constant here.
This is not needed. The other package should be renamed to `iotex-proto/golang/iotextypes`
This is the only change that will cause the build failure.
I think we should add an index on the user's page, and call `pending_color` on the user's page.
I think this should be a `createRegistrySelector`
This should be `-fstrict-aliasing`
Is this supposed to be `could/should we just remove the SignedURL from the `MSI`?
I'm not sure this is the right fix.
`child_group` and `current_group.group` are not really used in the child child, can we just use `Optional[Optional[dict]` here?
This is a breaking change.
I don't think this is the right place for this.
Should this be `@VisibleForTesting`?
Can we remove this Deprecated? I don't see any code using it in the code.
I don't think this is correct. The `if err != nil {` block is fine for now.
Should we make this `Reader` instead of `so`? I think we should just make it `ICIC` and use `ICIC` instead.
This should be false.
This should be `static int int`.
Why is this change needed?
I think it would be better to use `would.GetGet` instead of `allAffectedNodeIDs` for the new value.
This is a very large number of things that could be reused. The `process` is used to be able to be reused in the `master` function.
`all_formatted_lines` and `all_formatted_lines_hash` have the same meaning.
This class is no longer used.
I think we should just remove this string.
I think we should keep this line.
This is a bit of an unfortunate change. I think it's better to have a `telemetryEnabled` property that does the same thing.
This is not needed.
I think we should remove this.
Not sure if this is needed.
The `app.SiteLocalSettingsPath` was not being used anymore.
Why not use the `ecpb` prefix?
This is a little confusing. It's not a function, but it's a function. Could you please explain?
I think we should use `new` instead of `cap` here.
this is a bit weird, why do we need to set the Connect and the other one?
I think we should default to "default" instead of "default"
Do we need to use `512` in tests? Can't we just use `gen.Join`?
Style/MutableConstant: Freeze mutable objects assigned to constants.
This was the only usage of this file that was not working.
This should be in `_getBaseAndExtent`
This is the only change that affects TF providers.
This should be `errors` or `fmt`.
I think we can omit the `definition` table from the database since it's not being used anywhere else.
This is the only place where we use `wg.WithContext()` in `errgroup` is used.
I think this should be `fragAlignRatio`
I think this should be `host.startswith('localhost')`. The return type should be `True`
I think we can remove the `@Test` here and use `@Rule` in the `OAuth2LoginWithOneClientConfiguredAndFormLogin`
I think this should be a constant.
This is a bit of an overkill. The `hasArray` array is not a `Array`, so it should be `String.array()`.
This is a breaking change. We should not have a spanReference and use it in the existing spanReference.
I think we should not use the `verdaccio` class name.
I think this is the only change that affects TF providers.
This is a little confusing to me. I think it would be better to use a default value for the new values.
This is a bit unrelated to the PR but I'm not sure it's worth it.
I think this should be `ws:\/\/`. The message should be `ws:\:\/\/"` or `debuggerAddress.error('\/')`
I think we can remove this
This is a bit of an unrelated change, but I think it would be better to move the `secondsTimeSinceParent` into `LoadHeaderSufficientlyAheadOfParent` and then use the `LoadHeaderSufficientlyAheadOfParent` directly.
Line is too long. [81/80]
I think we should be more specific here. What do you think?
this is the same code as line 130.
I think this should be GetNFCryptKey instead of GetNFCryptKey.
This is a change in behavior, but I think we should be able to remove the `HiveClient_JNI` from `HiveClient_JNI` and just do `HiveClient_JNI::deleteInstance()` in `HiveClient_JNI::deleteInstance()`
I think this should be `writeConcern` and not `writeConcern` (or `write`)
I think we should keep the `log.ID` here.
I think we should use the `SecurityGroup` constant here
I think we should just return `PublicLink` instead of `fileName`
These changes are unrelated to the PR. Can you please remove them and change the description of the PR? The new column names are only used to match the new column names.
I think this can be simplified to something like `getAll characters` or `getAll characters` (e.g. `getAll characters`)
Do we want to make this a const? It's a const.
This is a bit of an unrelated change. I think it's better to move the `if serviceDirOnHost[0:1] == "." {` check inside the `if serviceDirOnHost[0:1] != "." {` check.
Is this a typo?
I think this is a bit confusing. I would expect that if we ever try to return an error, we would not have to call `_sanitize_markdown` here.
I think this function can be removed now, since it's used in the `go-homedir` package.
I think we should remove this.
I think this will be more readable if `this.Extensions.ContainsKey("nextMethodName")` is not set.
why remove this?
This should be removed.
This is a breaking change. It's not a problem, but it's a test.
I think this is not needed anymore
this is wrong. You should use `i` instead of `i`
I think this import can be removed.
Maybe we should update the directory for this to be `update_file`?
Could you please change the type from `icmpType` to `dstPort`? It's not clear what the type of `ateg_url` is for.
Why is this removed?
Why is this change necessary?
I think we should keep the old version as well.
I think this should be a separate PR, since it's not a big deal.
This is a breaking change.
I think we should just remove the `#optional` function from `#optional` and `#optional_` in `#optional_`
Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
This is a bit of an unrelated change, but I think it would be better to use `continue -1` instead of `continue -1` as the default.
The `-long` type is a string. Should we be consistent about the other way around?
I think we should not need to fetch the `UnfinishedExecutions` param here. The `UnfinishedExecutions` param is not used in the `fetchFlowByExecId` method.
This is a bit of a hack, but I'm not sure if the ` Unexpected` field is needed here. I think it's a good idea to just use ` Unexpected` instead of ` Unexpected` in the `config` section.
Please don't use relative imports.
This should be `==`
why not use `Query` directly?
I think we can just remove this and use `c.dirtyBcache` directly.
This is a bit of an unrelated change, but I think it's better to just return the error and then use `nil` here.
why not just `SECTION("Rxn Smart Processing with Dative Bond")`?
I think we should return `false` here.
Why is this needed?
I think we should add a new field to the `make codegen` function.
I think we should add a new column to ensure we are not breaking existing clients.
This is a little weird. I think we should just pass the `ChainReader` to the `TipSet` and pass the `ctx` to the `ChainTS` directly.
I think this should be a nil check.
why is `ERROR` needed?
This is a bug fix. The only reason we're removing the `specifying` is to not have a public subnets in the constructor.
I don't think we should do this.
import speech is not used
@jridgewell Is this change intentional? It looks like we are adding new properties to the end of the properties that we are using.
So, if I have a `MinTaskID` that is not used, then I think it should be removed.
I think we should change the default to `ecs-nvidia`.
This is a change in behavior, but if we are going to change the tests, we should probably just make the `if len(remote.Deny till tilly, 0)`
Should this be called `DefaultCopy_dsts`?
@mfojtik why change to 0077?
I think we should keep the `ByteCount` here.
I'm not sure this is the right fix. It is not possible to just check for `spell_id` before calling `http.prototype.start()`
I think we should add a note about this in the future.
FileSystemTarget is imported but not used
This is a bit of an overkill, but I think it would be better if we just use `thread_id_t` instead of `int32_t` here.
I'm not sure this is the right fix.
I think this check should be moved to the `Dagster_HOME` package.
This should be a separate commit.
I think this should be `values()`.
I think this should be a public function.
I think we should also mention that the key does not exists in `ecdsa.PrivateKey` and `key` are not available.
This should be `PackageEntity`.
You can use `string=True` here.
Wouldn't it be better to set this in `Stat`?
This test was not working as it was just me, I removed it.
I don't think this is the right place to put this.
I'm not sure if this is the right place to put this in the `unless` section?
I think this is not needed.
I think you can remove the `==` and `==` here. The `==` is not needed.
Why are we adding this here?
This is a bit odd, why do we need to check `Ordering::Random`?
Should we log it?
This is a bug fix. The previous code was not able to run the test twice.
This should be done in the constructor.
Shouldn't this be `maxResults`?
I think this is the only place where we need this file.
I think this should be `except Exception` instead of `except Exception` (and in the other files that you've got `except Exception` in the `except`). The `except Exception` is the only thing that is used is to avoid the `pytest.importors` exception.
`urlencoded` is a string, not a string.
This flag is not really used, right?
I think this is a change in behavior, but I think it's better to use `testTransferPb` instead of `testTransfer.Proto`
Why are these public?
This is a debug message. It should be `log.error`
I'm not sure if this should be `--keep-prefix` or `--keep-ts-json`?
I think we should return an error here instead of returning an error.
The `Register._UNSET_NAMESPACE` suffix is a bit confusing. How about `Register._UNSET_NAMESPACE`?
I think we should be more specific here. "Error iterating over item with "+
I think we can remove `minify` from the list here.
provider has nothing to do with this PR.
I think this is the only change that affects the test.
Can you add a new line after this one? It's not a big deal, but it's a bit odd.
This file is not used anymore.
I think this should be changed to `type: new`.
I think this should be a constant?
I think this should be `getAuthenticationPublicKeyFile()`. The `PublicKey` property is not available in the `DeleteDelete` table.
Can we add a `omitempty` field to the `Notes`?
nit: the `to` is unnecessary here as `t` will never be null.
This namespace is not used anymore.
I think we should use the constant here
I think this is the only place where we use `linter.set_bool` in this file.
This is a bit of an unrelated to the PR, but I think it would be better to use the constructor parameter here, rather than the constructor parameter.
"If the provided key is none"
I think this is a bit too much. I would just put it in the `if` statement.
I think we should be using `entry['release_msid']` instead of `entry['release_msid']` here.
I think this should be in the main main package.
I think this should be a warning instead of an error.
I think we should use `font-size: 3.25rem` instead of `font-size: .7em`
I think we should be using `pytest.util.constants` instead of `retrying` here. `pytest.util.constants` is already imported in jinja2 and so we should be able to remove it from `pytest.util.constants` in `pytest.util.constants`
Isn't `Vector ArrayList` always true?
I think this is not correct. The first condition is `io.prestosql.spi.util.StringUtils.add(mainBitmap.getConfig(),true));`
Is this the only version of the copyright year that we need to support 2.0?
I think we should get the value from `getBitMask` to `boolean` instead of `boolean` here.
I think we should use `DbProvider.AsReadOnly` here. The ReadOnlyTxProcessingEnv is already a pointer so we can use that instead of a pointer.
Please remove the extra empty line here.
I think it would be better to use something like `blob.header.OpenBucket`, and then use that in the header file.
I think this should be `this.initCodeTransformer = initCodeTransformer`
Is this a typo?
This is a bit of a hack, but I'm not sure what the best way to fix this is. I'm not sure what the best way to fix this is, but it's probably fine.
I think we should return `summary` instead of `true` here.
I don't think this class is needed.
I think we should be able to use `reasonDomainVerified` here and then use `const challenges`.
This is a change in behaviour.
I think it would be better to move the `struct environment` check to the top of the file.
why is this false?
I think it's better to move the `if (dataManifests != null) {` check into the `if (dataManifests != null) {` block.
I think it would be better to use GlobalHitsThresholdChecker instead of using the new parameter.
I think we should import antrea from the `agent` package.
Shouldn't this be `ActivitySource`?
I think we should use the correct price here.
This is not a big deal, but I think it's not a big deal. The `process` is not a `TestRunAbort`.
Shouldn't we use `Exception` here? `Error occurred` is a very generic message.
should we have a theme themes for this?
I think this is a leftover from debugging?
@matt-gardner How do you feel about this change? The `netmask` is already `**netmask**`, so it's not clear why we need to change the `**netmask**` to `**netmask**`
Please remove this and use `export const`
I think you can just use `verbose` instead of `_setting` here. Also, you can use `verbose` instead of `_setting` for the other case. Also, you can use `_setting` instead of `_setting` for the other case. Also, you can use `_setting` to get the value of `_setting` and `_setting` to get the value of `_setting` if you want.
This is the only place where we can use this file.
This is a leftover.
Why is the `exit` needed here?
A Main actor must be a single Env or a single actor.
Why are we using a ZK_READ_PERM here?
This is a change in behavior, right?
Please remove this TODO.
I think we should return `false` here.
I'm not sure why this is needed. It is used in the other places, so I'm not sure it is worth it.
I think we should be able to use non_iterating_code here.
This test is failing on mobile too.
Why is this type needed?
Please add the new config name to the docs.
This test is failing because of the `Test`
I think we should change the name of the variable to `q`
Why is this removed?
This test was not testing the right value.
I think it would be better to have a test for this package.
I think this should be `if not os.path.join(inc_dir)`, otherwise the `compile_opts` will be used in the next `if` condition.
I think we should be using the `disolactSegmHead` option here.
This is a bug fix. The `driver` is not used anymore.
I think it would be better to use `Type::getTypeFromTree` instead of `Type::getTypeFromTree`
I think we can just inline the method `getImageNode` and use the method `getImageNode` directly.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
should we add a doc here?
This is a bit of an unrelated change, but I'm not sure what the best way to do it is.
Rails/DynamicFindBy: Use find_by instead of dynamic find_by_blank.
Is this needed?
This should be removed.
I think we should add a note here that value is a dict, not a dict.
Use `std::vector<VertexID> result` instead.
I think this should be `secrets-ssm-environment-variables`
I think it would be better to use the same name for the test, `protobuf` is a bit confusing.
This should be done in dialog.showAndWait()
I think we should also update the `pytest-scikit-learn` version to use `pytest-scikit-learn`
Why is this removed?
I think we should keep this test because it's not actually testing anything. It's not a big deal either way.
I think it would be better to use `capabilities._googlesitekitUserData?.permissions || {},` here instead of introducing a new global.
This is a bit of an overkill, but I think it's better to have a method that returns a `log.capacity` that returns a `capacity` object.
` Flags defined in those class must be used with caution, and strictly reserved to experimental`
I think we should use `NOT_out_out` instead of `NOT_out_out`
Maybe we should add a `Imported key for account %s: \"%s\""` to the key and then we can add it to the key.
This should be `\r\n`
I think we can remove this function and just call it directly.
Metrics/LineLength: Line is too long. [122/120]
This is a change in behavior, but I think it's not a good idea to add a check here.
I think we should just remove the remoteService altogether, because it's not part of the remoteConfigmap
I think this is the one we want to get away with the `Sinatra::Base` controller, so we can remove this one.
I'm not sure why this is necessary.
I think this is a bit of overkill. I think it should be eslint-disable jsdoc/description-complete-sentence. What do you think?
This should be `return "", errs.NextWithContext(values) == 0`
why not use the existing version ofAddressDetails?
Can we just return `nil` here?
I think we should use the same value for the null value.
I think this should be done in the `if acc == nil` block
Please don't add trailing whitespaces.
This is not the right place to put this code. The `recipe_id` is not the correct way to do this.
This line is not necessary.
Why not just catching the exception?
should we make sure the controller gets updated?
I'm not sure this is the right way to do this. The `CacheChange_t` is still in the `CacheChange_t`, but it's not in the `CacheChange_t` itself.
I think we should also check if the `abortReason` is set.
I think this needs to be removed.
Why is this needed?
This is a change in behavior, but I think it's worth it to check if the callable is not set.
maybe add a `referral_code` to the end of the string?
Is there a reason why we can't just use `DefaultHttpContext` here?
I think we can remove the assertion above as it is now no longer used.
I think it would be better to have a `lru-cache-decorating-method` method that returns a `MessageDefinition` object.
I think we can just use album_msid here.
Add the return value to the `i`?
Can we just use `isHiddenWithCSS` here?
I think we should remove this.
I think we should use `httphttp.class` here.
I think we should be using the new API here.
This is a little odd. I think we should have a test for that.
why do we need to change this?
I think this is a leftover?
This is not needed.
I think this should be `error`
This is a change in behaviour.
I think this is the only place where we want this.
I think we should use ConcurrentDictionary<string, string> here.
I think we should be able to use `osFamilyStr` here.
I think this is a bug fix. The only thing we're using is that the queue is not a valid queue.
I think this should be `if (config.Endpoint != nil && req.Config.Endpoint != nil && req.config.Endpoint != nil && req.config.Endpoint != nil && req.config.Endpoint != nil && req.config.Endpoint != nil && req.config.Endpoint != nil && req.config.Endpoint != nil && req.config.Endpoint != nil && req.config.Endpoint != nil && req.config.Endpoint != nil && req.config.Endpoint != nil && req.config.Endpoint != nil && req.config.Endpoint != nil && req.config.Endpoint != nil &&
This test is failing because `createElement` is not an error.
This is a bit weird. I think it's better to use `on Linux` instead of `onOS`.
I think we should use ExpectedCondition.Expected Condition.contains(boolean) instead.
Can you add a note that this will be set in the database? I think it's better to have a default, and then just call it `deviceID`.
This is a change in behavior, but I think it's better to use a `TimeName` instead of a `TimeName` here.
I think this is a BC break.
This should be done in a separate PR.
Please update the docs to reflect the new name
I think this should be OSError, since it's a bit of an error.
I think this was a bug, we should not log it.
This is a breaking change. It's not a problem, but it's a `\` for the next time.
progress is not a property anymore?
This method is used in a lot of places. Can we remove it?
This is a wrong value. It should be `waves/*.f`.
why is this removed?
Why did you change the public API? Is it really a public API?
I don't think this is needed
I think we should make this configurable.
This is not the same as the child child if the node is empty.
This is a breaking change. I think it's better to have a default implementation of this method that does the same thing.
I think it would be better to add a `padding: 0` check here, and then use that in the `add` method.
I think this is the only place where we use this property. I think it should be `final` and `final` as well.
I think this is a leftover from the previous PR. I think we should probably add a TODO to remove this.
This import is unused.
Line is too long. [86/80]
AccountState is a lot of work, we could just use the `Account` state here.
I think this should be done in `monkeybase.js` and not in `approvals_notice? approval`.
I think we should be consistent and use the default value of "tracer" instead of "JSON", and maybe "saleor/tracer"?
I think we can remove this and use `icon` in `getEntity()`.
I think we should just say `false` instead of `true`
This is a bug fix.
This is a change in behavior, but the old code was not working.
This is a breaking change.
why is this being changed?
I think we should use the `allectorSize` helper here.
I think this is fine, but I don't see any new tests using this?
I think this should be `dev_name`
This is a bug fix.
I think this should be `allow_self`
I think this should be `@Nullable`.
I think this should be `-c`
What is the purpose of this? Is it to run a `main` instance?
I think we should use `keys` here.
The `MapRouter` is already defined in the `Router` method.
Could you add a `do_action( 'neve_add_settings_to_hfg_rows', ...)` line before this line?
I think this should be `HttpProtocols.Http2` instead of `egotiation` right?
I think this should be a public method.
I think we can import `blank` and `dev` here.
I think this should return `null` instead of `Optional.empty()`
These lines are not needed anymore.
I think this is a good idea. It's not a good idea to have a test that checks if the error is not present.
Please use `if (No value)` instead of adding a new one.
I think we should use `default=None` here.
I think it would be better to use `describe(attribute)` here, rather than `description = description.to_s`
This test was not testing "testify/testify/testify" but now it is not testing "testify/testify"
`&:in_progress?` is a pointer, so this can be simplified
I think we can remove the ` Flag` variable from the `tls_` prefix.
I think it would be better to use an explicit `assert` here, and then use `assert` to get the default value.
I think we should be able to use `pathlib` and `encoding_arg` here and in `install_name`.
Can you move the import of `recovery` to `storage`?
I'm not sure if this interface is needed. It is an anti-pattern and we should be able to close the done channel directly.
This is a change in behavior, but I'm not sure what the best way to do this is.
I think we should remove this file as it's not used anywhere
I think this should be done in the `onCreate` method
This will not work. It will only happen if `blobExists` is true.
This is a change in behaviour.
This should be `toRange`.
We should not need to do this. If we do this, we should do it in a separate PR.
The CAST defined here are provided as a list. Do you mean that we can't use it in the code?
I think this import is unnecessary
why is this needed?
I think we should use the `client.io` package here.
I think this should be `&ptr`
@bparees this should be `["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["["
This should be `mset.mirror == nil` and the `mset.mirror.msgs` check.
I'm not sure this is the right place to put this. It's a bit of an unfinished error, but it's not a big deal.
I think this should be removed.
Why are these lines removed?
This is a bug, we don't need to add the version in the marker.
I think it would be better to check for len(cnb) > 0 and then check it in the next line.
I think we should make this `String` to avoid having to pass `null` to the interface.
This is a bit of a hack, but I think it would be better if we moved the go into `.halt` and then go into `.manage()` and then go into `.halt` and then go into `.halt` and `.halt` and `.halt` and `.halt` and `.halt` and `.halt` and `.halt` and `.halt` and `.halt` and `.halt` and `.halt` and `.halt` and `.halt` and `
This is a wrong change. The procComponents should be proc>1, and the procComponents should be proc>2
I don't think this is needed
I think this should be `continue` and not `str`.
This is a bit of an unrelated but I think it would be better to have a method that returns a prefix that returns a prefix.
I think we should use `import io.3:` here and in other places where we use it.
This is a bit of an unrelated change, but I'm not sure what the difference is here. I think it would be better to have a `stopped` be a `strconv` and then use that in the loop, and then use that in the loop.
I think it would be better to use a different name, like `future_chainAddEdges`.
I think this should be grouped with the other stdlib imports.
should we use the `ssm-parameter-store` constant?
OtlpMetricsExporter() is called in other places, can we move this to OtlpMetricsExporter()?
This is a little unrelated to the PR but I'm not sure it's worth it.
I think we can remove this, we don't need the `pe_defaults` suffix anymore.
`dispatcher.afterClickOn` is not really needed anymore, right?
Is this change necessary? if it's an `else` block, it seems like it should be the same as the `else` block?
I think we can remove this interface.
Why is this being a `multi` here? I think it should be a `cls.interfaces[interface.datatype] = interface` and then we should be able to just use the `datatype` here.
Do we need this? We already have the `ForceCleanupOnError` in the `error`
This is a breaking change, but it's not a problem, but it's a real problem.
I think we should remove the "manaleechchance" part.
I think we should keep the old behavior as allowedOrigins
Please revert this file.
I think we should keep the `ZipkinActivityConversionExtensions` as it is.
I think this is a good idea. It's not possible to get the correct `settings.getResultType() == CameraResultType.URI` check.
i don't think we should add these to the list as well
I'm not sure if this is the right place to put this. I'm not sure if this is the right place to put this. I'm not sure if it's worth it, but if it's worth it, maybe we could just call it `mail_to`?
I think it would be better to use `null` here instead of `null`
can we test that the `can safely` expectation is not reset?
This is a bit weird. I think it's better to use `github.com/aws/amazon-ecs-agent/agent/asm/factory` instead of `FSFS` and `FSFS` in the future.
I think this is a bit too broad.
Can you add a trailing comma to make sure that this is not a single line?
This is a breaking change. It's not a big deal.
Standards: Please add a space after commas.
I think it would be better to have a method that returns the same object as the one passed in the constructor.
Is this change necessary?
I think this should be `!network.port`
I think this is the wrong place to fix this.
I think this is the only place where we can get rid of the `restore` thread.
Why is this change necessary?
I think we should just remove this?
This is a regression.
This is a bit of a weird change. I think it would be better if we just throw an exception here instead of throwing an exception.
This is a breaking API change. If we want to cast inputs, we should just cast inputs.
Is this the correct check for `object_based_api`?
I think we should keep the version as the default.
This is a bug fix. `Enum<T>` is now unused.
I think this should be `adios2::arg("debugMode")`
This interface is used by ParamView, not ParamView.
I think we should keep the "onevent" import.
I think we can just do `p.pingConfig.Interval < p.pingConfig.Timeout`
I think this is a leftover from debugging?
I think we should be able to just use `non_pending.map(&: [])` here, since the `pending` method is already called in the `on_approver_removal` method.
I think we should add a `TODO` here to make sure we don't have any other possible values for the same reason.
This is a change in behavior, but the `SIGKILL` is still used in the `SIGINT` function.
This should be done in `lib/mobile`
I think it would be better to use a more descriptive name like `_param_list_in_query` or something.
I think this is a bug fix.
I think this namespace can be removed now, since the namespace is already in the `using System`
This is a bit of an overkill. I think it would be better to have a default value of `poS` that is set to true.
Line is too long. [82/80]
I think this is not needed anymore?
I think this file is redundant
I'm not sure if this is the right place to put this. If the style is used, it will be used in the `<%= f.label :active, Y>` tag. If it is used, then it will be used in the `<%= f.label :active, Y>` tag. If it is used, then it will be hard coded to the `<%= f.label :active, Y>` tag, it will be hard coded to the `<%= f.label :active, Y>` tag.
I think this can be simplified to reloadCache(..) as its done in the next commit.
I think this is not needed.
Maybe `fname = os.path.abspath(__file__)`?
Extra empty line detected at method body end.
I think we should remove this
I think you can just do `if win_id is None and count and count!"`
I think we can remove this function now that we don't have a function.
This is a bit of a hack, but I think it would be better to use `str` instead of `str` here.
Why not just mocker?
I think we should just remove this line.
This is not really correct. I think we should just pass in the data table and use the table name.
I think we should be able to use `!== null` here.
why not just Params?
Is this needed?
I think this test should be moved to the `*` section.
This is a bit of a hack, but I think it would be better to move this to the `execution exec_id=?"` class.
I think this should be `iconImageSource` instead of `ico`
This exception is not needed.
I think this should be `Optional[Tuple[str]]`? The names are the same, so I would just call it `Optional[Tuple[str]]`.
I think this should default to `mapperRICS_MODE_COLUMN_CONF_PREFIX` and not `mapperRICS_MODE_COLUMN_CONF_PREFIX`.
I think this is the only change in this PR.
Why do we need these imports?
I think we should just remove this if-statement.
@jridgewell Is this a breaking change? It seems like it should be a test that was not related to the `CertificateSpec`.
I think we should be able to remove this `if` statement.
This is the only place where we need to check for the `status` value.
can we use `[1]` instead of `[2]`?
Is this a bug fix?
It's not a good idea to use `&&` here.
I think we can use `go-filecoin-files.gogofs` here.
This file is not used anywhere.
`java.sun` is a list of imports. Please use `java.util.sun.java` instead.
This is a bug fix. You can't do this. You can do `OnStart` directly in the `startSpan` function.
We should probably add a note about the other `UpdateSnapshotInfo`s here.
@jcotela is there a reason why you removed the DefaultLogMessageRateLimit check?
I think we should use `assert.Equal(t, "CannotPullContainerError", metadata.Error.(api.NamedError).PullImage(store.Any()).PullPullImage(store.Any()))` instead of hardcoding the error message.
Please add the `Apdesestyle` option. Overseas is a string, so we can add it to the other key name.
Why is this no longer needed?
Please remove the space between if and opening parenthesis.
This is a pretty big change. The `overflow` method is used to pass the value to the api.marketContract.
This is a required setting, not a valid value.
Please keep the import of the `pcapdnet` imports sorted
This is a no-op, right?
Can we move this to the `WorkloadIdentityStatus` package?
This is a very specific error condition. I think it should be a warning.
This line is not necessary.
@atm-quentin can you confirm that this is the "filters" part of the code?
I think this is a bit of an unrelated change, but I'm not sure what the best way to do this is. I'm not sure if it's better to have a `config` in the `test` module, and then use `config.test` in the `test` module. I'm not sure if it's better to have a `config` module in the `test` module.
Wouldn't `child.reverse()` work here?
I think we should add a factory method to the `goerli` interface.
@deads2k do we want to add this to the `oc` list?
This test is not correct. You should use the `after_zero_value_transfer` method to get the stateDb from the stateDb.
this is not needed anymore right?
this test was failing because of the verbose argument
I think this is a bit confusing, since it's a `interpreters` and it's a `interpreters`?
This assert is not needed.
I think we should change the return type here to `>`
I think this should be `get_meta` and not `meta` (and `get_meta` is used for the `meta`).
I think we should be able to get the `dagRequest` directly from the `SchemaInfer` object.
I think it would be better to have a '0' property, as the properties is not defined.
I think this method can be removed and the `@unresolved_targets[t_name] = target.name` method can be removed.
This is a change in behavior, but I'm not sure why it was here.
I think this should return `None` instead of `None`
Is it possible to just do this.passesRestrictions = this.passesRestrictions.bind(this)
I think this is a breaking change.
this is a bit weird, why is there a possibility that the value is `render`?
I think this is the only change in this file.
This one is a bit of a hack, but I think it's a good idea to use the same name as the other one.
This is a bit of a hack, but I don't think we should be using this here.
why did this change?
I'm not sure if this is the right way to do this. I'm not sure if it is the right way to do this. I'm not sure if it is the right way to do this. I'm not sure if it is the right way to do this, but I'm not sure if it is worth it. I'm not sure if it is worth it. I'm not sure if it is worth it. I'm not sure if it is worth it.
I think it might be better to move this method to the `ConcurrentReference` method, and then call `ConcurrentReference` from the `ConcurrentReference` method. It would be better to have the method return `List<Long> ancestorIds(table.snapshot(toSnapshotId), null)` and then call `ConcurrentReference` on its own line.
I think it would be better to use `isset($functionConfig['helpText']))` here.
Is this change necessary? The `output_stream` variable is used in the `lib/output` package.
This should be `:conf`.
I think this is a leftover
This is a breaking change. It's not a problem, but it's a breaking change.
I think this class should be removed. It's only used in tests.
Please add a space after the comma.
I think this is a bit confusing. It's not a blocker. It's a bit odd to have a memQuotaRatio in the code.
why is this removed?
Why do we need to do this? What happens if the value is 1?
I think we should have this as a type of the `dto_linux_type` function.
I think this should be removed.
I think we can just use `Platform string `yaml` here and use `platform` instead.
I think this is a leftover from another PR, but I'm not sure it's worth it to have an api/external/or api/external/or api.
I think we should still keep the `ac.SigningKeys` in the `if` block.
I think this sleep is not correct. It is not a big deal, but it seems a bit odd to use a sleep.
I think it would be better to use a strict comparison here, as it is used in the `if` statement.
`from boto.compat import json, six, and six` is not a private variable.
I think this is a breaking change. The only thing I'd expect is to have a `JSON` property that is used to handle the case where the property is not set.
I think we should use `s.file` here.
Is this a boolean?
This is a change in behavior, but I'm not sure why we need to change this?
I think we should use `assert.Equal` here, as it's a bit confusing.
Is this a typo?
This is a breaking change. It's not a problem, but it's a bit of a hack.
I think this is a good idea. The only thing I'm not sure is that if we have a watchkey in the directory, we should not have a connection that is not a connection.
This is a leftover, it's not a good use case. It's a little strange to use `use` for the namespace.
"the" is a little confusing, why not use "the"?
Can we add a test for this?
what if we called this `ZeroGasPrice` instead of `ZeroGasPrice`?
This should be `const`
I think we should add this to the `init` method above, to make sure we don't have to add it to the `init` method.
I think we should move this notification to the `config` table.
This is the fix.
This should be done in a separate PR.
I think this is a bit confusing. I would just put the `_register` in the `if` statement above the `if` and remove the `_register` function.
Does this file still need to be a package?
I think we should just remove this line. We don't have any other code that uses `*` in the `*` but it's not a big deal.
I think this is a bug fix. It should be in the constructor.
I think we should be able to remove this method and just use the body declarations.
Please use `StringUtils.isNotEmpty`
I think this is a little confusing. I think it would be better to have a default method that does the same thing.
I think `# `attr_value['string'] is not None` probably not required as `attr_value['string'] == value` is probably better.
I think this is a bit of a hack, but it's not a good idea to add it to the `addons` list.
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.
I think this is the only place where we need to change the API.
you can use `Symbol` instead of `Symbol`
This should be `if (lock.unlock();` and then `else if` in the `if` blocks.
Can we use `[32]` here?
This is a breaking change.
I think this is a bit confusing. `this.get('store')` will return the same value as `roles` in the `roles` list. `query` will return the same value as `roles` in the `roles` list.
I think we should land the `role` variable here and not the `banner` variable.
I think this is the only place where we set the null value. If the null value is null, then we should not set the null value.
What's the difference between `__iter__` and `__iter__`?
why is this import changed?
I think this message should be "token contains an invalid number of segments", so that it's not a valid number of segments.
Redundant curly braces around a hash parameter.<br>Space inside { missing.<br>Space inside } missing.
We should probably add a `iceberg` class here, so that we can get the user-passing behavior.
This is causing the MacOS build to fail.
I think this is a change in behavior, but the `AWS` variable is not actually used.
I think this is a good change. It should be a separate commit.
Is there a reason for not to use compileOptions directly?
I think this is the right place to catch here. The `mdmLoginServers` is not null, it will never be null. The `mdmLoginServers` is not null, so we should catch it in the `HostClient` method.
This file is not used anymore
I think this should be `debug` instead of `info`.
You can remove this line.
I think we should also set the AWS tables for the dependency. Also, I think we should set the key to `AWS_BOUND_SA_SIGNING_KEY` and not have a hardcoded value.
I think this is a leftover from the other PR.
This is a wrong check. The nan_key should be set to zero.
I think we should just ignore the `ignoreUndefined` error.
I think we should not be catching anything here, as it is not a logout.
I think this is the right place to put this.
I'm not sure this is the right fix. I'm not sure if it is still necessary to do this.
Can we move this to a separate method?
@wachterjohannes Shouldn't this be the first place to remove this?
I think we can remove the `docstore` tag now.
I think we should be able to use `Report` here.
I think we should use `startTime.Now()` instead of `startTime.Unix(1585674086, 1234)`
This seems like a good change. I think we should be using `grc.mfout.printf` instead of `account_out/>\n`.
I think we can remove this method and just use the default `show` method in the database.
This is a test that was not working.
Please remove the second parameter
why not use `import "fmt"`?
This test is not testing the exact same thing as the one in `testing.T`.
I think this is the only change in this file. The H2O_USE_LIBUV could be set to 0. The H2O_USE_LIBUV could be set to 0.
I think this should be `if (!Object.is())`.
This is a bit unrelated to the rest of the PR. I'm not sure what this is doing, but it seems like it should be a separate commit.
Can you add a link to the docs?
This should be `windows` and not `var ExpectedBalances`.
I think this should be a bit more specific. I think the message should be "we can't use the backtrace of the passed error".
Why not just `return createClient(t *testing.T, s *Server, akp nkeys.KeyPair, string)`?
This is a change in behavior, but I think it's better to move this check to the `init()` method.
This should be done in `#Decode`
Why did you remove this?
Does this change anything? I don't see it being used anywhere.
Is it possible to have a `HttpServerErrorStatuses` property in the config file?
I think this should be `/admin/tmp/` and not `/admin/tmp/`
should be null
I think this is not correct. If you're using simple_test, why not just call async_test?
I think this is the default behavior. We should probably just remove it.
this is a bug fix.
Do we need to also test that the controller doesn't exist in the controller?
I think we should use a `@headersKey` here.
This test doesn't have to be longer than the `schemaVersion`, so I removed it.
I'm not sure if this will work for all versions of the version in the same way as the version in the same way.
`return aria == 'aria-hidden';` and `return false;` should be the same as `hasAttribute`
I think we should be more specific here, e.g. `click_button 'for ...``
What is the purpose of this field? I don't see any `_processDataPoisoned` defined anywhere.
This is a bit of an unrelated change, but I'm not sure it's worth it.
I think this should be `{"increasemanaget", ITEM_PARSE_INCREASEMANAGAIN}`
This should be added to the `status` list.
I think we should use `generatePath` here instead of `generatePath`
Why is this needed?
Is this used?
I think we should be able to use `HIVE_MAX_PRECISION_ALLOWED` here.
I think we should just call `UpdateProjectSingleSignOnRequest` here.
should be handled
I think this is the only place where we need to create the repository. It's not the same as the repository.
Does this mean we'll be using the new array instead of the array?
would it be possible to have a test for this? i'm not sure what the best way to test this is. i'm not sure what the best way to test this is, but if it's not, then we should probably have a test for this.
I think we should just use `toLowerCase()` here, since we're already doing the check in the `role` method.
@matt-gardner, I think this is the right fix. The `KeyError` is now `0`
`Nonce` is a bit confusing with the name of the method.
I think we can just remove the secondary check here.
This should be done in `RLockLock` instead of here.
I think we should use `String.format` here.
This is a breaking change. The index index index is not used anymore.
I think we can also add these to the `org.mule.runtime.module.extension.internal.util.StringUtils`
I think this is a good idea. It's not possible to have a StreamConfig, but I don't think it's worth it.
This is a change in behavior, but I think it's better to use a `isTest` instead of a `is`
This should be private.
Just a note, this is the `compression=on` for the sake of consistency.
Metrics/LineLength: Line is too long. [82/80]
This is the only place where we setBackdrops when the item is not null. This is the only place we setBackdrops when the item is null.
Warning is not used anymore.
This is a change in behavior, but I don't think it's a good idea to use a custom string.
This is a bit of an unrelated change, but I'm not sure it's worth it.
Why is this file changed?
I think this should be `results[key]`.
This is a bit of an unrelated change, but I think it would be better to have a separate PR for this.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
What if we just use `acceptResponseError` here?
`library.yaml` is not used in this test, please remove it
Why is this change needed?
I think it's better to remove this.
ShouldRetryRetryCheck is called, so we should remove this field from the config.
This is a breaking change. It's not a problem, but it's a service that's not a problem.
This one probably needs to be reverted.
this is the only place where we call `OracleAPI` for the `TestToken` instance.
I think this is a wrong key for the user.
why is this change needed?
Is this used?
shouldn't this be `if value =~ /^(?:.*:`
This is not the right place for this. You should just call `RAMHandler` instead of `capacity`.
Use `set_code` here and in the other places where you use it.
can we remove this if block?
Why remove the `order`?
Please don't add trailing whitespaces.
I think this check can be done in `getKey()` and not in `getKey()`?
`AdoNetExcludedTypes` is a bit confusing, can we just use `Context.Contains` here?
This import should be removed.
If you remove this, you'll need to update the state to remove the state.
Is this needed?
I'm not sure if this is the best way to do it. I'm not sure if it's worth it.
I think we should just remove the `EnableCleanupReplicationTask` call from the cleanup message. We should not be using the `EnableCleanupReplicationTask` when we get the cleanup message.
This is a wrong header.
I think this should be `tolerance.max()`.
I think this can be removed now, right?
then is a mistake, can you remove the `.then` here?
Is this going to be true for `IntegrationName`?
I think we should keep this property as `isMonotonicValue`
nit: I think we can remove this
This is the only place where we use `ChaosImpl` in this file. I think we should just remove it.
This should be `DEFAULT_DEFAULT_TO_pipeline`.
this is not needed anymore
I think this is not the right place for this.
This is not the right place to put the `telemetryConfig.FilePath` flag in the `config` package.
I think this is the only line that was removed.
I think we should be able to remove the `pubsub` prefix from the package.
I think we should use `manifest.json_id` here.
Why is this removed?
I think this is the only place where we need to call `defer` on the error.
This is a wrong check. You should use the `unique::address_v6` constant.
I think we should be able to delete the file directly.
This test is failing because `CMAKE_SOURCE_DIR` is set to `True` in the test.
This is the only place where we use `big.NewInt` in the code.
I think we should remove this field.
This should be `errNotEnabled`, not `errNotEnabled`.
If we're going to be using the `connect_timeout` value, we should probably add a check to make sure we don't have any other values.
I think this is not a typo.
I think this should be !!this[kIsMaster]
I think we should use the constant here, as it's a bit confusing.
I think this should be `Long=Long`
I think we should use `flux` instead of `flux`.
I don't think this is right. We should be checking if `len` is `0` and if it is `true`, then we should check if `len` is `0`.
`TextView` is a property name, not a property.
This is the only place where we need to do this.
I think we should remove this one too.
This function is used to pass the `Reader` parameter from `NamespacedName`. I think it should be `Reader` as well.
This should be done in the `#ifdef OPENSSL_mangling_epilogue` block.
Is this needed?
This is a bit of an unrelated change, but I'm not sure what the right thing to do is. I'm not sure what the right answer is, but I'm not sure.
This is a bit of a hack, but I think it's better to have it in the `spec.js` file.
This should be `handleSingle`
Shouldn't this be `String.empty()`?
This should be `_product_edia`.
I think we should be able to get rid of this `if` block. The `PodExist` is not the same as the `PodExist` key.
I think this is still necessary to catch exception exception, since it is now an exception.
I think the logic here is not correct. The `q items` is not the same as `return` in the switch statement. The `return` is the same as `return` in the switch statement.
Shouldn't we use `n.equals` here?
Is it worth adding a new filter for this new filter?
why is this change necessary?
I think this needs to be removed.
I think we should change this to be a constant in the `const`
Is this needed?
@nmittler - I think we should use `System.Collections.Generic` instead of `new System.Collections.Generic` as the default.
I think it's better to move this to `TwitterController`
I think this is not needed, right?
This should be a separate import, not a part of the PR
I think we can remove this. We don't want to support the `julia` in the future.
I think we should be able to remove the `azurekeyvault` parameter from the `Status` package. We can remove the `Status` parameter from the `azurekeyvault` package.
This is a breaking change, but I think it's a good idea to change the name of the parameter to `sessionStorage`.
I think we should be able to remove the `strsignal` here.
This is a good idea. It's not a good idea to use earliest.BID here.
`urlencoded` is a string, not a string.
This should be `11811`
I think we should move this to the `graph` module.
I think this is a bit of an unrelated change, but I think it would be better to move the import of the `apimachinery/api/api/api` package to the `api/api` package.
This is a good idea. I think we should log the error message and not the error message. The caller can see the error message.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
`localConnection.type` is the correct type of `OUTPUT_VALUE` to avoid the correct type of `localConnection.type`
I think this TODO is still required.
The same for the other tests.
`$CanLoadFromBin(filename)` can be removed?
This change is not needed. `err.(*exec.ExitError)` will always be nil.
> ... bool [] (cpp2::ExecResp&& resp) [] (cpp2::ExecResp& resp) [] (cpp2::igoSpace) [] (cpp2::igoSpace) { ... } return ... }
Shouldn't this be in the core?
I think this should be `if util.IsPaused(cluster, awsCluster)`.
Please remove the service
I think we should not change this method. We should not change the instanceDir to `this.instanceDir = instanceDir.toAbsolutePath();`
I think this should be `localFieldPathType.schema`
I think we should use `unless concat_ws` here, since concat_ws isn't a concat, so we can't use it.
I think this is a good change.
Probably a space missing after the comma.
I think we should use `GetRawDiff` here instead of `GetRawDiff` for the repo name.
I don't think we need to do this. The `NET1` if `NET7` is `1` and `2` if `NET7` is `1`.
I think this constant should be private?
I think we can remove this `cert.URIs` case. We can remove the `case` statement.
This should be a separate commit
I don't think you need to add `mhtml` here, you can just use `download_path_suggestion`
I think we should make it a default value, not a hard-coded value.
This is a bit weird. I think we should just do `CPlight.secret_key = app.config.secret_key_base` and then do `CPlight.secret_key = app.config.secret_key_base` in the `else` branch. The `else` branch is not needed here, but if it is, then we should just do `CPlight.secret_key = app.config.secret_key_base`
This should be done in a separate PR, but I'm not sure if it's worth it.
I think we should add a `RetryableWriteError` call here to make sure the error is not returned.
I think we should use `default` here.
We should change the description of the whole thing to be how to usie
`children.ref` is not a backing node.
This can be removed.
I think we should just set the default to `18.04` here.
I'm not sure why you did this. The first `stdint.h` was used to avoid the CVVVV2 version.
This is a breaking change.
I think we should add the `dependent:completer` here
@mmaxim this is the place where we use the `api-version` version in the future
This is a bit of an unrelated change. The `definePropel` is a `yarn` setting, so we should be able to use the default value.
I think we should use `stringstring` here and not `stringstring` as the default.
Can we use `kind` instead of `role`?
I think we should remove the `recordLink` parameter from the `OAI` class.
Extra empty line detected at block body beginning.
This is a breaking change.
This is a bit of a hack, but I'm not sure how to test this.
I think this is a leftover from the previous PR.
I think this is a leftover.
This change is not related to this PR, but I think it is worth it to remove the change in this PR.
Line is too long. [83/80]
You can use `isinstance` here
You can use `lib/docus/core/lib/babel/preset` instead of `lib/docus/core/lib/babel/preset`
I think it's better to just call `CherryPick cherrypick` here.
This should be `manager_env_prefix`.
these changes are unrelated to your PR?
I think we can use the `k8s.io` package here.
I think this should be `html.replace(" '', encode string);`
I think this should be `error == null`
if `cfg.model.neck` returns False, then `cfg.model.neck` returns False, so `None` must be undefined
Is this change necessary?
why is it `cxxflags`? I don't see it being used anywhere
(style) line over 80 characters
why change the key fromaccessKeyID toSecretRef?
Should we check if the value is "0" or not?
This spec is a little confusing. I'd suggest to use `date: 'February 19, 2013'`
@mfojtik why change the port-list to23?
I think this is not needed.
I think we should assert that the value is not "seen"
This is a bit confusing, as we are not using the version in migrate() anymore.
I think it would be better to have a `hash_dir` that does the cache folder, and then use it in the `config` package.
I think this is the only change that affects the old version.
this will break existing code
I think this is a bit confusing. I would expect a message to be used instead of an exception.
This is the only place where we need to create a new `getConsumerCall` event.
why is this needed? I thought we already had an explicit `GitHash` field in the `Version` field.
This should be `makeflow.failed(0, 0)`
This is a bit of a hack, but it seems like it would be better to use `expire_time = listen['track_metadata']['additional_info']` instead of `elif`
I'm not sure why this is needed. You can use `!= null` instead of `vnode._dom!=null`
I think this should be a warning instead of a warning.
should be removed
Why remove this?
Rails/InverseOf: Specify an :inverse_of option.
Is there a reason why you changed the listener to be able to use this?
I think we can remove the null check.
This is a bit unrelated to the PR.
I think we should log the error here, otherwise it will log the error.
why is this needed?
I think this is not needed.
This name isn't very descriptive. Maybe something like `foreign_key_value`?
I think it would be better to use `initializeMetricsMetrics` here and in the other methods, like `authenticationPlugin.plugin.getMetricRegistry()`.
I think this is the wrong place for this. The `getRequiredAccountType()` method is called only once, and the `access` method is called when the `if` is not `undefined`.
Can you use the `blockblock` function here instead?
I think this should be done in the `if` block, since it's not written.
why change the name of the test?
I think this can be removed now, since it's not used anywhere.
I think we should use `context` here.
I think we should use `to_print = in_buffer.length` here.
I think this should be `["["["["["["["["["["["["["["[""]"]"]"]"]"]"]"]"]"]"]"]"]"]"]"]"]`
I'm not sure if this is the right place to put this. I'm not sure if this is the right place to put this. I'm not sure if this is the right place to put this. I'm not sure if this is the right place to put this. I'm not sure if this is the right place to put this. I'm not sure if the `_enabled` option is the right place to put this. I'm not sure if the `_path` option is the right place to put this.
this import is not needed. it is already in the `gogo` package
I removed these because they are not used anywhere.
remove empty line
I think this is a little confusing. How about `--allow-pants event`?
I think we can move this to a constant in `approving_official`
This is a breaking change. We should not be using the `<T>` as the default.
This is the only place where we need to check for the error.
This is a change in behavior, but I think it's better to be explicit here.
should we add a `forum` route to the URL?
This check should be `this.member.email || 'NM'`
I think it would be better to set `member-subscription` to `createdAt` and set it to `subscriptions` in the same way we do it for other subscription than we do it for other subscription than just the default.
optional -> debug level
why did you change this?
This is a change in behavior, but it's not a test.
I think this is a leftover statement
I think we should change this to use `ManifestFileDF` instead of `Manifests`
This is a no-op. I think we should be using the node ID here.
I think this should be `var` instead of `variable` as well.
I think it would be better to move this test to the `test_parse_cloudtrail_with_botocore` test.
I think we should add a name here for `dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-dev-
This is a breaking change, right?
This should be `static const`
This test is failing on the test suite.
I'm not sure if this is the right place to put this. It is not the right place to put this in the KOKKOS_IMPL_TURN_OFF_CUDA_HOST_INIT_CHECK. It is the only way I can see this is used in the KOKKOS_IMPL_TURN_OFF_CUDA_HOST_INIT_CHECK. It is the only way I can see it is in the KOKKOS_IMPL_TURN_OFF_CUDA_HOST_INIT_CHECK.
why change this?
I think we should use `===` here.
I think we should keep this as 1 if it's not needed.
This is not used
I think we need to keep the field as the input field and use the new field instead of creating the `fieldId` field.
This check is not needed. In the case of `mp_listener != nullptr` it will be `null` and `onWriterChangeReceivedByAll` will be `false`.
This is a public API. The `URI` is a public API.
I think we should be using the `_testing.ash` package.
I think it would be cleaner to just use `all_defaults = scope.args.kw_defaults if d is not None` here.
I don't think we need to add the `ndeltas` property. The `ndeltas` property is a `int` and we can't be sure that the pending changes were written.
This is a breaking change.
I think we should be able to return an error if the `offset` is not hang. That way we can return an error if the `offset` is not hang.
I think this should be `qunit` and not `npm run`
Why not `Errno::ECONNREFUSED`?
I think this should be `fetch('movie.quote')`
I'm not sure if this is the right place to put the td check here. I'm not sure if it is the right place to put the td check here.
Is this line needed?
I'm not sure if this is the right place to put `_getCheckpointParentDir` here. It's a little confusing. What about just `getCheckpointParentDir`?
Maybe we should add a note that this will be called `UIAInMSWordCheckBox`?
I think we should just call `task.populateGPUEnvironmentVariables()` here.
Can we use `Array.MatchString` here?
I don't see any new conccurent collections or tasks in this PR. Are these `using`s needed?
I think this should be `getBoolean(InputFormatConfig.CASE_SENSITIVE_DEFAULT, configuration.getBoolean(InputFormatConfig.CASE_SENSITIVE_DEFAULT);`
I think this should be `PoolAddEventHandled`.
I think it would be better to use `fn.normalCalls == 0` here, as it is used in the other places where we need to check if the coroutine is not zero.
I think we can just use `4` here.
Should be "Failure Import operations"
I think we should be using the `staging_auth.rb` method here.
This log statement is redundant, it's already there.
I think we should make this `static` and use `static` for the value.
I think this is a bug fix.
Is it possible to use the `String` field instead of the `Key` field?
Same here, this is not needed.
This is a leftover from the previous commit
I think this should be debug. It's important for the user to know the user that they're logged in.
This function is not used anywhere.
`std::unique_lock` is always called when `mutex` is `true`.
I think this should be in a separate PR.
I think this should be `return encode_opnd_int(10, 6, 6, enc, enc_out);`
This is a breaking change. It's not a problem, but it's not a problem.
Datasets. Default is False, so this should be False.
I think we should just pass `TracerProvider` to `TraceProvider` and remove the `TracerProvider` call.
This is a bit of an overkill, but I think it would be better to use `google.golang.org/grpc` here.
I think we can just use `utils.read_file` here.
I think we should use a `defer` here.
This change is not correct. It's not the case anymore. It's the only thing that should be fixed in this PR. The stage is not supported in the `Hash` namespace.
Why did you change this?
I think we should use the `Status` function here.
I think it's better to add an `assert` statement here.
This is the only place where we need to test the server that is already created. It seems like we should be using `WriteAsync` instead of `WriteAsync` as the default.
I'm not sure if this is the right place for this.
This is a breaking change. I think it's better to move it to the `pkg/api/server/server/server/server/server.go` file.
This is the only change that affects TF providers.
I think you can just `return configuration.get_config().get("hadoop", "version", "snakebite")`
Metrics/LineLength: Line is too long. [122/120]
Please remove this
This is not needed. The test is already testing the `glassfish.gmbal` package.
This is not needed since `Faker::Space` is a `Abstractaker::Hostdata` class.
I think we should use the `fileName` variable here.
I think this is a leftover from the previous commit
I think we should add `/all` to the list of paths.
I think this may be a bug. The port may have been created for all platforms.
I think this should be SELECT_COUNT_FORM, not SELECT_COUNT
I think this is not the right place for this. We should probably add a note about how this works.
This is a pretty big change, but I think it's worth it to check for the verbose here.
The result is not set in the constructor. It's not a big deal.
Is it possible to have a `0` in ratio and then do a `0` in ratio?
This is the only place where we call `Mask` on the Mask, but not the IP.
I think we should change `substitute` to `Replacer` here.
I think this is not right. It should be `if js_elem is selected in "focused"`
This should not be changed. The only reason this is the `nil` value is for the `nil` value.
This method should be marked as private
`if focused_tab is not None:`
This should be a private function.
I think this should be a warning instead of a warning.
I think this is the only change in this PR. The only thing I'm not sure if `blockParameters.isPresent()` is the right check. I'm not sure if `blockParameters` is the right check here. I'm not sure if it is the right check here.
What is the issue with `deleteManifests`?
why not use `unless groups.is_a?(Array)`?
can we use the same name for the new name?
This is not correct. The test is passing because `redeem` is not in the `tests.go` file.
this should be alphav1alpha1 as alphav1alpha1
I think we should also add a default value to the pause container.
I think we should be able to use the same `Session` method for the `Class` method.
I think this is a bit confusing. I would have expected it to be a list, but I would have expected it to be a regular list.
Shouldn't this be `contribs`?
I think we should add `options[:log] = { 'console' => level }` to the message instead of adding the options.
Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
I think we should just remove the `sourceforge.pmd` annotation and use `RuleViolationFix` in the `sourceforge.pmd` package.
Please add a blank line between tags and summary for better readability
I'm not sure if this is the right place to put the `h2o_url_compare_hosts` check. The `loc_parsed.host` is a bit confusing. I would have expected the `is_unix_path` check to be a bit more explicit.
This is the only change that affects TF providers.
I'm not sure if this is the best way to disable.
`string|int|string` is a little too generic.
can we use `continue` here?
I think we can remove these now that we have the default value.
why is this changed?
Could you please add `once                   ` to the `Outputs` section above?
Why was this private field removed?
I think we should just remove this test.
I think it would be better to do `assertNotNull` instead of `assertNotNull`
I think this should be `Optional[str]` instead of `target_name` and `name` as the TBH.
I think this should be a list.
without is removed from here
I think we can just do `pipeline_definition_sensor`
I think it would be better to return `None` here, as it is used in the `_ts` check above.
I think it's better to use a `<p>` tag instead of a `<p>` tag.
Can we remove this? It's not used anywhere.
This change is not needed.
I think it would be better to name this function as it is used in the function.
This is the fix.
I think this is not needed anymore. The public method is only called from `RemoveMethodGenerator` which is called from `RemoveMethodGenerator`.
Do we need this?
I think we should move this logic to the `exePolicy` class.
I think we should use the `App` package here.
`pendingRequest.configuration.remoteHost = pendingConfiguration.remoteHost;` is always undefined.
I think this should be a `@SuppressWarnings("unused")`
remove this line
I think we should return `return strstr(cmd, SET_PARAM_CMD)`, otherwise we'll get the same error.
This is a breaking change.
Why is this changed?
I don't think this is needed
Nit: remove empty line
can you change this to "The boxes of a data using quartiles. The `definition` key boxplot definition is the correct type of the BoxWhisker in the data grouped with the new key boxplot definition
This is a change in behavior, but the version version is not set.
In theory this file should be removed.
This is a change in behavior, I think it's better to keep it in one line.
This is wrong. $location->code is a string.
Why are we changing the default value for `2011`?
I think this will break all the other components that use this function.
This should be a group.
I think we should change the constant name to be consistent with the other one
I think we should make this `search_console_error` instead of `Search` to keep the `Search` package private.
I think this is not the right place to put this. `obj:`dataset` is a bit confusing.
I'm not sure if this is the best way to do this. What if we have a user-displayable user that is not the user account?
Why is this needed?
`$galleryItems->clear()` is a clear method.
this is not needed anymore, right?
This should be `<chaResults>`
@lilleyse this is the right place for the `rwa_number` format. I think we should be able to use the `rwa_number` format here.
Does this mean we can't just use the default value?
I think we should use `user_id` instead of `--user` as we do in other places.
Should we be calling this `AvailableBalance`?
I think this should be a separate PR, right?
Why is this change needed?
nit: "The name of the file"
Why does this return IP?
Can you change this to `type='Integer'`?
I think this is a bit confusing. I would have expected the `columnMode` to be the same as `columnSizes.put(fieldId, colStat.getBytesOnDisk());`
I think we should keep the `ins_data_actions` arg above this.
I think this should be linting.
I think this should be `m_DynType`
I think we should keep the old version as well.
I think we can remove this spec now that we're using `setup_dependent_for_deactivation_on`
This method is not used anymore.
I think this is a breaking change.
This can be removed.
why is this removed?
This is a breaking change.
Can we remove `json:"-"`? It's not used anywhere.
Is this test name still valid? It seems to be only valid for `ARN`
I think we should be able to get rid of this check.
I think we should add a check here to ensure that the client is received GetEnvironment rpc
I think this should be `DialogResult = DialogResult.OK`.
This is a little weird, I think it's better to use `--privacy-unrestricted-enabled` instead of `--target-gas-limit`.
This file is not related to your change, but it's not related to your changes, so I'll remove it.
Is it possible to get rid of the key?
This is a bit of an unrelated change, but I think it's better to return a `ctx.Fsync()` function that returns a `ctx.Dir`.
This is wrong. This will only be needed if DR_HOST_NOT_TARGET is set to false.
I think we can just use `v1/bzz` here.
I think we should add `error.details` to `T` before returning `T` instead of `details` here.
Same here, `$access` is always defined.
This is a bit of an unrelated change, but I think it's better to move it to the top of the file.
I think this is a good change. The `<A>` is not really needed. The `<A>` is already being used in the `<A>` so I think it should be removed.
Is this the same as the other one?
I think we should get the value from `getBitMask` to `boolean` instead of `boolean` here.
this is a bit weird, why do you need to use `assert`?
I think we should just remove this and use `NewKeeper(ByteKey)` in the `Neweeper` function.
Please revert this import
why do we need this?
This is a breaking change.
I think we should just remove this function and add a warning in the `conda/core/store/store.py` file. It will be easier to add a new `conda/core/store.py` file to the `conda/core/store.py` file.
I think we should just pass `false` here. We don't want to pass `enableTelemetry` to the end of the method.
I think this should be a `Library<IEnumerable>`
I think you can remove this line. You can just use `glog.getInternetGateways(&in.VPC)`
I think this should be a `Set` instead of a `Set`.
This should be `!Enabling the ref.EnableCallTargetStateByRef`
This needs to be `validation.go`
I'm not sure if this is a good idea. It's a good idea to use the `PBFParser.h` version instead.
Is this a problem that we're not using the key in the same page?
I think this should be a bit more specific.
I think this is not needed.
I think we should move this check to the old `old` package.
This should be a separate PR
I think this is a good idea. The test is not testing the right number of bytes. The test is not the right number of bytes, so it should be the same.
This is a breaking change. We need to make sure that the `MystAddress` is not present in the `Mystystystium` package.
Nit: import order
This will be a breaking change for every device to use a `DeviceAcquirer`
I think this can be `TaskTaskTaskTask{}` since it's nil.
I think this is not the right place to put this. You can just change the `WordWidgetPopularPagesTable` to `WordWidgetPopularPagesTable` and then you can just change the `element` to `WordWidgetPopularPagesTable` and remove the `element` from the extension.
Did you mean to leave the `enode` prefix?
I think we should use `strings.Trim` here.
I think this test is still running on tests because the tests are passing.
This should be error.
This import is unused.
I think this should be a `dict[string]string`
`const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER || Number.MIN_SAFE_INTEGER;`
This is a bit of a hack, but I think it's better to have a method that returns the user's timeout.
This change is not correct. The wlr_xdg_surface *surface should be wlr_xdg_surface *surface.
Suggest using `not existed Pod` instead of `not existed Pod`.
It's not clear to me why we are not using the alarm context context. I would suggest to use `svcDescriber` instead.
Please remove this line.
is this change intended?
This is a change in behavior. This is the only place where we need GetRootNodeForTest() is called.
I think this is a leftover from the PR
I think this is the only place where we want to use the new `nolint` struct.
I think we should move this logic to the `forceUpdateCollection` method.
I'm not sure if this is the right place to put this. The `platform` variable is used to determine if the user is the first argument. The `user` variable is used to determine if the user is the first argument.
This should be `global.googlesitekit.setup.authenticated = response.authenticated;`
I think we should use `pingWaitTime` here.
I think this test should be `kinesalite` because it's not `kinesalite`
I'm not sure if this is the right place to fix this. The `#Copyright` file is now unused.
I think it would be better to have a `maxRetryTimes` method that takes the value as parameter.
signedUserName?
Why not use the `CurrentDomain_ProcessExit` variable?
I think this should be done in the `if len(t.PeerCertificates) > 0 {` block above.
This change is not needed. In the end, it will generate the user's account.
` PutHash` is a bit confusing with `TTLCache`
I think this is a good idea. It should be a separate PR.
shouldn't this be a separate commit?
I think this should be done in `__init__` instead of in the `__init__` list.
I think this might be a bit confusing. I would expect the `PluginInfo` property to be used in the `CircuitBreakerManager` class.
I think this should be `QMetaType.Type.convert(QMetaType.Type.value)`
I think we should be more specific here: > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > >
Do we need to do this? If it's only used in one place, let's remove it.
I'm not sure if this is the right place to do this. If the `i+1` is the right thing to do, then the `i+1` can be removed.
I think this is a leftover?
why is this change needed?
This should be `final`
I think we can remove this method now that we don't have to do anything with it.
Is it possible to have a test for the new functionality?
Why is this False?
Why is this changed?
I think this should be a separate PR
I think this should be `fileName.file`
This is the only place where we have `priv_getTransactionCount` is set. I think we should also add `priv_getTransactionCount` to the `priv` table.
I'm not sure why this is removed. I don't see any use of mem binding in the code.
I think we should remove the `networks/%` here.
why update it?
This is a private function, so I would just remove it.
Why is this a `User-Agent` parameter not a `User-Agent`?
should we add a check that the value is 1.3?
I don't think this is right. We should be able to use the new `JsonProperty` helper method.
This is a change in behavior, but I don't think it's worth it.
can we just use `c.ANNOT_release` here?
Should we just pass the params here?
I think this is the only place where we need to set the claim.Name here.
This is the only #ifdef was removed.
I think this is a good change.
I think this test is not needed anymore.
Is this used?
I think this is the only change in this file.
I think this is a bit too broad.
Is this needed? I don't see any `#WinRM::Connection` changes in this PR.
This is a bit weird. I think it would be better to get the `request` variable from the `get_requests` method.
Is this a bug fix?
why is this needed?
This is a bit weird. I think it would be better to have a `onPreExecute` method that takes a `State` as parameter and then call `onPreExecute` in the constructor.
I'm not sure if this is the right way to test the `RESTRICT_ACCESS` action. I'm not sure if this is the right way to test the user.
This is a bit unrelated to the PR but I think it's better to keep the `onFocus` method in the `onFocus` method.
I'm not sure if we should use `GetConnTrackInterfacer` here.
This should be `SessionId` instead of `model.SessionId`
This is a change in behaviour - it's not a problem, but it's a bug in the code.
Should we also include the package name?
This should be `APPLICATION_ROLES`, otherwise it will be used in the _isApplicationObject() method.
I think we should use `item.data` instead of `entries` here.
This is the only place where we set the GPU size. I think we should be able to set the size in the core.
Please use `computed` instead.
I think we should remove this.
This is a bit of an unrelated change, but I'm not sure what the best way to fix this is.
I think this is a good idea. The package name should be `cstor-volume-grpc`
This is a bit confusing. If the `bad_alloc` method is called from a bad bad, then the `bad_alloc` method will throw an exception. If the `_alloc` method is called from a bad bad, then the `_alloc` method will throw an exception.
What is the miner for doing this?
Can you add a note that this file is not under the `/` directory?
`?number` is a bit confusing, maybe `?number`?
I think we should keep the old name here.
This is a change in behavior, but I'm not sure why it's needed.
This is a change in behavior, but I think it's better to keep the old behavior and just have `buildBinaryFor` return the expected output.
This is a bit of an unrelated change, but I'm not sure what the best way to do this is. I'm not sure what the best way to do this is, but I'm not sure.
This is the fix.
@mjkkirschner I don't think this change is correct.
Shouldn't this be getInstanceId() ?
I think this is not needed anymore.
> trimming rows using TrimRows plugin', () => {
I think this should be `!strcmp(node->data.scalar, "default")`
I think we should be able to remove this in a separate PR.
This should be `@deprecated Class`.
this is the only change in this file, should it be removed?
I think this is a bit confusing. Can we just use the `countlySidebar/updateSelectedMenuItem` instead?
I think we should keep the version as is.
I think you can remove the if above and just do `X_AC_ENABLE_SANITIZER`
This is a good idea. The proto is not available at all. The proto is not available at all.
I don't think this class is needed.
I think we should just return 0 here.
I think we should use the `config` constant here.
I think you can just use `if (exMessage != null && exMessage.startsWith("Data") )`
I think we should keep the old name here.
why not using the existing one?
TODO: we can remove this TODO
I think we can just return `updatedProjectConfig` instead of returning `nil` here. This will make sure we return `nil` in the `updatedProject` and not the `DirectDirect` call.
This field is not used.
why is this being changed?
I think this is a bug fix.
This is a very large number of things that could be done in a different PR. I think it would be better to use a `define INCR_BATCH 25` here instead of a `define DECR_BATCH`
This is a bit of an overkill, but I think it would be better to use a `writer` variable here.
This method is called in a few places, maybe we can move it to a separate file?
This is a breaking change, but I think it's not necessary to have it in the `NEWUSER` namespace.
This if check is needed because `if exp.Target.StressChaos.ContainerName != nil {`
this is a breaking change
I think we can get rid of this line now that we're removing the `getpvc` property from the `volume` property.
This is a bug fix.
what is the difference between `transformer` and `Transformer`?
I think we should use `SelectSubscriptionActivity` here.
Can you add a check that the file is not present in the `check`?
I think this is the only place where we need to do this.
This should be a PODF instead of an LPI2C
Can you add a doc string to this partial so that it can be consistent with the other Prometheus docs?
I think this should be `Intl.DateTimeFormat()`.
I think we can just do `size.String()` instead of `pvc.Name` and `hostpath` to avoid the `sendEventOrIgnore`
This is a breaking change.
This is a breaking change, but I think it's fine to leave it as it was.
I think this is a good change.
I think this should be `Step_text_text` instead of `Step_text` since it's a special value.
I think it would be better to use `endsWith(node instanceof ...)` here instead of `endsWith(node)`.
This property name is not very descriptive. E.g. `ZipExportProcessorOptions` or `ZipExportProcessorOptions`
I think you can remove the `RecreatePipedKeyResponse` function from the context.Context, instead of passing it in.
I think you can remove the `.` prefix here.
Do we want to keep the original count?
This file is not used anymore.
I think we should keep the `cliquet` here.
I'm not sure if this is the right place to put this if statement?
AppliedTo/To/From fields should be set with the other fields, not the other fields.
I think it would be better to add a `@return` statement to the `hide caret` object, and then just call it `hide caret`.
Why not just pass in the `createForm` method?
`acc` is a `dict` in the `_` directory. I think it should be `dict` instead of `dict` here. The `dict` is not a `dict` in `_` and `_` should be in `_`.
I think this is not needed.
why not use 'conf'?
The has cancel method should be called with the callback.
I think we should use `second` here instead of `@first_quiz`.
why not `precompressed.gz`?
I think this is not needed.
I think this should be removed.
I think `@Deprecated` should be removed.
Please include the header header in the `io.h`
I think this is a leftover?
I think we should be able to use 5*1024 here.
This seems like a good candidate for a `masterPivotFacet` class.
I'm not sure if this is the right place to put this. I'm not sure if it is the right place to put it in the `zombie` namespace.
I think we can just mock the botocore, and just mock the other one.
I think this should be a `default_list` instead of a `dict`?
I think this function is a bit confusing. I think it would be better to use `newStreamHandler` and `handle` directly.
double scale and wl_fixed_to_double have the same meaning as float?
I think this is a leftover from debugging?
why not use the name of the property?
I think it's better to not end the starts.
I think you can use `status.status()`, not `status.status()`.
I think we can keep the stats["listens_matched"] / stats["listen_count"] as the default.
why is this needed?
I think we should move this to `pkg/executiongen/java` and `pkg/executiongen/java`
I think we should just copyqr and then copyqr.qsubs
why this change?
This change is not needed. It is only needed for the `outs` variable.
I think we should use a different name here. The `if` statement is not needed.
Why not use the pool pool?
I think we can just use `v4IPNet` here. We can set `v4IPNet` to `nil` if v6IPNet is nil.
I think this is wrong. It should be `details=...`. I think it should be `.is_normal()`.
(style) line over 80 characters
@kingjr I removed this line because it was not related to the PR. I removed it. The only place it was used is in the `CreateSignOnly` and `CreateSignOnly` is used.
This function is used in many places, and it's not used anywhere. I would just call it `return "Weave of " + builddate"`
I think we should use a more descriptive name for this.
I think this is not needed
I think we should just delete the `if`
This variable is unused.
I think we should add a check for the token provided one too.
better to use `puppetdb_client` instead of `puppetdb_client`
This is a bit of a hack, but I think it would be better if you could just raise `_resolve_col` and raise `_resolve_col` if you want to raise the same exception.
The `GrpcHandler.Request` property is used in a few places, so I think it should be removed.
"... if the commit is unknown"
This is not right. It should be `!== "HDF5Reader")`
I'm not sure if this is the right fix. What if the user doesn't have a `.json` stack name?
Why is this removed?
Is there a reason why we wouldn't just store the value in the `androidKeystorePassword`?
can we add a check for `nil` here?
Add an example of a link to the name of the action.
This test was not testing the wrong value.
can you please add a space after `!`
I think `bool ParseHeaders(TRequestHandler handler, ...)` is the proper way to go.
why is this needed?
I think this should be `!==`
This is a very unusual way of writing this.
Should we add a new one here?
This log message should be logged at the end of the function, not the encoding.
I think it would be better if you added a Authentification. For example, if you want to keep the Authentication Protocol, you could add a new constant for the string.
I think this should be print a warning.
This is a breaking change, but it's not a problem, so I think it's better to keep it in one place.
No need to set `ipsets` here, it's already in the `set` folder.
Can we add a description about what this is?
If we're going to use the same name for all the `page_size` we should just use the `MAX_RESULTS` property.
Is this needed?
I think this should be `cobuild`
I think this should be `CRiOS`
Why is this public?
why dump puppet logs here?
I think we should be able to just use the diff value if the node is not in the diff value.
I think this is not the right way to do this. The `eward` bonus is not always available. The `2StartEpoch` is the only way to do this, but it is the only way to do this is to avoid the `2EndEpoch` check.
This is a change in behavior, but I'm not sure why it's necessary to include the `Droparative` in the `config` directory.
This is a bit of a hack, but I think it would be better if we just use `m.GetPaths()` instead of `os.GetPaths()` in the `paths` function. I think it would be better to use `os.GetPaths()` in the `paths` function.
I think this should be `utututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututututut
@jridgewell Is this change intentional? It seems like we should be using the `master` clause instead of `==`
Is this file still needed?
Please rename this to `prevFolderId_`.
Do we need this?
This is a change in behavior, but the `lbann_comm` is not a `finalize`. The `const` is not a `const` at the end of the file.
This is not needed. The whole MolToSmiles() function is called before the "on" function.
This is a breaking change.
This is a breaking change. The `toUpperCamel` should be `toLowerCamel` and `toLowerCamelAndDigits` should be `toUpperCamel`
This should be set to false by default.
I think we should remove this line
I think you can remove the random SP completely.
This is a bit of an unrelated change, but I think it would be better to use `GetStatus` instead of `in.GetStatus` directly.
I'm not sure if we should have a `allow.Config.RenewCert` method that returns the `Object.Config` and `Object.Config.RenewCert` if the renewal is already happening.
I think this is a bit confusing, it's not a problem.
Can you add a check to ensure this is not nil?
I think this is the only place where we should return an error.
This is a breaking change. It is not used anymore.
I don't think this is needed
I think this should be "Not the daemon" instead of "client"
I think we should also keep the old one and change the old one to `fs.Config.CompareDest` and `fs.Config.Compare dest` to `copy-dest`.
This is an error, should be `err != nil`
This should be `NODE-3405`
this is a bit of an overkill, but it's not a blocker. Could you please add a spec for this class?
Please use `computedEvents.searchTitle` instead.
Shouldn't we return the job_id directly?
I think this should be `find(id, 32)` instead of `find(id, 32)`
I don't think this is the right place for this.
This should be `_stream_data` instead.
This is a bit weird, why not just use `is ContainerMap()`?
This is a change in behavior, but I think it's a good idea to change the code to use `isNotEmpty` instead of `null` here.
This is a bit confusing, as it is used in the `<T>` tag.
I think this needs to be `public const string SqlCommandIntegrationName = "MySqlCommand"`
Nit: The package is `github.com/go`.
I think this is the right fix. The `if` should be moved to the `return` block.
why not just check for the zero value?
The only thing I'm not sure is the name of this method is what it is. I'm not sure it's the name of the method.
The `work` should be removed from the `int` tag.
Line is too long. [83/80]
We should add a note to the description of what this setting is
This should be set to `false` in `buildCallback`.
I think this is a good change, but I think it's fine to leave it in for now.
I think this should be a `TODO`
I think this should be done in an if statement instead of an empty color.
I think we should be able to use the `cancel` method in `refreshFolders` instead of adding a new one.
Is there a way to test this? I don't think it should be called `Exported Types` or `current_user`?
This is a breaking change.
This is a bit unrelated to the PR.
I think it would be better to use `Preconditions.checkArgument(width > 0)`
This is a breaking change. It is not necessary to have a `lhex` method that does the same thing.
I think this is a leftover code from debugging.
Why did you remove this?
I think this should be called `setUp`
remove this line
Is this a debugging leftover?
I think it would be cleaner if we just use `self.empty_list = True` here.
I think we should just pass the `sync.go` to `InstDeployment.Status`. Also, we should probably add a `sync.go` to `Resources.go` and `Resources.go` to `Resources.go` and `Resources.go` to `Resources.go`
I think it would be better to move this logic to the `addProductOverviewFragment.areRequiredFieldsEmpty` block, since it's a different condition. The other way is to avoid the invalid field and the fragment has been sent to the correct location.
I think this should be `list`
Line is too long. [83/80]
This should be a constant.
I think we should just make this a `custom template`.
I think we should add `_scribe` to the `v1.0` file.
I think this is the right place to addLink.
I think we should be able to use `copyResponse.flushInterval` here.
I think this can return `undefined` instead of `task`.
This is a bit of an odd change. I think it would be better to just return an error instead of just using the `Completed.IsInstance(err)` here.
I think we should add a new one to the existing one.
This is a breaking change. Can you check if the Config::get('cms.twigNoCache'); is false and the default value is false?
nit: remove this?
This is a bit of an odd name.
Is this a nil check? I don't see a nil check on the node.
The script could be passed as a param here.
Is this change related to the PR?
I think we can move `request.getTitle()` to `request.getHumanReadableIdentifier()` to be consistent with other methods like `request.getHumanReadableIdentifier()`
I think this should be a warning instead of an error.
This is a bit weird. What is the `interceptor` field doing in the `new`?
This is a bit of a hack, but I think it would be better if we could just use `!(args.Name != AssemblyName)` instead of adding a new one.
I don't think we should be using this. In general, I don't think we should be using it.
This is a bug, because `tree.put` returns `contains` and `tree.put` returns `null`. So, we should not use `contains` here.
I don't think this is needed
I think it would be better to use `new(heap) char[len1+1)` here, and then use `JSONError(heap, diagsArea, jsonStr, 1)` in the `ExRaiseJSONError` above.
I think this should be a `Set` instead of a `Set`
@jridgewell I'm not sure if this change is correct. The `substanceProduct.append(", ");` is the same as `substanceProduct.append(", ");` for the `size()`.
I think this should be `values.AppendAppendAppend(j, v values.Value)`.
This is a change in behavior, but I'm not sure why it was here.
I think this should be `Default: false`
I think we should also add a config file to the http3 package.
why do you need to do this? I think `datetime_types` is a bit confusing.
why is this a pointer?
Please revert this change
I think we can remove the `.to be_true` here because it's already in the `be` block.
I think this should be done in `_socket.IsClosed`
Why is this needed?
I think we should keep this here, since it's not a user-facing error.
This is a private import, it's not needed.
This needs to be `final`
I think this should be `position_legend`
I think you can just do `trim(length) throw traceId.length();`
This should be removed.
I think this should be in the next line.
`?number` is a bit confusing, maybe `?number`?
This should be `com.google.orgname.artifact.name`
This should be `competitive`
I think this is a good idea. The `primary` was not the right place to fix this.
I think it's better to use `go-filecoin/proofs` everywhere
I think we should use `msg.MessageId` here.
I think this is the only place where `add_option` is used, and `nullID` is used.
Is this used anywhere?
I think this should be `!nullptr`
I'm not sure if this is the right place for this. It's a good idea to have a test for this.
I think it would be better to use `<lt>`.
why not just `chan`?
Block has too many lines. [39/25]
I think we can just use `TimeUnit.TenentMaxLength` here.
@mjkkirschner I don't think this public API is needed.
this function is only called in one place, right? if we ever call it in one place, we will also need to call `chooser` in the other place.
I think it's better to use the same level for the variable name, it's more clear what the function does.
I think this change is not correct. The nonce argument is a `watches`, which is the nonce argument.
I think we should use `.ShareExtension` instead of `data`
I think it's better to use the `TLS` field instead of the `*` field.
This is a breaking change. We should be able to remove the `PublicHeader` parameter from the `ClientClient`
I think `Character` is not needed here, `element` is already `Character`.
This method should return false. Also, I think `isInterface()` should return false.
This was a leftover from an earlier commit
I think this is the only real change that affects the changes in this file.
Maybe we should rename this to `MutableStateStats` or something similar?
This should be done in the `lib/sonm/worker_keystore` package.
This test is still testing the right thing. It should be `test.equal('TEST', options.raw);`
This should be done in the view_set_fullscreen() method.
I think we can just use `span` instead of `All`.
Why not use the `@param` method?
Minor nitpick: I'd probably just call it `break;`
Use the new Ruby 1.9 hash syntax.
This is a breaking change.
This tests now run in `test/functional/mongo_client_tests.js`. Shouldn't the test be removed from this test?
I think we can remove the `goog` from here and use `pageTitle` instead.
I think this can be removed. The `Split` method is already validated by `@link`.
I think this import is unused
I think this is the only error that should be changed.
Why is this change necessary?
I think this is the only place where we need the pos loss. The `loss = F.binary_cross_entropy_with_logits` call is `pos_weight`, but the `mypy` call is `pos_weight` which is the default.
I think this is a bit confusing. How about `testType`?
This is the only change that fixes the bug. The code that is in the code is not related to the PR.
This is a very good place to convert the keys from the schema to the `Type` types. I think it would be better to use a `convert` method that takes the keys as parameter and then use that in the `Type` method.
I think this should be `ubluebird`, not `ubluebird`.
why not final?
I think this should be `target_link`
This is a breaking change. The first one is the one that is used to set the first one.
Layout/TrailingWhitespace: Trailing whitespace detected.
I think we should just be able to just use `default` here.
I think we should revert this change.
Is this change related to this PR?
This is a bit odd, we don't have to use the `!` in the ` purchaseable.starts_on`
I think you can remove the `ext simd8` parameter from `EXT_SIMD8` and `EXT_SIMD8` as well.
Can we add a doc for this?
This function is not used anywhere. You can use `assert.Len` instead.
Please add the same property for the `prefQueue` property.
Can you revert those changes?
Is this a `Db`?
This is a bit of a hack, but I think it's better to be able to just use `on_external` here. It's not clear what the `on_prepicklable_properties` method is for.
Looks like you're missing a space here
I think this should be ``pygment``
I think this should be `0`
This line is not required.
Redundant `self` detected.
Is there a reason why we wouldn't want to retry when the result is not set?
I think we should just remove the `VERSION` part.
why change this name?
You can use `@configuration.fail_if_no_examples` here
This is a bit confusing. How about `Blockly.FieldVariable.prototype.referencesVariables`?
I think we should be more explicit here.
This is a breaking change.
This should be `_config_name` instead of `_platform` right?
This is a bit of a hack, but I'm not sure what the best way to do this is. I'm not sure what the best way to do is is to do it without having to do it.
I think we should keep the number of bytes in the same order as the other ones.
What is the reason for this change? I don't see any volume info being used anywhere.
I think it would be better to throw an `NullPointerException` here, and then throw an `NullPointerException` in the constructor. I think it would be more readable to throw an `NullPointerException` in the constructor and throw an `NullPointerException` in the constructor.
Is this needed?
I think we should be able to use the `Activity` here
Line is too long. [82/80]
I think we should be able to get rid of the `operator` in the `scipy` method.
wrong import order
if we're going to use this, maybe use `if options['args'] = profile.as_json(...)`?
This is a bit of an unrelated to the PR, but I think it would be better to use the existing `SQLite3File` as the default.
Should we make this a `Http2`?
Please remove this.
This is the only change that affects all the other changes. The `errors` package is `errors` and `errors` package.
I think we should just use `...` here.
I think this is not needed anymore?
why not just call StallBlockOp?
I think this should be a `Tests`
I think we should add a check for the `VUID-VkImageSubresourceRange` here.
This is not a good example of how we want to test this. This is a pretty small thing that we could be looking for. I think it would be better to just check if the column is `nil` and then check if the column is `nil` in the `coalesce_result`?
I think this should be called `systemdsystemgeneratordir` instead of `systemdsystemgeneratordir`
I think this should be `classificationCompute`.
This is a bit of an overkill, but I think it would be better to have a method that returns `methodInitCode` and then call `methodSampleViews.get(0)` on the `methodInitCode` call.
I think it would be better to startTs the first one (and then startTs)
I think this is not right. We should only set the width if the height is not set.
I think this is the right place for this. It's a public API, so it's not a public API.
This is not a parent class, it is a parent class.
Can you change this to `EmberRouteMixin`?
This is a breaking change. I think we should just call it `include ThreeStateWorkflow`
This is the fix. `np.NaN` is a valid value.
I think this is a change in behavior, but I'm not sure it's worth it.
I think we should use a more descriptive name for this. In fact, I think we should change the option name to `Python.PexTool`.
This is a leftover from an API change.
This is not a `Difficulty Bomb Delay`
This should be reverted.
Can we just make this `==`?
The file is not dump anymore. It should be based on the other files.
I think this is a bit of overkill. I think it would be better to move the settings to a separate file.
I think this is a leftover?
This is a bit of an odd... Can we just return `None` instead of `Dockerfile`?
I think this function should be named `is_being_Platform` instead of `is_being_Platform`?
I think this should be `@group_level > 0`. The `if @group_level != @group_level` should be `@group_level != @group_level`.
I think this should be in the `SparkWithPartitionWith` class.
Could you use `get_notebook_path_to_Lock` here?
I think we should remove this method and use `search_builder_class.new`
Do we need this?
This should be removed.
Do we want to build the directory as part of the build?
This should be `if(operationOptions && typeofOptions.fullResponse === 'boolean')`
I think this import is not needed. The `from string import ascii_lowercase` import is already covered by `__init__.py`
This is a bit of an unrelated change. I think it would be better to have an `30` in the `catch` block that takes an `done()` and then call `catch(function(err) { ...}).catch(function(err) { ...}).catch(function(err) { ...}).catch(function(err) { ...}).catch(function(err) { ...}).catch(function(err) { ...}).catch(function(err) { ...}).catch(function(err) { ...}).catch(function(err) { ...
nit: remove empty line
Why not `traceLog('Class', 'MediaLibrary::class . ' instead');`?
I think we should be able to remove this `EnableAdminApi string `json:"enableAdminApi,omitempty"`
This is a no-op, right?
This is the only place where we need to handle the deletion later. This is the only place where we use the deletion later.
I'm not sure if this is the right fix. It should be `<br>`
This is a very good change. The only thing I'm not sure is that the `valid_tile_urls` is used is in this function.
This is a change in behavior, but I think we should be able to use `java.util.0.0` instead of `1.2.0.0` for this test.
This is a test that was not working.
I think this should be a constant. The test should be updated to use the `flowServiceFlows` constant.
(style) code indent should use tabs where possible
This file is not used anymore
I think you can remove the reconcile.Reconciler check here
I think we should add `getClientConfigImportModule` to the `Client` method and then call `getClientConfigImportModule` in the `Client` method.
This is a change in behavior, we should probably just remove this line.
Wouldn't it be better to use the `_agreedCapabilities` class here?
I'm not sure if this is the right place to put `+1` here.
I think we can get rid of the `t` here.
This is a bug fix.
I think this is the right place for this. This is the actionable actionable class.
I think this is a bit confusing. I would expect `assert self._result` to be an `assert`
nit: remove empty line
I think this should be a different error, otherwise the environment variable is not defined.
This should be `update_state_map`
I think this is a change in behavior, but I think it's a good idea to keep the original behavior.
This is the wrong place for this.inputs.length is an integer, so we should probably check that it is an integer.
This method is not being used. You can use `data_formatformat` instead.
`length` can be `final`.
This is a bit of a hack, but I think it's better to have a `peerSettlements` that is set in the `settlements` and then use that in the `settlements` method.
is this going to be a problem for the user?
This import is from the base class, so we don't need to import it from the base class.
I think we should change the type name from the object to the object's name from the object's name.
I think this is a good idea. It should be `properties` instead of `properties`
can we add a note to the docstring that this is a non-test class?
Debug statement should be removed?
This should be `warnings.warn` and not `warnings.warn` right? If it's a valid use case, we should use `warnings.warn` instead.
I think we should use the `Set active role` method instead of the `Set active role` method.
I think this import is unused.
I think this is a leftover from debugging?
In this case, if `key[0]==='o'` is null, then `type!=='function` will be null.
I think this is a bit confusing. How about `hook is passed the plot object and the displayed object, and other plotting`?
I think this logic is not needed. The `if` statement should be moved inside the `if` statement.
This feels like it should be a constant
I think this should be `throw new RuntimeException(String.format("Metastore operation failed for %s.%s", database);`
I think this is not the right place for this. A property of `isSymbolUsed()` should be called `isThreading()`.
I think this is a leftover from the previous commit
Why not just use the recent recent?
`undefined` is always undefined, so no need to check for null
This file is not used anymore.
Is this a bug fix?
I think this is not the case. The port should be `opt_port`
I think we should also update the `codec` field to mention that it's an account.
Please use constants for the new constants.
I'm not sure if this is the right place to put this. It should be `KOALAS_USAGE_LOGGER` instead.
Why not use the `Function` class?
Can we rename this to ` flink checkpointsState` or similar?
This is not necessary. The `BLACKLIST` is already in `_filter_signals`.
nit: `error` is not needed here.
This is a change in behavior, but if the field is not present, the field should be `null`
This should be done in the `io.prestosql.plugin.hive.plugin.hive.plugin.hive.plugin.hive.plugin.hive.plugin.hive.plugin.hive.plugin.hive.plugin.hive.plugin.hive.plugin.hive.plugin.hive.plugin.hive.plugin.hive.plugin.hive.plugin.hive.plugin.hive.plugin.hive.plugin.hive.plugin.hive.plugin.hive.plugin.hive.plugin.
This change is not related to the issue.
Style/TrailingCommaInHashLiteral: Avoid comma after the last item of a hash.
I think this should be `Series(self, "b", "y")`
I think this is not the right approach. The `PhysicalLocationComponent` was used to pass the `Uri` argument to `Uri`. The `PhysicalLocationComponent` was used to pass the argument to `Uri`.
why is this needed?
I think this should be `if pool.numPendingWholeBlocks > 1`
This is a good candidate for a test to be updated.
I think this is not needed.
I think we should use the `Email` property instead of the `E-mail` field.
This can be simplified to `map(role)` since it's a `use` statement.
This test is not needed. The `super` call below will be removed.
This field is not used anymore.
I think we should just use `post.must :save` here.
this is not the same as the other one, we should probably just make this `if err != nil`.
This is a public API, I think.
I think we should remove this. We should probably add a type annotation to the `Mode` type.
Why is this change necessary?
Please update the spec to `BFA`. Also, I'm not sure if it is a good idea to use `at` and `mlon` as the input.
This is not used anymore.
This is a bit of an unrelated change, but I think it would be better to move this logic into `exporter.Export`
I think it would be better to use `assertIn('id', ...)` instead of `assertIn('id')`
This is a change in behavior, but the issue is that the `*` type arugments are always non-null.
I think this should be `width:maxWidth: width * 2, maxWidth = 2`
This is a bit confusing, as it will search the `engineSubCategory` will never be null.
Why are we adding an empty folder here?
I think this is not needed.
I think this is a bit confusing. What about something like `<p>`? I think it would be more clear to have a `<p>` that is used for the time being.
This should be set to `DEBUG` and not `DEBUG`
This is a bit of an unrelated change, but I think it's a good idea to have a test for this.
This should be `\n`
I think this is the only change in this file.
I think this is not a good change. It should be named `var`.
Do we need to change the converter to `2`?
This import should be removed.
This should be `=` -attach <pid>`.
This is not needed anymore.
I think we should use a more descriptive name for this test. It's a bit confusing. It's just a simple number of bytes.
This is a change in behavior, but the call to `list()` is not needed.
`warning` will be called from `warning` if `info` is not found.
Do we need to make sure the `[ContributorFact]` is not defined?
I think this should be a `const`
I think this should be a `return` statement.
I think this is not needed anymore?
This is a change in behavior, but I think it's better to use a `isinstance` here.
This include seems to be unrelated to the PR?
I think we can remove `LambdaMethodReference` now that we have `OptionalOrElseMethodInvocation` in `LambdaMethodReference`
This change is not related to the PR.
I think we should use sys.version_info < (3, 3) instead of sys.version_info < (3, 3)
This should be done in a separate PR.
This is the only place where we create the `rmds.MD` object, but we need to make sure we don't have the same `rmds.MD` field in the `MakeMd` package.
I think this is not the right place to put this. You can just use `Word dependencies = wp.element;` instead.
I think this is a good idea. It's not a good idea to use the same file name.
I think this is the correct way to do this.
should we rename this TODO to something like "shouldn't we have a good name for apps registered by another Piped"?
I think this should be a `<none>` instead of a `<none>`
This test is not testing the right error. It should be in the `*testTask` package.
I think we should be able to remove this exception and just use the existing `extra_to` exception.
I think we should change the param name to `task`
This is a very generic message. What about `arguments-out-of-order`? We could also say something like `arguments-out-of-order-out-of-order` or something like that.
`SnackBarHandler.show(coordinatorLayout, getString(no_account_signed_in));` should be renamed to `show`
I think it would be better to use `toHosts` instead of `str`
I think this is not correct. The function is already in the `Metric` function.
This is the main change. Is this correct? If the filename is empty, it should be `if packageName != ""`
I think we should move this to the `apimachinery` package.
This is a bit of an unrelated change, but I'm not sure what the best way to do it is. I'm not sure what the data store classes are, and it's not.
this is not a big deal, but I think it's better to use `_widget` instead of `_`
(style) line over 80 characters
This is a little confusing. "Delete mark denotes whether row is deleted or not"
I think this should be done in `debug_dependent_headers`
How about adding a `escape` parameter to `get_iovec`?
This is a bit of a hack, but I think it would be better to have a test that checks if the always returns `null` and the one that returns `always`
I think this can be `intintendoswitch` and `int64` can be `nil` in the future. I think it's better to use `intint64` instead of `runtime.unsafe` as the name of the file.
This is the only place where we need to handle the case where the user has been using the same `m_swift_ast_context` function.
I think it's better to use the label, instead of the string, we can use the label, and use the label.
Please revert this change.
`and e` is a bit confusing with me. I would have expected it to be `and e` instead of `except`.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think we should keep this method and move it to the `io.prestosql.spi.config.net.config.net.String#getMainnet`
This is a bit of an unrelated change, but I think it would be better to use `values.Map()` instead of `values.Map()`.
I think this should be a tuple.
I'm not sure if this is the right thing to do. The `tenacity` should be the correct thing to do.
I think this should be removed.
Maybe we should move this to a separate method and use it in the same place as the one in the `getService` method.
I think this is the only place where we can use `.setProfileID( '' );` if the ID isn't present.
I think we should keep this (and keep the test as it was)
I think we should just remove this and the new `must_render_template` block altogether.
I think we should not be using metadata in the test, as we are not using it anywhere else.
This is not the only place where we call `CommunicartMailer.cart_notification_email` here.
Unused import, please remove
I think we should be more specific here. The `createSpy` should be called in `createSpy`.
This was unused.
This should be a warning, not a part of the error. The caller can know if the caller is already throwing an error.
why not write the block as input?
The `json` tag should be `Job`, not `The`.
I think this should be in the same package as the other one in the same package.
This is the only change that affects TF providers.
This file is not used anymore.
I think this is a leftover?
I think we should add a `TODO` to the `chaos` and then just add it to the `chaos` field.
why remove `Yield`?
nit: can we name this `oc`?
`auto space` is not used in this function.
I think we should use the `./scripts/path.join` file instead of hardcoding the name.
I think this should be ` getTop getTopEventSubjNew`
@jridgewell any reason for this change?
I think we should use `\FrameworkBundle\FrameworkBundle\DomainRouter\DomainRouter` instead of `\s`
I think this should be `if (!added_new && is_merge_or_booted)`.
This is the main change.
This is a breaking change.
Shouldn't this be `if agent_is_crawler? || skip_session_tracking?`
This is a bit confusing, as it will raise an error if the local file is not found. I think it would be better to raise an error if the local file is not found.
I think this file is still not covered by the GNU General Public License.`
> (...) * 2 / 3 : validators.Count / 2 [](start = 8, length = 10) I think we can use `* 2 / 3` instead of `.1`
I think this import is unused
Why do we need this?
This is a breaking change. I think it's better to have a separate class for each `Top` class.
I think we should be able to remove this line now that #1983 has been merged.
Line is too long. [83/80]
I think it would be better to have a separate `bool` for this, and have a `bool` for the `mutableState` as well.
This was the only place where I was used this.
I don't think this is true. It's a good idea to add a default value to the constructor.
Can you also add a type hint for minerAddress and minerAddress?
I think we should use `json_info` here.
This is a good example of why I removed the "tm_py" because it is not used anymore.
I think we should just remove this?
This is the only change that affects the test.
I think it would be better to just call the `abstract protected`
I think this should be done in `vic-mongodb-extjson`
I think we should keep this around and keep the default behavior in `default.py` and keep the default value in `default.py`.
I think this should be `HAVE_RSEQ`
need to change
this is the wrong place for this
I think we should remove this.
I think we should be able to remove the `wait_for_event` call here. We're not really testing the `dynamo_thread_init` thread.
It's not clear to me why we need this function. It's used in the `install_lazy.py` file. I think it would be better to use `get_lambda_name` here.
The name of this method is misleading, it makes it sound like it is only used in the `Version` package.
I think this should be `return &workflowservice.PollWorkflowTaskQueueResponse{}`.
I think this should be `client_options[:read].is_a?(Symbol)` instead of `read` since it's a `common.read`
This is not the right place for this. `facingMode` is set to `preferredMimeType` in the `cachedMimeType` function.
`ImageSubresourceLayoutMap` is a `LayoutEntry` type, so it should be `!`
Why do we need Svc?
I think we should remove this.
I think this is a bug fix.
I think we should be more specific here.
Can you add a link to the docs?
Isn't Interop\Container\ContainerInterface the Containerloglog?
Just curious, why did you change the `docroot` to `_html` here?
This is a public API, I don't think we should be changing the default behavior.
This is a very bad idea, but I think it's better to keep the node.
This is a breaking change.
This should be a public constant.
This file is not used anymore.
This is a change in behaviour.
I think you mean "l" instead of "key1"
I think it would be better to pass the array directly to the `icons` class.
Why is this needed?
I don't see any new code using this.
Why is this needed? `GetMethod()` is already in the `GetMethod()` function, so it should be checked here?
This is a change in behavior, but the `Source` is not used.
This should be setDiSqlError(errno == EAGAIN)))
This should be `subprocess` instead of `keys`
I think it would be better to try to catch the error message and then try to catch the ValueError and then try to catch the ValueError.
what is the default value for this value?
Why not `package.io/otel/internal/debug`?
I think this is the only change that affects TF providers.
This is a very minor thing, but I think it would be better to move this to `_reduce_spark_multi` so that the `SubSelector` function can be called directly.
I think this should be set to `false` in case the server is not set.
why do you need this type? you can just pass `module_class` to `type`
This method is now unused.
why do you need integer here?
I think this should be done in the database instead of in the database
This file is not used anymore
This is a very good change. I think we should be using `ex.getMessage()` instead of `if` here.
I think we can remove this
`paste-primary` is now unused, so no need to change it.
I think this is not correct. It should be a constant.
This is a breaking change, but it's not a problem, but it's still a little bit of a hack. I think it's worth it to move it to a `object` class.
This is a bit of an unrelated change, but I think it's better to have a separate PR for this change.
This is a bit of a weird pattern. Can we have a single import for this instead?
Standards: Please add a space after commas.
This is not needed anymore. The `backend::lang.warnings` will be removed from the database.
@jridgewell I'm not sure if this is the right place for this. It's possible that `nodesRegex` is not null, but it's not null.
`account.new_record?` is enough, I think it's better to just call `account.account.id` instead of `account.id`
@mfojtik why do we need to set `-1` here?
This is a bit of a hack, but I'm not sure how to test this.
async () => {..} ?
This is the only place where we need to support both Metrics and metricset.
I think this should be `@private`.
`FileUtil` and `FileDownloadHelper` are not used in this file. Should we remove them?
Why is this removed?
We should log something here, otherwise it will be helpful to log something.
@jridgewell Is this a typo?
I think this is a leftover?
This file is now unused.
I think this is fine, but I think it is better to use `db.capacity == 0`, which is more efficient.
`mutex` is not a lock anymore, so it should be removed.
Is this needed?
Please use `!bundle.containsKey(dbName, bundle.getBoolean(IS_GLOBAL_STORE, DBOpenHelper.DEFAULT_DB_NAME);` to get the bundle's value.
This should be `braille.handler.handleCaretMove`
I think we should use `String.format` here.
This is a bug fix. The previous behavior was correct. The `nvda` is not a thing, but it is not a thing.
Why is this removed?
Why not using the `ipamNetworkConfig` here?
I think this function is used for testing purposes, can we remove it?
This is not the right place to put thispkgs version in the database. I think it should be `nix-a4a/nixpkgsVersion`.
Why is this removed?
I think it should be "IP"
I think the enum parameter is unused?
I think we should also change the secondaryConfig to be `secondaryConfig` here.
This is a breaking change, but the old behavior was a bit confusing because the new behavior was a bit confusing. I think the old behavior was a bit confusing.
This is a change in behavior, but I'm not sure why it was here. It was only used in the first place, so I removed it.
I think it would be better to add the new function to the docstring.
I think we should return `true` here.
Is this include needed?
Is this needed?
This is a breaking change.
This is a change in behavior, but I think it's better to use `Len` instead of `len(vs) > 0`.
Why not just catch zk?
I think we should be able to remove this check.
I think we should be able to get rid of the `body` variable here.
I think we should add a doc block to make sure it is a specific doc block.
This is the only change that affects TF providers.
This is not a big deal, but it's not a big deal.
I think this should be a `Stop`
shouldn't this be set to `true`?
This test is failing on the CI failure.
This should be called "HeadLess"
I think it would be better to use `parallel_scheduling_processes` here, as it's used in the other uses.
I think we can import `id` directly.
This is a bit of an overkill, but I think it would be better to have a single key value that has been passed in.
This test is not testing the wrong thing. It is not possible to have a test that doesn't fail.
Does this mean we can't get theManifests from the original cause?
Do we need to add `--options` to the `info` script?
I think we can just pass the `returns` to the `Status()` method and pass the error to the `Status()` method.
This is a very minor thing, but I think it would be better to have an outside_projects set in the method signature and then set the method in the method signature and then set the method in the method signature.
This is a bug, if the copy is not a `Date`?
why change this? Sorry for not catching it.
This is the default setting for DefaultEnabled, but the default setting for Default Boolean is false.
This is the only change that affects TF providers. I don't think this is the right fix.
This line is not necessary.
This file is not related to sock, so I think it should be named `mysqld.sock` instead of `mysqld.s2`
The `destroy` can be removed from here since it's the same as `has_many :destroy`.
It seems that `stream->tunnel == NULL` is also true.
(style) line over 80 characters
if we're going to use `newLen <= 0`, we should just use `newLen = 0`
I think we can remove this
This should be `const std::unique_ptr<MMFFAromCollection>`.
This is a bit of an odd change, but I think it's worth it to check if the error is thrown.
I think this should be `Pattern.0.0` instead of `Pattern.2.0`
This is a breaking change. We should probably make sure that we are not using GapicProductConfig for all the configs.
There is a `breakPos` constant in this file.
Why is this changed?
@mfojtik why did you change this?
This function is not used.
You can use `===` instead of `===` here.
this is not needed
I think this can be private, it's not a good idea to keep the `private`
The heatmap[y - top:y + bottom, right]
I think we should keep the config here.
I think we can remove this file and just use `sns`.
@sayden FYI @smarterclayton do we want to keep this?
This file is a bit confusing to me. If we don't have a header file in the test file, we should probably just remove it.
I think we should add a `TODO` to remove these
why is this true?
I think it would be better to use `--tab-buttons=True` and `--on-get- image` to determine whether or not to click the tab or tab.
I think it might be better to just do `default: false` instead of `GatewaySolverEnabled` and let the user know it's not automatically automatically.
I think this is a bit of an unfortunate. I think it would be better to have a `instantiate` that is used by the `debug` level.
This is a private function, I think.
I think we can just remove this method and just call `Builder` directly.
This is a bit of a hack, but I'm not sure what the best way to do this is. The `bp` is used to handle the `bpf` object, but it's not a `bpf`.
This is a bit of an unrelated change, but I'm not sure it's worth it.
Is this needed?
Isn't this redundant? IsolationLevel is already set to true?
I think we can remove this interface now.
I'm not sure this is the right place to remove this?
Line is too long. [84/80]
I think it would be better to just say `using parent snapshot %v\n", parentSnapshotID != nil` and then we will read the entire parent snapshot found, but it will read the entire parent snapshot found.
Since we're changing the default value from `LogManager.Configuration`, I think we should just remove the default value from `true` and remove the default value from `true`.
I think we should return `char*` here.
I think this should be `entry.getKey()`
Can we add a `default` param to the `add`?
I think this is not needed anymore?
I think this should be a `config` property instead of a `config` property.
Shouldn't this be `custom-elements-es5-adapter.js`?
I think we should add a new column for this.
This function is no longer used.
This DrawColour &col can be set when the value is set.
This is a breaking change, but it's not a big deal, but it's not a big deal. I'm not sure what the best way to fix this is, but I'm not sure what the right thing to do is.
Please use `print_to_3` instead of `print(a, "")` to avoid printing the result.
I think you can replace this with `!`
This should be set to false by default.
I think we should also check if the source exists and the source exists.
why is this removed?
Why are we adding this? If we are going to add `default` to the `cancel` table, we should probably just remove this and just call `cancel` in the `cancel` case.
I think this should be done in a separate PR
I think `# `attr_value['string'] is not None` probably not required as `attr_value['string'] == value` is probably better.
I think we should use `reader` here. We don't have to worry about `dont` reader.
This is a change in behavior, but I'm not sure if it's worth it.
This is not a very good name. In the future we should consider to make it configurable. In the future we should consider to make it configurable.
I think we should keep the `allocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocallocalloc
This is an unrelated change, but I think it should be fine.
I think this line is redundant now.
I think this is a leftover from the original PR
This is the only change that affects the rest of the PR.
This is a bit confusing, as `attribute_changed` is a `change` attribute.
`GetItemLayoutId` is a string, so it should be `IDID`
This should be a public method.
I think we should also check if the device is in the config
Why is this change required?
I'm not sure if this is the right place to put this. It seems like the `renderbuffer_from_image` function is called in the `preg_supported_ops` function. I'm not sure if it is worth it.
The name `deploy.on\\` should be `deploy.on\\`. The name `deploy.on\\` is not clear to me.
This should be a `defaults($code, $code)`.
This should be set in the `init__` method.
I think we should use `ECS_SPOT_INSTANCE_DRAINING_ENABLED` instead of `ECS_SPOT_INSTANCE_DRAINING_ENABLED`
This is not needed.
I think this is the only change that affects TF providers. We should not have any assertion about it.
Line is too long. [81/80]
I think you can just remove the `!`
The default value should be `json:"trip_time"`
I think this is a bit of an unrelated change, but I'm not sure it's worth it.
I think this is still useful for the time being.
It's not clear to me why we need this change. If we don't have a var for the `signer` we should probably just remove it.
I'm not sure if this is the right approach. It seems like if we just use `!localized?` instead of `!localize] != false` we should just check if the flag is set.
why is this needed?
If you're using a custom `kvs_txn_t` function, you can remove the `txn` function.
I think it would be better to set the `when_searching` property in `_mark_changed` instead of `scrolling.bar` as the default value.
This is a bit of a hack, but I think we should use `sys.getfilesystemencoding()` here.
I think this interface is not needed.
This is the only change that affects all the `StackTraceUsage`s.
This should be Sm2, "sm2"
I think we should be able to remove the `load` method from the `certChain` interface.
This is a leftover from debugging.
This is a bit of a hack, but I'm not sure how to test this.
Is this a typo?
Is this still needed?
I think this should be a separate commit
This is not needed.
I think this should be a `chan`.
This is a no-op, right?
I think this is the only one we need for the Nethermind.
I think this should be `v`
I think this should be `1.8.3`
Is this used?
I think this should be called `isServerPort`
I think this should be `True` if you want.
This is a good idea.
I think this should be `map[string]bool`
It's not a big deal, but why not just put the `Server` in the `if`?
I think we should keep this (and keep the test as it was)
nit: can we use `string` instead of `string`?
This is a change in behavior, but the `go` method is called `run` and ` go` is called `go`.
Nit: remove empty line
I think we should also check for the `-` in the `User` model.
I think this is a bit confusing, as I'm not sure if it's worth it, but I think it's better to use `.map { tag.tag.rstrip.join(" ")` instead of `.map { tag.tag.rstrip.join(" ")`
I think this is not the right place for this. You can just call it `Realicated`.
why is this removed?
The second two lines are repeated 3 times.
I think it would be better to use a different type than `typeof(int)`
I think we should remove this line
I'm not sure this is the right fix. It should be possible to have a test for this.
I think this is not right. The function name is a bit misleading. It's a bit odd that it's a function. It's a function, so it's a function.
This change is not required.
why do you need this?
Isn't it better to use core.NewBuildState directly?
I think this is a leftover?
I think this should be done in a separate PR.
I think this is a leftover from debugging?
Why is this being removed?
This test is testing the same as the one on line 233.
I think this should be a different PR, if we do not want to make it into the `nameserver` package.
This should be in a try catch block.
This line is causing the test failure.
I think this is a good idea. We should probably have a `python` method that does the same thing.
I think we should be more specific here, as we're not really relying on this.
`metricNamespace` is a little confusing. Can we rename it to `metricNamespace`?
@jridgewell Is this correct?
Please use a `Strings.isNullOrEmpty()`
I think we can change the `specialERT` to `ibl_tgt`
Why is this needed? The `pthread_cancel` method is called in a single place.
I think we should use the `USER_DOMAIN` constant here.
I think it would be better if you could just do `node.querySelector(....)` instead of doing the `if (....) {`
This is a breaking change, we need to keep the version in the URL.
I think we should be able to use `typeof` here, as we're not using it anywhere else.
We'll need to add this to the `with_approver` model as well.
I don't think this belongs in the code base.
I think this is the only one that's needed for this PR.
I think we should remove the default value from the validator.
Nit: We can remove the comma now that we're not using it.
We should add a `TODO` to make sure we don't have any other option to add it.
This is no longer needed.
is this a false positive?
I think this is the only place where we use uint8, we can remove this.
WithStamp and not WithTag I'm not sure if this is the right fix.
I think we should keep the old name here.
I think it would be better to use the `Private Use` (and the `Private Use`) in the `spec/models/internal/models.yml` file.
This should be `Type\Atomic\T`
I think it would be better to use `vscode` here instead of `vscode` as the default.
I think we should add the `.packageType()` method to the `gapicConfig`
the go-type imports are not used anymore.
I think it would be better to keep the `T` as an argument and pass the `where T : struct` as an argument.
This is wrong. The snapshot is 0 if the location of the manifest is not the manifest, so the location of the manifest are not the keyboard (e.g. the location of the manifest). So the location of the manifest is not the keyboard (e.g. the keyboard). So the location of the manifest is not the keyboard (e.g. the keyboard). So the location of the manifest is not the keyboard (e.g. the keyboard).
Should be `if isinstance(dataset, 'num_classes', '81')`
pin is a specific name, we can change it to `pin2.9`
I think `EncryptedDataSize` is a bit confusing. Can't we just use `serializedDataSize` and use `edSerializedDataSize` directly?
This is a bit of an overkill. I think it would be better to have a `blob` method that returns the MIME object.
why remove this?
I think we should keep the `""` here.
How about we move this to the `rollback` method?
This test was not testing the right thing to do.
This is a change in behaviour.
I'm not sure if this is a good idea. It seems like we should be using the `verified` variable instead of a function.
Why are we adding this?
This should be `_no_window`
I think this should be `some` instead of `purchaser?`
`has_fee_estimates` should be `has_fee_estimates` (or `has_fee_estimates`), not `total`.
I think we should also have a test for the level condition. You can have a test for that.
How about adding a `concerns` to the `concerns` section?
I think this is a good place to change the name of the function.
I think we should remove the `datafiles` here.
Use empty? instead of empty?.
I think this is a leftover?
password_reset is only called when reset is not found.
This is a little unrelated to the PR. Could we move this to a separate PR? We have already added it in #1851.
This change is unrelated to the PR?
I think we should remove the `if` here and remove the `shutdownHook` as well.
This is a bit of an unrelated change, but I'm not sure it's worth it. I'm not sure what the policy is, but it's not.
This is a bit of an overkill, but I think it would be better to have a helper function that calls `Start()` and `Start()` that calls `Start()` and `Start()` that calls `Start()` and `Start()` that calls `Start()` and `Start()` that calls `Start()` in `build()`.
Can you add a `cluster-api` package to the docs?
I think we should use `Config.test` instead of `Config.service`
I think we should use `bool` here.
I think this is not needed.
Do we need to check if the webhook is not null?
I think this should be "epochlengthactivation"
I think this is not right. We should probably add the pleasings repo to your project.
Maybe we should log this?
This is a bit weird. I would have expected `mapper` to be null.
I think this is a leftover from previous version of previous version of previous version.
This is a bit of an unrelated change, but I'm not sure it's worth it. It's a bit of a hack, and it's a bit confusing to have a `int32` method that returns a `int32` and then `int32` returns a `bool` and then `int32` returns a `bool` and `int32` with a `bool`
I think it should be `DECIMAL_LITERAL`
remove empty line
I'm not sure why this change is necessary. The test was not passing the modification to the current process.
This is a change in behavior, but I think it's better to use Windows here.
I think we can remove the `*` here and just do a `*`
I think we should be able to just use `line` here.
I think this should be a set, not a string.
I think we should probably remove `s.Noticef("Server Exiting..")` from the `Create` method and just use `s.Noticef("Server Exiting..")`
I think this should be done in the `timeLeftToClaimRefund` function instead of here.
I think this is a bit too much. I would have expected it to be a `Objects.IsNullOrEmpty`
This is a very minor thing, but I think it would be better to just add a new line after the declarations.
This is a public API, so we should be able to remove it.
I think this should be `std::unique_ptr<std::vector<size_t int>> v`
This will break on older clients. We should probably update the `chart` to use the new `chart_wrap` attribute.
I think this should be `Long=Long`
expect = with the new line, it doesn't test anything.
This is a bit of a hack, but I'm not sure we should be doing this here. What if we moved the zone to a new zone, and then we have a new zone?
I think you can just do `def __call__(self, mean=(0, 0, 1) > self.prob: ...`
@mjkkirschner I think this is the correct fix. We should be able to use `v` here.
I think this test is not in use by any other test, so it should be removed.
this is a bug fix.
Why do we need to use `spaceId` here?
I don't think this is used anymore.
I think we should add a `partial_id` constant here, because it'll be signed in the `partial` action.
This change is not related to the PR but I think it is better to rename `DBPDataSource` to `DBgreDataSource` and `getDataSource` to be consistent with the other methods.
This is the only change that affects TF providers.
Is this change intended?
This is a change in behavior, but I don't think it's necessary to do this.
This should be `seelog.xml`
I think this is the wrong place for this. `manual_wall_time_option` will be set to 0 if `manual_wall_time_option == 0`, and the value will be set to 0 if `manual_wall_time_option > 0`.
Unwrap is a bit confusing, maybe it's worth having a helper function like `Unwrap(err error)`?
this import is no longer needed
I think `houseOwnedByAccount` should be added to the service API.
This one is unused.
I think we can just use `this.driver_.getExecutor().w3c` here.
Why is this removed?
I think this change is not needed.
This file is not used anywhere. We should not have a `package main` package.
This was the only place where I was used it.
Is it worth adding a `_POSIX_C_SOURCE` suffix to the end of the string?
`client.getLocalPlayer()` could be null, right?
This is a bug fix. The null value is -1.
I think we should use `isDetectedLocale` instead of `Detected-Locale`
nit: `break` is unnecessary here
I think we should use `StatusContinue` here.
`copy-groth-params` is the correct name. It is used in a couple of places.
This should be a `before` block.
Should this be `dont_listen`?
Can we just return `List<clang-diagnostic-'` instead?
I think this should be `min_length`
@deads2k do we want to keep this?
This is a little confusing, why did you change it?
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
This should be `@private`
I think we should use `journalPausedFromConflict` instead of `journalPausedFromConflict`
I think we should keep this around and remove the `if err != nil` check.
I think this should be a tuple.
Why is this needed?
Is it possible to have a test for this?
Why are we calling `tx_begin_read` here?
I think we should make this a property of the `setup-tag` and use that instead.
This is a bit dangerous, as `op_data[1] == 0` is not null. It's not an error. It's not an error, but it's not.
nit: `while(offset + bound / 2, offset + bound, length)`
I think we should just serialize the value of the `fullResult` and not serialize the value of the `raw` instead.
Why is this `security`?
This should be in `config`.
I'm not sure if this is the right place to put this in the if block?
why is this removed?
This is a bit of an unrelated to the PR. I think it would be better to have a `current` function that returns the ref.
I think this is not necessary because if we remove the `if` we will always be able to remove it
I think this is a bit confusing, since the `ex` is not a valid example, it's a valid example, so I think it's better to just use the `ex` and use the `current_example` directly.
Line is too long. [81/80]
I don't think this is needed.
Please use `Objects` and `MoreObjects` instead.
This is a breaking change. I think the mock is `mocks`
this is a bug fix, we should not use this in the `id` tag.
the one in the message is a bit confusing to me.
I think this is the only place where `joplin` is used is when `process.argv.indexOf('joplin')` is true.
I think we can remove `id` from here and remove `created_at` above.
let's add a line break before and after the comma.
This is a very good thing to change. The `/lib/zfs/zfs/zfs.go` file is `/lib/zfs/zfs/zfs.go` and `/lib/zfs/zfs/zfs/zfs/zfs/zfs/zfs/zfs/zfs/zfs/zfs/zfs/zfs/zfs/zfs/zfs/zfs/zfs/zfs/zfs/zfs/zfs/zfs/zfs/zfs/zfs/z
I think this is not needed.
I think it would be better to use a `Set` for the `membersStats` object.
Is it worth adding a note that the video trail isn't used?
This is the only place where I'm used `axe.configure` in the `onload`. I'm not sure if it's worth it.
This rule can be removed.
I think this should be `Source.Status`
I think this is not needed.
Use the new Ruby 1.9 hash syntax.
this should be `return nil`
Why is this Boolean?
I think this should be a different type of error. The `window` window is not in the `window` window, but the `default` window is in the `window` window.
I think this should be `Task`
How about `e.Now()`?
Line is too long. [81/80]
`json` is not used anymore.
Is this the same error?
I think this `@` is the right place for this. The `typing` part is not needed.
This is a breaking change, right?
I think we should be able to use the existing `h2o_http2_wbuf_buffer_prototype_t` constant here.
This should be a `spec.spec.satisfies()`.
This is a breaking change, but I think it's better to keep the `hdr` property as it is.
This class is only used in one place, so it's probably best to remove it from the `WebDriverException` class.
Is this necessary? It looks like we're using the new object to create a new object.
Please add the `TranslationAdapter` class to the `PlatformAdapter` module.
This is the wrong place for the `nullable` function.
`selectColumns` is not used in this class.
Should this be `BoostByQuery`?
This is the only place where we use `self[:platform] =~ /cisco-5/` is the correct thing to do here.
The secret name is already a number of secrets, so I would say "SecretPrefix is the number of secrets used to form the complete secret"
We can't change this, but it's not a valid value. `slaveOk` is `object`.
Style: Typically, we need to make sure that the API changes in the API won't be in the right place. Can we make it `nil` or `nil`?
@pabloem - Is this a bug fix?
remove empty line
Can we just use `bufferSize_as_ulong` here?
I think this is the only one that's the correct thing to do here.
This is a breaking change.
This test is not really testing what we want. I think we should test for the `report` spec.
I think this is a good change.
Please revert this change
This test is testing the same as the one in `TestAuthenticate_WhenSignatureIsEmpty`, so I think we should use that instead of the hardcoded string.
I think this logic is not related to this PR, but it's not related to this PR.
This is a breaking change.
I think we should be able to use `.by_topic.name` here instead of `.topic_name`
This is a breaking change, but I think it's better to keep the build_package function as it is used in the build_package.
Code standards: Please wrap operators with spaces.
I think we should use ExpectedCondition.Expected Condition.contains(boolean) instead.
This import is no longer needed.
I think we should add a check to make sure the user is not run in the test.
This should be removed. The reactive version is in #ifdef
I think we should just pass in `diagvingMethod` to the instance. It's not clear what the instance is doing.
I think we can remove this and use `volatile` in `setUp` and `setUp` in `setUp` and `setUp` in `setUp` and `setUp` in `setUp`
The default value should be 1.4.1
This should be `errno_val`
I think we should just make `i.ch.ServiceName()` the handler and `d.ch.ServiceName()`
I think we should be able to remove `StdinFilename` from `io.prestosql.spi.core.rest.TagList` and just use `io.prestosql.spi.SinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSinceSince
I think we should be able to use the `time.Canceled` constant here.
I think this should be `hostName, tlsClientConfig, false`
this is not used anywhere?
I think this should be `public_Condition_auth`
I think this should be a constant
please use Ergonode\Core\road()
I think this import is unused
This should be a part of the config file.
I think we can keep the go-mega import.
I don't think we should be removing the `sonm-io` import from the package.
I think this should be `e.getMessage()`.
I think this is fine, but I think it's better to use `index[str]` instead of `index[str]`.
Does this mean we can't log it?
Is this log necessary?
I think this is not the right place to put this.
This function is only called in `Status` so I think it should be moved to `err` so it's more clear what it's doing.
What's the default value for `null`?
I think we should be using the `getChromePath` function here.
I think the name of the method should be `@SuppressWarnings("unused")`
this should be `caddy.LogDestination`
Can you move this import to the top?
Why do we need to add452?
What is the purpose of this? Can we just use `!SR` instead?
I think we should just remove the `3kb` from the old version.
I think this is a good idea. The type of the `VK_` prefix is `ID_` in the `VUID-VkDescriptorUpdateTemplateCreateInfo-templateType`
I think we can remove this from here, as it's only used in the config file.
I don't think this is needed.
Is this line needed?
can we add these to the `before_action` file?
Can we just use `statusPED` instead of `EXECUTION_STOPPED`?
this is a private test, not Provisioners
Uhm, I think we can remove the `lmdb` and `fd` here.
I think this should be imported before the "STORE" module, otherwise it will be imported after the "render" module.
#getKind() is a cue, so you can get rid of the type using {@link #getKind()
This is a bit of a hack, but I think it would be better to use the `<button>` tag.
This should be `Particle_VID`
I think this is the only change that will make the `vStringTruncate` call.
This is a bit of an odd change. It is not possible to connect to the peer, but I think it is better to keep it as it is.
I think this should be `timestamp > 0`
Is it necessary to check `t.PrivateKey` here? I think it's a nil-error, so it's not a nil-error.
This is a breaking change.
@matt-gardner, what do you think about this?
This is a debug statement.
Why is this needed?
I think this should be `generate_special_or_mx` instead of `generate_special`
Line is too long. [86/80]
I think it would be better to use `info` and `finest` here.
I think we should be able to remove this and use the `toExternalForm` method in the `Class` method.
import in wrong section
why not use `func`?
Why is it changed?
This is a bit of an unrelated change, but I'm not sure it's worth it.
Why is this removed?
The `$this->dateConverter->convertToDisplayDate` method is called twice, so it should be removed.
just curious, why do we need Vue from Vue?
Why did you change the type of `float` to `model`?
This is a bit of an unrelated change, but I'm not sure it's worth it.
this should be reverted
I'm not sure this should be debug? It's a debug message.
This is a bit of an unrelated change, but I think it would be better to use `Timestamp.Timestamp` instead of `rdl.Timestamp`.
Why is this change needed?
I'm not sure if this is the right fix.
I think this test should be testing the right thing to do, since the test is not testing the right thing.
Shouldn't this be `allocate(KOKKOS_ENABLE_PROFILING)`?
Why are these changes necessary?
Why are we removing this?
> I think it should be 0 for maxBoundDescriptorSets - 1. I think it should be 0.
This should be `gboolean` instead of `null`
Is it possible to get rid of the filter?
This is a breaking change. The `ReconcileBootstrapData` method is now unused and can be removed.
I think this pylint is not needed.
I think this is the only place where we need to do this.
Line is too long. [86/80]
Nit: I think this import is unused.
This is a bit of an unrelated change, but I think it's fine to leave it.
I think this is the only place where we need this change.
I don't think this include is needed. We don't need to get it in this PR.
The new version of the best solution is to use the new version of the best solution.
I think we should just use `s2` here, as we do in `s3.1.0.0`
There's a typo here. `run_around_each_hooks` -> `run_around_each_hooks`
Maybe we should just call the seed on the seed?
This is a little confusing, as the `&` is a string, it's a string, and it's a string, so it should be a string.
I think we should remove this.
I think this should be a warning, not an error.
I think this is a good idea. It's not a good idea to use an empty list here.
Should this be `json:"owner_uid,omitempty"`?
This is a bit of an unrelated change, but I'm not sure what the best way to do this is.
nit: `<div name="pre" toySchema.pre(['save', 'findOneAndUpdate']`
Is this a breaking change?
This is the only place where we can use this code path.
This is the only change that affects the other PR.
I think this should be `localtime(&current)`
I think we should use the constant here.
This is not a big deal, but I don't think we should be using index here.
why change this?
I'm not sure if this is the right fix. The `fatal` variable is used to be able to handle the error and the `mrb_obj_value` is used to see the actual error message.
This test is not testing the same thing as the test below.
I think we should remove this whole file, it's not used anywhere
This is a bit of an unrelated but I think it's better to move the `common` into the `log.Fatal` package.
Please revert this file.
This is a change in behavior, but I'm not sure why we need to change the behaviour here.
> 10 * 1000 * 1000 * 1000
Please add the new dependency to the `dashboard-splash` folder.
why is this removed?
I think we can move this to `config`
I think we can keep this method and just call `sendKeys` directly.
I think you can just do `checkExprDepth(filter, deduceExprType(typeStatus));`
I think this is a bug fix.
I think we can remove this and just keep the old one as it is.
why not just use the `editors` class?
This is a bit of an overkill, but I think it's better to have a test for that.
Please remove this print statement.
I think this is a bug fix.
I think this should be done in `setCurrentSrc`
I think this is the right place for this method. The parameter name should be `IDParamName`
Remove this file.
I think we should use the `WindowWindow` interface here.
This is a breaking change.
This is a bug fix. The new behavior is to use the new `CountryField::FORMAT_ISO_3166_ALPHA3 === $countryCodeFormat` which is the new one.
This is a bit of a hack, but I think it's better to use `current_version` here.
@matt-gardner, I think we should use `time_range` instead of `search_range` here.
I think this should be done in the `else` block, since the `else` block is not needed.
I think it would be better to use `--conn_retries` instead of `--routes` for consistency with other retriess
I think this is a bit of an unrelated change, but I think it would be better to use a different name for this test.
I think this is the only place where we need to use ZMSImpl.class.
I think we should set the value of the test as part of the `ProcessJob`
We can remove this and use `ImmutableEthProtocolConfiguration`
I think we should use `Schema.isDiscovery()` here.
I'm not sure if this is the right place to do this. The `containerMetadataEnabled` is in `os.Getenv` and `ECS_HOST_DATA_DIR` is the right place to do it. I'm not sure if this is the right place to do it.
This should be done in a different PR, but I'm not sure if it's worth it.
I think this should be grouped with the other standard library imports.
This should be `pid_file`
I think this is the only place where we use 32/202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020
Is this used? I don't see it being used anywhere.
Is this key definitely not used?
Can you add a mock to the docs?
I think we should be able to use `cursor.options` here instead of `cursor.options` (and in the other places we use `cursor.options`).
I think this should be `mailhost.mail_unreachable`
This is a bit of an unrelated change, but I'm not sure what the best way to do this is. It would be to move the `Debug.Assert` outside of the `!_pinHandle.IsAllocated` block to the `Debug.Assert` block.
I think we can delete the defaultValue value here.
I think this import is not needed. You can just use `WordWidgetWidgetKeyword` instead.
I think we can remove the `locallocal` part.
@tgamblin I think this is the fix for #4109.
Why do we need to check for -1 here?
This is not needed anymore?
I think this is not the correct place to put this function. I think it should be called before the `Query` is called.
This is not a `auth` pkg.
This is a very good change. It is not possible to have a `Message` property in the `AsyncAsync` class.
Why not just call `mu.Unlock()`?
why is this needed?
This is a breaking change.
I think this should be `!`
This should include the daos_SPSP as well.
The ` --zero_count` is not a good name for this.
I think we can remove this line
This is a string.
I think we can remove the `CreateDefaultProfile` method from the `CreateDefaultProfile` method.
Use the new Ruby 1.9 hash syntax.
This is a pre-existing bug, but I'm not sure if it's worth it to have `kindBinary` as the default, and if it is not provided, then `cluster` is not used.
This is a breaking change.
I think this should be a `err`
Why is this change necessary?
This should be removed.
I think we should keep the old API and add a new one.
I think we should add a method to `deleteHostNetwork`
This should be `Tuple.of("stages_NOT_PERMattic_NOT_PERMattic_NOTNOT")`
I think this is the right place for this.
Why is this change needed?
This change is not related to this PR, but it seems unrelated.
This is a bug fix.
why did you change this?
I think this is not needed. We can use the `at WIND` constant.
How about `TPluginID_`?
I think this should be `enableClientFieldLoading`
Why did you remove this?
This is a good place to add the `exception` parameter.
We cannot remove the file if not needed.
Is this a bug?
Do we need this function? Can we just return an error?
It's not clear to me why we need to do this. It seems like we should just pass the `cpuCircuitBreakerThresholds` in the `cpuCircuitBreakerThreshold` and pass it in in the `isMemoryCircuitBreakerEnabled` and `isMemoryCircuitBreakerThresholds` in the `cpuCircuitBreakerThreshold`?
This should be `@RewriteFiles(Set<DataFile> filesToDelete, Set<DeleteFile> filesToAdd)`
Metrics/LineLength: Line is too long. [123/120]
I think it would be better to use `shortcuts.add(tr(category));` here
I think we should be using `Cause` here, as we are not using the snapshot.
I think this is the only change in this PR. It should be `HttpHeaders.CONTENT_LENGTH`
I think we should be able to remove the length check here.
This should probably be `assert_assert_assert` as well. We should probably have a unit test for that.
I think we should add a new handler to ensure that the handler is not closed.
I think we should remove this and use the default value in `HttpStatusCode`.
I think we should also remove the `universe` package.
I think you can just remove the `double EPS` variable.
Nit: we usually prefer to keep imports sorted
This is a breaking change. The `std::string *error_code` is used to pass the `*error_code` to the `std::string`
This is a bit of an unrelated change, but I'm not sure what the best way to do it is. It's not a problem, since the return type is `false` and `false` is `true`.
I think we should keep this for now.
I think we should also call `go.opentelemetry.io/otel/sdk/trace` here. Otherwise we can get rid of `tracesdk` and `go.opentelemetry.io/otel/trace`
Why are we returning a `null` value here?
(style) line over 80 characters
I think we should just remove this and the other `loggable`s.
How about `.to be` instead of `\n`?
This is a bit of a hack, but I think it's better to just return `s.first` and then just return `s.first.Release()`
why is this change necessary?
I think this is a good change. It's not possible to have a `AsyncLocalCompat` instance as a parameter.
`formatPrefix` is a little confusing with `format` here.
This is not the sync sync. It's a bit confusing. It's a sync. It's a sync. It's a sync.
I think we should add a check that the user can see their own own payment and they can add their own payment to the other file.
This change is not needed. The `https` method should be renamed to `TRAFFIC`.
This is a bit of an unrelated change, but I'm not sure how to fix it.
Should we use `backgroundCtx.GossipNode` here?
Why not use the `Account` variable?
I think this is a breaking change.
This should be a separate PR
This should be a `boolean`
This is a bit of a hack, but I think it's better to be more specific than the `REGEX E` option.
What's the reason for this change? I don't think the `11` is needed for the test.
This is a bug fix. `isset($metadata['associationType'])` is always true. `isset($metadata['associationType'])` is the default.
I think this is the only change that affects TF providers.
I think this is the only place where we use `allUsers` in the future.
You should use `verbose` instead of `verbose` for this.
I think we should add a description here.
Align the elements of a hash literal if they span more than one line.
Is this a bug fix?
This needs to be {{env
I think this should be a separate PR
I think we should add a doc for this new parameter.
Would it make sense to move this to a `before_action` block? `#50` is already defined in `before_action` so that it can be used in other languages.
This is a bit of an odd change. The `SimpleSimple Storage` is not the same as `SimpleSimple Storage` but it is the same as `SimpleSimple Storage`
I think this is not needed.
I think we should add an index on the `spec/services/` table to the index model
Why not use a map instead of a list?
I think this is not needed anymore?
I think we should be checking for `0.12.6` here.
I think we can remove this?
I think we should log the entire message here instead of the actual String.
This one is wrong, we have the same test in the other place.
I think this should be `setup_profiler` instead of `setup_profiler` right?
I think this should be removed?
This package is not used anymore, so we can remove it from the build itself.
I think you can remove the `LDR_MODULE_64` check and just do `return NULL`
This function is unused.
I think it would be better to just make the `static` prefix the same as the one above.
In general, we should use attemptsCount here.
I think this import is unused.
I think we can remove this interface.
I think we should remove this `div` class entirely.
I think we should just pass the remoteHostIsNonLocal into the remoteHostIsNonLocal so that we can pass the remoteHostIsNonLocal to the remoteHostIsNonLocal.
I think this should be moved to the `isOwnerStack` check instead of the `isOwnerStack` check.
This is a bit odd. I would just add a `package_stats` field to the list.
This is a bit of a hack, but I think it's better to keep it as it is. I think it's better to keep it as it is. It's not clear what `_auto_indexable` is, but it's not.
I think we should keep the original version as the last one.
This should be `abort()` instead of `_`
This is a little confusing, as it will return the right error if the user has changed the code.
I think we can get rid of this `ws.ToNew()` call
This can be removed.
@matt-gardner, I think this is the right place for this. I'm not sure if it's worth it.
We should probably add a `TODO` here to make sure that datasets is not available.
The default is `true` here. We are going to want to provide an error if we are not going to use it.
This property is not being used.
I think this is a little confusing. I think it would be better to use `receStoragePoolClaim` and `receStoragePoolClaim` in the future.
@cwangdi1 @n3nash @bvaradar We have a better name for this config. I think we should use `config.max` instead of `config.max`
I think we should just pass the default value here, otherwise it will be hard to find a way to get the default value from the config.
I think this is a good change.
This is a bit of an unrelated change, but I think it's better to use a `Filepath` variable instead of a `Filepath` variable.
why not just init_weights?
`String.format` must be valid.
why is this changed?
Space inside { missing.<br>Space inside } missing.
I think this import is unused.
This is a breaking change.
@mfojtik why not just remove the "invalid NodeIPAddr in Node config: %v" part?
Why is this change necessary?
Why is this test changing?
This change is not needed.
This should be `responseWriter.DEFAULT_NAME`
Is this needed?
@mfojtik why not "mining successive"?
Why is this import needed?
I think it would be better to add a `#add` method to the top of the file.
I think it would be better to use `*` rather than `use-starting-sequence-number`
Shouldn't this be `LockUtils::tagLock()`?
Why is this being removed?
This is not needed.
Can you include this include from `WebServer/Hcpp_env.h`?
I think this should be a separate PR
Why is translator being passed here?
This method is not used anywhere. It is only called from `Field`.
This is a bit of an unrelated but I'm not sure what the best way to do is is to have a `MailChimp` class in the `MAILCHIMP_EMAIL_ERROR_CODES` class.
I think this should be `if (!headers)`.
I think we should use `wlr_log_errno` here.
I think this file is not required.
This is a BC break.
@jridgewell I'm not sure if this is the right place to put this from the code base. I'm not sure if this is the right place to put this from the code base.
This is not the same as the `get` method.
The `Batch` is not a valid string.
This is a change in behavior, but I think it's better to make it a `Converter{}` instead of a `Converter`
I think we should add a check here to make sure the error is not properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly properly.
We should use `this.releaseDate` instead of `Date` here.
This was removed because it was already added by the connection in the PR
This is not necessary, we can use `in_array(basename(get_permalink()), $classes))`
Can we have a migration to make this a little more descriptive?
Why are these changes necessary?
This should be `true` and not `true` (and the `true` value)
I think we should be able to use the `keyboard_state.grab` here.
Isn't this going to be true for the transaction to be set in the transaction?
This should be `cascadeBy="bers"`
This should be `final`
@deads2k do we need to add this to `editInPlaceAnnotation`?
I think this change is not needed.
This should be a constant.
This should be removed.
This is the only change that affects TFM. I'm not sure if this is the right fix.
This is the only place where we're removing the default value from the ifdef.
why not use length?
I think we should use `Input.Namespace` here.
I think this is a bit confusing to me, as it's a bit confusing to have a field in the `before` method.
I think this should be `aria-query`
This is a public API. The only reason we're removing this is because we're not using it in the public API.
Is this a typo?
the generated by gowire is not a generated by APM
Why is this `true`? It seems like it should be `false`?
This is the only change that affects the case where the timeoutMilliseconds is Timeout.Infinite, but the timeoutMilliseconds is Timeout.Infinite, so the timeoutMilliseconds will be infinite.
Can you add a note about this?
I think you can remove this and use `java.travis.java` instead. Also, you can use `java.travis.java` instead of `import me.xdrop.fuzzywuzzy.FuzzySearch;`
I think we should just pass the gServiceAccount to the `corev1.ServiceAccount`
The `-j` utility class is used to implement this. The `-j` utility class is used to implement this.
This is a change in behavior, but I think it's a good idea to keep the old behavior.
nit: you can remove this if-else
Is this needed?
This is a bit confusing, as it is only used in `onStartSend`. I would also suggest to use `onStartSend`.
`actionHash` is not needed here, it will be removed from the `validate` method.
I think we can remove this and use `torch.ejs`
This is a bit of an odd name. It's not a good idea to use the "externalFormat" of the "externalFormat" of the "externalFormat" of the "externalFormat" of the "externalFormat" of the "externalFormat" of the "externalFormat" of the "externalFormat" of the "externalFormat" of the "externalFormat" of the "externalFormat" of the "externalFormat" of the "externalFormat" of the "externalFormat" of the "externalFormat" of the "externalFormat" of the "externalFormat" of the "externalFormat" of the
Why is this "running" removed?
This test was failing because of the sms messages in the test.
I think we should use `pathlib.com` instead of `pathlib.com`
This change is unrelated to the PR?
I think this should be `AutoFilesystemTrimUsage(request *api.SdkAutoFSTrimUsageRequest, error)` instead of `locally mounted volumes`
if we are not going to use the agent agent, we should use the new agent agent instead.
I think we can remove this
I think this is a BC break. We should not depend on the `merge` method.
This should be removed. OSRM_EXTERNAL_MEMORY, and OSRM_EXTERNAL_MEMORY are used in the other way around.
I think it is better to move the removed to the top of the file.
I think this test should be removed.
Is it possible to use `scale` as the default?
I think we should also add these flags to the `Map` and `MapMap` to the `Map` and `MapMap` to the `Map` and `MapMap` to the `Map` and `MapMap` to the `Map` and `MapMap` to the `Map` and `MapMap` to the `Map` and `MapMap`
This is a breaking change.
I think this is a good change. The `proto` attribute is `int` and `int` is `int` and `int` are `proto` and `int` are `proto` and `int` are `proto` and `int` and `int` are `proto` and `int` and `int` are `proto` and `int` and `int` are `proto` and `int` and `int` are `proto` and `int` and `int` are `proto` and `int` and `int` are `proto`
I think we should use `const` here.
I think it would be better to use `self.underlayer` here instead of `self.seq`
This is a breaking change.
I think this migration should be in the `on_mysql` method, since it's only used in the `if` statement.
Maybe we could just make this a `adjustment_ADJUSTMENT`?
I think we should just remove the FlowReference parameter from the map. The FlowReference parameter is not used in the map.
This is a pretty big change.
I think this is a leftover
This is a change in behavior, but the feature maps doesn't have a `torch.Tensor` field.
I think this is the only place where we want to support this change.
remove empty line
Same here, use `std::stringstream` instead.
I think we should use `FactoryBot` instead of `let` for the `let`
I think we should use `url($uploadsPath) . '/'` instead of `asset`.
This is a breaking change. It should be "builtins"
I think we should add a note about this for now, but I think we should add a note to the docs that this is not a problem for the user.
This is a bug fix. The only difference is that `120` is the correct location.
This is a breaking change. It's not a big deal, but it's not a big deal.
I think this line is redundant
I think we should be able to remove this check.
Maybe we should just call this `indexed`?
This is the wrong place for this. The previous code was just passing the `CheckTimestamp` to the `timeNow()` function.
I think this should be `short_version[0]`
this is a change in behaviour?
Why not `org.apache.iceberg.StructLike` ?
Is this not needed anymore?
2015 vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs vs
This is a bug fix.
Why did you change this?
This is a change in behavior, but the `json.RawMessage` is not being used here.
I think we should keep the CNI as it is. We can't use it as the default. We can also use it in the `cni.version.All` method.
I think we can remove this line
This should be set to `NetworkService` in the next line.
I think this should be `ts.TaskStatus`
I think this is a bit too much. What about `#ifdef _current_user_id`?
I think we should just remove this and use the `PluginConfig` field in the `Log` instead.
I think we can remove `NoError` now that we're now passing it in.
I think this is a good change.
I think this is a breaking change.
Why is this change necessary?
I'm not sure this is the right place to put this.
I think this is the only change in this PR.
This is a bit of a hack, but I think it would be better to have a `dict()` method that takes a `dict()` and then `dict()` and `dict()` and `dict()` methods.
why not using `if`?
Please remove this.
Is this change needed?
Is this a BC break?
I think this should be `asyncServer`
I think we should use `pip.pip.pip.pip` here.
This is a change in behavior, but I'm not sure why we need to do this.
I think this TODO can be removed.
I think this is a bit of a hack, but I think it's not a good idea to explicitly check for `and` here.
I think this should be `normalizeIdentifier`
I think it would be better to use the `safeMode` model instead of the model.
I think this should be `if (is_rangeObj, True)`
This is now dead code
should be `if (mrb->exc != NULL)`
I think we can remove this `gocoverutil` parameter.
I think this should be `private`.
I think this should be a parent
This is a bit of an overkill, but I think it's a little confusing to have a method called `user_hash` that returns a boolean.
`@out_variant` is set to `undefined` so this will be set to `undefined`
I think we should just return the error and do the `c.Error` in the `err` instead of the `err`
This is a change in behaviour.
Nit: remove empty line
For consistency with the default 65536, should be `block_processor_full_size`
This is a breaking change.
Why is this removed?
The `!` should be removed.
I think this should be `FPGA_INVALID_PARAM` and not `return FPGA_INVALID_PARAM`
This include should be removed.
need_unmap to be a map?
I think we can remove the `cm` import now
I think we should make this a `boolean` and use it in the `acquireTopologyCache` interface.
This is a good place to change the behavior of the `Dispenser` to `Dispenser`.
What is the cast of str here?
This file is not used anymore.
shouldn't this be `null`?
why did you change this?
The SVG is LTR, force text to be RTL.
It's not clear to me why we're not using the `AWS` variable here. I think we should just remove the `AWS` variable altogether.
I think this is the wrong place for the `if len(check_commands) == 1:` -- the `if` statement is not needed.
This should be `full_backtrace`
This file is not used anymore.
I think this should be `mitmproxy.version`
No need for an example here.
This should be `from pylint.const import PY310_PLUS`
Should we return an error here?
This is not a good idea. You can use `!reference.get_row_count()` instead.
I think you can remove the assert here.
I think we should just remove this and the other `'vendor/attr-polyfill.js` files.
I think we should keep the original version as it was before.
Maybe add a `TODO` here?
This method name is unused and can be removed.
I think this should be a `my.mysterium.network API`
I think this should be removed.
I think it would be better to use `ISet<AnnotatedCodeLocation>`.
I think you can import the `config` directly from the module.
I think this should be a `Set`
I think we should add a `TODO` here to make sure we don't have any other option to do this.
I think this should be a `Search.prototype` instead of an empty collection.
What if the null is not null?
@nmittler - Is this a bug fix? I think we should be able to remove this.
This is a bit confusing, as it is a string, and it is not a string. I would suggest `str(input)`.
I think this can be removed.
I think this is a bug, if the `appErr` is `wire.Error` it will be `wire.Error`
Can we use `ap.EXPECT().TipHeight()` here?
I think this is the only change that affects the server side.
I think this should be `False` instead of `class_agnostic` (or similar) since it's a `list`.
Why is the name "pos" here?
I think it would be better to have a enum as a parameter, and then use it as a parameter.
I think we should remove `next_document` from the `search_session` action.
This is the only change that fixes the bug. The reason is that if we're not using the same path as the last thing, we should be using the same path as the first thing, and then the second thing to be the last thing to do.
Does this mean that we have to use the `REG_##reg` in the `instrlist_last` function?
I think we should remove this and use `<html>` for the `title` tag.
This is the only change that affects all the tests.
I think we should add a `*SecurityGroup` field to the Security properties as well.
I think this import can be removed. The previous one is used for the new one.
we should log the info info in the info level.
this import should go before the other stdlib imports
I think we should check if value_env is set to true, otherwise we will not be able to set value_env.
I think we should add a `Subscriber` to the `Message Delivery` package.
I think it's better to use `_Name` here, since it's a `\n` in the `shared` package.
Nit: This should be a single line string.
This is a pretty big change. I think it would be better to move the ResolveBranch to the top of the method, since it's not really a big deal.
This is a breaking change. We should not be using the `<T>` as the default.
Nit: remove empty line
This is a bit of an unrelated change, but I think it's worth it to return an error here.
I think this should be a bool, not a bool.
I think this should be done in `load_status` instead of here.
This was the only change I made to make to make sure I'm not mistaken.
I'm not sure this is the right fix. The first step is the first step, but the second step is the second one.
is this still necessary?
I think we should also add this to the `Caddy_rewrite_original_rows` below.
@deads2k do we want to change this?
Shouldn't we also remove the `chromeOptions` constant from this class?
Why is this being added?
@deads2k do you have any idea why we should be a helper function?
This is a breaking change. The `req.version_ref` function is only called when `req.version_ref()` is called.
Is this used anywhere?
This is a change in behavior, but it seems like a change in behavior. Why did you change this?
I think this is the right place for this. It should be `href` or `index.html`
I think this should be done in a separate PR, right?
We should probably change the description of the `Content-Type` to `requireSegmentAsync` so that it can be removed from the usage.
I think we should keep the old method and use the new one instead.
I think we can remove the `https` and `https` here.
It's a good idea to use `2018` instead of `201` to build the same file.
Standards: Please add a space after commas.
You can remove the `Plugin` here.
Please remove the new line.
I think this should be `@since`, right?
I think this check is redundant because `!` is not needed.
I think we should be able to remove the `sign_in_as` call here.
Odds aren't used anymore.
You can use ` tagKeyconsider` instead of `StringArrayComparer`
I think this is a good idea. We should be able to use the same function for all the output.
I think we should just pass in `listen_count` and `have_exact` to `listen_count` and set it to `False` in `listen_count`
`add_transfer` is used in the docstring.
This is the only line that was removed.
I think it should be "server_command" instead of "server_command". The value of `sftp` is a bit confusing. Maybe "server_command is ignored when server_command is defined"?
Why did you remove this?
I think we should return the error here, as we do in the other places where we are returning the error.
Is this file still needed?
Same here, this is not needed.
This is a bit of an unrelated change, but I'm not sure what the best way to do this is.
this is a pretty big change, can you add it to the changelog?
I think we should set `SecurityGroupOverrides` to nil if it's not nil.
Shouldn't we have a dict here?
I think this should be `dom.insertedIntoFocusOrder`
I think we can remove the `identity` import now.
I think you should just be able to use `Password` function here.
Does this mean we can't use `encode` on the `.start`?
@jridgewell Is this change intentional? It seems like we should be using the `eclipseFormattingEnabled` if we're not doing anything about it.
This is the wrong place to put this. `orig_mocks_syntax` is already in the `orig_mocks_syntax`
I think it should be `2013D`
I think this is still a good idea, but I think it's better to keep the old behavior.
@jridgewell Is this what you intend?
I think we should also check if the user has been started.
I think it would be better to use `0.0f` here instead of `0.0f`
I think this is a good idea. It's not a big deal, but it's a little hard to see.
do we need to handle the error here?
does this need to be public?
Maybe we should log the error here?
I think we should use `<providerReference>` instead of `<video>`
I think this is a leftover from the previous commit
why is this being removed?
I think it's better to use `getFocusable(INFNode)` instead of `getFocusableElms`
This is a pretty big change. I think it would be better to use `_format_msg` here.
This is a breaking change.
I'm not sure if this is the best way to go. I'm not sure if this is the best way to go. I'm not sure if this is the best way to go.
I think this should be `fetchMock_enabled`
should mFolder be null?
I think we can drop the `text_only multipart` part and replace the existing `multipart` column with a new column.
This is a bit of a hack, but I think it would be better if we could just use `lower()` here instead of `return`
This is not needed. `self.dummy_response` is already called in the `time.Duration` file.
I think we should also check for the `EnableBlockServiceFallbackToArchiver` field.
This is a bit of an odd... why are we passing the node here? I think it would be better to pass the node here as a parameter.
I think this is the only place where we should be using this method.
This is a bit unrelated to the PR, but I'm not sure about the change here. The idea is that if the file is not available, we should be able to remove the `toInputFile` from the `get` method.
I think this else can be removed?
I think this should be reverted.
@jridgewell Is this a problem?
I think we should keep the old label label, as it is used in the `container` label.
Shouldn't this be `recurse`?
@dvoytenko I'm not sure if `clone` should be here, since `xdensity=element.xdensity` is a `clone`?
It's not clear to me why this is necessary.
I think this should be `PciIo`.
Please use ` />'` and `metrics` for these.
I think we should remove the `else` branch.
Can you use feedback.NANOS.TestTestCase and feedback.s svc.
Can you change this to `1004, 1000`?
Why are we passing the entire set of input vars instead of sorted?
Why is this change necessary?
Do we need to add `.split` here?
This is a bit of an unrelated but I think it would be better if we moved the intercept-build into a file.
I think we should rename the method to `EnablePipedRequest` to make it clear what the method is.
what is the difference between this and the two?
I think we should also keep the flushcount in the loop.
This assertion is not correct. The `NullRepository` is already checked in `Test`, so it should be removed.
Is this a breaking change?
Why is this removed?
I think we should add `addMapping` here.
This is a change in behaviour.
I think this is not correct. The `if` can be simplified to `if not subs != ""`.
Nitpick: we usually use `core` instead of `core`
This is a breaking change. It seems like we should be using the `limit` instead of `limit` here.
I think we should add a `Resource Groups Tagging API` to the `try-with-pos` folder.
I think we should remove this line
I think we can remove this
I think this is the only one that is needed.
The `configs` field is not used anymore.
This is a breaking change. It's not a problem, but it's a real problem.
This is a bit odd, why is this a function?
Can we use the method name here?
I think this is the only change that affects TF providers.
Is this needed? Isn't `IsDone()` already called in `IsDone()`?
shouldn't we return the error?
I think it would be better to use `nextSibling` instead of `==`
Why is this removed?
This should be `CreateCounter<long>`.
This is a bit of an unrelated change, but I'm not sure why we need to set the nullptr here.
I think this is the only place where we call `t_p_Publisher` in the `init_instance` method.
This should be added to the `make codegen` section.
`node.getAttribute('title') || '';` is the same as `APP.sanitize(title)`.
This is a bit of an unrelated change, but I think it would be better to use `ParentChildrenSyncTargetHelper.Relationship` instead of `ParentChildrenSyncTargetHelper`.
I think this is a bug. It should be `self.available_slots = sys.maxsize`
I think we can remove this line
This is a breaking change, but I think it's fine to leave it as it was.
remove empty line
I think we should probably move this to the `switch` section above.
Is there a reason why we wouldn't want to retry when the result is not set?
This test is still testing the actual test case.
I think this is the only place where we need the '-_' in the test.
Remove empty line.
This is the only change I'm not sure about. I'm not sure if this is the right fix.
This should be `static` and `[Fact]`.
I think this should be `else if`
I think it's better to use `DisableEndpointHostPrefix` instead of `DisableEndpointHostPrefix`.
why is this changed?
This is a good change. The password will be empty, which is not the default, so the user will not see the default, and will be set to `new` when they are empty. The same is for `ReadPasswordTwice` above.
I don't think this is needed.
This is a bug fix.
GraphType cannot be used here.
Why are we using EntityRepository instead of EntityInterface?
This should be `getPos`
@jridgewell Is this what you meant by @patrys?
I think we can just make this `public const int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int
What do you think about moving this TODO to a separate method?
I think we should leave metrics in here, as it is the only place where we use metrics in the metrics.
I think we should use `processor.IsNonInterval()` instead of `pushIntervalInSecs`.
I think we can remove this and use `Gas` in all caps
Why is the span no longer a string?
I think this is the only change that fixes the issue. The `go_native` check is used to reset the `wait_at_safe_point` check.
This is a bit confusing, as it is the `mPanelDialog::accepted` and the `panel` are the same. I think it should be `connect(this, &ConfigPanelDialog::accepted, this, &ConfigPanelDialog::accepted, this, &ConfigPanelDialog::accepted, this, &ConfigPanelDialog::accepted);`
I think this is a good idea. It's not a problem, but it's not a problem.
This is the only change that affects the server side.
I think this should be `node.tagName.toLowerCase()`
This is not right. `snapshotListCommandHelpText` is only used in `client/server/server/server.go` and `client/server/server/server/server.go` and `client/server/server/server/server/server.go` and `client/server/server/server/server/lib/lib/lib/lib.go`. I think it should be fine to just use `snapshotListCommandHelpText` here.
I think we should keep the pb pb and use `spb` instead of `stpb`
This is a public function.
What is the rationale for removing this? I don't see why it's needed.
Can we just remove this?
I think this should be a separate change, not a part of the PR.
We should probably change this to something like flash.now.approved?
I think this is not needed. The parent class is already on the parent class.
I think this is a bit confusing. How about just saying "sample / arm64"?
I think we should use the new `default` method instead of the new one.
The error is being returned from `updateOrderStatus` to `update Order` being returned from `this.endation`. The error is returned to the user, so we should be able to update the Order from `updateOrderStatus` to `false`.
Why not `Errno::ECONNREFUSED`?
This is a bit of a hack, but I'm not sure what the best way to do this is. The project project is going to be used to implement `project_cache_throttle_percentage` which is the default.
Maybe we should move this method into `ListPowerSelectorEntries`?
This is a very specific type, I think. I would prefer to use `type UVarint` instead.
I think we should add `argument` to the end of the list.
I think it's better to use `NonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNonNon
I think we can just put this in the `add_index` model.
I think it would be better to use Windows Sysprep, and only use Windows Sysprep.
The test is not really testing what it does. It should be `autoStake = true`
Why not `\DateTimeInterface`?
Nit: I'd move this to a constant. It's used in other places and it's used in other places.
I think we should check if s.Txn.Src() is not supported.
I think it would be better to use `padding: 0` instead of `padding: 0`
What about `randomState.randomBoolean() ? new FileNotFoundException(name + " in dir=" + in in ...)` ?
This is wrong. You should be able to use current_collection_id here.
I think we should use the same constant for all the other variables.
wtimeout and timeout don't exist anymore?
This is not a good example of how we call `get_event` with a lambda.
`const iota - 5` is the default value for `Errno`
I'm not sure this lock is necessary. The `appenders` lock is already being called on `this`. The `appenders` lock is already being called on `this`.
This is a change in behavior, but I think it's better to use the `ClientInfo.ClientConfig` helper function in the `ClientInfo.ClientConfig`
This is a change in behavior, but the res file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file file
this is a private function, I don't think it's necessary to change
This should be `Microsoft.Naming` (and `Microsoft.Ex`)
I'm not sure why this line is needed. The previous line was removed.
You can use math/rand here.
this should be `logxi.v1`
I think you can remove this line as you have added the `getUNF` above.
@matt-gardner, I think this is the only change in this file. I'm not sure if this is the right fix.
I think we should add a `@config` annotation here.
allowOptionalMappings seems to be a better name. It's more clear what it means.
Default should be None.
I think the `Export` is not needed here, it is not used anywhere else.
This is a bug fix. You should probably just make a `UDSServer` API that is not used.
This is the main change. It is not possible to return `null` if `articleId` is null. If the `if` is not `null`, then the `if` should be `null`.
I think this should return `this.map.to(this,arguments)`
This is a bit of an unrelated change, but I'm not sure what the best way to do it is.
This should be a separate commit
This should be done in a separate PR
This seems like it should be a function.
I think this is the same as `negLL` in ` among amongelihood`. In other words, if we are going to use `negLL` in the metric type, we should use `_` in the ` amongelihood` instead.
I think this should be `repr != null`
This is a bug fix. It was not related to this PR, but it was a bug in the PR.
Why is this needed?
Why are we not using `config` in this package?
I think you can just remove the `CertificateRequest` function and use `SetAnnotations(resolve)`
I think we should be able to remove this method entirely and just use `Identifier_id` here.
This is a bit of an unrelated change, but I think it's better to use `break` for the `===` case.
This is a breaking change.
This is a bit weird. What if `key != nil && key != nil && key != nil && key != nil && key != nil && key != nil && key != nil && key != nil && key != nil && key != nil && key != nil && key != nil && key != nil && key != nil && key != nil && key != nil && key != nil && key != nil && key != nil && key != nil && key != nil && key != nil && key != nil && key != nil && key != nil && key != nil && key != nil && key != nil && key != nil && key
It's should be relative imports.
I think we should use `setProduct` here.
I think we should be able to remove this in the `mrb` branch. The `require \"preloads` branch is already in `mrb` branch.
Extra empty line detected at block body beginning.
This is a bit of an unrelated change, but I think it would be better to use `if (isNullOrEmpty(false)) {` instead of `if (isNullOrEmpty(false)) {`
I think we can move this to the top of the file, since it's only used in `pkg/spec/resources/deployment.go`
`CustomClientAuth Auth `json:"-"``? I think it's better to use `CustomRouterAuth Auth `json:"-"`
We should probably add a note here that IMvxFormsViewPresenter is not initialized in IMvxText.
I think this should be `typeof child=='number`
I think this should be `|| rawErrorData.containsKey(STACK_TRACE)`.
Shouldn't we also check for `InitAddress` here?
This is a public function.
I think this should be set in the `zoom.fuzzyval` function, since it's a member of the `zoom` object.
I think this should be `bool ignoreDecoys=true`
`chan map[string]Result` is the correct type here.
This is a breaking change. It's not a problem, but it's not a problem.
why is this method being removed?
I think this should be `r.HTTPResponse.StatusCode.NewRequest`
Can be `final`
Why not use the `muflihun.com` package?
I think it would be better to use `map[string]` instead of `string.Trim`
This is not a good place to remove this method. The only thing I'm not sure is that the method is used in the `tablet` method.
This will be needed if the version is not empty.
Does this patch apply to all versions of the same patch?
This is a change in behaviour, but it is not related to the fix.
Please add a space between the two lines.
I think we should have a docstring here. If we want to make sure that we don't have any list comprehension, we can get rid of the `list()` function.
I think we can just remove this whole function. It's not clear what the pylint disable means.
I think it would be better to use `FORSETI_HOME` here, as it's a default value.
This should be `False` as it is used for the return value.
(style) code indent should use tabs where possible
I'm not sure if this is a good idea. It seems like we should be using `*` instead of `vmware_fusion`?
Can you add gitea copyright line to header (and keep gogs one next to it)?
I think we should be able to use the `sampler` class name here.
I think we should be able to get the `err` from the `err` here.
Is it correct that the user will not have a `nc.Repo`?
I think this import is unused.
I think it would be better to set the `tables.lock` field in the `run` instead of the `tables.lock` field.
Doesn't it work with the `package.json`?
This is a bit of a hack. I think it would be better if we moved the test into a common folder and then call `getClass().getName()` on it.
This check should be done in `addedBinary` and `true` if the column is not found.
I would use `compute_service_account` here.
This will not work. You're not using the `element` attribute in the `<AutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAutAut
This is a bit of a hack, but I think it would be better if we could use `<a tabindex="-1" href="uppy-Dashboard-poweredBy">Powered"`.
I think it would be more consistent with the rest of the tests (e.g. `numpyImage = itk.Vector[itk.UC,2] and `output_pixel_type`).
Should we do this in `NewSubWorkflow`?
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think we should use `rank_input` here.
why do we need to pass the config here?
I think we should just do `st` here, since we're not doing anything else.
This should be done in a separate PR
Align the parameters of a method call if they span more than one line.
I think we should add a note about this in the future. If we do want to add a note to the `beat/` folder, we should add a note to the `beat/` folder.
Line is too long. [90/80]
I don't think this is a good idea.
nit: could use `curSchemaSumary != null`
This is a breaking change.
This import should be above the other imports.
I think it would be better to use a different name for the new `getFullscreen`
Please add a space after `,`
I think we should remove the whole `if` statement.
I think this is a bit of an anti-pattern, since `explain` is already in there, and it is not a property.
I think this file should be removed
I think this needs to be a public constant, since it's not a public method.
is this a bug fix?
Add link to the doc.
I think we should be able to use `!` instead of `value.empty?`
I think this is not needed.
I think it would be better to move this to `client.Info()` so that it's more clear what the identity is doing.
I think this is the only place where we setPropertyID is used, we should probably remove the propertyID.
This is a bit of an odd name. I would suggest to add a `fail_ptr` or something like that.
This is the only place where we use `logInfo` in the message, we use `typeof(this.node.getAttempt())` instead of `typeof(this.node.getAttempt())` in the message.
I think this is a bit confusing, as it's a `:links` field.
I think this should be `layers.append(self.__class__)`
I think this should be done in `api.go`
I think this is a good idea. It should be a warning.
I think this is a leftover from debugging.
This is a little weird. I think it would be better to use the `%q` format, as it's not really a string.
I think this function is not really needed. I think it should be `func indexByte(b, x, -1, -1)`
This should be MockDbType=Int32
Why did you remove the `\` here?
Please revert this file.
I think this is a bit confusing. I would have expected it to be a `getOpsNoAdd` method.
I think we can just use `c.debug.debug.debug` here. We can use `c.debug.debug.debug`
This is a breaking change. The only place we have the ConfigPath set in the app.GetConfigPath() method.
This is a breaking change. I think we should keep the old name and remove the old name.
Remove empty line.
This is a bug fix.
This is a bit of an unrelated change, but I'm not sure it's worth it.
Align the operands of an expression in an assignment spanning multiple lines.
I think this should be `Long=Long`
This is a bit of an unrelated change, but I'm not sure it's worth it.
why do you need this?
Should this be `client.ClientOption`?
I think we should add a note about this to the existing migration.
I don't think this is right, if we're going to use the `delta_from_revision` value, then we should just use the `fetch_from_revision` value.
I think the number of proposal is not 0.
why did you change this?
Since `#include <fmt/format.h>` is not used in this file, it is better to use `#include <fmt/format.h>`.
I think we can remove the `if` here and remove the `if` below.
I think we should check if the port was specified in -hub parameter
I'm not sure if this is the right fix. The only thing I'm concerned about is that the `auto *tautparams` is not the same as `users`, so I'm not sure if it is worth it.
This is the fix.
I'm not sure if this is the right place to put this code into the `atom` class.
Wait, why do we need to check `Sleep` here?
why change this?
`SpeedLabel` is a little confusing with `SpeedLink`...
I think we should be using `GetGetConfig` here, as we're not using it anywhere else.
I think this should be `cls=None`
I think this should be a warning instead of a warning.
I think we should save the entire entire file from the `autosave` class instead of just doing it here.
I think we can remove this method entirely and just call `identitySourceIds` directly.
Shouldn't this be `POST`?
I think we can remove the import statement from net.sourceforge.pmd.lang.java.ast as well.
We don't need to include this in the changelog.
This method should be renamed to `setUp()`
Is this a problem?
@jridgewell Is this a breaking change? I don't see any `config:"serverMaxSendMsgSize"` defined in the config file.
Metrics/BlockLength: Block has too many lines. [30/25]
The sequence id field and timestamp field are still `records` but the `id` field is `str`. The `id` should be `records. The file has 3 header lines that contain, and timestamp field. The `id` should be `records. The file has 3 header lines that contain`
This one probably needs a unit test.
I think the `req` test should be removed as well.
I think this should be a separate var instead of a separate var.
Why change to 16?
Can we use `./yolact_r50.py` instead?
I think this should be `setDisplayHomeAsUpEnabled`
This import should be removed.
This is the only place where we need to remove this.
This is a bit of a hack, but I think it would be better if we moved the `stdout` inside `indent(4, result.stdout)` instead of `indent(4, result.stderr)`
I think we should change `PythonSdkType` to `PythonElement`
I think this is a leftover?
I'm not sure if this is the right name. It's a `attachment`?
I think it would be better to use the `Class` parameter here.
Should this be a `boolean`?
This will be a breaking change. We should not be using `@Nullable` in the future. We should either use `@elementCount` or `@Nullable` to determine if the element count is a valid element.
I think we should be able to get rid of `c.buildActionMutex.Unlock()` and `c.buildActions` from `buildAction creates a build action` and `buildAction creates a build action`
This import should be above the params from above.
I think this should be a separate commit
This should be `time.mesh`
I think this is a good change.
I think we should add a check to make sure the property is set to false.
I think we should use `[a-zA-Z0-9_]+$"` here
You can use the NormalizerConfigPass() function instead of using the new NormalizerConfigPass()
Is this used?
Why do we need this? I think we should return false.
I think we should use `NewPeers` instead of ` AddPeers`
I think this is not needed
Should be iptablesRules
This is a breaking change, but I'm not sure it's worth it.
This is a bug fix.
What's the thinking behind this change?
Kind is a little confusing with the name of the struct. Can we rename it to something like VolumeSnapshot?
This should be initialized with `@SuppressWarnings("")`
I think this should be `auto & blocks = response.get_child ("blocks")`
I think we should keep the original original and just use the new one.
This should be done in a separate pull request.
I think it would be better to use a `log.get("buildInfoLogCxt", "buildDate", "version": buildinfo.GitVersion)` here instead of passing the entire `log.get("buildInfoLogCxt", "version": buildinfo.GitVersion)` as the default.
This is a test, I don't think it's a good idea to remove it
I think we should use `user.Get()` instead of `.Value()` here.
I think this is a leftover from the previous PR.
I think this is a leftover?
I think we should add a guard clause here to make sure the attributes are not passed in.
I think `import selenium.types as Any` is better.
remove empty line
This is not the only place where we need to show the `ResourceResource` in the `ResourceResource` method. The `ResourceResource` method is called after the `ResourceResource` method.
I think this should be `run_config["solids"]` instead of `self._solid_config`
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
Is there a way to test the current user-tests?
This is a bug fix.
I think we should keep the old name here.
I think it would be better to move this to `client.close()` so that it's not called anywhere else.
remove empty line
better to use `Bolt::PAL.load_puppet` instead of `Bolt::PAL.load_puppet`
I think we should use `CharCharSeq.getInput` instead of `padTo`.
Shouldn't we pass `custom_imports` to `momentum_config`?
I think it would be better to use `<%= question[:text][0].present?` instead of hardcoding the value.
I think we should not have `preload` here. We can't do it in the `preload` interface.
Why is this needed?
Why is this include needed?
There's a typo here.
`window.self.location` is not needed anymore, right?
This is the wrong place for this. The `ErrWorkspaceNotFound{}` is used to pass the `ErrWorkspace` instance to the `EXPECT` function. I think it should be called `EXPECT().Topics` instead of `ErrWorkspaceNotFound`.
This is the only place where we call `ShutdownAsync` here. I think we should be using `ShutdownAsync` here.
I think this is the only change that affects TF TF. The only thing I'm not sure is that the `unused` variable is used in this file. I think it's still necessary to change the `[undefined-variable]` variable to `undefined-variable]` in the `api.js` file.
This is a breaking change. It should be `session.SessionDto`
I think we should add a check to ensure that the user is not running in-flight.
why is this false?
This is the only change that affects the cleanup handlers.
I think this should be `homedir`
I think this is a leftover.
I think we should add this to the `initStreams` function.
I think this should be `final`
Nit: This is a separate commit, but I don't see any use of it in this PR.
Does this work? I'm assuming the `exc_tb` is a string, but the `name` is a string, so it should be a string.
`const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || (2 ** 53) - 1;`
Why is this change necessary?
I think this should be `import docker.utils as kwargs`
I think this should be `&&`
This whole block can be removed.
I think we should change the behavior of the `if (this.wait(sec * 1000) + 1)` to be more clear.
I think this is not right. It's not clear to me why we are not calling listener_ssl_reuseport in the first place.
Should be `@throws`
I think it would be better to use `zone.paramhelper(zone, "-")` here instead of `zone.nil` as the second argument.
I think we should use `.slug` instead of `.to`
I think this should be `+ System.lineSeparator()`.
This is a bit weird, why do we need to check for the string value?
I think it's better to use `@group_level + @group_level - 1`.
I think this should be done in the `SwiftASTContext` class as well?
This type is not used anywhere.
I think it would be better to use `bytes` rather than `bytes` for consistency.
I'm not sure if this is the best way to do it.
I think this file should be removed. The first year is the year.
I think we should keep the old behavior as allowedOrigins
I think we should use `Preconditions.checkNotNull` here.
The `$metadata['fieldType']` check is redundant because it is also used in the `attr` method.
@lisasy you should be able to use `UoE` here
I think it would be better to throw an exception here instead of throwing an exception. The exception is thrown by the caller and then throw it away.
I think we can get rid of this too.
I think we should keep the old name here.
I think this is not the preferred version of this. You should use `trim($this->mainConfig->Record->preferredMarcField, 'fullrecord']);`
I think this is the only usage of `numpy` in this file.
I think this should be `\n`
This is not correct. IsPathRootedPath returns a path, so we should not have a path.
I think we should change the status status to "Init"
This function is no longer used.
I think we should use `incorrect cluster` here.
This was removed because it was not used anywhere.
I think we should be able to use `TierPriority *int32` here.
We can't change the user's migration. We don't need to add the `:grant_id` column here
I think we can just use `winImageSVG` here.
I think we should also check if the environment variable is not set.
Nit: Perhaps use `stackDescription.Outputs` instead of `output.OutputKey`?
why is this deleted?
I think this should be `default: "{\"org\":[str]`
This file is not required.
I think we should add a `ns` flag to the `Customkin` method.
I think it's better to say "this is a vestigial will not be removed in the execution."
I think we should use the `places` keyword here instead of hardcoding the default value.
Should we log something here?
I think you can remove this and the line below.
I think we can import subscriber directly now, it's not used anywhere else.
I think this is a bit too broad.
This is a change in behavior, but I think it's better to move it to the `args` package.
I don't think this is needed.
Why not just pass the proposal ID here?
I think this should be `Baseline = true`
I think we should remove this now
@deads2k @stuhood @jglick Should we keep this in the `is` folder?
I think this is the only change that affects the test.
should we use `aws_x64` here?
I think we should be able to remove this from the `mpl_renderer.comms`
I think this is a bug fix. It should be `if node.modname is not None`
I think we should make this constant configurable. It's a constant that we can use.
this is a test I'm not sure if it is a good idea to test it?
Shouldn't this be `POST`?
This is a bit confusing, maybe something like `if self._input is not None`?
Is this change related to the PR?
This is a little hard to follow. I think we should be checking if the `debug` is `debug` and then check if it is `debug` and if it is `debug` it will be `nil`, and if it is, we should check if it is `debug` and if it is `debug` and if it is `debug` it will be `nil`, otherwise we'll get a `notice` error.
This is a bit of an overkill, but I think it would be better if the `address_string` is empty, and the `ffff` is empty.
Is it possible to get the proxy from the server?
The `validates_attachment_content_type` value should be `true` here.
This was the only place where we would want to call `Load` on the `DataContainer` class. I think it would be better to just call `Load` on the `DataContainer` class.
Would it be better to have a separate function for this? `export const ASYNC_RENDER = 2;`
I think we should remove this.
I think we should keep this test in case we want to test the actual behavior.
I think this should be `sizeHint != nil`
Why is this error raised?
I think this should be `[mapTo]`
I think `go-sqlite3` is a better name.
I think it would be better to keep the `isKeyName` method and use `$this->relationModel->getKeyName()` instead.
Do we really need this change?
I think it would be better to make this a `ListDeploymentConfigTemplates` function.
I think it's better to use `url_helpers.send` here
This is a bit confusing, as long is a string. It's not a valid string. It's not a valid string. It's a string, so it's not a valid string.
I think this is a good idea. It should be removed.
why is the order removed?
Is `Utils::calcUnscaledVdW` still needed?
can you make this a function of kdf.order?
I think this should be a constant, not a string.
This class is only used in one place, so it's probably best to remove it from the `WebDriverException` class.
I think it should be `clef-signer-enable`, not `clef-signer-endpoint`.
I think this should be `scss_css`.
I think this is a good change. It should be possible to have a way to set remote_hosts to False.
This is not a feature but a feature that is not used.
`@package` should be `@`
This is the only change that affects the redundancy of the platform.
I think this is the only place where we should remove the line if it is not used.
`UserList` is a list, so it should be a list.
this doesn't look right to me
I think we can remove this method entirely, it's no longer used.
I think we should also check for `RetrySettings` here. The `RetrySettings` is not a dependency on `RetrySettings` so it should be fine.
I think we should add a `TODO` here to make sure we don't have any other possible values for the same reason.
I think it would be better to use `import global` here.
I think this is not needed.
I think it would be better to move the RPC to `DispatcherForGRPC` as it's not used in the `Dispatcher` function.
This log statement should be removed.
This should be a separate function.
This should be a `@taskInfo`
This is a bit of an unrelated change, but I'm not sure it's worth it.
I think it would be better to call `Flush(ctx)` here, and then call `Flush(ctx)` on the `triple` below.
It's probably better to keep this around and put the complex `float` in the `complex` section above.
I think this should be `if isinstance(vals, str, str)`
This is a bit of an unrelated change, but I think we should be using `os.RemoveAll(dir)` instead of `_ = os.RemoveAll(dir)`.
I think this is a breaking change.
This is not needed.
I think we should remove the `toMap` method from `getInstance` and `getMap` methods.
I think it's better to move this to `localProjectAppNames`
I think we should be able to use the `nextBlock` here.
Does this mean that all the records that are added to the tx?
@matt-gardner How do you feel about this? I think it's more like `/admin/gardener/` and it's more clear what it's doing.
We should probably use the same name here as we'll be using the same name for all other components.
Maybe we should use the new `int` package here instead of the new `affine_grid_generator` package?
Why not just use `if config.AttackTimeout > 0`?
this is not needed.
This is a bit of an unrelated but I think we should probably have a `json.json` for `trailer` and `json.json.json` that will be used in the future.
Should we make the `wait_for` loop loop first?
I think we should just remove the `if` here.
I think it would be better to use `time.Sleep(namespace.CacheRefreshInterval + time.Second)` here
This change is not needed anymore.
I think this is the only thing that should be in `call` instead of `call`
I think this is the wrong place for this.
I think we should be able to remove this `if` block.
remove empty line
why change this?
I think this could be `topology.description != null`.
nit: this line can be removed
I think it would be better to use `isDebugEnabled` instead of `menubar` as the second parameter.
This should be `serve_static_assets` (or `serve_static_assets`) since the `CDN` flag is only used in the `server/server` module.
Why did you remove this?
Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
I think this is the right place to put this when `Instance` is set. The `expects error when instance could not be found` error should be `nil`.
I think we should have a null pointer here. If we want to be able to use a Tuple, then we should have a null pointer.
I think we should remove the `Won` field from the `Won` list. We should probably add it to the `Won` list.
I think we should keep the `XUnitIntegration` field and use `@private` everywhere.
I think this should be `strconv.line`
Metrics/LineLength: Line is too long. [82/80]
I think we should add the `ctx` to the setFlags above and add the `ValidateName` above.
I think we should return an error here instead of returning an error.
This method is called in `traitMethodResponseTrait` which is called in `CacheableResponseTrait`. It should be called in `traitMethodResponseTrait` and not in `CacheableResponseTrait`.
is this a debug logging change?
I think it would be better to move the `.present?` check up to the `find_by` method, and then use that in the `before_action` method.
I think we should remove the `CopyActionsToNewFlow` fields from the `Flow` method.
I think you can remove the `if !config.XDPEnabled && config.XDPEnabled` check here
This is a breaking change. The `qualifiedName` is not used in any place.
I think we should use `HTTP2AuthorityPseudoHeaders` here.
Is this change intentional?
I think this is a good idea. It's not a good idea to use the same language provider as the default.
I think we can remove this route now, since it's not used anywhere else.
I think this should be called ` RunTestsDependingOnDocker`
I think this is the only place where we need to change the `develop` to be the `develop` of the `develop` of the `develop` of the `develop` of the `develop` of the `develop` of the `develop` of the `develop` of the `develop` of the `develop` of the `develop` of the `develop` of the `develop` of the `develop` of the `develop` of the `develop` of the `develop`
I think we should not do this. If the username is empty, the user should not be able to get the username.
This is a wrong place for this.
This is a public constant, so I'd remove it.
I think this should be `QItemSelection`
`spaceLock` is not shared anymore, so it should be `onFinished`.
`extensions: ["` is not really required here, right?
Nit: Please move the import of the top of the file.
Why is this change required?
I think we should use `interface {...}` here.
I don't think we need to use `*big.Int` here.
I think this is the wrong place for this one.
is this still necessary?
I think this should be safe to check for `label_cb == NULL` and not `label_cb == NULL`
I think this should be `<p>`
This is a pretty big change. I'm not sure if this is the right place to put this.
I think this is a good idea. It should be a class with a class with a class with a class.
This method is no longer used.
I think we should add a `bool` here to be more clear. `CASDefaultCstorPool` is not a thing, but it should be configured.
I think this should be close()
I think this is not needed.
I think this should be `null`
This import can be removed.
I think this should be a separate PR
This is a bit of an overkill, but I think it's better to use `!` instead of `==`
This test is not related to this PR but I think it's worth it to remove it.
Shouldn't we keep the `workingState` call above?
I think we should just remove this.
We should probably add a `breakpoints` field here.
This is a bit of an unrelated change, but I'm not sure what the best way to do this is. I'm not sure if this is the right thing to do. I'm not sure if it's worth it to just have a `index` arg here.
why is this changed?
This should be `''`
I think we should just add the file to the empty string.
This function is called in `getDescription` which is called in `getParent` which is called in `getDescription`. I think it should be called in `getDescription` instead of here.
This is a change in behavior, but the code is not correct. The code is not correct. The code is not correct. The code is not correct.
You should be able to use the `fill_cb` constant here.
@alalazo I'm not sure if this is the correct fix.
This is a breaking change.
I think this is the only change that affects TF providers.
I think we should use `<amp-story>` instead of `>`
I think this should be `os.Stat(info)`
I think this is not needed.
This is a regression.
I think we can use `id` here instead of `Type`
I think we should be able to use the same `Session` method for the `Class` method.
I think this is the wrong place for this. hi is the end of the end
I think we should also check if the settings is set.
This is a bit of an odd name. I would suggest `LocalPackageRegistryV1`
I think this is not needed.
This is a bit of a hack, but I'm not sure if it's worth it to have a "simplify chained comparison" comparison. If you want to do this, then I would suggest to use the `simplify chained comparison` comparison.
Why did you remove this?
Is it possible to get the proxy from the server?
Is it possible to get rid of the `authority` here?
I think we should use `err.Marshal` here.
I think this should be moved to the `else` block.
I would use a different name for the default. I would say: `config.option.poppler:`.
this is wrong
Is it possible to use `--logging=TRACE`?
I think this should be an optional parameter to this method.
I think this is the only change in this file.
This log statement is redundant, it's already there.
I think `logger.NewTestLogger()` should be `logger.NewTestLogger()`.
I think it would be better to use `hashCode()` instead of `value`
Why is this change needed?
I think this should be `/user/lastfmscraper/<user_id>`
I think we can just use the `aspnet` name here.
I think this is not needed since the `powershell_script_on` method will already get called.
This will break if `collection?` is empty
This was the only place where we were using this code.
`import ..bbox import conversions.samplers.pseudo_sampler`
I think we can import `go-algorand` from `go-algorand` instead of `github.com/algorand/go-algorand`.
I think the default should be `l2f`.
The linter will complain about this.
This is a bit unrelated to the PR.
I think this should be removed.
Please remove the empty line here.
I think it would be better to have a `std::lock<std::mutex>`, and then a ` lock (lazy_mutex)` at the end of the block.
There is no need to specify `command` in volumes. It should be ``command``, ``then``, ``then``, ``then``, ``then``, ``then``, ``then``, ``then``, ``then``, ``then``, ``then``, ``then``, ``then``, ``then``, ``then``, ``then``, ``then``, ``then``, ``then``, ``then``, ``then``, ``then``, ``then``, ``then``, ``then``, ``then``, ``then``, ``then`
this change is not needed. the code will never get executed
`AbstractAnyTypeDeclaration` is not a good name for this.
I think this is not needed anymore?
Why did you remove this?
I think we should keep the old behavior here.
This is not a good idea. It should be `MPICL::Size`
This is not needed.
I think this is a bit of overkill. I think it would be better to have a helper function that has the credentials and config file, and then check if the user has already provided credentials.
Too Exp also needs to be updated.
I think we should use `ImmutableList#getPermission` here.
I think this is not right. It is not None and we are not using it in the `TYPE_REGISTRY` method.
I think it would be better to move this import to the `src/server/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core/core
this is the main change. It's not a big deal but it's just a small thing to do.
This change is not related to the PR.
I think we should use `QDesktopServices.openUrl` here instead of `str`
I think we should use `key *ecdsa.PrivateKey` instead of `quit chan`
I think we should be using `MemoryLimit` here and in the other places we use `MemoryLimit`
I think we should just make `Apply` the same as `HasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHas
I think we should be able to use `idx` here.
I think this is the only change that affects the other PR.
I think this is a bit too much.
I think this is a good idea. We should probably have a unit test for this.
This is the only place where we want to log the file, but I think we should keep this.
Isn't the timeout timeout going to be 3?
"inventory" is a bit confusing since the inventoryfile boltdir is a global directory. It's not a directory but the inventoryfile boltdir is a directory. It's a directory that is not a directory. It's a directory that is not a directory. It's a directory that is not a directory but a directory.
This is a property name. Should we add a property like `exception` or `exception<T>`?
why change IOException toThrowable?
I think this should be `Optional[str, Dynamic]]`
I think this is the only place where we have the CONTAINER, we need to update the component.
I think we should not be using this everywhere. I think it is a good idea to use it in the `io.prestosql.spi.CreateConfig` function.
I think we should use `dba` instead of `dba`
I think it would be better to use `request.getRequestType()` here, as it is used in the other places.
I think this is the only place where we should be using the `Kokkos_Core.hpp` file.
I think this is a bug, we should probably not use the "in queue" queue here.
This is a bit of a hack, but I think it's better to use `len(rule.Dst) == 0`
I think we should add a note about this to the other people who might want to add it to the interface.
This is a bug fix.
This should be a `xstate_has_extra_fields` check.
Nit: I would prefer to keep this, but I'm not sure what the difference is here.
This is not the same as the DIFFICULTY_BOMB_REMOVED, but the difficulty is the same as the original (which is the same as the original)
I think we should also add the scheme to the `scheme` URL.
This is not the right place to put in a listens function. You can just do `if len(user_ts) > 0 else len(latest_listen) > 0 else len(user_ts) > 0`
This is a change in behavior, but I'm not sure if it's worth it.
I think we should keep the old version as the first parameter.
I think this is still wrong. The only thing I'm not sure is that the copyright year is the right thing to do.
Why not just `2013`?
Maybe we should add a link to the ACME server so that we can set the ACME server while we are at it?
I think we should be able to use the default value here.
I think this is a leftover from debugging?
I think this should be `final`
I think we should remove this.
Maybe `junit` should be imported at the top of the file?
This test is failing on windows. It's not a valid test, but it's not a valid test.
I think we should keep the property name as `set`
Just a note: I think we should add a doc for this.
I think we should be able to use `http.Serve` here. I think we should be able to use `http.error` instead.
`baseFeePerGas` is not null, it is just for the baseFeePerGas.
This is a breaking change.
why not use a `Long.tableScanThreadPool`?
You should just remove `[LongLivedMarshalByRefObject]`
I think it would be cleaner if we just put this in the `bridge` module.
This is a breaking change. We need to make sure that the container is not running in a per-service container.
I think we should keep this as `MaxConnectionWindowIncrease`
I think we should show the result of the page as the user's settings.
Just curious, why do we need to cast?
Can we just use `FSTransaction` here?
I think we should return `char*` here.
Why was this removed? I don't see any changes to the `Id` to `LeaderID` in this file.
I think we can remove the `git` from the git checkout and use `git.#{next_git_fold_number` instead.
This is a breaking change.
The `extension_condition` property is used in a few places, maybe just `fields_desc`?
I think the name of the test should be `seed[:order] = len(TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT
This is a bit of an unrelated change, but I'm not sure what the right thing to do is if the client is not client, and if it is not client, then the client is not client.
This is a bit of an unrelated change, but I'm not sure it's worth it.
I think this import is unused.
why are we dropping module.exports from module.exports?
This is a breaking change.
I'm not sure if this is the right approach. If we want to use `signed_in?` instead of `memcpy`, we should use `signed_in?` instead.
This is a very minor thing, but I think it would be better to have a separate function that returns the closest connected peer.
nit: `autoRowSize` -> `AutoRowSize`
I think we should use `consider-using-namedtuple` here.
The octest.OK() is a breaking change. It's not a problem, but it's a octest.OK() is a breaking change.
Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
Can we just use the `if ptr.ID == noUnref.ID` here?
I think this should be `self.location = self.value`
This is a breaking change. It is not necessary to change the behavior of `_data` to `_repr`.
I think we should keep the old one here.
This is a breaking change.
this is a bug, we return an error.
why do we need to set `_base_`?
why is `ChainID` needed?
I think we should log the exception here, as we are not logging it.
This should be `ruamel.yaml`
This is a very minor detail, but I think it would be better to have a single `checkArgument` that does the same thing.
I think this should be a try/catch and not a try/catch.
I think we should default to `true` if user is not set.
I think this is the correct way to determine if the messages are signed messages?
This is a private function, I don't think it's necessary to change it.
I think this is not the right place to put this. The `taint` method is called only once, so we should remove it.
We should not use `org.infinispan.commons.lang.Stream.collection` here.
Is this going to be the only version of the PR that will be able to use? If not, we should be able to use the `count` prefix.
This is the only change that needs to be done in the `TTemplateParamClass` class.
I think this is a BC break.
This should be `apitype`
The following two lines are not needed.
`info` is a `format` object, so it should be a `format`.
`get` returns `null` if `component.get('selection')` returns `null` if `component.get` returns `null`
I am not sure if this is a good idea. The `originalIcebergType` is the only one that is used by `PropertyHolder`. I think it should be `final`.
Is this needed?
This is a breaking change. It's not clear what `MongooseError` does.
This is a change in behavior, but it's not a good idea to use a default value for the bundle.
I think it would be better to wrap the `CloseableIterable.transform(records)` with `CloseableIterable.get(records, "CloseableIterable")` and then wrap the `CloseableIterable.get(records, "CloseableIterable.concat(deleteRecords), Record::copy)` with `CloseableIterable.get(records, "CloseableIterable.concat(deleteRecords), Record::copy)"`
I think this should be `sessionStats.push`
this else block is not needed.
This is a breaking change.
I think it would be better to move this to `AssemblyOptions.validateParams` so that it doesn't have to be there.
Is there a reason why we wouldn't just use the `network` variable here?
I think we should be using the `block` field instead of the `example.clone` field.
this is a string. Why is it a string?
`marionette: true` is the only usage of `marionette: true`.
why not use a separate function for this?
I think it might be better to just check for `ad.Source` here and check for `DeviceName != ""` in case the device name is not null.
This property is not set.
I think this should be `get => 0`
is this a typo?
just curious, why remove this line?
I think it would be better to have a `@BagDictionary` and `initializer` as a parameter to the constructor and then use that instead of null.
I think we should use `ElementType` instead of `Len`
I think we should remove the `props` and `remove` packages from the index.
I think we should be able to remove this and just call it `eniLock`
I think it's better to use `atomic` here, since it's a `Dataflow` and it's a `Dataflow`
I think this is not the right place for this, but I'm not sure if it's worth it.
`fetchMock` is not used anymore.
I think we should keep the `ExpectData` here.
I think this is a leftover from debugging.
This is a breaking change.
I think we should log the message as well.
I think we should remove this. We don't have any code using it in the `app/model/probe` page.
I think this should be `var FEATURE_NAME = "reports";`
This is a good thing to do. This is a good thing to do.
This error message should be updated to reflect the new error message.
We should add this to the `app/views/internal/internal/internal` folder.
How about we rename `Warnf` to `Warnf`?
I think this is a leftover from debugging?
I think we should add a check to make sure the Uploads flow file is set to the name of the file.
This is a breaking change. If the configuration is not set, then the `dynamicconfig` will be `null` and the `DurationPropertyFnWithTaskQueueInfo` will be `null`.
I think this should be `if not obj`
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.
This method is no longer used.
I think we should just remove the `queue` here.
this is not right. `CachedThreadPool` is an array of threads, and `max_threads` is not a number of threads.
This is the fix. It should be: `loss = reduce_loss(loss, reduction, specified, reduce the loss sum by avg factor)`.
I think we should add padding=False for this.
why did you change the variable name? $balance is a bit confusing.
I think this is a bug fix.
This is a breaking change. It's a real bug that we're not using the build option.
I'm not sure if this is a good idea. `if std::move(other.txt[i])` is the right choice. I think it should be `if std::move(other.txt[i])`
I think this is the only place where we need this.
This is a breaking change. I think we should keep the old version as it is.
I think this function should be called "CONTENT_INDEX_EXTS" or something like that.
Can we move this to ZMS_PROP_ENABLE_PRINCIPAL_STATE_UPDATER_FREQUENCY_frequency?
I think it's better to use `waitForThumbnailsBeforeUpload` instead of `true` here.
Let's use `USERS` instead of `users` here.
Should we also remove queue anymore?
@dvoytenko I'm not sure if this change is correct.
shouldn't this be `getTagSetting` ?
The `PhaseSelector` should be renamed to `ID_IN_VARIANT_IN_31`
I think we should also add `AllowlistedModules` to `json` as well.
I think this should be an array, not an array.
This import is unused.
This is a change in behavior, but I think it's better to use a `TimeName` instead of a `TimeName` here.
I think we should be using hybridMountpoint.
Use the new Ruby 1.9 hash syntax.
I think this is the only place where we want to support the boolean value.
campaignSource should be anonymous (campaignSource struct)
Can we use the same constant for all the other classes?
Can we use `config` here?
This is a change in behavior, but I think it's worth adding a note to the help message to catch the message that it's not really helpful to disable it.
I think we should be disposed here.
Can you add a docstring here?
I think we can move this method into the `user_auth` method, since it's only used in the `user_mail` method.
I think this should be `nil` instead of `nil`
This is a bit unrelated to the PR.
This is a breaking change.
Do we need to add a validation to the parameters? `Get(addr, true)` or `Get(addr, false)`
I'm not sure if this is the right fix. The length is not the same as the length of the length.
Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
I think this is not correct. The `&&` should be `&&`
I think this is a good change. It's not a problem, but it's not a problem.
You can remove the `author` keyword from the last commit.
This is a good change. It's not possible to have a stderr that is not a specially.
Is this a breaking change?
This is a breaking change.
I think we should just pass the nodeToCIDRs to the nodeToCIDRs
This is a bit of an unrelated change, but I'm not sure if we should be using the `Gem` option here.
I think this should be set_format(self, pkgformat):
This is a breaking change. We should not be using the `<T>` as the default.
I don't think this is needed.
This file should be removed.
`backend` is a `Cluster` object, so we should use `backend.from_backend` here
I think it would be better to make a method `ListDeploymentChains` that returns a `ListDeploymentChains` and return a `ListDeploymentChains` instead of a `ListDeploymentChains` object.
This is the only change that affects the server side.
Why is this change necessary?
Is this used?
Should we use `FATAL::is_field` here?
This is a public function.
I think we should be able to remove the `ScheduledJobType` from the `Image.HealthCheck` case.
This change is not needed anymore.
`trList2.get(0).pumpId == 0` is equivalent to `count`
why not `checksumAddress`?
I think we should remove the `provisioningDelayCondition` field from the `provisioningDelayCondition`
Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think it would be better to just do `if a.Key != nil {` and then `nilkeys []*Action.": nil {` and `nilkeys []*Action.": nil }` and `nilkeys` to avoid the `nil` and `nil` calls.
I think this is a breaking change.
Please remove the `db` prefix.
I think this should be `ast.Package{&ast.Package{`
Why is this being removed?
should we also test that the content is in the database?
Does this work? I don't see any code using this class.
I think this is not needed anymore?
I think we should remove the `OutputImports` class altogether.
This file is not used anymore
This is a little weird. I think it would be better to use `[]string` instead of `[]string` and then use `[]string` to indicate that the service account is in the `Sub subscription` account.
@smarterclayton do we want to set this in the `serverOptions`?
This file is no longer used.
I think this is a good idea.
I think this is a leftover from the previous commit.
I think we should remove this
Will this work if echo is false?
This test is testing the same as the one above.
I think we should be using `defer` instead of `err`
This is a bit of a hack, but I'm not sure it's worth it.
I think we should also check for other places in this PR.
I think we should use `PersistBlockLevelInfo` instead of `hash.Hash32B`
Please use the `dict()` function for the `download` module.
I think we can remove `isView` altogether.
Why not just add the `attr_writer` to the `attr_writer` class?
You should use `var itemType = item.Type;`
I think we should be able to use `.delete_worksh` here.
I think we should use `receiveError` instead of `receiveError`
grpc -> bool?
I think we should be able to use `context.Background()` here instead of `cancel` since it's a `cancel` method.
The `case strings.Contains(ty, "html", "text/"` seems to be the same as the `case` part.
Openstack is a very generic name. I would suggest just using something like "Openstack"
What about `2`?
AddDiagnosticSourceInstrumentation<TInstrumentation> instead of AddDiagnosticSourceAdapter
I think this is the wrong name. `project.name` should be `project.yaml`.
Maybe we should add a `must be modified with care` and say `// call to `must be modified with care`?
Is this a bug fix?
I think we should add a migration to ensure that this is not supported in the schema
I think this is not needed anymore.
I think this is not deprecated, right?
I think this is a good place to add it.
I think we should change the signature of `true` to `false` as it is now the default behavior.
I think this is a good change. It's not a good idea to use the `IsWindows` property.
`ZoneOffset.UTC` is a bit confusing, why is it needed?
@jridgewell Is this the right place to put this? It seems like we could just use `@deprecated` if we're not doing anything with it?
this is not needed anymore?
Is this needed?
I think ` EmailNotificationService` should be renamed to `AWSEmailProvider`
Why are we keeping these?
Does this work? I don't see any `preact_-'` defined anywhere.
This is a very good idea. The text should be the default (0) and not the default (0) and the other one (0) is the default (0) and the other one (0) is the default (0) and the other one (0) is the default (0) so the default is 0.
I think we should add a link to the `invert` section.
This is a breaking change.
LOG() is never called, so this should be called
I think we should keep this method as it is.
I don't think this method is used anywhere.
Why is this needed?
I think this is a leftover statement.
I think we should just check if the script is disabled.
This is the only place where we use the `s.close(err)` call above, which is the actual error. I think we should keep the old error and remove the `s.close(err)` call below.
I think this is not needed
I think this is not needed anymore. The `attr` is already in the `String` module.
I think we should use `pkg/common/log` instead of `pkg/common/log`
I think this is the only place where we need to do this.
why not use value_len?
This is a good candidate for a test to ensure we don't have to do this.
This is the only change that affects all the NSNS changes.
I don't think this is needed
I think this should be `bitRead(at least 1)`
I think we should use `org.apache.commons.lang3.StringUtils#isSolved` here
I think this should be `disable=missing-docstring`.
I think it would be better to just pass in the `config` instead of passing it in.
I think we should use `data` here. We'll need to update the `createGrid` field to be consistent with the other arguments.
I think we should also check if the revision is a `revision`
This should be internal.
This is a breaking change. It's not a problem, but it's a real problem.
I think this is a bit of an unrelated change, but it's not a test, so it's not a `conftest.py` file.
nit: the name of the function is a bit misleading since it's a function that is used by the function name.
I think this is fine, but I'm not sure if we should be using the default version of 1070296.
This is a breaking change. We should probably just pass the `LogicalType` to the `url` and then pass the `url` to the `LogicalType` and `url` to the `url` and `url` to the `LogicalType`
Rails/InverseOf: Specify an :inverse_of option.
Lint/ParenthesesAsGroupedExpression: (...) interpreted as grouped expression.
This should be `Boolean` instead of `descriptions`.
I think it would be better to move the metrics to the end of the function, and just call the metrics in the function.
I think this should be a different check. It's not a big deal, but it's a bit confusing if we have a `attr` field that we have to.
This is a breaking change.
Metrics/LineLength: Line is too long. [83/80]
I think we should add a note about this to the other PR. I think we should add a note to the docs that the operator is not set.
This file is not used anymore.
I think this is a good change. It's not a good idea to have a `TaskQueue` type in the `TaskQueue` package.
This will cause AccessListItemForRpc to be null. Is that intentional?
I think this function should be called `server.url`, since the error is being used as a token, not a token.
This is the only place where we need to do this count. I think we should just do `count` instead of `== null`
I think this should be removed.
I think this can be `super(SGEJobTask, SGEJobTask)`
I think we can just do `t.timestamps` here instead of accessing the table.
I think this is the right place for this.
This should be `GroupIDType`
>Percentage of the graph (in vertices) to contract [0..1]" [](start = 12, length = 5) Should we be checking contract [0..1], contract [0..1], contract [0..1], contract [0..1], contract [0..1], contract [0..1], contract [0..1], contract [0..1], contract [0..1], contract [0..1], contract [0..1], contract [0..1], contract [0..1], contract [0..1], contract [0..1], contract [0..1],
Please use constants for the new constants.
This is a change in behavior, I don't think it's a good idea to change the behavior here.
I think we should remove the `GetDefaultIndex` method from the `GetDefaultIndex` method and use that in the `GetDefaultIndex` method.
This is a bit of an unrelated but I'm not sure what the best way to do this is. It looks like the `@Disabled` is doing the `**kwargs` and then `**kwargs` is going to be used in the view code, which is the case for the coupon code.
The %.512s parameter is a bit ambiguous.
This file should be removed.
The test for this was failing because of this change. This change means that we don't need to have a valid output, but we don't need to have it on the output.
why >= 0?
This check is not needed. The delimiterIndex will always be set to the current current delimiterIndex.
I think this column name should be `body_html` and `trail_map`
I think we should keep the old one as the default selector. If we want to keep the old one we can also get the new one.
I think we should use `bundle/exec` here instead of `bundle.exec`
I think we can just use `r rune` here.
`batchForBlock` will be `nil` if `WriteBatch` is `nil`.
I think this should be `new CompletableFuture<>(Void, future)`
This should be `_x`
Is this change necessary?
Why is this change required?
Could you add a listener for this?
I think we should just call `time.Now()` here.
I think it would be better to just use `fastParams.AgreementFilterTimeoutPeriod0 = time.Second` instead of `fastParams.AgreementFilterTimeoutPeriod0 = time.Second`
Why are we removing these?
I think we should also add a doc for the new type.
This import is unused.
This method and the next are borrowed from #1581
This is a string. It should be `string`
I think it would be better to use a `String.Empty` here, and then use `Guard.Empty` in the `Add` method.
This is not the right place to catch this. It should be the actual file in the main file.
This is a bug, the `TYPE` should be `ProductImageField`.
I think this is a good idea. It's not a good idea to use the actual event.
I think you can remove `*` and `*`.
I think this is the right place for this. It's not a good idea to have a default value for the `k8sSDWithNamespaces` field.
Why not just call this `fixtures`?
Use a constant here, not concatenation.
can we add a match here?
I think we should change the `CreateBucketRequest` to `Bucket:`
I think this package should be removed. We don't want to have a `package` package in the build process.
I think we should only use `getIcon` if the icon is not present.
This is a bit of a hack, but I think it would be better to have a `context` package that does the go imports and then use that in the `aws-sdk-go` package.
This is a bug fix.
this is the main change that will cause the PR
I think this is a leftover from debugging?
LOG_IF_ROOT() is used to generate a string. Is it possible to log the string?
Shouldn't we default to `DEFAULT_out_all`?
I think we should remove this file and change the other one to `enable-system/common.js`.
I think we should also add this to `ctaLink`
The `Current` property is nullable, so it should be nullable.
@SamSaffron can you check if this is the default value?
This function is only called in one place, so I think it would be better to just pass the `common` to `close` and then just pass it to `common.IsNullOrEmpty` and just pass it to the function.
I think we should keep this line.
I think this is the only place where we can get the batchstore's `localstoreCloser` function. I think it should be moved to the batchstore's `localstore` function.
This is a breaking change. It is not used anywhere.
why change this?
This is not needed.
I think we should use `org.apache.commons.lang3.StringUtils#if !privacyController.isGroupAdditionTransaction(...)` to avoid the NPE if it is not present.
Should be `ExceptionException`
This is a breaking change. It's not a problem, but it's not a problem. It's a problem, but it's not a problem. It's a problem, so it's not a problem. It's a problem, but it's not a problem. It's a problem, so it's not a problem.
I think this class is no longer used?
I think this is not correct. The hex is a bit confusing, since the hex is a bit unfortunate.
`objectXML` is not used in this class, please remove it.
Is this a typo?
This method is not used anymore. It is used in the schema file that is passed in the schema file.
Can we just return `ErrRequestCancelled` here instead of returning an error?
This is a breaking change. It's a bit unfortunate that we're not using the same text for the `cpp` text.
I think this is a leftover statement.
I think this is a bit confusing. What if we just return `None`?
@deads2k i'm not sure if this was the right fix.
Do we need to keep the old number?
Why did you remove this?
The `BYTES_PER_DEL_TERM` is not needed here, it is already checked in `init()`
Shouldn't we use the same `required_with` constant somewhere?
Use a constant?
I think it should be `firstTimeEmpySubject`.
Is there a reason we are not using `transport` instead of `Standalone`?
You should raise an exception here. If the connection is not provided, the exception should raise an exception.
I think this should be `_expands_user` and not `_lineedit` (and the one above).
This is a bit weird. I would have just done `_isHidden: axe.utils.isHidden` instead of `_isHidden`, but I would prefer to have `isFocusable` be the same as `_isHidden` in the `if` and `isFocusable`
I'm not sure if this is the right place to put this.
I think this should be moved to `KeyStorePasswordFile`
This is a test, so we should remove it.
I think this is a bit of a hack.
I think it would be better to use `string.parse()` here instead of `string.parse()`
I'm not sure if it is a good idea to log the `self->logIdToSend_` property.
I think this should be moved to `getConfig` instead of `getConfig`?
This is a change in behavior, but I think it's better to keep it in the `tab_to_focus` function.
I think it would be better to have this context "when a duplicate formatter exists for the same output target" or similar.
Shouldn't this be const?
I think this should be transient so that it can be accessed via `mContentContent`
I think this method should be called `getOperations()` instead of `./gradlew spotlessOperations()`
this test is not testing the right place for this test.
Shouldn't this be `continue`?
I think we should remove this, it's not used anywhere else
I think we should import `from kinto.core import COMPARISON` and `import json` here.
I think this is the only place where we can use this.
This was a typo.
this is a bit weird, why is it not possible to have a data type of error? if it is not available, then why is it not?
Prefer single-quoted strings when you don't need string interpolation or special symbols.
Shouldn't this be `application/...`? The flash is already in the current request, so it's not clear what the right answer is.
Right because the contract is sealed in the {Left}."
This is a breaking change, right?
I think this should be `CLIFlagTLSEnableHostVerification`, not `Cassandra`.
I think this import is unused.
Use `if host.exec(Command.new("sudo su -c \"/etc/init.d/iptables stop\""), {:pty => true})` and `if host.exec(Command.new("sudo su -c \"/etc/init.d/iptables stop\""), {:pty => true})`
It's not clear to me why we need to `if body.decode('utf-8') == bytes:` here?
I think we should use `label=split('.')[-1]` here.
This is a breaking change.
I think this should be `WPSEO`.
I think this is not needed. In the `if` block below it will return `false`.
Indent the first parameter one step more than the start of the previous line.
I think this is a leftover from a previous PR.
I think this should be `options.containsKey("type").equalsIgnoreCase("hive")`
I think we should move this to the top of the file, and move it to the top of the file.
What is the difference between "test" and "CA"?
This is a bit of an overkill. I think it would be better to use `if (index > -1) {` and `if (index > -1) {` instead of `if (index > -1) {` and then `if (index > -1) {` (or similar) `if (index > -1) {` (or similar) `if (index > -1) {` (or similar) `if (index > -1) {`
This should be `off` and not `disabled`
why is this removed?
"error_open_zip" => 'open_zip' => 'Path'
I think we should be able to remove this if-else clause. If the image is not set, we should be able to remove the image and the other one.
can we add a test for this?
I think this should be `local_ip`
Can you add a `bool` here, as you did in the `CustomData` method above?
I think we can keep this private and just inline it.
I think we should use the new `default` method instead of the new one.
I think this should be `except Exception:`. Otherwise, the exception is raised in `3D descriptors` which is not handled in `3D descriptors`.
@agramfort I'm not sure if this is the right way to fix the library name. I'm not sure if it is worth it. I'm not sure if it is worth it.
This is a breaking change. The `ValueTask` is a breaking change.
Why is `CLIImage` nil?
`TableMetadata.newTableMetadata` is a new instance, so I think we should change this to `TableMetadata.newTableMetadata`
This test was not working before. It was removed because it was not working before.
I think this should be debug. It's important for the namespace to be consistent with the other tables.
This is a duplicate line.
I think it would be good to have a goodContentType that we can't set the default values.
I think it would be better to keep the `throw new enums("Session ID is null")` and just do `throw new enums("Session ID is null")`
Why is this change necessary?
I think the flux_respond_error should be the flux_respond of the flux_respond.
I think we can remove this file and put the `webpack` below the imports.
why is this newSchedule?
What's the reason for this change? I don't see any usage of this method being nullable.
This is a no-op
break here is not needed.
I think this should be `manifest_file` and `overwrite` should be `manifest_file` (or `manifest_file`).
I think we should just remove this and remove the `reportMouseShapeChanges` above. We can just remove the `ViewerAt` parameter altogether.
PercpuUsageInUsermode is not a good idea. It should be renamed to something like `PercpuUsageInUsermode`
this is not correct, you should check if the user is not set
This is a bit of a hack, but I think it's better to use the same string as the last string.
I think we should be able to remove this and use the new `SetTag` in `Basels` instead.
What is the `2?` for?
Not sure if this is a good idea, but I think it's better to just use `expect(start_time).to be_an_instance_of`
This check is not needed anymore.
`getMicroserviceInstance()` is not used in this class.
I think we should remove this.
I think this should be removed.
This is a bit of an overkill, but I'm not sure what the problem is here. The current code is not very descriptive. The problem is that the user can see the same thing, and the current code is not in the IP options.
This is the only change that affects `Stateful`.
This should be `protected internal`
This is a bit of an unrelated to the rest of the PR. I think it would be better to move the `_tcpproxy_on` call into `spack install --no-config.xml` and then call `spack install --no-config.xml` and `spack install --no-config.xml` and `spack install --no-config.xml`
transferred -> transferred
This is a bug fix. I think it's better to remove the `frame()` call.
It seems that the ` MCTX_NUM_SIMD_S` X is not used anywhere.
I think we should keep the `(...) {` around the `(...) {` and `(...) {` on the `(...) {`
I don't think we should be returning null.
Why not use `!== -1`?
This should be `BackendAuth::getAuth()` instead of `use`
Why do we need to change this to `nano::epoch nano::send_block::epoch () const`?
This is not needed.
shouldn't we also update the corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding corresponding
This is a breaking change, but I'm not sure it's worth it.
I think we should be able to remove the `sanitize-tchannel` flag altogether. The `sanitize-tchannel` flag is used to set the `sanitize-tchannel` flag to `true` when we are not using the `sanitize-tchannel` flag.
This should be `API_END(0)`
I think we should add a `DbRound` struct to the RoundOffset API.
I think we should also check for `getClusterRegion` here.
This should be `crypto/base64`
I think this should be done in `prefs.edit()`, since it is a prefs class.
Please remove this.
I think this is a little too much for a reason. I would prefer to have a method that returns a `nil` error.
I think this is a leftover
Is this copy still necessary?
The name of this method is confusing. Can we have `protoingConfig`?
I think this is a breaking change.
Why is this change necessary?
Why is this change needed?
I don't think this is correct. It's not a good idea to check if the manifest is the manifest key.
I think this is not needed.
I think we should check if the attribute is empty.
Is this needed?
This is a bit of an odd change. It's not a problem, but it's not a problem.
I think this test is not needed. TestRuleCheckCheck() should be removed.
I think this is wrong. The length should be `4` and not `1`. The length should be `4` and `4` should be `4`.
I think this is a bug fix.
I think we should keep the old name here. We can change the name of the variable to `tributor`.
Since this is a `TCP` field, should we use it here?
I think this import can be removed?
I think we can remove the `l` here.
I think this is wrong. The file is in `lib/base/unitunit/unitunit/unitunit/unitunit/unitunit/unitunit/unitunit/unitunit/unitunit/unitunit/unitunit/unitunit/unitunit/unitunit/unitunit/unitunit/unitunit/unitunit/unitunit/unitunit/unitunit/unitunit/unitunit/unitunit/unitunit/unitunit/unitunit/unitunit/unitunit/unitunit/unitunit/unitunit/unitunit/unitunit/unitunit/unitunit/unitunit/
@martinwicke this is the fix. The `spec.action` is not the correct way to do it.
This is a breaking change.
I think we should use a `DataUtils.isBlank` here
`Note that the return type of the Region and therefore` -> `Note that the return type of the Region and therefore`
This is a bit of a hack, but I think it's worth it to just use `return` instead of `return` here.
this file is not used
This is the fix. The `path` is not used anymore.
I think this is the only change in this PR.
This is not the only place where I can see this `if (write)` statement. I think it's better to use `exes = !write` instead of `exes = exes`
I think we should be able to remove this in the `ReadStateResponse` function.
I think this should be a constant.
What's the reason for this change?
Why not return 0 here?
why do we need to add this to the api?
Is this line intentional?
I think we should just remove the `cluster` here.
I think it would be better to replace the 2nd number of proposal in one line, like `while c-semantic, 'bbox' in self.semantic_fusion, 0:` and `while c-semantic_fusion, 0:`
If you are using the `name()` method, you can use `name()` instead of `location()`.
This should be done in `log.startsWith`
Why was this removed?
Is there a reason why you changed the default value of `this.startAfter`?
I think this is the only change in this PR.
I think this will be more readable if the new `lightbox` is a new `simple` (and the `simple` is a new one)
This should be `@param`
I think we can just use `Index.7` here.
This test should be updated to use `generators.pattern_machine`
This is a change in behavior, but I think it's not necessary to change the behavior here. The `and` is not the same as `x1` and `x2` are the same.
I think we should be able to remove this line. The `prefixed_userid` field is already set to `bob` in `lib/prefixed.py` and `lib/prefixed.py`.
Can you remove this? It's not used anywhere.
Nit: remove empty line
Is this a typo?
I think it would be better to have a separate method for this and a similar property. It would be better to have a method that returns the span.
This is the only change that will cause the test to fail. The `<NET>, <NET>, <NET>, <NET>, <NET>, <NET>, <NET>, <NET>, <NET>, <NET>, <NET>, <NET>, <NET>, <NET>, <NET>, <NET>, <NET>, <NET>, <NET>, <NET>, <NET>, <NET>, <NET>, <NET>, <NET>, <NET>, <NET>, <NET>, <NET>, <NET>, <NET>, <NET>, <NET>, <NET>, <NET>, <NET>, <NET>,
Is there a reason for this?
I think this should be `find_instance_group_by_url` instead of `continue`.
I think we should use `to |` instead of `to |`
I think this should be `FormatIsMultiplane(image_format, ...)`
Maybe we should use `CachedAccessor` instead?
I think we should keep the old name here.
`selectedItem` should not be selected.
EBS is not used anymore
This should be a `ParameterTypeNames` property.
I think we can remove this and just use the `ISpecProvider` field.
`afterAction` is not a boolean, it is not a boolean.
I think this is the only change that will break the tests.
I think we should add a note about this to the description.
Is this a typo?
I think we should be able to remove this in a separate PR, but I'm not sure we need to do it in this PR.
I think we should copy both of these into a constant.
This function is only used in `.html` and not in `./pants lint`, so it should be moved to `.html` and remove all the `.html` calls.
"get environment" sounds a bit weird to me, but I would have expected it to be "dev" as well.
Please add a `TODO` to remove this.
I think we should keep the old method for this...
I think we should use the `config` property instead of the `boolean` here.
(style) line over 80 characters
I think we should be using the templateRole to be a new variable.
I think we should just remove the `MainThreadAsync` altogether.
if opt is not a string, this will be false
I think we should add a `@className` annotation here.
This is a regression.
UnitUnit can be removed as it is not used anywhere else
why is this needed?
why remove the import from 'preact'?
This table should be added to the `cart_item_id` table.
I think this needs to be `DEFAULT_GITHUB_ENDPOINT`, since it's used in the `init()` function.
I think we should also add this to the task's `capability`
I think we should use `t.IsNullOrEmpty` here.
I think we should be able to remove this line and just use `Start` in the `if` statement.
`listType` is a primitive type, so `count` is a primitive type.
This is a change in behavior, but it's not a big deal.
@jridgewell Is this change intentional?
Why not just return None?
why change this?
This change is not necessary. The `paths` will be used in the `search_path_opts` function.
The globalize.translate should be done inside the function.
This is a change in behavior, but the changes in this file are not related to the PR.
I think we should be able to move this to `plugins.resolve_files`.
This is the only place where we need to check if the container is in `free`
I think this should be moved to the `finally` block.
why 1.15?
Why not use `$options['lazy']` here?
I think this namespace can be removed now, since it's not used anywhere else
This should be `\*`
I think it would be better to have an enum with an enum that is passed in.
This is the only change that fixes the issue. The `errors` spec seemed to have been the correct behavior for this.
I think this should be `p->mp_impl->nullptr`
This line is not needed
`Intf` is a `boolean` so it should be `boolean`
This test is failing because of the `send_notification` expectation that the `Name` variant is 1.
I think we should be able to use the `config` fixture here.
This is a bit of an unrelated change, but I'm not sure it's worth it.
This line is not necessary.
Why useTrait instead of using the class?
This is a bit of an overkill, but I think it's better to use a `TracerFactory` constant.
The `io.prestosql.spi.directory` imports `io.prestosql.spi.directory` instead of `enum` because it's not a `typing` dependency. The `import` can be used in this file.
I'm not sure about this. The problem is that if you don't have a valid instruction, you should be able to remove the ENCFAIL from the library.
This should be `final`
I think this should be in the same package as the one in the `DataflowLog` class
I think we should just call `call LoggingConfiguration Reload` here.
I think we should keep the `cleanup` arg here.
I think we should be able to use `err.Errorf` here.
Why is this change necessary?
Why is this change necessary?
I think we can remove this test now that we're removing the `let(:approval)`, and we're removing the `let` part of the `let` block.
why do you need to add this?
The `value` is not used in this function. You can remove the `enumerable` parameter from the `value` below.
I'm not sure if this is the right place to change. The `auto begin` variable is used to get the `MOL_SPTR_VECT::const_iterator begin` function. The `MOL_SPTR_VECT::const_iterator end` function is used to get the `const_iterator begin` function. The `auto begin` variable is used to get the `MOL_SPTR_VECT::const_iterator end` parameter.
I think the move_ptr should be before the move_ptr and move_ptr to the move_ptr. It's not a good idea to move the move_ptr to the move_ptr. It's a bit confusing.
This is a change in behavior, but I think it's better to use `GetStringSlice` directly.
This should be `theme.delete`
I think this test is not right. It will be better to use a different name than the table name.
I think we can just remove `Top` here.
I think we should use `List<String>` instead of `topic`
This is not the correct place to put this method. `ScriptDTO getScript(List<String> path);`
I think this should be `this.allTypes.some(item)`. Otherwise we don't have to check if the result is in the array.
SimplifiedBasicBlock should be relative according to the rest of the imports
Please add a TODO to remove this
I think this should be in ` SparkBatchQueryScan`. It's not a differentiate.
This is the fix.
This should be `const`
I think we should use the `config.openshift.io` package here.
I think this is a leftover from the PR
This is a change in behavior. The content is always `array()`. I think it should be `writeCharSequence()`.
I think we should also add the `ctxpropagation` field to the `ctx`
This import is no longer used.
I think we can get rid of this timeout now, since it's not a timeout anymore.
This method is not used anywhere else, so I would remove it.
I think this test should be moved to a separate test. It's not clear what the `test_options` means.
This is a bit of a hack, but I'm not sure what the best way to do is to make sure we don't have a way to do this.
This is a leftover from #410
I think thisabel needs to be removed.
I think we should just pass the `tables` value to the `tables` struct instead of using the `tables` struct. The `tables` value is used to pass the value to the `tables` struct.
I think this is the only place where link_to isSign in is used.
I think this is not needed anymore?
This interface is not used.
This is a bit of a hack, but I think it's better to be explicit here, and then check if the error is in `f.quotaUsage.Get(ctx, quotaUsageStaleTolerance)`
Use the new Ruby 1.9 hash syntax.
I think we can just use `upload` instead of `destination`
Is this change related to the PR?
I think this test should be moved to `waitUntilAllElected`
I think this should be `1` and not `1`
I think we should be able to remove this, but I think it's not a good idea to use the `ProposalLowestOutput` field.
this is a bug fix?
I think we should use `action.searches` instead of `action.searches`.
I think it would be better to use `call_map` instead of `str_shuffle` as the number of the prefix is not a string.
I think we can get rid of this line too.
I think we should add a `IApiResponse` to the `isposable` class.
please add the condition to the `if`
This should be added to the `violations. JAVA` file.
This is the only place where we can use the `ErrPool` field.
This check is not needed. I suggest to use `getSSSR` instead.
I think this is a leftover?
This is a very specific change, but I think it's worth it to remove it.
I think we should also add pubSub to the interface.
Can we use 100 here?
I think we should add a `TryGetAgnostic` to the end of the event.
This should be `len(inputPattern) > 0`
I think this should be `testMatch`. It's not clear what the `Match` is for.
I think we should keep the test case as well.
Shouldn't we use the `io` here?
This will error out if `err` is nil.
This is the only place where we can use `cuda_type=True`, which is the default. The `cuda_type=False` is `schema`, so we can't change it.
This is a leftover, please remove it.
Can we add a link to `Message Delivery Semantics` to get the link to the link to the link to the link?
I'm not sure if this is the right place for this. It seems like it should be a `<p class="videowrapper">` since it's the default.
This is a breaking change. It's not clear what the asset type is here.
NotFixTopicCopyBugOption() is a very good name. Can we use a more descriptive name?
I think this is a bit of overkill.
I think we should be able to use the `require`/`include`/`include`/`include`/`include`/`include`/`include`/`include`/`include`/`include`/`include`/`include`/`include`/`include`/`include`/`include`/`
(style) trailing whitespace
This is a bit of an overkill, but I think it would be better to have a `BytesZeros` method that returns a `value` object.
This is a bit of overkill, but I'm not sure if we should just use the `*args` here.
Is this used? I don't see any use of it in the code
Another option is to use `playbackTicks` in the function.
`1000` is a little confusing. I would expect that the default is `0`, not `0`, and then we would expect it to be `0` (which is what we do for `1000`).
this is a bit weird, why not just return the error?
Why not `allowallowInterval`?
I think this should be done in `localization`
I think this should be `if(literalSet.stream().anyMatch(v -> eq(ref, toLiteral(v))`
This is a bit unrelated to the PR but I think it's better to keep the original version of the if block.
Is this a `h.describe()` call?
This should be `protected`
This is a bit of a hack, but I think it would be better to move the `self._state.prune` check out of the `if` statement and then just call `self._state.inactivate_tasks(task, self._state.prune(task, self._config)` and then call `self._state.inactivate_tasks(task, self._state.prune(task, self._state.prune(task, self._state.prune(task, self._state.prune(task, self._state))` to `self._state.prune(task, self._state
Nit: import sorting
This is a bit of a hack, but I think it would be better to use ` ReadPreference.primary` here and in the other places we call `decorateWithCollation` in the `routeStore` class.
I think this should return `null`
I think we should be able to set the block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block block
This line is not necessary.
I think we should be able to use `bulk-edit.js` here.
I'm not sure this is the right place to put the `span` tag. I'm not sure if it is a good idea to add the tag to the `span` tag.
I think we should add an example here for the new config parameter.
Why do you need this import?
This should be done in `EXITING_DR()` instead of in the `EXITING_DR()` call.
Why was this removed?
I think this is a good change.
This is no longer needed.
This is a breaking change.
This is a change in behavior, but it's not a good idea to have it here.
Is this needed?
Why not just `NewUpgradeTaskJob()`?
This should be `sys_get_meminfo`
`&& "schema" events`
This method should be renamed to `RewriteFilesSequenceNumberForNewDataFiles`
@jridgewell I'm not sure if this is the right fix. The length should be `1..60` or `1..60` or `1..60`
Why is this removed?
Align the elements of a hash literal if they span more than one line.
`@var string` is not used in this class.
I think this is a leftover.
Maybe we should just use `record` here?
@nmittler - Is this the right place to do this? I'm not sure if it is the right place to do this.
@danrot what is the meaning of `array<int, string>`?
(style) Macros with complex values should be enclosed in parentheses
Can we just return `None` here?
This is a change in behavior, but I think it's better to do it in a separate PR.
I think this should be done in the `Gamepads` class as well.
why not just `signerFlag.Value().().(string)`?
I think this should be `log.Set`.
I'm not sure if this is the right way to do this. The caller can do `parser::numeric::bad_numeric_cast = boost::none;`
I think this is a bit confusing, as it's a bit confusing to have a bucket in the `Simple3` list.
Can you add a check for `CACHE_ENABLED` here?
Why is this being removed?
I think this should be `.required(false)`
Maybe `application_default_PATHS` is better?
If you change the return value of `this.countRows()` to `==1`, then you can just remove the return value from `==0`
strict use `use` statements should be in the next PR
Is this needed?
I think it would be cleaner to use `posix='win' not in sys.platform` here.
This is a breaking change. It should be `slack:`.
What is the reason for changing this?
I think we can remove the `shifted_bearing` variable altogether.
This should be `FULL_VERSION` (and the other similar ones) to the `nastroid` version.
I think this should be `protected long`
I think we should use the `*Client` here.
I think we should be able to use `self.approvals` here, but I think that's the case.
`Function` is not used in this class.
`javaCompile.getToolChain()` is not needed anymore, right?
`$name` is unused. I think it should be removed.
This should be `__u8`
This file is not used anymore.
@jridgewell I'm not sure if this is the right way to do this. The execute method should be called when calling `writeConcernMax()`.
Why do we need to set thefrozen_sort here?
I think this should be `pytest.mark.skipif(my_CLOUD)` instead of `my_CLOUD=my_CLOUD`
This is not a part of the PR, but I'm not sure why it is needed. It is not used anywhere else.
`[syslog-prot] incomplete message!`
I think this is the only place where we use the RWMol argument.
Maybe we should just call `RLock()` here?
Is this a bug fix?
I think we can remove the call to `loadReactAppOnceIfReady`
This is a bit confusing, as it is a bit confusing to me. What is the `_` prefix?
Use the new Ruby 1.9 hash syntax.
I think this is a leftover from debugging?
I think we should do this as well if `hybrid` is null or empty.
This is a bit of an odd change. I think we should be passing the context directly to the request.
This should be `String[] "true"`
The variable $char should be changed to $chars[$i + 1] = $chars[$i + 1] = $chars[$i + 1] = $i + 1;
This is the most important change. The `env_array` method is used to generate the `upcase` attributes, so it's safe to remove it.
`variableOptions` is now unused. Should it be removed?
I think it would be better to check the null values in the constructor, as it is used in the constructor and check the values in the constructor.
Should we use RuntimeIOException here?
Why does the tmImplementation need to be a tmImplementation?
This is the only change that affects all the other PRs. The `ForAdditionalLiveTvOptions` changes are not related to the PRs.
why is this changed?
This is a bit of an unrelated change, but I think it's better to just use `onForegroundChange` instead of `setForegroundChange` here.
`replace-partitions` is a better name.
Why are we passing these to the `W3CB`?
I think we should be using `with_for_update()` instead of `one_or_none()` here.
Is this a bug fix?
I think we should use `bool` here instead of `to_definition`
I think it's better to use a test for the custom attributes as it's not a valid value.
I think this should be a static final constant
I think this should be `_autosave`
I think we should rename `AccountData` to `BalanceRecord` and `AccountData` to make it clear that the `Account` is the number of input types.
I'm not sure this is the right thing to do. The `wait_for_at_least_entries` function is called twice.
Why set to 1?
This should be split across multiple lines.
This is the only place where we need to change the default value.
I think this should be `log.isDebugEnabled()` instead of `nowarn`
I think this is a bit too much. I would just add the `SessionStats` to the `sessionStatsHandler`
Why is the cast needed?
can you use mock here?
I think this should be `final`
I think we should remove the `video` attribute from the `text` attribute.
Why is this change necessary?
Why is this removed?
Does this mean we can remove the config from the config?
What is the difference between this and `Onflush`?
This is a bit odd, since the `ectl` fixture is only used in the `pytest` fixture, so it should be `ectl` (and not `pytest.mark`).
Line is too long. [89/80]
Could you add a check to make sure the string is not None?
This is a bit of an odd name, but I think it's better to use `-1` instead of `-1`.
@cramforce is this the best place to put this in the `hive.openshift.io` file?
This is a bug fix.
This is a bit weird, it's a string, but it's a string.
This is a change in behavior, but I'm not sure why we need to do this.
This is a little weird. I would have just done `retention` in the `NamespaceRetention` and then do it in the `NamespaceRetention` function.
This should be `Error(arg + " is not a direct arg`.
tpfp_func should be None, not True
I think we should return 0 here.
This function is not used anywhere.
I think it would be better to move the feed to the top of the function.
This is a bit of a hack, but I think it would be better to use `allowIncompatibleChanges` instead of `allowIncompatibleChanges`.
What is this? Why not use the constant?
I think we should be using the `struct` func here.
It looks like these URLs are only used in the translation file. Is this intended?
I think we can use `assertThat(gen.apply(RANDOM))` instead of `assertThat(gen.apply(RANDOM))`
I think we should change this to const.
nit: `find` could be replaced with `@Deprecated`
I think this should be `fresh`.
I think we should use `go fmt` instead of `go fmt`
I think we should make sure that we don't get the correct `todo` error from the `stringToBytes` case.
I think this is a bit confusing. I would rather see a `if not len(tab.history_prepared) > 0` check.
This is a bit of a hack, but I think it's a little hard to follow.
I think this should be `.show_img`
I think we should be able to remove the `30` parameter from the inputOffset.
This should be `nvcc`
@mfojtik why is this change needed?
I think it would be better to move this to the task's `task[0]` block.
I think we should be able to just pass the `action: str` to the `from_exception` method and do this in the `call` method instead of passing the action directly.
Nit: import sorting
this is a private method, I think it's better to have a default value
@michaelkuhn Do you know why this is needed? I wouldn't expect it to be called from the `Kvdb` interface.
I think we should remove this and use `spec_spec_helper` instead.
This should be `ex`
this is a bit of an odd as we're using device as a device here, maybe we could just use `saleor/exception/1.5` instead of `saleor/exception/1.5`?
This should be `x$`
This is not just for stats, right?
`keyValue` is a `null` value. Should we use `org.apache.commons.lang3.StringUtils.isNotEmpty` here?
`recording_start` is not needed here.
Why is this removed?
This is a breaking change. It's not a big deal, but it's a good idea to have a test for this.
I don't think this is used anywhere.
I think we should use assertDictEqual here instead of assertEqual
This is a bit of an unrelated change, but I'm not sure what the best way to do is to do it. I'm not sure what the best way to do is to do it. I'm not sure what the best way to do is to do it.
I think this is a breaking change.
This should be `@faker.version`
This will cause a performance regression if `metricsConfiguration.isPushEnabled()` is called.
I think this is the right fix. The `self.num_ins` is used to check whether `num_outs` is a number of bytes. The `self.num_ins` is a number of bytes, so we should check for `self.num_ins` before calling `n_level`.
I think this should be a `static`
This is the only place where we want to do this. I think we should do it in a follow up PR.
I don't think we should be passing in the transport to the whole transport, since we don't need it anymore. The peer type is private and intrinsic to the HTTP transport.
I'm not sure if this is the right fix. It seems like the `_canonicalRankingNumber` is not the same as the `&&` in the `&&` case.
loss_normalizer_momentum is 0.9, andloss_normalizer_momentum is 1.
I'm not sure why this is needed. The `ioctlsocket` function is called in the `_WIN32` function.
Import packages with wildcard is not recommended.
I think it would be better to use normalProbability instead of normal distribution.
I think this is a bit of an unrelated change, but I'm not sure it's worth it.
This is a bug fix. We should not modify the `List<modifiable>` anymore.
@jackfrancis can you confirm this is the line you removed?
I think we should be able to remove this now that we're not using it in the `history` namespace.
Why are we changing the version to a string?
This is a little confusing. I think we should have a `errors.Wrapf` function that returns the secret.
This is the wrong way to fix the standard library format.
I think we should just check for results here, as we are not using results in the results.
why remove this?
This is not used.
`1, 1, 1` is a list of strings, so it should be a list of strings.
I think this should be `final`
@jackfrancis I'm not sure if this is the right place for this.
I think we can remove the `html_safe` part and just do `sorted` instead of `_('html_safe')`
Why is this needed?
I don't think we should be changing this here. I'd rather not have it in the `const`
Can we move this to a new location?
I think this is a leftover from the old version of this PR
Freeze mutable objects assigned to constants.
Is this 1 compatible?
This is a bit odd, we are not using the default value here.
I think we should do the same in `current_user` and `User.find_or_create_by` too.
Please update the doc accordingly
This is not the same as the account being closed.
I think this file is not used anymore
I think we should wait for the client to be able to wait for the client.
This method should be private.
I think we can move this package to `pkg/api/pkg/utils/pkg/utils/pkg/utils/pkg/utils/pkg/utils/pkg/utils/pkg/utils/pkg/utils/pkg/utils/pkg/utils/pkg/utils/pkg/utils/pkg/utils/pkg/utils/pkg/utils/pkg/utils/pkg/utils/pkg/utils/pkg/utils/pkg/utils/pkg/utils/pkg/utils/pkg/utils/pkg/utils/pkg/utils/pkg/utils/pkg/utils/pkg/utils/pkg
I think this is a bit confusing. Can we have a method for this?
Is this a breaking change?
why is this needed?
This test is not testing the right target, so I think it should be removed.
I think we should use a more meaningful name here. `toMillis` is a bit confusing.
I think we should be using the new function here.
I think we should keep the name here.
this is a BC break
This is a change in behavior, but I think it's better to move it to a constant.
I think we can just use `htmlFor` instead of `label` here.
I think it would be better to do this in a separate function (if (xcursor_theme == NULL) and then do it in the first place. The first condition is a bit more specific, and then the second condition is not a bit of an "if (xcursor_theme == NULL)".
The TopicsFilter should be renamed to TopicsFilter.
`key in self.keys[0]` is a bit confusing, since it's a `key in self.drawn` (or a `key in self.keys[0]`).
This is the only place where the desktop window is created. I think it should be the right window.
I think it's better to keep these as `VCPULimit` and ` Memory is a task-level limit for memory resources in bytes`
I'm not sure if this is correct. The default value of 10 is 10, so I'm not sure if it is a good idea to change it.
I think we should add a note about how we do this.
I think we should keep the old name here.
@martinwicke I don't think this is the right place for this. @martinwicke, I don't see any reason to keep it in the `static` package.
`GenericMeta` is not needed anymore, as `GenericAlias` is a list of `GenericAlias`
I think this should be done in `sections`
I think this is a leftover from the PR, but I'm not sure if it's worth it to reset the `reporter` from the `reset` key.
why not just remove the `if` and remove the `write-Scalar` block?
I think we can remove this
This is a bit weird. I think it should be `reason` instead of `Causes[0]` (or `Uncompact`). I think it's better to have a `reason` method that takes the `To` and `To` to return a `reason` value.
I think this should be `true`
Is there a better way to do this? I'm not sure if we should do it in the code.
Please don't change the signature of this method.
This message should be pinned.pin
Is this a typo?
This is a change in behavior, I think it's better to move this to a separate method.
Can you add a TODO to remove this?
This is a breaking change, but I'm not sure it's worth it.
This should be `__u8`
I think we should keep the test case as well.
I think this test is still valid. The new test is failing because the new file is created by the new file, so the new file is created by the new file. So, I think it should be removed. The new test is not failing because the new file is created by the new file. In the new test, the new file is created by the new file, and the new test is not running. In the new test, the new file is created by the new file, so the new test will be updated.
This is a very generic name, I think.
Because we are removing this code, we can remove the project and just do `Bolt::Logger.warn("project_yaml", msg)`
`reverse` is not a valid value, so it should be a valid value.
I think it would be better to use `takesHeapSnapshot` and `SNAPSHOT` as the default.
Same here, the variable is not needed
This is not supported anymore.
I think this is not needed.
I'm not sure if this is the right fix. If you want to do this, you can just do `if (getOperatorType() == REL_UNARY_INSERT) || (this->isMerge())`
This is not needed. The test is already testing the `glassfish.gmbal` package.
Block has too many lines. [32/25]
I don't think this is needed.
I think this is not needed anymore
This is a very weird change. The `add` method is called in the `wsid_gen` function.
I think this is a good idea. It's not a good idea to have a `Identity` or a `Reader`
This is the same fix as the other one.
This is a bit of an unrelated change, but I'm not sure how to get the error from the original version.
I think we should be able to use the `siteName` name here.
should we add a `scheduled_reports` column that will be set in the DB?
This is a bit confusing, as `None` returns a boolean. What about `if (!filename) return None`?
Is it expected?
I think this should be a warning, since it's not a valid error.
I think it's better to use `Region` instead of `resp` as the name.
`connected=None` is not needed.
`window` should be a parameter, not a parameter.
I think this is a good change. I think we should just remove `getNonStreamingMethods` from `getNonStreaming` and `getNonStreamingTypes` in `getNonStreamingTypes`.
I think this is not needed.
Is there a reason for not just `zeros(shape.size(), 0)`?
I think we should just use `to_i` here.
I think we should keep the old name as well.
Why is this needed?
I think we should set the `depreciated` flag here, since it is only used in the `setup.py` file.
This is a breaking change. The `destinationPodName` is used to be able to use the `Class.Name` field.
Why do we need this?
This is a breaking change.
This is a very minor thing, but I think it would be better to just remove the `div` part.
This is a bit of a hack, but I'm not sure if this is the right place to put this code in the agent. I'm not sure if this is the right place to put this code.
Why is this change needed? `TraceContext` is already `null` anyway.
I think we can remove `FileOutputStream` and `BufferedWriter` from `io.FileOutputStream`
I think we should use `String.format` here
I think it would be better to use a `ecsMaxReasonLength` that is used in the `ID` interface.
"This field is prohibited" sounds like it should be "This field is prohibited" and not "This field is prohibited"
nit: remove empty line
The `QUIC_GO_LOG_LEVEL` flag is not used anymore, right?
Why do we need to check for `*virtualDiscDesc.CapacityAllocationUnits` here?
You can use `fingerprint` here.
What is the reason for this test? Can we use `mkString` instead of `.isEqualTo()`?
this is a bit weird, why is this change required?
I think we should move this check to the server side copy too.
I think we should also check for the error message here.
I think this is not needed
the go-type imports are not used anymore.
Another more direct way to test the output output. The field should be renamed to `depts_path`
I think this is the only place where we should be using the `NU General Public_NAME` module.
Metrics/LineLength: Line is too long. [123/120]
I think we should keep the old version as well.
I think this should be CoreTags.env
This is a bit of an overkill, but I'm not sure how to test this.
I think we should be able to use `preserve_host_output` here, but I think that's what we want.
I think this should be `getNodeAttributes`.
I think we should use a `@NotNull` for this.
I think we should use `jsonhttp.MethodHandler` instead of `topic` here.
This is a very unfortunate change.
I think this test is still testing the right thing.
I think it would be better to check `if (req.getQueryString() != null && allowedPostRequest(req)) {`
This should be a `static`.
I think we should keep the `(...) {` around the `(...) {` and `(...) {` on the `(...) {`
Use 2 (not 1) spaces for indentation.
Please update the docs to reflect the new name
I think this is not correct. The DEFAULTOR_DEFAULT_BATCH is a very high value, so it should be a different value.
I think this is a good idea.
This is a bug fix. The `Buffer.isBuffer()` check is redundant.
I'm not sure if this should be `p` or `padding`...
I think this should be a `data_count`
I think it would be better to have a `daemonExportFile` variable in the error message.
I think we can just remove this method and just call `Builder` directly.
I think we should add a TODO to improve the error message.
This public method is unused.
I think it would be better to move this check into the relay method, and set it in the relay method.
why is this changed?
Metrics/LineLength: Line is too long. [82/80]
remove empty line
I think we should add a note that this is only used in the `Simple Storageates` block.
This test is not really testing what you expect. You should expect to expect to expect to be able to expect to output output.
Why is this change necessary?
I think we should be able to remove the `onchainConfig` on `OnchainConfig`
The `AutoRest` property is not used in this file.
I think this should be done in `axe` instead of here.
This file should be removed.
Why not just return `pid`?
I think we should just remove this field. We don't need to create it in the `createSource` class.
Why do we need this?
I think it would be better to just use `MainMenuItem[]` here.
I think we should also support `API-MS-Win-Core-PrivateProfile-L1-1`
Is this change required?
This is a bug fix.
I think this is the right place for this. The `mypy` environment variable should be used instead of the `mypy` environment variable. The `mypy` environment variable should be used in the `mypy` environment variable.
I think we should add a check to make sure the volume exists.
I think this should be `ws:\/\/`. The message should be `ws:\:\/\/"` or `debuggerAddress.error('\/')`
this is the fix.
I think we can remove this now
I think we can just use `.to receive(:send_notification_email).now` instead of `.to be > nil`
Why not "apply", but the error message below is "apply"?
I think this should be private. It is not defined in the `TabConfig` class.
I think we should check for user here and check for the user in the `user`
I think it would be better to move this to the `setUnsubscribed` function.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
this is not needed anymore
I think this is a good change. The problem is that if the user doesn't have a VkQueueFlags, we should have a VkQueueFlags.
Is there a reason we are using FAILEDType instead of just supporting both?
Please remove the `.`
I think this should be `prefQueueTo` instead of `len`
I think this should be `@param [Integer]`
`injectionManager` is not used anymore.
This flag is not a header tags.
I think this can be `fields['protocol'] = self.tab_url(idx).if self.tab_url(idx)`
This is a leftover from the previous commit
This should be a separate function.
I think we should use `rune` here instead of `prefixLength`
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this package should be `jav ?>` and not `jav ?>`
I think this should be `database capacity in chunks (db.capacity, db.capacity*swarm)`
I think this needs to be removed.
I don't think we need this file anymore.
Why not include the `#include` at the end of the `_WIN32` block?
I think this is a typo
I think we should not have this check anymore, as we already check for mime and the resource.
I think this file is not needed.
Is this the correct way to do this? Shouldn't we be checking for `objectTypes.REALM`?
Shouldn't we also update the `toukyou` message?
I think you can just do `Caffe::SetDevice(param_.device_id())` instead of `Caffe::SetDevice`
Why are you adding this?
I think this should be `and (isinstance(value, str))` and not `isinstance(value, str)`
Why remove this?
This is a change in behavior, but I think it's better to move it to a separate function.
This should be `working_dir`.
I think we should be able to remove this now that we're not using it in the code.
Nit: Please move the import of the other imports
I think we can keep these 3 lines as they are not related to the rest of the PR.
This is a change in behavior, but I think it's better to move it to a separate commit.
I think this is a leftover?
I think this import is unused.
This should be done in `setUp`
I think we should be able to use the `DB__ROOT` constant here instead of the `item_owner` field.
This will need to be done in `pkg.env`
Is this a bug fix? It seems like the `driver` should be removed.
Please add a license header
This is not a good example of why we need to do this.
I think we should use `_` here.
This is the only place where we use this. The only reason we don't use the `errors` package is that we don't have to change the API.
I think we should use `--review-status` here, as it's part of the API and not a requirement.
This is a bit of a hack, but I think it would be better to have a method that returns a null value and then call it with a null value.
This is a bit of an overkill, but I think it's better to be consistent and use `string[]`.
Please use `auto_additionalSubpassDependencies` from `m_renderPass_dependencies.insert`
I think we should just pass in `QUmnt` and not `QUicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicic
I think we should use `on` instead of `off` for the value.
I think this is the only place where we need this. The `FlowExporter` is used in the `feature` table, so we can remove it.
nit: I think this should be done after ScriptveScripts
This is a bug fix.
How about adding a `walked_blocks` field to the `Checkpoint_count`?
This is a bit of an unrelated change, but I'm not sure it's worth it.
should we rename this to `str`?
Why did you change this?
Why are we adding this? We don't want to have both the `if` and the `if` statements.
We should use ImageDirectoryStructureCreator as the name of the class.
This is the only place where we use the `Tags` function.
I think we should remove the copyright here
Shouldn't this be `initPWMClocks()`?
Do we need this?
I think this is the only place where we need this.
Please use `iFromPeers` instead of `iFromPeers`
I think we should be able to remove this `.scope` call.
This is a change in behavior, but I'm not sure if we should change this to handle the case where the claims is nil and the claims is nil.
I think it would be better to just call it `RelaxedReclaimPurge`.
I think this is the only change that affects TF providers. The SSP will be used for the same reason as the one in the TF providers.
I think we should keep the default here.
I think we should use the `fetcher` variable here instead of the block.
why not just change the other `55` to `p`?
Does this mean that the user will not see these parameters?
`currently` is a `dict` for the next line.
This is a bit of an out of scope of this PR, but I'm not sure what the best way to do is to have `computed` the same thing. I'm not sure what the right thing to do is here.
@bartonjs, I think this is the right place to remove this. I think we should keep the `reload` and `btl.time_elapsed` as it was before.
This should be removed.
@david-peters @stephentoub do you think we should be able to use `hidden` here?
I think we should use the `io` package here.
1 trailing blank lines detected.
I think this is the wrong way to do this. ASIO_DISPOSABLE != 0 means that the user will not see the same thing.
I think we should be able to remove this.
"StatusCode" is not written. "This seems to be a lot more "not written".
I think this should be a separate PR, not a separate PR.
The CoreChecks parameter is not used anymore.
I think this should be `static` and not `public`.
why removing the default_name from here?
I think this is fine, but I think it would be better to have a different name for the schema, like `metrics.getProperties(schema)` and then you would have to pass the schema to the `metrics.getProperties(schema)` which is the default.
I'm not sure this is the right fix. I'm not sure if this is the right fix.
It's not clear to me why we need to store the `Counter prometheus` in `user.Gauge`.
This should probably be a constant.
Layout/MultilineMethodCallIndentation: Align .find_by with .id on line 112.
I think this can be `public`
I think we should be using `f` instead of ` focus` here.
should we add `paginggroup` to the list of `azure-export`?
I think it's better to use `--reupload` or `--reupload all fragments`.
why is this in the Prometheus instances?
This is not the right place to put this. It's a bit of an overkill, but it's not a problem. It's a bit of a hack, and it's not a problem, so it's not a problem. It's not a problem, but it's a problem. It's not a problem, but it's a problem. It's not a problem, so it's not a problem. It's a problem, but it's not a problem. It's a problem, so it's not a problem.
I think we should be able to remove this limit, but I think it's not a big deal. The limit is a little bit more correct. The limit is a little bit more correct, so it's not a big deal.
This is the only change that affects the `Int` field.
Shouldn't we also update the `toukyou` message?
I don't think we should remove this, it's not necessary to keep it.
This should be changed to `Twig_Environment`
Remove empty line?
I think it would be better to use `opts.generate_hexfloat_in_json` here and in the other places where we use `opts.generate_hexfloat_in_json`
I think we should add a `TODO` here to make sure we don't have a good default. In case we want to add a `App` interface to the `Marshal` interface, we will have to add a `App` interface to the `Marshal` interface.
I think we should also support parserparser as parserparser
This is a bit of an overkill, but I think it would be better to use `require ('./.gulpfile.iced')` here.
This is a change in behavior, but I think it would be better to move the `findElements` method into `Element` and then call `new findElements(By by)` on the `By` itself.
This is the only change that affects TF providers.
`if (opts.fee)` is undefined, and `if (opts.fee) !== 'undefined'` is not needed.
this is a bit confusing, how about we just use `if` instead?
Why is this in the cluster?
Is it possible to get rid of the `ReadVectorSize`?
I think this import is unused.
nit: remove the second return
info() is no longer needed.
I'm not sure if this is the right fix.
Is this really needed? I'm not sure if we should be using the new version of the package.
if `spec.Xattr = req.GetXattr()` is not set, then `if (spec.Xattr) > 0 {`
I think this is not right. It should be fixed in a separate PR.
I think the name should be the same as the function name.
I think this file is not used anywhere.
This is a little confusing. Why do we have to find the `findUpVirtual`?
I think this is a leftover from debugging.
I think we should use `substring` here instead of `token`
I think this should be `delegate.back` instead of `delegate` to keep the delegate variable consistent.
I think this should be `skip_msg.nil?`
Can you add the line above this line?
This should be removed.
This is not the same code as in the data/data/pcr/building_numbers.yml
I think this should be `template.json` since we have the same partial name as the question.
I don't think this is the right place to put in the `Dockerfile` package.
This is a change in behavior, but I think it's better to keep it as it was.
splitting this into a constant
@bparees this is the fix for #934
This is the only place where we can't return less than the value.
Shouldn't we also print the auth information here?
This is a bit of a hack, but I think it would be better if we could use `mqtt` instead of `mqtt`
this change seems unrelated?
@matt-gardner, I think this is the right fix. The message should be "format("%s is not supported", type.
I think we should also remove the `procfh` field from the struct.
I think `auth_header` should be set to `django_headers` in the `Package` module. The `Package` module is used to set `django_headers` to `""` in the `Package` module.
I think we should remove the `TLSMap` from the `opts` list.
This is a breaking change.
I think this needs to be moved to the `on_approver_removal` method, since it's only used in the `on_approver_removal` method.
This is a test that was not working.
This is a bit unrelated to the PR but I think it's better to move the `if (messageBody.IsEmpty && messageBody.IsEmpty)` check before the `if (messageBody.IsEmpty && messageBody.IsEmpty)` check.
I think we should remove the type here
This is a breaking change.
This is the only change that affects the other tests. The `128` function is used to set the variable `e()` to `false`.
This is a breaking change, but I think it's better to put it in the `init` function.
This should be `#if MPI`
This is a bit of an overkill, but I'm not sure it's worth it.
I think this file is no longer used
This change is not necessary. The `mkString` method is already called in `StringUtils.of()`
Shouldn't this be `CertificateRequestReasonApproved = "Denied"`?
I think this is a good idea. If we want to add a `default` id, we should add a `default` id to the `accountID` id.
I think this is the wrong place for this. The `alter` inventory through the `ignore_accessor` will be removed.
This should be a constant
I think the `PRIu` is not the right choice here.
Just curious, what is this change for?
I think this is a bug fix.
This is the only place where we can't just delete the code. We're now just deleting the old code and we're still using the old code.
I think this should be a `Set[str]`.
ThisThis can be removed. We don't use @product anymore.
Can you add a space after the `,`?
Looks like this was unrelated to the PR.
Is this a bug fix?
I think this is not needed.
I think this is a little confusing. I think it's better to return `current.history` and then `current.parentId()`.
This should be in the `instr_is_scatter` method, right?
the same here.
Why are you AppName and Manifest?
This should be `vpn.go`
I think we should be able to get rid of the `body` variable here.
This is not the only place where we return here.
I think we should be using `retry: true` instead of `arguments: true` here.
I think we should add a note about this to the other PR.
This is not used anymore.
This is the only place where we call `verify` on the `WellFormed` function.
The `ply` is already declared in `register_json.py`, so I would just remove it from here.
I think we should check if the user is in Hive config and not the other way around.
I'm not sure if this is the right fix. This is a bug fix.
This is the only place where we need to set this. This is the sync sync sync, right?
This is a bug fix.
shouldn't this be `null`?
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
I'm not sure if this is correct. The nullptr is nullptr, but if it is, then the else branch will be executed.
This should be added to the list above.
I think we should use `setConfig` instead of `lastProcessedId`
I think it's better to use `capabilityFirelensFluent` here.
I think this is a leftover?
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
I think you can remove the `pmix_RELEASE_list()` function from the pmix_nspace_caddy_t, and remove the `io_open_RELEASE()` function in `io_open_RELEASE()`
I think we should remove this test.
This should be `callAction` instead of `array_is_ex()`
This is not needed.
`foss` should be a `!=` so that it can be nil.
This is the only change that affects TF providers.
I think we should just remove this if we do not want to.
Why not just make this `// finalized`?
This is the only change that affects TF32.
This is a breaking change, but I don't think it's necessary to change this file.
I think this should be a separate commit
I think this should be `public const TracerConstants`.
can you use UpdateDeviceStatusBuffer instead of UpdateDeviceStatusBuffer?
This is a change in behavior, I think it's better to keep it as is.
This is a change in behavior, but it's not a big deal.
I think we should check for `EnableApplicationResponse` here, since it's only used in one place.
This is a bit weird. I would expect the `pony_assert` to return a string. It's not a valid string, but it's a string.
This import is unused.
Is this change necessary?
This is a bit of a hack, but I think it would be better to have a function that returns the value of the `date00` value. That way we can have the `startDate` value in the `_u.date00` and then we can have the `date01` value in the `_u.date00` property.
` BoolParameter(default=True, true)` is enough
This is a little confusing, as it will always return a string. Is it a string or a string?
Is this a bug fix?
This file is not used anywhere.
This is the only place where we should be removing this code.
This is a bit of an unrelated change, but I think it would be better to use a new `Map<String, Integer>`.
This is the only place where we need TryGetValue.
I think this should be `!== - LuaScriptInterface::luaGameLoadMap] Failed to load map`
Why is this change necessary?
We should probably add a note about `healthcheck` being set to `true` in the future.
Is this still needed?
I don't think we should be adding this to `SubnetGatewayIPV4Address` as we are now adding the `PrivateDNSName` field to the `Private` field.
This is a bit of an unrelated change, but I think it would be better if we moved the `find` to the `unless` block.
Please use relative imports as we use them everywhere
this is the fix
I think this test should be removed.
I'm not sure if this is a good idea. It seems like it could be a shared roles, and if it's not a plan, then it should be a shared roles.
I think we should remove this.
why not use `init` here?
This is a bit of an overkill, but I think it's better to use a `rank` field instead of a `rank` field.
I think this is a bit too broad.
I think it would be better to have the `GetStream` method return the `access` and then use `GetStream(filePath, mode, access)` directly.
`q` should be imported before `import`
This should be ` neve-tans-header`
@deads2k I think this is the reason why we're not using the v1 package here.
It looks like this change is not needed.
This file is not required.
I think this check is not needed. The `version` property is already `null` and it will be `null` if it is `null` (and `null` if it is `null`).
This is a bit of an unrelated to the PR, but I'm not sure if it's worth it to make it so that it's clear what the `*` means.
This file should be reverted.
I think this should be `copilot-task`
This is a bit of an overkill. `e` is a `input` value. Maybe `e.type === 'input'`?
This is the only change that affects the `version_and_version` function.
I think this should be `if (!strncasecmp("OFF", val, len))`
This is a bit of an unrelated change, but I'm not sure what the best way to do this is.
I think this is a good example of how we could get rid of the type `issubtype` argument.
This is a breaking change. The `checks` is not used in this file.
I'm not sure if this is the right place to put this. The existing code is `KOKKOS_ARCH_VOLTA70` is `KOKKOS_COMPILER_CLANG`.
I think we should remove the `type` here. It's not used anymore.
I think this should be `else if`
I think this is a good place to put this.
This is a bit of an unrelated change, but I think it's better to move this logic into the `daemonExportFile` function.
I think it is better to use the `map` API instead of the `export`.
I think it would be better to move this to the top of the file.
Should we add an `omitempty` field to the `omitempty` field?
This is a bit of a hack, but I think it's better to have a function that returns a `conda.Environment` that returns a `conda.Environment` and then call `conda.Environment` with a `conda.Environment` that returns a `conda.Environment` with a `conda.Environment` that returns a `conda.Environment` with a `conda.Environment` that returns a `conda.Environment` with a `conda.Environment` that returns a `conda.Environment` with a `conda.Environment` that returns a `con
This is a breaking change. We don't need to assign a `aspects` param to a `Map` so that we can get the client from the client.
`os.path.dirname` is not a directory, so you can use `os.path.abspath`
I think this should be `this.wineEnginesPath`
I think this check should be done in the `if (exist == scanItems_.end())` block above.
I think we should be able to remove this and use the `EVM` version in the `ChainID` package.
This should be done in `buildCallback`
I think this should be `java.salesdk.getInstance().getString(R.string.api_version)`
I think this should be `DEFAULT_REVISION`
This is a little weird. I think it would be better to use the loginOptions directly instead of the loginOptions.
This should be `this.focusElement_('noteTextViewer')`
nit: unused import.
I think this is a leftover from the PR.
I think we should only do this if `request_id` is empty.
I think this is the only one we want to remove?
How about `RetryForever ACMESelfCheckFailurePolicy`?
I think this is a good idea. The `ot_gpg_error` function is called in `gpg_error_to_gio_error` which is called in `gpg_error_to_gio_error` which is called in `gpg_error_to_gio_error`.
Is the key really required?
I think this needs to be moved to the `#if` block.
This should be ` MatchPriority(priority uint16)`. Otherwise, the default should be `undefined`.
I think this should be `pkggraph.PkgGraph`, not `pkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkgpkg
This is not a file name, it's a file name.
Is this used?
I think `btc` and `network` are not needed. The `btc` is already a `testnet`.
remove the `fmt` import
This is a bit of an unrelated change, but I'm not sure what the best way to do it is.
This should be done in `_target.destroy` instead of here.
I think this is a good change. The `torch.h` file is not imported.
I think we should return an error here instead of passing an error.
shouldn't this be `'complete'`?
I think we should use `@project.nil?` instead of `admin_session_required` to avoid the job.
This is a breaking change.
` PutHash` is a bit confusing with `nil` here.
This is a breaking change, but it's not a big deal.
I think this should be done in the constructor instead of in the loop.
I think we should be able to remove this.
I think this test should be moved to `call` so that the test doesn't fail if the fixture doesn't contain an error.
I think it would be better to use `secondary_info` here instead of `inherit_info.subpass`
I think we should clear the data here.
I think this should be a `@SuppressWarnings("unused")`
I think we can use `<Return>'>` instead of `('<Ctrl-Return>']`
Could you please change the type from `icmpType` to `dstPort`? It's not clear what the type of `ateg_url` is for.
Initialize the collection in the collection and the collection in the collection.
why do we need to check for settings?
why is this necessary?
@mfojtik why do you need to add the `chunks2f megabytes`? I think it would be better to just use the `chunks2f` and then use the `chunks2f` and the `megabytes` message.
could you please add a `let` loop to the `alt` label?
I think we should use `[]` here.
I think this should be done in `pkg/configCNIToml`
This should be called `updateLibrary` instead of `try-finally`
I think we should be able to use `is_default` here, since it's the default for the `published` action.
Is this change required?
I think we should use the same error message here, as we are not using the `Tracer` error message.
I think this should be `return JsonRpcError.PRIVACY_GROUP_DOES_NOT_EXIST`
This function is only used in the `FunctionExpression` package. It's used in the `Admin::getExpression` package.
This should be a `static const`
I think this should be `function_name=function_name`
This is a breaking change, right?
I think this should be `if (skewFromParent != null)`
spire/api/server/entry should be mock_entry
This is a bit confusing, why is it necessary to call `RunQuery` on the context context?
I think this type is not needed.
I think this is a breaking change. The `i` class is only used in `app/services/v1/core/config.js`.
I don't think you need to sleep here, you can just do ` sleep = paddle.limit([])`
This should be `itemitemitem` (or `itemitem`) instead of `hand`.
I think we should be able to remove this and just use `unflushedPaths` in the `shouldshould be nil` block.
I think this should be done in a separate PR, but I think it should be done in the `primary_drm_backend_monitor` function.
This line is not needed.
I think we should be able to remove this
This is the only place where we can unlink the index from the previous version of the index.
This function is unused.
Metrics/LineLength: Line is too long. [82/80]
I think this is not needed. You can just set the result directly.
I think this is a bit of a hack, but I think it would be better if we just always call `getDirectoryName` and then use that in the if block.
I think this is not needed.
I think this should be done in the other place, because the `wlr_input_device_destroy` function is called in the `wl_list_for_each_safe` loop.
The `supported` is not supported.
`props.children.forEach` is already checked in `isArray`.
I think we should just make this `configureCmd += ' --mode'`
I think this is a breaking change. It should be a separate PR.
This is a bit of a hack, but I think it's better to move it to a function.
I think we should just make this a constant.
This should be `return {` to match the other `return` blocks.
I think we should use `proposal_attr` instead of `proposal_attr` here.
"If the provided key is none"
I think it would be better to use the same name for the `omitemptuy` field.
This is a breaking change.
This seems like a bugfix.
I think we should add a `TODO` to the `secretConfig` field, to reduce the number of secret secrets.
This should be `mount`
What is the reason for this change? It seems like the name of the ActivitySampler is not used anywhere else.
I think we should use `settings.compare` instead of `headers.Set`.
I think this should be `deletePMD`.
This should be done in a different PR
Does this work if you use `on_same_reader`?
This shouldn't be here. `goog.require('Blockly.Events.VarDelete')` is the correct value.
why public? is it public?
Probably should crash if bad format string
The type should be `T`
Use a guard clause instead of wrapping the code inside a conditional expression.
I think it's better to use `string.filter(string, StringComparison)` instead of `enumerable` as we do for `string.filter(string)`
I don't think this is used anywhere.
This is a breaking change.
`min_bound` is not null, so `max_bound >= $i` is not null.
Why 2014?
What is the reason for this change? Is it because the `tail` is already defined in the `build` method?
I think we should keep the `Delete` here, since it's not being used anywhere else.
Line is too long. [91/90]
Why did this change?
I think we should be able to use `preserve_hosts` here, but I think it's a bit more clear what's going on here.
I think this is a bit too broad.
This is the only change that affects the tests. The `calledThrice` test was passing in the `.to.be` file.
I think this should be `is_editable_prop`
I think we should remove this line.
Is it possible to have a `basename` here?
This is a change in behavior, but the previous code was correct. The previous code was only used to set the "FakeMetric" to 1, which is not the case.
This should be a `&&` if you're not going to do it.
I'm not sure if this is the right place to put this. I'm not sure if we should just add the `@return` to the `Jack Handey` file.
This should be a `EnvironmentFiles` field.
I think this can be simplified to `@trail = Trail.find(params[:trail_id])` since it's a private field.
I think it's better to use the constant in the constructor.
Should we add a new `DescribeTable` method to this function?
I think we should add a new column for this.
The folder is not defined in the folder, so it should be removed.
I think you can import `from rdkit.Chem import rdmolops`
I think this should be called `pxz.wait()` instead of `pxz.wait()`
I think we should just remove this.
This change is not correct. The sortByColumn attribute is not set.
This is a very specific bug fix.
I think this is a bug in the commit message. If we want to change the behavior of `Rebeat/output/hidden` we should probably change it to `beat/output/hidden` and then we can remove the `beat/output/hidden` in the commit message.
shouldn't this be `null`?
I think `long` is not needed here, as `(long e, e, value, cv.child);`
This is a bit weird, we are using a 3-bit value here. I think we should be using the value of `id.Substring(3)` instead.
This is a good idea, but I'm not sure if it is worth it. It is not possible to have a `node_l->peers.not_a_peer (endpoint, false)` method.
I think this should be `CBeaver - Universal Database Manager`
Why is this not needed?
Should this be a part of the `initKeyring` function?
This is a bit of an overkill, but I think it would be better to just use the `policy` variable here.
I think this should be `exec_command_line`
I think this should be removed
Is this true only when `IsApiToken` is true?
I think we should be able to remove `||` here.
I think we should use the `log.Execute` package instead of hardcoding the code.
I think we should not have conf.HTTPConfig.nil here.
This is a bit of an unrelated change, but I think it would be better to split this into two separate methods (like the others) and then use the new one.
nit: remove empty line
Isn't PrivateKey enough?
@danrot what do you think about adding a `if` statement to the `addMethodCall` method?
This should be `and`.
I think we should use the `TODO` here.
I think it would be better to use `accept` here instead of `t` as the code below.
I think we can remove `knative.dev/eventing/pkg/logging` from the other PR.
I think we can remove the span here. We can add a `handler` field to the `operation string`
This is a bit unrelated to the PR, but I think it's better to use `127.0.0.1.0` instead of `127.0.0.1.0`
This is a change in behavior. It should be a separate PR.
This should be `KBFS_DEBUG`
Please add a blank line between tags and summary for better readability
I think this should be `true` since `false` is the default.
I think this should be removed.
I think it would be better to use a different set than hardcoded the set. The set here will be a bit more expensive and more expensive.
I think this is not needed anymore. The function is called in `void`
I think it would be more consistent to name this `_to_Observation`
This change is unrelated to the PR.
This file is not used anymore.
Can you remove this file from std::chrono.h as well?
The `typeMetaModel` property is not used anymore.
This is a bit of an unrelated change, but I'm not sure it's worth it.
I think this is not needed.
`StateReader` is a `Reader` object, so we should probably rename it to `StateHash` or `ReaderReader`
nit: it would be better to put it in a constant, and then just call it once in the method.
I think we should keep the data type as `diff_res`. The reason is that we're not testing the data type as a parameter is because we're not testing the data type.
I'm not sure if this is the right fix. The `1000` is the only one that is used for the `getAtomicNum` (which is the only one that is the user's input).
I think it would be better to have a `require 'new span is recording events'`
I think we should just remove this configuration.
Is this a debug message?
why is this a pointer?
I think we should also have a `/bzz-tag/` that we can use for the `/` in the `/`
How about rename rollbackTraffic to rollbackTraffic?
Can we use an enum instead of a const?
I think we should use zkDynamicConfig.getServers().stream() instead of zkDynamicConfig.getServers().stream()
Can you remove the `using System`? It's not used anywhere else.
@jcotela is this change intended?
I think this should be a separate PR, since we don't have a `GetuildFile` function.
`_MissingPandasLikeIndex` is now unused, right?
The question is if we are going to use a `subnets` field instead of a `omitempty` field?
I think it would be better to use cn-northwest-1. And then use cn-northwest-1.
The test is not testing that it is testing the correctaky test.
I think we should use `@activity` here, as we have the `activity` above. Also, I think we should use `@activity_url` instead of `@activity`.
This is a bit of an unrelated to the PR. I'm not sure if this is the right place to put this. I'm not sure if it's worth it to have a better idea.
I think this should be a new one.
I think this is a leftover?
I think it would be better to use `getDisabledMetricAttributes()` instead of `getDisabledMetricAttributes()` to get the attribute from `disabled`
This is a bit of a hack, but I think it's better to have a `==` statement.
I think this should be done after the `this.close` call
I think we should move this to `fs.rclone` and make it a `nil` in `fs.debug` and use it in `sys.rclone`.
I'm not sure if this is the right way to do it. The `clamp` function is called `foo` which is called `foo` but not `foo` (which is the correct way to do it).
I think we should be able to remove this `_requestQueue` variable and just use `this->`
This is a good place to change the function signature. It's not a big deal, but it's a little hard to see.
I think this is the only change that affects TF providers.
The test was failing because it was not testing the right version of the `AsUserOrTeam` function. I think it was just a bug.
This file is not used anymore.
@mfojtik why did you remove this?
I think it would be better to throw an `Error` here instead of throwing an `Error` directly.
What's the reason for this change?
Why not just `mock(DefaultOAuth2UserService.class)`?
why is this changed?
I think we should also mention that the query ID is the same as the `UUID` ID.
I think we should change the description of the error message.
This is a change in behavior, but I think it's a good idea to keep the old behavior.
This test is failing because of the `test` method.
Why not set 7 to default?
I think we should be able to use `value ]` here, as we already have a value in the ` setValues` module.
Can we use `org.apache.commons.lang3.escape.sort_order` here?
I think we can remove initialState from here and just call `initialState` from initialState.
If we're going to use `Teacher.joins(:video)` here, then we don't need to use `Teacher.video(:video)` in the `before_action` method.
we should use `\r` here
I think we can just remove the tests now that we have the tests for the new tests.
This is a breaking change.
I think this should be a link instead of a link.
I think this should be `error != nil`.
Please remove this.
This test is not really testing what we want. I think we should just remove the deprecation method from the `expect_deprecation_with_call_site` method.
I think this should be `write.object-storage.path.enabled`
This is a bug fix. The code was not working.
This is a bit confusing to me. If the type has the size 0, it will be 0. If the type has the size 0, it will be 0. If the type has the size 0, it will be 0. If the type has the size 0, it will be 0. If the type has the size 0, it will be 0. If the type has the size 0, it will be 0. If the type has the size 0, it will be 0. If the type has the size 0, it will be 0.
Why are we passing these to the `W3CB`?
This is a bit of a hack, but I think it would be better to have a method that returns the value of the result of the try-catch block and return the result of the try-catch block.
I think this is the right fix.
I think this is a bit too broad.
This should be `protected`
I think we should use `org.camunda.bpm.engine.impl.leaderEngineLogger` here
I think we should call `Get()` on `RefreshAndGet` instead of calling `Get()` here.
I think this is a leftover?
This is a good place to put this in a helper function.
Why not just use `identifier`?
Block has too many lines. [39/25]
Is this a breaking change?
I think this is a good idea. It should be `_notebook_registry`.
I think this is a good idea to move the `db` constructor above the `db` constructor.
This change is not necessary. `fullpath` already has a name of `size_t` so it's not used anywhere else.
I think this is a leftover from debugging?
I think this line is redundant now.
Redundant `self` detected.
This is a breaking change. It is not a problem, but it is not a problem.
This is not needed.
I think we should be able to get away with `WriteDeadline` here.
This should be a constant, not a constant.
This method is unused.
I think this is a breaking change.
This should be `if isinstance(ip6,Net6):`
Why is the returnPartly required here?
Is this necessary?
This is the only change that affects 430.
This is the only change that affects Write() below.
@chirimoya What's the reason for this change?
We should probably make this a bit more explicit. Maybe just make it a factory method and call it `published_on`?
This is a bit of an overkill, but I think it's better to just use `==` rather than `==`
I think we should keep the name here.
Why not just return empty?
This is not a good idea. The binary binary is already in `compressed`.
Can we use `controller.DEFAULT_RegionGetter`?
This is a bit of an unrelated but I think it would be better to just have the `_settings` property on the property instead of just the property. It would be better to have the static methods on the property instead of static methods on the property.
I think this is a bug, we should use `f.metadata['websocket']` instead of `f.metadata['websocket']`.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
why do we need this? We don't use `bytes('model')` in this file, right?
`GetMetricPointsAccessor` and `GetMetricPointsAccessor` are not used in this class.
Not sure if this is a good idea.
This is a bit of a hack, but I think it would be better if we could use `net/http` instead of `net/http` for the `http` case.
I think we should force the checkpoint to be the actual DB.
Can you change this to `v2`?
This test doesn't work with the `deliveries` spec, but doesn't check that the `deliver` action is present.
I think it's better to use a more descriptive name for this, e.g. `make generate`.
This file is not used anymore.
I think this should be `./pants lint`
I think it would be better to change `runtime_type=DataFrame` to `UserOption.Wait_type`
I think it would be better to add a `@param` check here, and then just add the `selection` to the `isSelection` check.
Remove empty line?
I think it would be better to use `privacyMode` and `language` as the default.
I think we should not use `Thread.getThread().getName()`, as it is a bug fix.
I think this is the only change in this file. The changes in this file are not related to the PR.
I think we should use the `github.com/weaveworks/go-checkpoint` package.
should we make this 200?
I think this should be removed.
Why not use `std::size_t`?
why is this removed?
I think we should add a note about this to the other PR, but I think it's better to add a note that the bucket is not in the `Simple3` folder.
I think it's better to use a `DisableAutoObservabilityMiddleware bool` instead of hardcoding it in `DisableAutoObservabilityMiddleware`.
Why `stdint.h` and `stdbool.h`?
Can you use `searchScope` instead of `search`?
This is a bit of an unrelated change, but I'm not sure what the best way to do this is.
Is this change intentional?
Why is this public?
"attached' => 'Hierdie gebied is reeds aangeheg.', => 'Hierdie veld moet \'n datum datumiator.',
I think you can import org.shredzone.flattr4j.model.User directly
Is it possible to use `String()` instead of `Build`?
This test is failing because of the fix.
I think we should remove this.
I think this should be `g_value_dup_object (value)`
`in.Status.ChaosStatus.Experiment.Phase` is a `Phase` field. I think it should be `in.UID`
@deads2k do we need to add this to `pkg/exec`?
I think we should be using the `ComponentResource` here instead of the actual `ComponentResourceManager`
I think this should be done in `config_config.h` instead of `config_config.h`
I think this should be `args = [arg.replace('{}', arg]`
This is not needed. `LoadGroupMembersPipeline` will return `true` if it is not present.
I think we should use the name here.
This is a bit of a hack, but I think it would be better to have a `private` method that takes a `Set` object and then call `beforeTransactionHandler` directly.
why remove this?
This should be a separate commit
I think we should be consistent and use the default value here.
This is a breaking change.
nit: can we use `Optional.ofNullable(maxFeePerGas)`
This is a breaking change. The `T` part is not needed.
This should be a separate commit
I think this is not correct. TRUE is already set to FALSE; it is not used anywhere else.
Why not just use `TaskArn: ...` here?
This is a bit of an unrelated change, but I'm not sure what the best way to do this would be to have `ConfigFor(interface{})` and then have `ConfigFor(interface{})` return the `interface{}` and `PluginConfig` return the `PluginConfig` object. I'm not sure what the right thing to do here is, but I'm not sure what the right thing to do here is.
I think we should use `JSON_request` here instead of `ProxyListener`
I think this can be ` IMvxMainThreadAsyncDispatcher`
why remove the extra lines?
This is the only change that affects the `and` below.
This is a change in behavior, but I think it's better to use a `maneuver` instead of a `maneuver`
This is a very minor thing, but I think it would be better to use a more meaningful name.
Line is too long. [82/80]
I think we should add this to the `versionDetails` as well.
I think we can assert the COMPLETE().all(1) here.
I think this is the right place to put this.
I'm not sure we should be doing this here. If the revision is not set, the default is `Default` and the default is `Default` (which is the default)
I think this should be `fontawesome5_icon_mixin`
This is not the only place where weight is used.
Please add a space after commas.
This is a bit confusing, as I'm not sure what the `master` does, and I'm not sure what the `/puppet` user is. I think it would be better to just call `puppet_tmpdir` directly in the `master` model.
I think we should use `upload` instead of `upload`
I think this should be `wx.Dialog`
Shouldn't this be done in a try catch block?
Use `else if` for readability
I think this should be `AuthFree = true`
I think we should check if the inputWriter is present and the inputWriter is present.
This class does not contain tests, so it should be removed.
`params` is not a pointer, so you can remove the params from the DOM
shouldn't we check that the port is not nil?
I think it would be better to move this to the `if` statement above the `if` statement.
I think this should be nullable and not non-nullable.
I think we can just remove this interface and just do it in the interface interface.
why is this removed?
I think it is better to have a method that returns a `ValueFormatter` and have it return a `IValueFormatter` and have it return a `ValueFormatter` and have it return a `ValueFormatter` and use that instead.
Why not use `axis`?
this is a pre-existing change, please revert
I think this should be `updateTaskKnownStatus`
This is a bit weird. It would be better to use a span that has a root span. It would be a span that has a root span.
I think we should remove the API.
This method is not used anywhere.
I think we should be able to use the 250 number of bytes. I think we should be able to use the 250 number of bytes, and then use the 250 number of bytes.
I think we should try to catch the filename as a filename.
Why do we want to check for nil?
I think this is the only place where we can use `Em` instead of `Em.last`.
This is a bug fix.
I think this is a bug fix.
Why do you need this?
Why are we dropping the `blockBytes` here?
This lock is not necessary. The lock is already initialized with a reference to the mutex.
This is a bit odd, we should probably use `on_mode_left` here.
I think we should be able to remove this test now that we're using the `configureCluster` method.
This should be removed.
Same here, I think we should use `<tr>`
I think the `+` is not needed here, the `i` is already `i`.
I think we should be able to get rid of this `no_docstring_rgx.pattern` and `no_docstring_rgx.name` and `no_docstring_rgx.pattern` since they are both both present and re.match()
I think this is a good change.
This is a no-op because `describe` is not passed to `describe`
This is the fix.
Why not use `get_cfg_var`?
I think we should log the "successfully connected" here.
This test is not right. `DateTimeUtils.setCurrentMillisOffset(0);` is called in a few places.
I think we should keep this as `if ( footerText ) {`
I think we should keep the old name here.
this is the bug fix?
why not just add the `caBundle` option?
I think this should be a public constant. The description is not very useful.
I think it's better to use `drive-use-created-date` instead of `drive-use-created-date`
Can we change this to `1e-15`?
why not just `NewMasterIndex()`?
This is a change in behavior, but the test is still testing the actual behavior.
What if the `:name` is not passed?
Why do we need to count the aptr->next here?
I think this is not correct. `if defined?(Mongo::QueryCache.cache_table) {` is the correct one.
I don't think we need to add an index here, it's a user error.
This is a change in behavior, but I'm not sure it's worth it.
Why is this change necessary?
Why is this needed?
I think this is not needed
I think this should be `final`
This looks like a bug.
why not return the payment channel?
This is a bit weird, I think it would be better to just use `expect(page).to be_nil` here.
Maybe we should log something here, instead of passing `info` to `info`?
This can be `null` by default.
`rand` is no longer needed.
Why not use `Environment\Domain` instead of use `required`?
`pendingRequest.configuration.remoteHost = pendingConfiguration.remoteHost;` is always undefined.
This is not needed anymore?
This is a breaking change.
Is this needed?
I think we should change the `op` to be the default.
This should be a separate PR.
I think we should add `s.postageTopUpHandler` to the postgres
This is a internal function, not an internal nodes.
This is the only change that affects TF providers.
This is a bug fix.
This is a change in behavior, but the RamUsageTester file is not updated in the database.
This should be done in a separate PR
I think this should be `1 * component_count`
I don't think this is the right default. The default should be `null: false`.
Prefer single-quoted strings when you don't need string interpolation or special symbols.
I don't think this class is needed.
I think it would be better to use `null` here instead of `null`
I think this should be a `Update` function.
This is a breaking change, but I think it's a good idea to add it to the docstring.
I think we should just do `w.Name = w.Name` instead of hardcoding the returned value.
This should be added to the `REDIS_HOST` above.
I think we should keep the `public` here as we do in `repo.py` and `repo.py` to ensure that the `RESEARCHERS` is not an `ClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClearClear
I think this is a good idea. It should be a good time to get a specific password from the database.
This is a very minor detail, but I think it's better to use `vnode._children.map(detachedClone);`
I think we should just remove this variable and just use `var`
while you're here, do you need to add `//go:build !cgo` to `build !cgo`?
I think this is a bit confusing. I think it would be better to raise an error if the element was not found.
I think this is a leftover?
This is a breaking change.
This is not used anymore
This will need to be `<binary>` not `<binary>`
Import packages with the new packages are actually not needed.
should we add a migration to make sure the DB name is not empty?
I think this should be set to false by default, right?
This is a bit of a hack. I would suggest to use a different name. I would suggest `if ExternalToolHandler is null, ExternalToolHandler` or `if ExternalToolHandler is null, ExternalToolHandler is null, and if ExternalToolHandler is null, we wouldn't have to do this.
Why is this needed? I don't see any `LocalPrefs` in this file.
If it is not possible to use `afterEach` to avoid the warning, it will be easier to read if it is not a valid test.
This should be `40566` (and the `ang` should be `40566`).
Could you add a `object` parameter to this class?
This is not needed.
This method is only called in one place, so I think it is better to move it to the `Properties` class.
I think we should just use `kube.Pip` here.
I think this is a bit confusing to me. Can we have a single function that returns a list of `ACL` and then a single function with a single name?
This is a breaking change.
Please remove this
This file is now unused.
I think we should be able to remove the `type` parameter from `catalogName` and use `type.name()`.
I'm not sure if this is the right fix. It seems like the only place this is used is when the Mysterium is set to true.
I think this should be `if (!isOpen())`
This file is not used anymore.
I think it's better to use `Transaction` instead of `t` here.
This import should be grouped with the other imports.
Same here, `sgTo15MinAgo` is a bit confusing.
I think we should just use `RejectRequest` here.
This is the only change that fixes the bug that caused the `web0s` to be changed to `videoAudioCodecs.push('mp2')`.
This should be `return hipError(dstCtx)`
I think we should just remove this parameter from the array array.
This should be debug_output, since it's not really a valid debug output.
I think this should be `&&` instead of `&&` to make sure the history history is not set.
@team_page.present? is it necessary to be able to inject team_page? if so, can we just remove it?
This is a bit of an unrelated change. I think it would be better to have a method that returns `Decrypting` and then call `getDecryptingCipher` with a method that returns `null`.
I think we should be able to use `hypervisor.restore_snapshot` here, but that's the case.
I think this should be setuptools.setup_requires
`_` instead of `_`
This is a bit unrelated to the PR.
I think you can just use `Unwrap(m.Unwrap())` here.
This is the main change.
This is the only change that affects TF providers.
you should also add `mne.util.Constants` to the `aio` file
do we still need the `assert` here?
This is a change in behavior, but I think it's a good idea to add a `Rails` to the `server` interface.
Could you add a description of what this function does?
I think we can remove the `JOB_ID` member variable from the constructor and just call `super().set()` directly.
I think this is a leftover from debugging?
This property is not used anywhere.
`fullSynchronization` and `fullSynchronized` are actually syncing the `fullSynchronization` object, so we should just use `fullClient` here.
I think we should be able to get rid of this check.
I think we should move this to the controller controller to be sure we don't have a default controller controller.
I think this import is unused.
This file is not used anymore.
This test is testing the wrong thing.
I think this is the only change needed?
I think we should use `unless` here instead of `unless excluded_portal_link`.
I don't think this is needed
This is not a good idea. It should be `props.defaultValue`, not `props.defaultValue`, but I think it should be `props.defaultValue`, not `props.defaultValue`, since we don't need to check for `Ani|Tra)/`.
I think this should be `else if`
MDC is not used anymore, please remove it.
This is a bit of an unrelated change, but I'm not sure it's worth it.
This should be done in a separate pull request.
I think this import should be removed from `createMetadataTableInstance` to `createMetadataTableInstance`?
Should this be `pylint:3000`?
I think we can remove the `delegate` here and remove the `delegate`
This is the fix.
Is there a test for the remote file that needs to be updated?
This should be a `Set<T>`.
I think it would be better to use `poStProof.bootstrapMessageDirect` here instead of hardcoding it here.
I think you can remove the `ReflectionFunction` keyword now.
I think this method should be renamed to `getModifiedModified`
`GONE` is not used in this function.
I don't think we should be changing this?
This should be `options`
Why are we removing the `rvm` field from the config?
I think this is the right approach. I think we should use `int.pack("<H", len(pay))` instead.
I think we can remove these now that we're using the new version.
This is the only place where we need to keep the `butPlay` call.
I think this test is not needed.
I think it would be better to move the BASEFEE outside of the `HashHashHash` and call it in the `HashHashHash`
I think we should use `utils.NAME` here.
This is a bit of an unrelated change, but I'm not sure how to get the `CLOCK_REALTIME` key from the DB.
I think this should be `||` instead of `||`
Use `std::size_t` instead of `std::size_t`
This is a bit weird. I think it would be better to use `nonzero(cls, dataset)` instead of `cls` here.
`Uri` is a `private`
This should be done in debug or in the debug mode.
I think we should use the `copilot/.workspace` tag instead of the `app init creates an copilot directory`.
I think we should keep these types as they are not exported. We should keep them as they are exported.
I think this should be `SabreEvent` instead of `SabreEvent`.
This is a good place to put in `pkg/spec/server/pacheth.go` as a default.
I think we can move this to `accountID` so we don't have to pass the ` clientID` param to the `accountID` module.
I think this is a bit of overkill, but I think it's probably best to move this to a separate test file.
I'm not sure if this is the right place to put this. The `UnknownCharSet` is used in the `default` function.
This is a private field, so we should be able to remove it.
I think this should be `client_slug = observations.count > 0`
Can you remove the `--local-scheduler` option from the class?
I think this should be `examples/cdn/*"`, not `examples/bundle/cdn`.
I think we can remove this and use `[StructLayout(LayoutKind.Sequential)]` in the `Struct` method.
This is a bit of an overkill, but I think it would be better to have a separate `getAtomicNum()` method that takes a `getAtomicNum()` method and then call `getAtomMapNum()` in the `if` block.
I think this is the only place where we need to do this.
I think it's better to call `OptionalLong getBaseFeePerGas` here.
I think this is not the right place to change. The `util.Errf` message is used to check for the `output.Errf` message.
why is this removed?
I think we should add a default value for these values.
This is a very unrelated change, but I'm not sure it's worth it.
This is a very minor detail, but I think it would be better to move this to `load_script` and then call `reload_scripts` in the `script_obj` method.
I think this should be public.
Please remove this file.
I think we should be able to remove this.
Shouldn't we have a `[key]` for this?
I think it's better to use `2017::get_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_add_
@jridgewell Is there a reason to change this to `const spv::OpString`?
I think this is a bug fix. It should be in a separate PR.
nit: remove empty line.
hierarchical_name is not used anymore.
This is a bit of a hack. What about `ingress/#ingress-class`? It's not clear what the `IngressClass` key is for.
This is the only change that affects TF providers.
shouldn't `key` be null?
I think we should keep the original zap.Error call in `createFilestore`
I think it's better to use `glog.Error` here instead of `err`
I think this is a bit confusing. I think it would be better to raise an error if the element was not found.
I think it would be better to use `time.validate(time.Second)` here instead of `time.validate(time.Second)`
Why is this class removed?
@franckc @jridgewell Is this a bug?
This was the bug, but the script script was removed from the database and the database does not contain the python script.
Nit: this protocol ID is unused.
Why is this change necessary?
I think we should use a more specific name for this.
Should be xattr?
I think this test should be testing the length of the test. If the length of the test is zero, the test should be testing the length of the test.
this import is no longer needed
why is this removed?
This will skip skip messages on XHR requests. If we don't want to skip messages on XHR requests, we can skip them.
I think we should just remove the `AccountNonceMap` field from the account.
I think this should be "clientconfig" instead of "clientconfig"
I think we should just use the `admins` and not the `rule` part.
This should be `null`
Can you add a log message here?
I think this is a bug fix. We should not be adding new code to the code base.
I think this should be a `static` field.
nit: can you revert this change?
feval is a very high level, it's not a smaller number of dataset.
This change is not needed.
I think we should use `time.NoWait` here.
I think this should be `Marshal.Marshal(upnpObject, nil)`
Is this function used somewhere? I don't see it being used anywhere.
This is a change in behavior, but the `0` check is not needed.
I think we should use `current_user.subscription` instead of `current_user.actions`.
I think this should be `preg_quote($quoted_remove_var_id, '/')`.
I think this import should be removed.
I don't think this is needed
`assert result` is a bit confusing, why not use `result`?
why is this in the controller?
This file should be removed.
I think we can move this to `go-selinux`
This should be `DELETE_REQUESTED`
Can we enable the `true` by default?
I'm not sure if this is the right place to put this block. I'm not sure if it's worth it.
should we add a check to make sure the serviceInfo is part of ServicePort?
This will return null if the key is not found, hence check for it before it will return true
I think we should be able to just use `if port.nil?` instead of `if port.nil` here.
This is the only place where we need to return the `false` value.
should we add a check for the new value here?
This is the only place where we need to pass the `GetTipSet` object. I think we should just pass the `State` object directly.
This is a leftover
I think we can keep this as `conf`
I think it's better to return an error instead of returning an error.
I think it would be better to move this to the `PartitionFlagBiosLegacy` function.
This is a breaking change.
This is a bit weird, why do we need to do this? I think it should be a default value.
I think this is the only change that affects TF providers. We should probably make this change to `Sprintf` instead of `v`
BibEdit -> BibEdit
why change this?
I think this test should be moved to a test. It's not a test.
I think it's better to remove this method.
why was this private?
This is a change in behavior, but the change is not correct.
This is a bit of an unrelated change, but I'm not sure it's worth it. I'm not sure it's worth it. I'm not sure what the problem is here is, but if it's not, then it's better to have it in a test.
This method is not used anymore.
`IntegrityError` is a better name. It's a little confusing. How about `index_id`?
I'm not sure about this change. The `recursive_mutex` method is used to create a new instance, so I'm not sure what the best way to do it is.
The `issuerName` and `ConfigurationConfiguration` seem to be unused?
@jridgewell I'm not sure this import is needed.
I think `source","DVN` is still a good idea to use `Attribute` for these two fields.
I think we should be using `CompareCommits` here instead of `CompareCommits`
I think this should be a different function.
I think we should keep the old name as well.
This should be removed.
I think we should add a `boolean` check here to make sure it's not addressed in the `addRequestId` method
This field is not used.
why did you change the assertion? it was a test that was not working
This is the same as `++i` as the default.
This is not the right place to put `AppendHistoryNodes` in `AppendAppendNodes`. The only place where we have a `AppendHistoryNodes` function in `AppendNodes`, is it?
I think it would be better to use `SPIFFEID` here instead of `telemetry.Entry`, since it's a `SPIFFEID` in the `if` block.
This is a bit of a hack, but I think it would be better if we just return a `vpnServer` instead of passing it in.
This is the only place where we need to save the `mocha` parameter.
This should be split across multiple lines.
This is a bit odd, but I think it would be better to move this to the top of the file.
Why is this needed?
@JeremyKuhne can you confirm this is the reason why you added this?
I think we can just remove this interface, it's no longer used.
I think this is not the right place to put this. You can just use `Word dependencies = { 0 } from 'lodash';`
I think this should be grouped with the other imports.
I think it would be better to use `isNotEmpty` here instead of `undefined`
This should be `Rpc-Header`
this should be changed to use the `account` package
I think we should have a `accountConfig` that is not needed here.
Why not just return None?
This is a bug fix. The `if` should be moved to the `if` block.
You can use `String.format` here.
I think we should keep this as written as possible. But I'm not sure we want to make it clear that we're not going to re-use it every time.
I think we should be using the `AccountID` here.
I think we can remove this from `PhysicalPlanNode`
Is this supposed to be `bootstrap`?
Why did you change the parameter name to `False`?
why not close the closed?
This should be `SessionId` instead of `model.SessionId`
This log statement should be removed.
I think this is a little confusing. I think we should be able to use the `CartM_password_password` function in the `spec/models/core/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/beam/
Why is this being removed?
This is a change in behavior, but I'm not sure why we need to do this.
I think we should be able to use the `est.log` here instead of the `info`
This is a change in behavior, but I think it's better to make it a `Converter{}` instead of a `Converter`
I'm not sure if we should use `min_count` here.
I think this is the wrong fix.
I think we should use `<...>` instead of `(A-Za-z_][A-Za-z_.0-9]*)*\\]")`
This is a good idea, but I'm not sure what the best way to do it is. I'm not sure what the right thing to do is, but I'm not sure if it's worth it.
Maybe we should log the error message too?
This is the only place where we set the `TimeSpan` to `TimeoutAfter` but the `Task` is being used.
I think this is not right. It should be fixed in a separate PR.
This should be a single string.
load_time is a number of bytes, so we can use it here
I think it would be better to use `music` instead of `music`
I'm not sure if we should do this at all, but I think it would be more efficient to do `if options.session.w === 0` instead of `if options.session` since it's a separate function.
This is a bit of a hack, but I think it would be better to have a `var` and `return StartTime.HasValue && EndTime.HasValue` in the constructor and then use that instead of `60.Value` here.
`mLineEdit.setFixedWidth ( 10*fm.horizontalAdvance(QStringLiteral("a")))` is the correct way to do this.
I think we should just remove the `oltdir_type` here.
I think we should use `ruby-` instead of `0`
[nit] I'm not sure if this is the right fix. It's not the right fix, but I think it's the right fix. It's the same as `prec`, but it's the same as `0.0` in `init()`
This sleep is not compatible with the other changes.
I think we can just use `process.exit(error.exitCode)` here.
I think we should be able to remove the `ifdef X86` block altogether. The `ifdef X86` block should be removed.
`$allowedArgs -contains $_` -> `notnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnotnot
I would prefer to have this in a separate PR, but I'm not sure how to test this.
This is a change in behavior, but I think it's better to be explicit here.
This is a breaking change.
Is this a leftover?
I think this should be `highType = expr.High.Type().(*types.Basic)`.
This file is not used anymore.
I think this is not correct. We are going to have to copy the cache in a `conftest.server.root` and then `conftest.server.root` and `conftest.server.root` and `conftest.server.root` and `conftest.server.root`
This is a change in behavior, but I think it's a good idea to fix the bug.
I think this should return `undefined` instead of `null`? If `getComparator` is null, then `getComparator` should be `null`.
I think we should just remove the old config from the config.
This should be set to `false` by default.
I think we can remove this
Can you explain why this is needed? I would expect the `if` to be the same as the `if`
Just a note that this is a problem, but I'm not sure why we include `inventory` here.
I think this is a bug fix. The previous version of `t._1.equals` was not working.
I think we should use `user.includes` instead of `role`. The `role` is not a valid element, so it should be `user.includes` instead of `role`.
This should be a separate commit
Maybe we should rename this to `EntityService`?
This is a bit unrelated to the PR.
I think we should be able to get rid of the `returns has triggered a prefetch and returns that.`
This is a breaking change, we should probably change the default behavior.
This is the only change that affects the rest of the PR.
I think we should just remove the `_root_` from the `schema` property and just use `id` here. We can just remove the `_root_` property and just use `id` in the `_root_` property.
I think this should be a properties instead of a file.
I think this is a bit too much.
What is the purpose of this change?
You can use `data["server_conn"]["ip_address"]["ip_address"]["ip_address"]["address"]`
I think we should use the `exit()` method instead of the `start()` call.
This is a breaking change, I think.
nit: the error code is not correct. `ErrCodeBucketNotFound` must be `NotFound`
I think we should just be able to just use `host.generic_install_msi_on` here, since it's a bit confusing to have a test that fails if the host is indeed a host that is not a host.
I think this should be a `time.Duration`
This change is not correct, it is not needed.
This is a `Concurrent`, but I don't see any use of it anywhere.
This should be a `time.on('timeout',', reconnectEventHandler(this));`
This should be `Error` instead of `changeStream`
I think we should remove the `db` prefix from this test.
I think this is the only place where we need to do this.
This is a bit of an unrelated change, but I think it's better to have a `ConfigurationKeys.ServiceNameMappings` that is passed in to the `ID_ACY_MAL` function.
Style/UnneededInterpolation: Prefer to_s over string interpolation.
Can we move this to the top of the file?
I think this is a good idea to add `URL` to `URL.py` as well. We should probably add `URL` to `URL.py` as well.
I think this is the only place where we should be using this function.
I think we should remove the cast
if we're not going to be using cond->getOptionalInteger(0) here, we should just use cond->getOptionalInteger(0)
Is this needed? Are we trying to avoid the `Name`?
I think we should be able to get rid of the `body` variable here.
The `loadClassCache` is not used anymore.
"If the provided key is none"
I think this import should be removed from `org.junit.Test` to `import org.junit.Test;`
I think we should also change `scanner_index_id` to `inventory_index_id` and `scanner_index_id` to `describes_id` and remove the `resource_id` attribute.
`dispatcher.afterClickOn` is not really needed anymore, right?
should we use `!` here?
I think we can remove `List` here and `List<List<String>>` because it is public.
This test is testing the right thing.
I think this is not needed anymore?
I don't think we should be changing this to `null: false` if it's not a thing.
I think we should wait for the task status here.
I think we should remove the `<` from the dict
I think this should be `win` and not `arg`.
I think this is not needed. `preinit()` will be called once per process.
This is a bit of an unrelated change, but I'm not sure it's worth it.
I'm not sure why this is removed?
This is a bit unrelated to the rest of the PR.
I'm not sure if this is the right place to start this. It's a bit confusing. What about `systemctl start cloudsqlproxy`?
This should be changed to `TryGethtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtthtt
I think this is a bit of an unrelated change, but I'm not sure it's worth it.
This should be set to `false`
This is a breaking change. It's not a problem, but it's not a problem, because we're not using `ForceTraceWriteLine` as the default.
This should be set in the cache size, not in the cache size.
I think we can keep the old name as `pipeline_definition_sensor`
This file is not used anywhere.
I think this should be `new_token['default_token']`.
This should be a separate PR
I think this should be `--network-host-project-id`
Why did you change this?
Id => "!!! implement me and make me abstract !!!"
I think it's better to return an error instead of returning a nil.
This is not needed.
I think we should just return `false` here.
I think this is a leftover from debugging?
I don't think we should be using this in the code base. This is the only place where we have the `dubbo-config.h` file. It's not the case anymore.
This is a bit of an unrelated change, but I'm not sure it's worth it.
why change this?
This change is unrelated to the PR?
Shouldn't this be `!additional_pkgs.include?`?
We should probably make this a `caseField` so we don't have to worry about it.
I think we should use the shop here. It's used in the `WARNING` namespace.
This should be set to "failed to" instead of "asd".
`string.IsNullOrWhiteSpace` is the correct way to do it. In theory we should use `DD_INTEGRATIONS` instead of `DD_INTEGRATIONS`
Maybe use `path_` here, so it is more clear what it is doing?
seconds -> getting
`Array` is not used anymore.
The SHostQuery is already the default, so it should be `'Defaultorsors.MUST'`
Why do we need to check `telemetryConfig.Enable`?
I think it would be better if we could just use `if ~content-type" not in self.headers` and then check if the header is not in self.headers.
This seems like it should be in `tests/require` so we don't need to require the `require` here.
I think we should keep `source_fragment_type` here. We should not be using `UNLINKED` anymore.
@GabrielBrascher We'll need to add a new field for this.
why is this change necessary?
Shouldn't we use the `oauth` interface here?
this is not a valid fix.
Why is this removed?
I think this is a bit too much for a user to read. Can we just use `Integer.MAX_VALUE`?
I don't think we should add these to the `MessageId` namespace. I think we should add them to the `match` namespace.
Can we just use `UDPv4Transport.h` here?
I think this should be a `with` statement.
Why do we need to do this?
This is a change in behavior, but I'm not sure why it was here.
I think we should use `expandableRowHeaderColDef` here instead of `userInjectedExpandableRowHeader`
I think the cached path should be cached, not cached.
I think we should add a `TODO` to the `read-label` option to add a `prohibitedAttrs` field to the `label` field.
Is this change intended?
Should we use a `StringUtils.hasTable` here?
I'm not sure this is the right place to put this. The `reverse_merge` method is called in the `_invite_client` class.
I think this is the only place where we need to check for encryptedInstanceUrl.
I think we should use the `ClassHeaderFunctions` method here. It's not a big deal, but it's a little hard to see what it does.
This is now unused and can be removed as it is now just unused and can be removed.
I think `get_extents` should be `combined_type`
I think this import is unused?
I think this test is redundant now
I think this is a good change. The `Prefetch` is not a `Prefetchable` type, so it's not a `Prefetchable`.
Why did you remove this?
Can we move this to the `response` package?
This is the fix for the test. The test was failing because of the `node` to pass the node.
this should be `#if // HAVE_CONFIG_Hrm`
I think this is a bit confusing. What about something like `TestSlasherer.TODO(context.Context, *types.BlockHeight)`.
This is a change in behavior, but the code is not correct.
I think we should remove the `vertigo` case here.
I think this URL should be in the URL instead of in the URL.
This line is not necessary.
this is not needed
I think we should be able to remove this
This is a leftover import.
I think it's better to use `lockBeforeLock` instead of `LockID`
I think we should remove `JavaParserConstants` from `org.junit.Test`
This looks like a leftover from the previous commit
I think we should keep this in `CollectProvider`
I think we should use the same name here as `projectname`
I think this should be `if (!PlatformDetector.SupportsSharableMutex) return _concurrentWrites ?? ??`
I think this is not needed.
Is this TODO still useful?
I think this is not needed. There is already `VERDACCIO_API_URL` in the URL.
This should be done in `AzureDataOption`.
This should be `<seealso cref="TracerSettings.Convention"/>`
I think this should be `private getters.getAliasProp`
This should be removed.
Can you explain why this change is needed?
I think we should update `updatedInfo` to `updatedInfo.GetDescription()` if it's not updated.
What is the purpose of this change?
Do we need to address the whole time?
@jridgewell I'm not sure this is the right fix. The `S Atoms` is the `icedtea-` package.
This is a change in behaviour - we should not be using the actual actual actual image image
Why do you need this?
I think we should move this const into `STROYING` and then use `const CONNECTION_EVENTS` in the `STROYING` function.
I don't see any new conccurent collections or tasks in this PR. Are these `using`s needed?
why is this a string?
This is a bit of a hack, but I'm not sure we should return the error here.
I think it would be better to use `NoError` here.
I removed this because it is not used anywhere
This is a change in behavior. The `partition` fields is not used in the `partition` fields.
I think this should be `kwargs.get('config') or None`
I think this should be `padding:0`.
I think this should be `const MongoError = require('../error')`
This should be `SettingValue`
This should be `std::cerr << "----------------------------------"`.
I think we should be able to use the terms term ID to determine the offset.
This should be `replaceResultInFormWithNew`.
this is a bit weird, we're not using the `click_link` response anywhere else, we're using it to generate the response response.
please revert this import
project_id (str) id of the project to query.
I think we should be able to remove the `defer deadlineTimer` call here.
I think this is the only place where we need this change.
Why not just use `NONBLOCK`?
I'm not sure if there is a better way to do this. The listener is destroyed in the search and the listener is destroyed in the search. The listener is destroyed in the search and the listener is destroyed in the search.
Line is too long. [89/80]
This is a bit of a hack, but I think it would be better to have a PONY_API as a parameter.
This is a bit of an unrelated change, but I'm not sure how to use this in the code. I think it would be better to use the `volume` function instead of the `REDIRECT_DETACH` function.
Why is this bool?
This should be `lib/lib`
Why not redirect to `@offering`?
I think this method should be called `close()` instead of `close()`.
It seems like this should be done in a separate PR.
why not `box`?
This should be done in the `if` statement.
Why is this change required?
I think this is a leftover?
is.undefined is no longer used?
example is not used anywhere.
This test is testing the wrong thing.
This is a good place to use `UTF8Encoding` to make it clear that the contents is not `UTF8`.
I think this is a bit of an unrelated change.
This is a bit weird, why not just use `Memoryquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquidquid
We'll need to add a `team` column to the `team` model.
updateParams() is called from base class.
I think we should add a doc for this new column
I think we should use `Config.GroupGroup` here.
This include is now redundant. It is now removed.
I think we should remove this line.
I'm not sure this is the right place to put this.
I think this should be a static import.
This file is not used anymore.
Is this a typo?
`RetryTaskV2` and `RetryReplication` are both both used in the same function.
This import should be above the other imports.
Can you use `.get` instead?
This is a wrong change.
I think we should use the `_cancellationToken` field instead of the `jsonRpcConfig` field.
I think this should be `/bin/flock/cron_runner.lock`
Why is this removed?
why is this change needed?
`go.opentelemetry.io/api/core` is already in core, so it should be here.
I think we should also update the `ke_version` key in `build_version` and `build_version` to work with `ke_version`
This change is not necessary. The key in spark 4.3, it will be set in spark 4.3, which will be set in spark 4.3.
`data` is a dict, not a dict
this is a bit weird, why do we need to do this?
Why remove the deploy mode?
This is a bit of an unrelated change, but I'm not sure it's worth it.
I think this should be `AppVars`
I think we can remove the `@elasticsearch_cache` variable now.
@jridgewell Is this what you intend?
I think `Bool` is a better name.
Is this file still used?
I think it would be better to make this a `MYST` instead of 100
I think we can use `defer controller.Controllers` here and in the other errors where we use `defer` for the error.
I think this is a bit of an overkill. I think it would be better to have a `opts.spec` and then use that in the if block.
I think this is not right. The `get_tab_widget` function is called in the `get_tab_indicator_color` function, which is called in the `get_tab_indicator_color` function. The `get_tab_indicator_color` function is called in the `get_tab_index` function, which is called in the `get_tab_widget` function.
This should be `add` and `return`
This is the only change that fixes the bug. The reason is that if we're not using the same path as the last thing, we should be using the same path as the first thing, and then the second thing to be the last thing to do.
I think we should use the `default` variable here.
This property is not used anywhere. It is used in the `Dictionary`.
This should be a separate PR
`this.deletes = deletes` is a bit confusing, why do we need to set the `this.file`?
I think we should throw an exception here, as we are not using it anywhere else.
This is the fix. I suggest to check if the script is empty.
can you also check if the `LocalWidth` is `1` and if it is `1`?
is it worth logging that the logger is not generated with the response handler?
Are you sure you want to render theargs name?
I think this should be `crypto2`
`StatusForbidden` is already in the `StatusAccepted` method.
I'm not sure if this is the right way to do it. It should be: `rankstr[0] = rankstr[0] = rankstr[0] = -1`
I think we should use the `ecsAgent` interface here.
Should we do this in `pkg/core/utils.go`?
Should we use `cancel` here?
`@phpstan-param array<string, string>` would be better.
Should we log this message?
I think we should use `tags` instead of `tags` as we do in the other PR.
This should be a pair.dilation
What's the reason for removing this?
This is a change in behavior, but I think it's a good idea to keep the C++ code consistent.
This file should be removed.
shouldn't it be "mount ("etc"?
This method is not used anywhere.
Why do you raise an error here? It's not clear what the error is.
shouldn't this be `aws-global.h`?
This is a bit of a hack. I would just pass `querystring=dict(errors.request_GET(request))` to `querystring=dict(...)` and then pass `request_GET` to `querystring=None`.
Why is this removed? The `ticker` is now unused.
why is this needed?
This one is missing a comma.
I think this should be `IonMobility`
I think we should just remove `IOIO` and `CancellationToken` as it is used for the `IO` interface. The `IO` interface is used for the `IO` interface. The `IO` interface is used for the `IO` interface. The `IO` interface is used for the `IO` interface.
I think we should be using `secrets` instead of `secrets`.
This seems like a good candidate for a upgrade command, as it's a new upgrade command, and it's not a new upgrade command.
Can we use `block.Block` here?
I think we should use `flask.flask.flask.flask.flask.flask.flask.flask.flask.flask.flask.flask.flask.flask.flask.flask.flask.flask.flask.flask.flask.flask.flask.flask.flask.flask.flask.flask.flask.flask.flask.flask.flask.flask.flask.flask.flask.flask.flask.flask.
This is a good place to put this.
should we call `s.idx.BuildIndex` here?
I think it would be better to use `Time.FormatString` here instead of `Time.FormatString`
Line is too long. [81/80]
This is the only change that affects TF providers.
This should be a part of the next PR.
I think this is not needed.
Do we need to also add a default port? If so, we should just add it to the `local` field.
imports must be alphabetized
I think this is still wrong, we should just remove the `WinConsole`
Do we want to log something here? I think we're not going to log it, but I think we should just log it.
This should be `dataframe.tail()`
I think this should be `this.servers.size !== 0`
I think this should be a different name. The other one is used for the new one.
This is the only change that affects the test.
I think we should keep the old one in the default case.
I think it would be better to add `stastics` to `stats` and then add `.stats` to the docs.
What about `tail: unrecognized file system...`?
I think we should keep the `fake-infra-id` as it is.
Maybe we should add a `get_node_first_ancestor_of_type` method to get the node from the node?
This is a change in behavior, but I think it's better to use a `error` variable here.
This is the only place where we add this, we could just add the `kill` at the top of the method.
I think it would be better to use `CreateSharedString` here and in the other similar methods, as in `CreateString`
This is a bit unrelated to the PR but I'm not sure it's worth it. I'm not sure it's worth it.
Should we use `notice` here?
Is this necessary? It doesn't seem to be used anywhere.
This is not a property of the dateFormat object, it's a property of the dateFormat object.
I think it would be better to just return error. The enumsspb.WORKFLOW_BACKOFF_TYPE_UNSPECIFIED will be a enumsspb.WORKFLOW_TYPE_CRON_SCHEDULE, and it will be a enumsspb.GetInitiator() which will return error.
`browser.tizen` is not the default, so it should be `e.keyCode === 32 && browser.tizen`
I think the password hash should go before the `config` package.
This is not the right way to do this. The `TelemetryConfigurationDto` is already implemented in `TelemetryConfiguration`.
I'm not sure this is the best way to make boost::make_shared, as this is a public interface.
This is a breaking change.
This should be constDelete
This should be `response['ResponseMetadata']['HTTPStatusCode']`
Is this necessary?
This error is never logged.
Should this be `JsonRpcUrl? url`?
This is a bit of a hack, but I think it would be better to move this method into a method like `client_model_slug_model` and then call `client_model_slug_model` in the `client_model` model.
info() is no longer needed.
I think we should keep the old name here as well.
I think this function should be removed.
I think we should change this to `AtomicInteger.create` instead of `AtomicInteger.root` to be consistent with the other changes.
This is a pretty big problem. The problem is that FetchDate doesn't have a `FetchDate` instance, which is not the correct thing to do.
I think we should just remove this line.
nit: remove empty line
I think this should be a separate commit
I think this should be `-c`
Why public? Is it a breaking change?
Shouldn't it be `Email`?
For consistency with the signature signature, you should be able to use `block_processor_verification_size` instead of `2048 * signature checker threads`
this is not used
I think this is a good change. It's not a big deal, but it's a little hard to see.
I think this is the only way I could use this function in `HOST_ARM64`.
I think it would be better to have a `try/finally` block that the `ROOTDIR` is not defined.
Is this include needed?
Is this a regression?
This is not needed.
Can you add gitea copyright line to header (and keep gogs one next to it)?
I think this should be done in `lib/constants.py` instead of here.
I think we should add a warning message here to make sure the user doesn't have a "name of schemas" behavior.
I think this is the only change that affects TF providers.
I think we should use `Collections.emptyList()` instead of `configs`
I think we should add the `/` prefix to the `*` module.
I think this is a bug fix. The tests are failing because of the tests.
I think we should make it `self`
why is this needed?
This will need to be `m.paths["devices"]` in the path.
I think we should be using the `gaID` property instead of the `gaPropertyID` property.
I think this.status.uploads should be the last status of the fetch, not the file.
This is the only change I'm not sure. I'm not sure if it's worth it.
DbCapacity is not used in DbCapacity, can we remove it?
I think this test is still failing because the hash will be removed from the test.
This is a bit of a hack, but I think it would be better to make the `sudo` be a constant.
Is this used anywhere?
I think we should be able to remove the `if (component.constructor.getDerivedStateFromProps) { state = component.prevState || state, }` here.
I think we should move this to `aws/sdk-go/service/ec2/install.go`
I think we should be able to use `status_for_status` here.
I think we should use `error.message` instead of `xhr`.
This is a bit weird. I would expect that if we have a non-zero value, we wouldn't have to worry about it.
I think this should be moved to the endpoint_endpoint where it's used.
I think this is not the right place for this. It is not the right place for the Tree.
This field is not used.
I think it would be better to just remove the `it` and `it` here, and then just call `it` in the `describe` below.
This is not needed.
This is a bug fix. It should be handled in the `catch` block.
I think this is a leftover from debugging?
Why are we returning an error now that we never return an error?
Why did you remove this?
I think this is a good place to copy the repo. We should not need to copy the repo.
I think this variable should be removed.
I think this is a leftover from somewhere else.
Nit: the `errors` is a `\` at the end of the string
This is the only change that fixes the bug.
can we use `felixes[0]` here?
I'm not sure this is the right approach. The `sqlcode` variable is used to be used in the `sqlError` function. I think it should be removed.
`AccountMaxVersionPrefix` is a boolean, so it should be `AccountAccount sharding`.
I think we can remove `apinamespace` from here and remove `apinamespace`
This is a breaking change, but I think it's worth it to make it more explicit.
I think we should add `Coroutine` to `NOPE` and `NOPECoroutine` to save some of the time.
I think we should be able to remove this and just use the default value for the `ipVersion`
I'm not sure why we need this. `MultiDomainHost` is still in `MultiDomainHost`.
This is a very specific error, I think.
This is a bit of an overkill, but I think it would be better to just have a `_from_path` method that returns the error.
I think this test should be renamed to `blacklisted-name`
Why are we returning 1 here?
I think this should be moved to the d_r_avx512_code_in_use function.
I think we should be able to remove this, it's not a big deal. I'm not sure if we should be using `Field` here.
This should be `volatile`
@tgamblin I think this is the preferred way to fix this.
I think we should not use the top here.
I think this should be const.
This test doesn't work anymore?
Shouldn't we also remove the `chromeOptions` constant from this class?
if you set it to `None`, you don't need to check if it's None.
This seems to be unused?
The test for this was failing because of this change. This change means that we don't need to have a valid output, but we don't need to have it on the output.
I think we can remove this, it is now just `v2D_v2`
I think this interface should be ` azkaban.imagemgmt.utils`
This is a bit of an odd operation. It would be better to use a `pid.get` function that returns a `bytes` object.
I think this needs to be `X.Forms.Views`
This import is unused.
The `Pricing` class is used in a few places, so I would just remove it.
The `useSelect` import is used only in `DashboardEffect` so it can be removed.
I think this is not right. We should only do this if `g.auth.is_active` is true.
This should be a `const`
This is a bit of an unrelated but I think it's better to have a `try/finally` block that is used in the `try/finally` block.
You can remove the AutomaticValue class entirely.
I think we should use `Replace` instead of `Add`.
Would it be better to use `path.of(dispatchFilter, "/*", "Jetty server")` here?
I think we should probably have a `.start` file that is used here.
Why not useDefaultSources directly?
I think this function is not needed anymore?
I think this is a bug fix.
I think we can just copy the file directly from the `.copy`
I think this should be `TEST`
I think we should use `balance.Int64` here.
I think we should remove this, it's no longer needed.
This is a breaking change.
This should be done in the constructor, not here.
This is a breaking change. We should probably just make it `tasks` or `tasksTasks`
I think we should use `t.Fatal` here.
Can you check if this is a good idea?
This should be `validateNoConflictingAppends`
I think we can remove this empty line
This is a breaking change. Can we do it in a separate PR and move this to `circleSpan`? It's not a big deal, but it's not a big deal. It's a little hard to see what the issue is about. The `AppSecEnabled` and `AppSecEnabled` are, and it's not a big deal.
This is a bit confusing, since `AtomicLocalFile` is a `__init__` method, and it's not a `__init__`. I think it's better to move the `_AtomicLocalFile` to `__init__`.
This is a little confusing, why is it necessary to change the `partners_ic` to `https`?
I think we should add a `StoreStore` to the `sql` interface.
Shouldn't this be `POST`?
This is a bit of an odd change. It's not a blocker.
I think this is the only change that affects the test.
This is not a good idea, we should be using the `util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util.util
This is a bit of an overkill, but I think it would be better to use `mPluginLoader` here instead of `mPlugin` in the `if (!mPlugin)`.
This is a breaking change.
This is a bit unrelated to the PR.
This is a change in behavior, but I'm not sure how to test this.
This is a breaking change. It is not a problem, but it is a breaking change.
This class is unused.
This is not a good place to import this from `from .drbg.hmac_drbg import DRBG`
I think this is a good idea. It should be a bit more efficient.
I think we should also add the `--plugin` flag to the `appType` list.
Why are we dropping the config?
I think we should just remove the `Uploading` and `Lade hoch` single quotes.
Why is this defaulted to `true`?
I think we can remove this and the `mongoErrorContextSymbol` below too.
I'm not sure this is the right thing to do. The other changes are just to the test.
I think it would be better to have a more descriptive name like `postpostpostpostpostpostpostpostpostpostpostpost` or something like that.
This change is not necessary. `if field` is the sum of the named field.
Is this needed?
This is a change in behaviour.
I think we should set the default here, as we do in the other PR.
I think this is the only place where we can use this method. I think we should just return `Task.FromResult` instead.
I think it would be better to use `const yield User.create({ name: 'Hafez')`. It would be better to use `const yield User.create({ name: 'Hafez')`.
why is `ExecutionDataGas` not needed anymore?
I think it's better to move this test to the `@VisibleForTesting` class.
This is a breaking change. I think we should just return `nil` here.
The default value should be 8, not 8.
Let's add a new key to the docs that `aws/aws` is not available in the environment.
I think we should be able to just use `handle_()` here.
This test is still testing the actual test case.
This function is now unused and can be removed.
This is a bit of an example of how we could add a `validateProxyUser` method to the `User` table. I think it would be better to have a `validateProxyUser` method that takes a group and returns a group.
I think this namespace can be removed now, since it's not used anywhere.
Why is this change needed?
I think this should be `protected`
I think we should be able to use `is_x_amz_server_encryption_customer_algorithm` here.
I think this is not used anywhere.
This is not the right way to do this. The password is not encoded as part of the remote password, but the password is not encoded as part of the remote password.
this is a bug fix?
This should be `va_start_count`
I think we should move this to `envconfig` package.
I think this should be a `static` field.
I think this is a leftover
I think we should use the `application.druid.segment.application.segment` here
I think we should use the default from `token` to `schema` instead of `Parameter` here.
Not sure if this is the right place to put this.
I think this is a good time to fix the problem.
This test is failing on the `specified` test.
I don't think this is needed.
I think this can be removed now, since we have no pylint changes in this file.
I think we should change the default value of the default value here.
This will fail on error, right?
I think this is a bit too much, maybe `covariance_missing_column_2`?
Removed is not needed here, the tx txHash will be set to 0.
I think it would be better to use the `githubURLFlag` and `repoURLFlag` as the default.
Line is too long. [87/80]
please avoid import *
I think this should be done in `execute` method, otherwise it will be called in `#execute`
Why is this change necessary?
Please use the `Platform` class.
This is a change in behavior, but I think it would be better to have a `GetServer` method that takes the `GetServer` as a parameter.
This is a bit of a hack, but I think it's fine to just use 60 here, but I think it's fine to just use 60 here.
What about `abspath`? This way we don't have to use os.path.join directly.
Why is this necessary?
I think `var CircularJSON = server.cling.getName()` would be more clear.
I think we should use ServiceDefinition.After here instead of ServiceDefinition.
This is the wrong place for this. The `open file bucket` is used to run a directory with a directory that has no file bucket, so we should be able to run it.
I think we should also change the Solr version in this file.
I think this should be `config.lib.join('lib')`
This is not a good idea. It should be `slots.stream()`.
Do we need this?
I think we should be able to use the `http` field here. I think we should be able to use the `https` field in the `DateTimeOffset` field instead.
Please use the same constant for all the others.
I think we should be able to just use `needs_reshape_` here. The `cpu_data` is already set to `false` in the `cpu_data` function.
RANDOM_ORDERING = lambda do |list| Kernel.rand(list.size) : 1
I think we should remove this
I think this is a little confusing. I would say that `rawValues` is a `string` and not a `string` (and `rawValues` is a string).
This seems like it should be a separate PR?
I think this should be `@SuppressWarnings("unused")`
I think it would be better to use `ENGINE-16002 Exception while closing command context: ENGINE-03110 Required admin authenticated group or user` instead of `ENGINE-16002 Exception`
Nit: I think this import is unused.
I think this should be `config.func`
This is the only change that will cause the node to be closed. The `if` statement is redundant here.
This function is only called in `init()`, so should be called in `init()`.
This is a bit of a hack, but I think it would be better if we could just change the `<no SDK>`, `<no SDK>`, `<no SDK>`, `<no SDK>`, `<no SDK>`, `<no SDK>`, `<no SDK>`, `<no SDK>`, `<no SDK>`, `<no SDK>`, `<no SDK>`, `
Maybe we should just use `crash_test` here?
This should be a separate commit
What is the default of the default of the default? Is it possible to have a default of the default?
this is the same change as the above line.
nit: `self.floor_thr == 0` is a bit ambiguous.
I think we can remove the package from the name. `chaos-mesh/api/v1alpha1`
I think we can remove this file, it's no longer needed
This should be `if cgroup.Resources.Memory == 0` and then `MemoryUnlimited` is not needed.
This is not a good idea. The `totalFileCount` will be used in the `maxNumberOfFiles` file. The `totalFileCount` will be used in the `maxNumberOfFiles` file.
I'm not sure what this variable is for. The first `var` statement is used to indicate whether it is a `*` or `*` (which is what the `*` does). I'm not sure what the `*` is, but it's not.
This should be a `ConcurrentMap`
Useexpr nano::bulk_pull_account::size instead ofexpr nano::bulk_pull_account::size
I think we should be consistent and use the `connect` here.
Should we use `@private` here?
This should be deprecateTime.
I think we should be able to remove the `name` argument here.
Is this a bug fix?
This should be "foo"
What's the reasoning behind this change? It seems to me that the `tail()` method is no longer used in the code?
This is a breaking change.
why is this removed?
I think this is the only change that affects TF providers.
This is a bug fix. We should be able to use `api_class(version=api_version).get('version')`.
This is a bug fix. I think it should be `id` instead of `search_at`
This is the only change that affects TF v2.
Is there a reason for 10 here?
I think we should just call `text_font_size` here, since it's a `list` in the `text`
I think you can remove this
I think we should just remove the `if` here and remove the `if` above.
do we need to use `Package.8`?
@dvoytenko I'm not sure this is the right fix. I'm not sure if this is the right fix.
I think it's better to use TRUE instead of the predicate.
I think the `nan` should be `or inf` instead of `nan`
I think we should change this to `1`.
This is a change in behavior, but I don't think it's necessary to change the network to a `'testnet'` in the next line.
I think we should just remove the `sembly` here.
I think we should keep this for now, but I think we should keep it for now.
I think this is a bit confusing. How does it work?
`string| false` is the default.
This test was not testing the right thing to do.
why remove the `validate` method?
This is the wrong place for this. The `NOPT` should be used in the `actor_name_space_` method.
I think we should be able to just use `api.db.Begin(ctx)` here. The ` Reader` is already in the `ctx` package.
I think this should be removed.
I think this check can be removed now, since we are already checking if the FPGA_OK is not null.
I think this should be removed. The Python Python is used for the `Python` parameter.
I think we should dump the error and then dump the error.
I think this should be `strings.downcase`
`antrea-agent` and `antrea-agent` are not defined in the environment, so I think it's better to just use `antrea-agent` and `antrea-agent` to avoid the duplication of the current code.
I think we can remove this.
`is SpanContext` can be null
why not just call the txTrace twice?
I think we should move this to the `partition` class. It's not a big deal, but it's a little confusing.
This looks like a typo
chunk => soc?
I think it would be more clear if the password is already registered.
Why does CommitTree change the signature of `blockNumber`? Isn't it redundant?
Why is the `ConnectionAborted` needed?
I think this is not right. If the import is not found then the error will be returned.
I think this is a leftover?
I think this is fine, but I think it would be better to move the logic to `STANDARD.py` and then use `STANDARD.py` in `storage_class_header.py`. It would also make sense to move the logic into `STANDARD.py` and then use `STANDARD.py` in `storage_class_header.py`.
Please use `StringUtils.isNotEmpty`
"If no region is specified, hint..."
Should this be `if (tpMatcher.group(1))` instead of `if (tpMatcher.group(1))`?
I think you can just do `return ApplicationKind(appKind)`.
can we add a doc for this?
The `click` element is not used in the `element` method.
I think we should just make this `[]byte, error` if it's not used.
Is this a TODO?
Use a guard clause instead of wrapping the code inside a conditional expression.
I think we should use `m.Get("/avatar", user.SettingsAvatarPost)` instead of calling `m.Combo("/avatar", user.SettingsAvatarPost)`
The file should be empty.
The app container should be removed.
This is a bit of an unrelated change, but I'm not sure it's worth it.
I think the `integration` is still necessary here, since the `new` model uses `output.file` as the default.
I think this should be `final`
This is a change in behaviour, but I think it's a good idea to make it work with `configPath`
I don't think this is needed
These are not needed anymore.
I think we should remove the `if` here and remove the `shutdownHook` as well.
Why is this necessary?
I think this is a leftover?
Would it make sense to log the message as well?
I think we should keep the old name here as well.
I think we should return `false` here.
Why is this test changed? It seems like this test should be removed.
The `enum` in this test is not correct. The `Recv` is not the same as `MintX509CA`.
I think we should just pass ctx.Background() to the setup.
Should we have a test for the new node?
nit: I think we can just remove `MongoDriverError` entirely and remove `MongoFSStreamError` entirely.
maya is a bit confusing, can we use the same name for the other packages?
I think this is a bit of an unrelated change, but I think it would be better to have a `ISpanDecorator` interface that checks for this interface.
Style/StringLiterals: Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
Please add the `/` to the description.
Do we need this?
This is a bit of an API breaking change. I think it would be better to have a method that returns a boolean.
This should be `pc++ = 0K_flags`
Why not just `Assert.Same(KestrelEventSource.Log, stop?.EventSource)`?
nit: remove empty line
I think it would be better to call this `GetMetricFunction` instead of `Func`
I think we should use `wait_for_port_open` here. The `wait_for_port_open` method is called `endpoint_url = f"http:// ...` so that we don't have to worry about the `ke` URL.
Why is this change necessary?
This is a breaking change.
The `baseFee` parameter is not set in the fee baseFee - so it should be `0`
This should be `1`
this file should be removed
This is the only change that affects TF providers.
This is a change in behavior, but I think it's better to have `parseResponse` return a `null` value.
I think we can remove this.
`containsKey` is not used anymore.
why did you change this?
Why is this being removed?
Why is this change required?
I think we can remove this and just use `IDb`. We can also remove `PlatformDb` from `pkg/api/server/server.go` and use `PlatformDb.go` instead.
You can use `self.num_classes = self.num_classes;` here.
This is a bit weird. I think it would be better to have a `ByteSize` function that returns a `ByteSize` and then use that function.
Can you add a TODO to remove this?
This is the only place where we need to check if the Blob is 'type' or blob.type?.length > 0, right?
This is a bit of an overkill, but I think it's better to move it to a constant.
I think it would be better to use `api_version >= VK_API_VERSION_1_1` here instead of `physical_API_VERSION_1_1` and `physical_API_VERSION_1_1` as the default.
I think this check should be done in `makeflow_generate_output_files` instead of `getenv`
I think this should be `i !== dom.value || (newProps.value) && !i))` instead of `i !== dom.value` since it's a progress bar.
@liggitt this is the actual fix.
We should log something here, otherwise it will be helpful to log something.
I think this is not needed.
I think we should keep the old name here as well.
Can we just use `namespace ps = dal::preview::spmd;` here?
This is a bit of an unrelated change, but I think it's worth it to just return a `false` value.
Why did you change the Summary to its own bool?
This one is missing the `@return false`
I think this should be a different function. It's not a blocker.
I think this assertion is redundant.
I think `universal_newlines` is not needed here, it is only needed for `env`
Can we just use `GetClusters` here?
I think this test should be removed. The `@pytest` is now a `skip` method that is used in the `install` module.
I think we should use `throws allowOverwrite` instead of `ToList` here.
Trailing whitespace detected.
I think we should use `Map.of` here
@jridgewell Is this what we want? I think we should be able to use `clientModel.ModelTypes.First()`
I don't understand the point of this. If we're going to have a single request, we should probably just move the `h2o_headers` into the `if` block.
I think it would be better to move this to `refreshInterval`
why is this change required?
This should be `if (colName == TRAF_SALT_COLNAME) || TRUE;`
Why do we need this?
I think we should use `for` here.
I think we should also check that the new config is set.
I think this method should be on the interface
I think it would be better to use `info` and `finest` here.
This is a good thing to go.
I think we should keep the old name as well.
I think we should be able to use `2` here instead of `TRAVIS_GO_VERSION`.
Is this a bug fix?
`pendingRequest.configuration.remoteHost = pendingConfiguration.remoteHost;` is always undefined.
This import is unused.
Why are we passing these to the `W3CB`?
This is not needed. The `JSONObject` is already in the `JSON` package.
I think it's better to use the `WidgetID` here, since it's a list of strings.
Please remove the trailing space
Is there a reason to wait for the `opt` to be `nil`?
I think this is a bit confusing. I would say that `isProtected` is a bit more specific, but it is a bit confusing.
The `click` element is not used in the `element` method.
I think ` GoGapicContext` is a better name.
Use the new Ruby 1.9 hash syntax.
I think we should keep the original test. We should not be removing the test.
Why is this change necessary?
I think this is the wrong place for this. The target is a params.distanceEffect.
I think we should just remove the `user-loyalty` action from the `visitor-loyalty` action, it's not a user-loyalty action.
This is the actual path to the script, so I'm not sure if it is the right place to put it.
Why is the try/catch block necessary?
I think we should use the `_` constant here.
I think this should be a separate PR
I think this is the only change that affects this change.
This is a bit of a hack, but I think it would be better to use `<l>`.
This is a bit confusing, as it is used in the `<T>` tag.
I think we should just call `getOpenTelemetryTracing()` instead of adding the `Tracer` property.
I'm not sure if this is the right fix. It should be fine.
This is not the environment ID, but the environmentID is not used.
I think you can use `Time.equals` here
This is a little confusing. I would have named it `ResponseVersionV2` or `ResponseVersionV2 PaymentVersion`. I would have named it `ResponseVersionV2 PaymentVersion` as it is a little confusing. I would have named it `ResponseVersionV2 PaymentVersion` as it is a little confusing. I would have named it `ResponseVersionV2 PaymentVersion` and then have it as a version.
The `NoError` calls are unnecessary.
I think this is a leftover statement
I think this is not needed anymore?
I think we can remove the `dropTable` method and just call it directly in the `AllergenDao`
This spec doesn't test that the `resAFAF` tests pass. I think it's safe to test the `resAF` tests, but it's not a big deal either way.
Why not use the `String` ?
This is a bit of a hack, but I think it would be better to have a method that returns a `WriteableGroup`.
I think this is a leftover code from debugging.
This is a bit of an unrelated change, but I'm not sure what the best way to do this is.
I'm not sure if this is the right place to put this. The model 1.train is already there, so the `ckpt_train` option should be renamed.
This is a bit of an unrelated change, but I think it's fine to leave it in.
This file should be renamed.
I think we should be consistent and use `.</` here.
I think this should be set to false by default, otherwise the default is false by default.
What is the rationale for using `TeamPlan` here?
I think this is a good change. It will make the code harder to read.
I think it would be better to throw an exception here instead of throwing an exception. The registry is null and the caller can throw an exception.
Not sure if we should use the new `ClusterClusterType` property here.
this is not needed anymore
This is a private function, so it should be a private function.
This should be `web_debug`
We'll need to rename this to `label_as_spammer` or `label_as_spammer_simple_spammer`
This is a change in behavior, but I think it's better to make the change in `EnsureTelemetryConfig` instead.
I would use `* 2` here.
I think this is a good idea. We should probably have a unit test for this.
This is a change in behavior, but I think it would be better to use `CanError` instead of `hasBytes` here.
This is not right. It should be `if "clangsa" in analyzers:`. The only thing I'm not sure is what the output is.
I think we can remove the `21000` variable and just use the `fee` variable. The ` 21000` variable is already set in the `if fee < 21000 {`.
Is this a bug fix?
I think we can just delete the `Access denied` part and `inalformedResponse` empty since we don't have any other error message.
I think we should be able to use the same name here.
These should be imported before the `from ..sql import sql`
I think this is a bit too much. I would suggest `assert cfg.nms.get('type', 'nms') == 'nms'`
I think we can remove `reject` now, since it's no longer used.
how did this ever work?
I think this should be `if treeInterceptor.passThrough:`
I think we should be able to use `PushViewController.PushTo(viewController, true);` here instead of `viewController.PushTo(viewController, true);`
This is the wrong way to do this. The `onNewPasscode` method is called when the requestCode is empty.
I think this should default to `true` instead of `defaultPostWriteInterval`.
Use the new Ruby 1.9 hash syntax.
This should be a warning, not an error.
Is this the right place to put this in `Blockly.Msg.NEW_MESSAGE`?
This should be `TransitionDependencySet`
This is the only place where we need to catch `L`-ing-vs-on-entry. We need to catch `L`-ing-entry in the `L` branch.
I think we should use `DisableGit` instead of `Disable`
@user.org is not a valid field, so you can remove it
Can we just remove this?
I think this is the right fix. This is the only place where we use the `docker` param. It should be the first param in the `if` condition.
I think we should keep this line consistent with the rest of the code.
why is this change needed?
I think it would be better to use `getIdentifier()` instead of `if` here.
This is the only place where we need to use `AbsolutePath` here.
This should be a separate commit
I think we should be able to remove this in `pkg/api/server/api.go` and remove the `ctx` in `pkg/api/server/server/server.go`
@pgavlin, what do you think of this? I'm not sure it's the right place to put this.
I think we should be able to remove the `IDisposable` attribute from the `long` method and just use the `long` attribute in the `OpenTelemetryBuilder`.
I think we should default to True by default to avoid the API break.
I think we should just use the old pickle from the external version.
I think this should be `str_replace`
I think this should be "argument type is argument of parameter"
This file is not used anymore.
I think it would be better to use `Class Cms\Classes\MediaLibraryItem` instead of `Class Cms\Classes\MediaLibraryItem`.
I think this should be a class member instead of a class member.
This is not a big deal, but I think it's better to use `SPI0_MOSI_PIN` instead.
I think this is a good change. The `LinkageError` is a bit confusing.
I think we should just delete the `traceparentHeader` variable and just use `Traceparent` directly.
I think we should be able to use `path` here.
please revert this import
Is this a problem? It seems like we are only using `OUtbounds` when the `*` is created.
I think we should remove this.
This field is unused.
Same here, we should save the status code to the caller.
Why are we changing the default value to sizeof?
The source and destination should be the source of this rule. The source of this rule is the source of this rule. The source of this rule is the source of this rule. The source of this rule is the source of this rule. The source of this rule. The source of this rule. The source of this rule. The source of this rule. The source of this rule.
I think this should be `_get_range()` instead of `!= 1`
This is a very minor thing, but I think it's better to be consistent with the other two map values.
I think we should be consistent and use the constant here.
Is this file still required?
@jridgewell Is this change intentional?
I think it would be better to use `TiSession` instead of `private`.
I think we should create a test for this test.
I think this is a bit too broad.
This should be private.
I think this is a bit confusing. I think it should be a bit more verbose and use the `retry_on` method.
I think we can remove this empty line
I think it would be better to call `braille.handler.handleCaretMove(self)` here.
I think this should be `validate_tag_error_response`
Why not use `StyleguideController`?
You can use `_base_` here.
I think we should throw an Exception here instead of throwing an exception.
We should probably use `s.pubsub.PubSub` here.
we should log the info info in the info level.
I think we should keep the old version as well.
I think we can just remove this and `import {` since it's not used anywhere else.
Do we need to keep the old behavior?
I think we can remove this profile completely, it's not used anywhere else.
This is a breaking change, but I think it's fine to keep the old behavior.
I think we should use a `Set` here
I think we should just make `ViewerAtStartup` public and use `showWelcomeDialogAtStartup` everywhere.
Would it be better to use `segmentId` instead of `getSegmentId`?
This should be done in `--export-fixes`.
I think we can just remove the `metav1` prefix here.
I think this should be `if options[:port] = port` instead of `if options[:port] = port`
I think we should just remove this method and just use `FileUtil.determineFileType`
I think we can just use `or undler.cache?` instead of `or undler.cache?`
I think we should just remove the `AllocationContexts` property and just do it in the `position` method.
I think the `\*` is not needed here, since it is a `\`
should we use the `Realm.realm` helper?
I think we should use `5` instead of `5 seconds` for this.
what if `r.ContentLength` is set to `64`?
Can you revert this change?
Would it be possible to add a `@Appleplease add a `to be`?
Can you use Assert.True(true); here?
I think we should add a new column to the `S3_SECRET_ACCESS_KEY`
This is a bug fix. You should be able to remove the node from the `node`
I think we should change the signature of the `for` loop to say that it's a dictionary, and it's a dictionary, not a dictionary.
The `$position` parameter is unused.
This is not a good idea. It should be `slots.stream()`.
I think this is the only change in this file.
I think we should move this to `BindableHolder`
why not just make this a pointer?
This is the only change that affects the rest of the code.
I think this file is not used anymore
Can we just use `filter(Object.hashKey)` instead?
This is a bit of an overkill, but I think it's better to be more explicit and check for dynamo_exited here.
I think it would be better to just call `SetTlsCACertificate` here, and pass in the `Certificate` method to `CACertificate`
You can use `.add(timestamp(today + 1) * 1000, SERVER_RECV, WEB_ENDPOINT))`
This is a bit of an unrelated change, but I'm not sure what the best way to do this is. I'm not sure what the best way to do is is to have a `err` that is used to do this.
Maybe add a `@classmethod` annotation here?
Why not use `boolean`?
This is a typo
I think we should be able to get the current scope from the workspace and then get the current scope from the workspace.
I think we should keep these tests for now, but we can keep them for now.
remove empty line
I think this can be removed.
I think we should keep the message as it is.
I think this should be `IEnumerable<T>`.
Why are we removing this? I don't see any code that uses it.
I think we can remove this and use `import *`.
I think we should use `use_depthwise` instead of `use_depthwise` for consistency.
This should be a warning.
this should be `if (storeInbox) * storeInbox = getStoreInbox();` and the `if (storeInbox) * storeInbox != null && * storeInbox != null && * storeInbox != null && * storeInbox != null && * storeInbox != null && * storeInbox != null && * storeInbox != null && * storeInbox != null && * storeInbox != null && * storeInbox != null && *
This is a bit of an unrelated change, but I'm not sure it's worth it.
I think this should be `host.name`.
I think we should remove this file, it's not used anywhere
Should be `@throws`
Can you add a check that the key is empty?
Is this a bug fix?
I think this should be a separate PR, right? The button should be removed from the request.
This should be `instr_may_write_zmm_register(inst, D_L, D_L, D_L, D_L, D_L, D_L, D_L, D_L, D_L, D_L, D_L, D_L, D_L, D_L, D_L, D_L, D_L, D_L, D_L, D_L, D_L, D_L, D_L, D_L, D_L, D_L, D_L,
` MAX_RETRY_LEVEL` is not used in this class, it is better to use `volatile` instead of `volatile`
I think this should be `fakeSessionStats`
I think this is a leftover?
Please don't change the copyright year in the file.
This is a breaking change. I think it's better to move it to the `Task`.
This should be removed.
I think we can remove this readonly since it is not used anywhere else.
The `null` value is never used.
I think we should use ` Descriptors3D` here.
This is a bit of an unrelated change, but I'm not sure why this is necessary.
I think this is a bit confusing. How about `<-s.limiter>()`?
Why is this needed?
Why did you remove the attribute here?
This is a breaking change, I think.
I think we should use `_test3_a` here.
Does this mean that when you run a token without an upgrade, you'll get an upgrade with a token without a user who has the right value?
I think this should be `@param` instead of `query_proposals_data`
@node is a string, so you don't need to add it here.
I think this should be a default value. It's not a default.
This is a breaking change, right?
Please use constants for the new constants.
This is a breaking change.
I think we should check if sys.version is '3' in the case of an empty version.
This line is not necessary. You can just use string_metric_parse() directly.
I think this should be a public function.
should we add these as well?
The app container should be removed.
This is the only change that affects the service updates.
Why not use the `column` column?
This file is not used anymore.
Is this used?
I think this should be a guard clause.
Maybe `counter = 0`?
I think we should remove this and use the new function `NewBeta`
This is a bit of an unrelated change, but I'm not sure it's worth it.
This should be split across multiple lines.
How about `splitNew splitSize()`?
I think this is a bit confusing. It would be better to just use `os.makedirs(path, Python 2)` here.
This should be done in `tab.py`.
I think this can be done in a separate PR, but I think it's worth it to check if the user is not a user and the user is not a user.
This is a bit of an unrelated change, but I think it would be better to have a `buildfile` argument that is passed in.
I think this should be `oauth2`
I think this is a little too much. We could probably just use `isInSupories` here.
I think this should be `def backoff_limit(self)`
I think we should use `chunk.Size()`.
This is a bit of an unrelated change, but I'm not sure what the best way to do it is.
Nit: this line should be indented one line with the other stdlib imports.
This is the fix for #9293.
`len(statusParts) > 0` is redundant here, since `statusParts[1]` is equal to `0`.
"...ss" sounds like a vague thing to me. What about "server"?
I think we should change the `bad_request` to `must_respond_with` if we don't have to.
I think this should be a `jobInfo.isEmpty()`
This is a little confusing. Why is CStorPoolPhase string being used? I think it is better to just remove the ` CStorPoolPhase string` part.
Why not using the `===` here?
Why did you change this?
This is a bit of an unrelated change, but I'm not sure what the best way to do this is.
This should be a separate variable, not a global variable.
The `a` tag should be `b`.
I think we should use `@SuppressWarnings("unchecked")` here.
I think this should be moved to the pool pool.
Metrics/LineLength: Line is too long. [83/80]
This is the only place where we call update the node status, but the node status is the node status.
This is a bit of an unrelated change, but I'm not sure it's worth it.
This is a bit of an overkill, but I think it would be better to use the set_binding_pair variable here.
This was a bug in the `InvalidArgument` method.
I think we should keep this as a separate commit
nit: can we rename this to `defaults`?
I think we should also mention that the structure is a string.
Do we need to make this configurable?
`array $user of user data`
I think we should be using the new API here.
Is the `Register` method used anywhere?
I think this should be a static final constant
I'm not sure if this is the right place to put this. You can just get the `while winUser.getMessage` call.
Is this needed?
why not just `overwrite`?
This is not correct, you should check if the user is not a valid xx, not a valid server.
This is the only change that affects the code.
I think this TODO can be removed now.
I think this is not needed.
This is not needed.
nit: this method is unused
why do we need to do this?
This is a bit unrelated to the PR but I'm not sure it's worth it.
I think this should be done in the `instanceinstanceinstance_variable_set` method, since it's a separate method.
I think this should be `PyObject * result = PyObject_CallFunction(PyObject*)lmpPtr);`
This should be `+=`
I think this should be changed to `Application.OutputEncoding`
`error '{self._cron_schedule` might be more appropriate here. Also, I would expect `standard cron` to be an optional parameter.
This is a breaking change, but the `setText` method is no longer used.
nit: can we use `== null` here?
nit: "The promise is factored"
It's not clear to me why we're using the same id as the last block of the page. What do you think?
This is the fix.
This is a bug fix.
I think we should also remove `stdlib` from `primer` in `install.py`
I think this is a good place to put the `Mvx` in a variable. It's not a good place to put it in a variable.
I think this is what we want?
I think this should be `el.parentNode.removeChild(el)`
Is this the same error code for the `unexpected` error?
Can we use `const` here?
I think this is the only place where we should be using the `--tty` option.
I think we should use `lookback` instead of `namesLookback`
This is a bit unrelated to the PR. I'm not sure what the best way to do this is.
This is not the right way to do this. It is not possible to do `countlyGlobal["member"]` in the `countlyGlobal["member"]`
Please rename to `db.driver.class`
I'm not sure if this is the right place to put this. It seems like it should be a `.find_or_create_by!` instead of a `.each` statement.
I think this is a bit too broad.
I think we should add a `episode` to the `ort` and `name` to the other methods
This is a change in behavior, but I think it's better to use the same variable name as the last argument.
I'm not sure this is the right fix. It's not a good idea to use the `account.bytes` array.
I'm not sure if this is the right place to change. The `process_block (block, known_account, total_blocks, block_expected)` part is correct. The `total_blocks` is already checked in the `if (!stop_pull && !connection->hard_stop.load ()` block.
"The default number of parts" sounds like a bug.
I think this should be `antopTypeTransformer` and not `antopGenerator`.
This is the wrong place to change this. The `tag-matchers` tag is used in the `matchers` tag.
I think this is not needed.
@atm-quentin can you confirm that this is the right place for this field?
I think this import is unused.
I think this should be `PublicVolumeCreationDisabled: !c.Bool("public-volume-create-allowed")`
I think this should be `default_MAX`
This is a bit confusing, why do we have to pass the `exit_code` in?
I think we can remove the poll method from the `remove()` method.
why is this one not set?
I think we should just remove this line.
I think we can remove this now, we can remove `HIP_UNSUPPORTED}},`
I think it would be better to return null here, as it is not used anywhere else.
I think we can remove this now.
I think it would be better to move the `using` statement to the top of the function.
I think it would be better to have a `util.Test` that returns the list of `traverse`s.
I think we should use the same name here as in the other places we have `None`
Should we use the `client.client`?
This change is unrelated to the PR.
I think this should be `|| rawErrorData.containsKey(STACK_TRACE)`.
You can use `str(collection, collection.partition)` here.
Why not use the `use` statements?
Nit: I think this should be `#if DEBUG` instead of `#if DEBUG` since the code is a debug mode.
I think this is a good idea. It should be a good time to get a specific password from the database.
I think it is better to have the lock in the `Default<LoggingRule>`.
I think we should drop the `pandas` here.
I think we should be able to use transcontext here instead of transcontext in the config object.
Is this the only place where we need this?
Why do you need to import here?
why is this method removed?
I think it would be better to use a list here instead of a list.
why not just `return base`?
I think we should add a check here to make sure the format is not a valid url
Is this TODO still required?
This is the same as the one in `lib/bin/sh` (and the other places below).
I think this is not needed.
I think this should be `true`
I think this is the wrong place to put the `sqlite` concept.
this is a change in behaviour, but I think it's better to use a `_flags`
I think this method should be `void`
I think this should be `new object(id, new config);`
I think this is not the right approach. The error message is "not found" but the error message is "not found", so I think it should be "not found"
I think this should be done in `mset.mu.RUnlock()` instead of in the `if` block.
is this used?
Why are we changing the default behavior?
Shouldn't we use `IdentifierScheme.identifier` here?
I think this file is not used anymore
Please remove this and use a single import.
Why do we need to get rid of the `getContentDescription`?
I think this is the only place where we can use this method.
Is this to work with our `isPublic` type? I don't see any `buffer` type being used anywhere else.
I think we should just remove this and the `FullRules` variable.
I think this should be `config` instead of `config`
I think this is not the right place to put this in the config class. It should be the default value of the config class.
Would be good to add a `LOG` annotation here
I think we should be able to use `&:to_f` here instead of `&:to_f` since it's a `&:to_f`
Please add a license header
I think we should be able to remove this now that we're not using it anywhere else.
I think it would be better to keep the `throw new enums("Session ID is null")` and just do `throw new enums("Session ID is null")`
Style/MutableConstant: Freeze mutable objects assigned to constants.
It's not a big deal, but if we're going to use collections.OrderedDict, I think it's better to use collections.scala.scala.scala.scala.scala.scala.scala.scala.scala.scala.scala.scala.scala.scala.scala.scala.scala.scala.scala.scala.scala.scala.scala.scala.scal
This is a breaking change. It is not possible to have a default value for every single value.
I think we should use `finishResolution` instead of `receiveGetAccounts`.
Why the change here?
I think this if statement is not needed. The `if (!field.required)` will be removed.
I think it would be more consistent to have the test name as `first_name`
I think we should add a `default` helper to `PythonDocConfig` and then use that in the `if` statement.
1. why not `Hash.ZERO, // PMT hash is not None`? 2. The other `ZERO` hash is not in the `PMT` hash.
This is a bit of an unrelated change, but I'm not sure what the best way to do this is.
Please remove the empty line.
I'm not sure if this is the right way to do this. I'm not sure if it is the right way to do this. I'm not sure if it is the right way to do it.
I think this is still a typo.
I think this should be a class field instead of a class field.
This is a bit of an overkill, but I think it would be better to use `runSILMandatoryOptPreDiffPasses` instead of `serializePasses` here.
I think we should use `section` instead of `p` here.
It seems like we should just return 0 instead of smoothingScore?
I think we should use the same site site site site site site site site site site site site site
I think this is a leftover from debugging?
This is a bit of an unfortunate change. I think we should be able to use the `SimpleSimple*` keyword here.
I think this should be `slow: 25000`.
This is a bit of an unrelated change, but I'm not sure it's worth it.
This is a little weird. Can we just use the `snaps` variable here?
why is this removed?
I think we should add a note about this in the future.
I think we should create a defaultFactory here instead of using a defaultFactory.
`this.hot.countSourceCols` is not a count, so it can't be set.
>1 [](start = 8, length = 6) nit: I think we should be more explicit here.
Use 2 (not 0) spaces for indenting an expression spanning multiple lines.
Can you add the line above this line?
I think we should be able to use `s.Once.Debugf` here instead of `s.Once.Error` since it's a `defer` statement.
I think this is a bit too much. I would just use `instanceLogLevelUsage` and then use `instancelink` to get the `instance` file.
I think we should remove the tabManager here.
I think this is not the right place to put this. It is not the same as `b.Unmanaged` but the function name is the same as `b.Unmanaged` (which is the default).
This is a change in behaviour, but I think it's a bug fix.
Isn't this redundant? It looks like we are already doing the `original` in the map.
This is a little confusing. I think it's better to say "This is undone, this action cannot be undone."
I think we should just remove the `autosensResult` variable.
I think we should be setting the constant here, otherwise it will break the diff.
I think we can remove this.
This is the only change that affects the test. The test is passing the entire entire entire entire test, so the test is not passing the entire test. The test is passing the entire test to the test and the test passes. The test is not passing the entire test, so the test will pass the entire test.
Why did you change the name of the parameter?
This is the only change that affects the test. It is still `isIE9()` check.
I think this should be defaulted to false.
I think we should keep the old version as `bserver-1.dev.keybase`
I think you can remove the First Ping.
Please remove this empty line.
Why is this being removed?
This should be `data.uname`
`File.directory?(plans_path)` is already `files` so it should be `files`
This file is not used anymore.
Is this a typo?
This is a bit of an unrelated change, but I'm not sure it's worth it.
I think we should add a `TODO` to get the `aws.json` to get the cookie name.
Why is this change necessary?
Same here, the original code is not needed.
I think this test is not needed. It's already in the `if` statement.
Is it possible to use text.text here?
This is a bug fix. The reason for the `GetValueAsData` was to avoid the extra `ValueAsData` because it was not being used.
I think this should be moved to the `createNetworkMode` function.
This should be added to the `Pipeline` section above.
This is a change in behavior, but I think it would be better to move this to the `object_id` list above, and then define it in the `permissions` list.
This is a breaking change.
This is the only place where we need to make the peer ID configurable.
@rpmpmDependenciesDirectory is the directory which contains Rpmpm directory which contains RpmpmpmDependenciesDirectory
Shouldn't this assert be `None`? Otherwise you can get the `Basicfp` object from the `Start` object.
This is no longer needed.
This is a breaking change, we should probably keep it in a separate PR.
Why is this change required?
I think we should still keep this in the `we don't`
Nit: I think we can just use `c.traceInOp(fmt.Sprintf(fmt.Sprintf))`
This is a change in behavior, but I'm not sure if it's worth it.
I think we should add a `isPluginV2` field to the `Sulu` package.
I think this is the only change that affects TF providers.
This should be a string. It's a little bit of an overkill.
Is this the only place where we need to do this? I'm not sure if we should just do this in a `windows` package.
I think we should use `id` here.
I think it would be better to use the `<a>` tag instead of the `<a>` tag. The `<a>` tag is the default, so you can use the `<a>` tag. The `<a>` tag is the default, so you can use the `<a>` tag. The `<a>` tag is the default, so you can use the `<a>` tag.
Should we log the message?
Can we use `controller.address` instead?
I think this should be a string. In the case of an OCI field, the kernel should be the current field, not the string.
I'm not sure if this is the right fix. I'm not sure if it is a good idea to add a check for `min_size`?
This test is not really testing what we want. It should be `AppendAppendAppendControl`
This will be needed if the version is not empty.
What is the reason for this change?
What is the difference between timeout and url?
I'm not sure if this is the right name. It's a good idea to change the name.
I think this should be set to `this.setState`
I don't think we should be changing the encoding to `UTF-8` (the default). The encoding should be 8-bit.
I think we should remove the `config.Chain.DBPath` and ` cfg.DB.IndexDBPath` from the config.
Should we add a limit to the `limit`?
I don't think this is needed.
The default value of `feval` is `None`, so I would say `feval : callable or None`
Shouldn't this be `<` ?
I think this should be a separate commit
I think this should be `self.write()` instead of `str(result)`
Please revert this file.
why not use `String.valueOf`?
@deads2k @smarterclayton do we want to add this to the `make update`?
This is a bug fix. It's not clear what `text_type` means. I would expect it to be `six.text_type` if it's not `utf-8` or `utf-8` (and if it's not there, it's a bug in the PR).
I think we should use `unless` instead of `if` here.
I think this is a bit too much.
This is a breaking change. It is not a problem, but it is not a problem. It is not a problem, but it is not a problem. It is not a problem, so it is not a problem.
I think this is not needed anymore?
I think this should be a constant somewhere, right?
I think we can remove the `respBuf` variable altogether.
Do we need to check that the `$` is a `data-`?
I think we should delete the error message here.
Can we add a TODO to remove this?
I think it would be better to use `t('calendar', 'Error saving WebCal-calendar')` here
Shouldn't we also remove the `chromeOptions` constant from this class?
I think we can remove this one
I think this is not a good idea. The `MapFull` function is called `p.m.Unlock()` in `pkg/api/client.go` and `pkg/api/client.go`. The `MapFull` function is called `p.m.Unlock()` in `pkg/api/client.go`. The `MapFull` function is called `p.m.Unlock()` in `pkg/api/client.go`. The `t` should be called `p.m.Unlock()` in `pkg/api/client.go`.
Why remove this? It's not used anywhere else.
Is there a reason for not using the `commandStart` interface?
can you remove the `else` case?
why `sanitize=True`?
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
I think we should use `string.GetFileName(relativePath)`.
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
I think this is fine, but I don't think it's worth it. The `1.xpm` header is already included in the `res/linuxarmicon2.xpm` header.
Do we need to make this configurable?
I think this is the only place where we import `from .` from the `if` block.
I think this is a good idea. It should be a separate commit.
Should we add a `json:"notification"` here?
Is this a bug fix? It seems like the `driver` should be removed.
Layout/SpaceInsideHashLiteralBraces: Space inside { missing.<br>Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
We need to add the `sync.startsKey` struct to the channel. In general, we need to add the `sync.startsKey` struct to the channel.
I think this is a leftover from debugging?
this is the actual fix.
This is a breaking change.
I think we should use `grpc` here, as it is a bit confusing.
I think this should be `prev_line = node.parent.statement(statement)`.
I think this is a leftover?
This is a change in behavior, but I think it's better to use `timerSleep` instead of `ticks` for the `timerSleep` case.
I think we should be able to remove this method now that it's not used anywhere.
I think this is a good idea. The `wlr_backend_destroy` function should be called before the `backend_impl->destroy`.
Why are we passing LoadPlainYAMLManifests here?
This is a change from the `fromBuilder` to the `ommersHash` interface, which is not the case anymore.
I think we should add a new config property to the `source` table instead of `source.hasOwnProperty`
This is a bit of an unrelated change, but I think it would be better to pass in the `max_ts` directly in the `time` constructor.
grpc StubType should be grpcStubTypeName
`# TraceConstants` is a better name.
nit: I think we should be able to catch all the catchpoint from the server, not catch all the places we are catching it.
could you explain why this change is needed? I see no reason to change the type of information in the code.
Can we remove this?
Let's just make sure the `patient` is not the default
why do we need this? I think we should use the global `CFG_RELATIONSHIPS_NODE_ENGINE`
I think we should remove the `trustedIssuer` parameter from the `trustedIssuers`
This is a change in behavior, but I think it's better to use `data.begin()` instead of `index` here.
why remove this line?
I think we can remove this file
@deads2k do you have any idea why this was here?
I think this is a bit confusing. Can we have a more descriptive name like `mdExpansion`?
I think this should be `--rpc-allow-unprotected-txs`
I think this is the only change in this file.
This is a bit of an overkill, but I think it's better to keep the `AC_CHECK_PROGS` method and use `&&` instead of `YACC`
I think we should be consistent and use the same naming for the new one.
`security_groups` and `kernel_id` should be None. The security group of `security_group_ids` should be None.
I think this should be `path.replace(File.separator, ".")`
I think we should use the `HttpKernelException` here
I think this is the only place where we want to use this function.
I think we should be able to use `String.format`.
This is a change in behavior, but I'm not sure why it was there before.
I think we can use `force.any?` here
I think this should be `get` instead of `emplace`
I think we should remove the tag too.
This is a bit weird. I think it would be better to have a test that checks if the health is not a `prometheus` and not a `prometheus` if the health is not a `prometheus`
I think you can remove `ICoreLogger` and `ILogger` here. The `ILogEventSink` is already `ILogger`.
I think we should remove this.
**Question:** Should we also print a message with a `map`?
I think this is the wrong place for this.
The new column is not used anymore.
I think we can remove this and use the default value here.
why is the server api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api api
(style) need consistent spacing around '-' (ctx:WxV)
I think this is a leftover from debugging?
The `Delete` variable should be `Array.String`
this is not needed anymore
Why is this "running" removed?
Why not use the ECSDataVersion field?
This is a bit of an unrelated to the rest of the PR, but I think it would be better to move this to `mutexSetupServer` as it is used in the `*ServerConfig` class.
This should include the 'sles' flag.
what if currency is None?
Do we need to warn if the key is empty?
I think we should keep the `args` here.
This is a bit unrelated to the PR.
Why is this name needed?
I think this method should be called `clear`
I think this is a bit confusing. I would say that `get_screenshot_as_file` is a better name.
This should return `undefined` instead of `return`
Can we use `json.separator` instead?
struct field should be all upper case
We should not have a single `getReachableFiles` instance anymore. We should not be relying on the `addDefaults` method to be able to remove the action from the `addDefaults` and just do it in the `addDefaults` method.
I think we should add a link to the `Consent` page to the `a` tag.
remove empty line
This is not a good idea. It should be `slots.stream()`.
I think this should be `MakeBlockService(logging.Islogging())`
I'm not sure if this is the right fix. The following is `i = j = 0; i < src_len - 2`
why change this?
I think we should keep this here.
>publicLink [](start = 15, length = 6) nit: The previous implementation of `[DoesNotReturn]` is `publicLink`, so it should be `public Public Link`.
Is this a safe place to use a `json`?
I think we should make this interface specific.
I think it would be better to do `if len(tparts) > 1 {`.
This should be done in a separate PR
I think we should not need to decode if we are not going to decode. What about `[]env.decode(Core_TYPE, decode_TYPE)`?
MyResearch/Holds is a hold.
I think we should use `skipFlushOnClose` instead of `onWAY`
This is a good place to change the default value of `wf-*` to `wf-*`
This file is now getting unwieldy. It's not a big deal, but it's not a big deal. The `qs` package is used to pass the `qs` package to the `qs` package. The `qs` package is used to pass the `qs` package to the `qs` package. The `qs` package is used to pass the `qs` package to the `qs` package.
Can we keep this as `4` for now?
Should we add a `Config_property` property to these unsupported properties?
This assertion is now being changed to `TaskCPUMemLimit` in the test. It is now no longer needed.
This should be `Object`
This is a bit of a hack, but I think it would be better to use the same value for all the other classes.
I think we can remove this
This should be set to false, right?
I think we should also have a test for the `beta` type.
This is a breaking change.
Why not use the `constructor` attribute here?
I think we should be able to use the `externalFormat` here.
This is a leftover
I think this import is unused?
I think we should just remove this function.
I think it's better to use 15% of the free bytes on disk to be used in the disk block cache.
I think we should also check for the env vars here, if we do want to do this check for the env vars.
I think we can remove this and put `:classifications` in `app/services/models/test_types.rb`
This function is now unused.
This is a breaking change. It should be a separate commit.
if you want to use `_` here, you can just use `_`
I think we should still close the listener here.
Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think we can remove the `.dup` here since it's not used anywhere.
This is a bit unrelated to the PR but I'm not sure it's worth it.
I think we can just do `ok := len(s.clients) <= s.opts.MaxConn`
I think it would be better to use `client_->transLeader(spaceId_, partId_, targetLeader).thenValue([this](auto&& resp)` instead of adding a new one.
This method is unused.
I think this needs to be removed.
I think this should be `if c.Wireguard.EncryptHostTraffic && hastopHostTraffic {`
I think it would be better to use `get()` instead of `get()` here.
should be :erable_stpair_imp:
Is this needed?
why is this changing? `MESSAGE_TRADE` is a bit confusing.
What is the difference between `split` and `User`?
This is a breaking change.
These changes are not related to the PR.
This test is failing because the cell is not yet running on the main thread.
I think we should be able to clear theets on the DB.
I think this file is not used
`urlencoded` is a string, not a string.
Why did you change this?
I think this is the wrong place for this test. It should be `create(:diary_comment)`
BuilderForRuntask(...) is called "UpgradeResult" and "Runtask" are called "BuilderForTemplateObject()"
Why do you need this?
I think you can use `!BAD_REQUEST.getSearchi`
This is the only place where we need to handle the case where `time.Second` is `nil`, but we should probably use `o.LameDuckDuration` here.
I think this should be reverted.
I think it's better to move the Widgets to the Widget, and then call it with the Widgets, then call it with the Widgets.
I think we should use the `!` approach here. We should not be using the meta directly.
I think this should be `<%s>`
This should be removed.
if we're not going to be setting the default, we should just set the default to true.
This is a breaking change.
wrong import order
Maybe we should add a TODO to remove this?
I think we should be able to use `allowAllCorsActions` here, since it's a bit of an unrelated change.
I think this should be a warning instead of a warning.
This is a breaking change. The `fields` field is not always defined.
I think it would be better to use `info` and `finest` here.
Is this the same change as the previous one?
This is the only change that affects hasher.Write() calls.
This is a breaking change, but I think it's better to make the interface static and pass it to the interface.
This is not the most important part of the code, but `Bolt::Node::Success` is the correct approach.
I think this is a leftover from the previous commit.
Can we use `100` instead of `0`?
The `HardKiller` is used to pass the `Hard` object to the `Status` method.
This is a change in behavior, but the previous code was not correct.
This is a breaking change.
This should be `std::find(m_child_layers.begin(), "m_child_layers.end(),))`
I think this is the right place for this.
why remove the `stderr` here?
I think this is a good idea. We should probably add a check to make sure the domain is not nil.
This is a bit of an unrelated change, but I think it's better to move this calls to the Windows Windows Windows Windows Windows.
I think this should be `1.8.3`
This is the only place where we need a `Filters` for the `dance` header. The `dance` header is used to create a `Filters` header.
why is it `string.encode`?
I think this should be `log.Info("Handling http request", "method", r.RemoteAddr, r.Info)`
This is the only place where we need to do this. The logic is used in `pkg/spec/api.go` and `pkg/spec/api.go`. The logic is used in `pkg/spec/api.go` and `pkg/spec/api.go`.
Does this work if the enum is not empty?
I think we can remove this line. We don't use `z` in this file.
why change this?
if we're not going to use the pointer, we should just use the pointer.
I think this should be a separate function, not an instance of `_get_not_pipeline`.
I think it would be better to do `$this->getDataSource()` in the `if` statement instead of the `if` statement.
this is the fix. It should be reverted.
I think this is a leftover from another PR
@bparees this change is not needed.
I think this should be `if (query.selectedInclusively()) {`, since the query is a `paths[i]`
I think it would be better to use `statements []` instead of `statements []` as the parser name.
Nit: I'd probably just put this in a constant somewhere, so that it's more readable.
I think it's better to use `DropVXLANPacketsFromWorkloads` and `DropIPIPPacketsFromWorkloads`.
I think we should remove the Non Nonces here.
This is a bit of an unrelated change but I think it's worth it to just say `propagate` instead of ` interest` since it's a bit of a long-term.
This is a breaking change.
This should be in a separate PR, but I don't see why we need it.
I think this is a bit confusing, since we're using the `count` value in the `count` function. I think it would be better to use a `str` instead of a `if`.
This should be a separate PR
Why is this final?
I think it would be better to add a param like `W9021.W9021` and then add a param in the param.
I think we should also change the `LINQ` name to `SIMD`
I think this should be `options[:options]`.
I think it would be better to move the `if (surface && !view)` into the `if (surface)` block, and then call `roots_seat_set_focus` on it.
`return this.driver()['loadExtension'](path);` => `return this.driver()['loadExtension'](path);`
The test is failing because of this change.
I'm not sure if this is the right place to put this. It's not the right place to put this.
I'm not sure if this is the best way to do this. I'm not sure if this is the right place to do this. I'm not sure if this is the right place to do it.
This is the only place where we use `rescue Beaker::DSL::Assertions, Minitest::Assertion`
I think this should be done in the `ClientClient` method.
Why did you remove this?
I think we should be able to use the 20 timeout here.
This file is not used anymore.
I think we should use `selection_specs` here.
I think it would be better to use `it` for the page to be able to use `a_number` instead of `numeric` for the page.
I think you can remove the `content` variable entirely.
I think we should set this to false in dynamo_exited_synched.
I don't think this is right. The other way is to avoid this `if` statement.
I think this should be `Long=Long`
I think this is a good change. It should be done in a separate PR.
Is this needed?
This is a change in behavior, but it seems like a good candidate for a specific reason. I'm not sure if this is the best way to do it.
I think it's better to call `pushObject` after the call to `pushObject` (which is what the test does). `fetch` is not the same as the `pushObject` call, and it will return the `fetch` object.
Why is this change required?
Is this include needed?
Layout/TrailingWhitespace: Trailing whitespace detected.
I think this is a bit of an unrelated but I'm not sure what the best thing to do is is to do here is to move the `original_twitter_digits_path` to the `init_clnt` file and then call `load` on it. I'm not sure what the best thing to do is is to do it in the `lib/twitter_digits.rb` file.
(style) line over 80 characters
I think this should be `bolt_project_multi`
I think this is a leftover from debugging?
why change this?
is this the same change as the existing method?
nit: this should be `import-peak-boundaries`
I think this is a leftover
This is not a good idea. It should be `slots.stream()`.
This should be done in the `provider.py` file.
I think this is the only place where we need this.
I think this is a bit confusing. I would say: > singlePointer, struct { ... }
this is a breaking change, right?
I think this should be `component._component._onResolve()`
Please use `indices == null` instead of `0, null`
This is a bit odd. It would be better to use `source.data.update` instead of `source.data.length`, and then use that in the `else` block.
I think this is the wrong place for this.
This should be done in the `./scripts/` file.
Why do you need this? It is not used anywhere else.
I think this should be `!= 0`.
Is this needed?
I think we can remove this method now that it's only used in the constructor
This method is no longer used. The method should be removed from the `OperationDisplayString` method.
This line is too long.
I think we should also check for the error message here.
I think we should move this test to the `ExtractCompilations` package.
This if check should be redundant, no?
Why are we returning an error here instead of returning a `Array.New`?
Why is this needed?
@nmittler - I think we should be able to get rid of this check.
This should be a single line string.
I think this is the only one I'm not sure.
I think we should be able to remove this and use `and` on the other similar places.
I think it would be better to use the new property instead of the new one.
I think this is a good idea. It should be a good time to get a specific password from the database.
Do we need to return this as a parameter?
I'm not sure if this is the right way to do this. The dag_file_exists() call should always return a boolean.
Why is this change necessary?
is this going to be a bug?
This is a bit of an unrelated change, but I think it's a bit confusing to have a `str` in the first place. I think it's better to use a `str` in the second and then use a `str` in the second.
This is a breaking change. It is not possible to have an ASTAttribute private method that does the same thing. I think it is better to keep it private.
I think we can remove this method now that it's no longer used.
I think we should split splitTableRegion, and make splitTableRegion a single method.
I think we can remove this and use `error-notification` in the `googlesitekit`
I think we should be using the block block in `if attemptsCount <= uint64` instead of the block block.
Why remove the Exception?
Why is this removed?
I think this should be `S_MIME`.
remove empty line
This is a change in behaviour, but I'm not sure why we need to change this.
This is a change in behavior, but the code is not correct.
This is a change in behavior, but I think it would be better to move the `findElements` method into `Element` and then call `new findElements(By by)` on the `By` itself.
I think we should be able to remove this and just do `NewNew(map[string]key)` in `password. Service`. Then we can just remove the `map[string]key` altogether and just use `New(map[string]key)` in `password. Service`.
I think this is the correct place for this.
I think this is the only change that affects the server side.
I think we should log the error here, as it's not a valid context.
Do we want to log the message? I think we should log the message.
Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
why is this change necessary?
This is a breaking change, but I think it's not needed.
Maybe we should use `tree.anyMatch(tree -> matcher)` instead?
This is not the only place where we delete the deleteEvents.
Please use the `Client` for the plugin name.
I think we should also rename the SolrStatus to SolrStatus.
why not `if value.pivot`?
Line is too long. [81/80]
I think it would be better to move this to `setDismissText` and then call `setTouch` in the `build()` method.
I think we should not use the `UpdateSpan` method here.
I think this can be removed.
I think it would be better to set the result of `set` as the default.
I'm not sure if this is the right place to put this. You should just create a separate function for it.
Should we add a dot at the end of this sentence?
This is a bit of an example of a situation where FlushAsync is called. Can we name it something like FlushFlush?
I think this should be `self.obj.modified_jmx`
I think we should just remove this if-statement.
I think this should be `\r\r`, not `\r\r`, right?
nit: we could return `undefined` here
Why is this needed?
Why is this being removed from `go/kb`?
This is a change in behavior, but I'm not sure why we need to do this.
I think this is not the right place to put this code. I think it would be better to just do `if (attackedSet.insert(attacked->guid)) {` and then do `if (attackedSet.erase(it));` in the `if` block.
I think we should use `<yped>` here. The `<yped>` should be `<yped>`
I think we should also add `scripts=` to `render_config`.
Is this a bug fix? It seems like the `driver` should be removed.
This interface is not used anymore.
The `missing_text` is not used in this file.
I think we should be able to do this in a separate PR.
I think this import is not needed. You can just use `Word` instead of `Word` in this file. You can just use `element.Word` instead.
I think this test should be moved to `test_api_client`.
I think this should be moved to the `Post` function
I think this should be `!nullable.isNullOrEmpty(key, "X")`
I think this is the only change that affects 3.
Should we make this `EventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEventEvent
Why is this test different from the one above?
Line is too long. [87/80]
I think we should use the `serviceDefinition.Host?.EqualsIgnoreCase(AzureHostSignature) != true`
The node is not a temporary parameter, so you don't need to use a function.
Does this mean we can remove the DRows release?
I think this test should be removed. The history history is now in the history history.
why not keep the same askind?
I think we can remove `AppDomainFixedOutput` now, since it is now unused.
I think we should just remove this one.
Should we add a new column for this?
This is a breaking change.
`public String getServiceVarName(String apiTypeName, StringComparison.upperCamel(apiTypeName).toLowerCamel(), "service")` should be changed to `public String getServiceVarName(String apiTypeName, StringComparison.upperCamel(apiTypeName, StringComparison.upperCamel(apiTypeName, StringComparison.upperCamel(apiTypeName, StringComparison.upperCamel(), "service")`
Can we remove this from here?
@matt-gardner, I think this is the right place to change this. The `storageclass-` class is the replicaclass name.
This is the only change that affects the public public members. It is possible that LibuvFunctions is not defined in the public members.
Should this be `List[string]`? Also, what's the difference between `UUID` and `Username`?
I think this is not needed.
I think we should remove this field.
I think we should be using `config_path=dict` here, since we don't have to pass `config_path` as a parameter.
I think it would be better to use `flattenedTree.iframe` instead of `flattenedTree.iframe`
This is a breaking change. If the config is not present, then the config is not present. If the config is not present, then the config is not present.
I think we should add a TODO to remove this.
I think we should be using the `go` package.
Is there a way to check for `key`?
This should be removed. You can use `spawn.h` instead.
This function is only called in one place, so I think it should be called in `time.go` and not in `time.go`.
I think we should just pass the `permission` to the interface.
I think we should be able to remove the `options.beforeHandshake` check here.
I think we should just make `Apply` the same as `HasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHas
This is the only change that affects TF providers. I'm not sure if this is the right fix. The only thing I'm not sure is that the `identifier` package is used is in the end of the package, so I'm not sure if it is worth it.
I'm not sure if this is the right place for this. If we want to use `composite_root/root/` we should just add `list_resource_name` to the composite root, and then we should add `composite_root/root/` to the composite root, and then we can add `list_root/root/` to the composite root, and we can add `composite_root/root/` to the composite root, and we can add `list_root/root/` to the composite root, and we can add `list_root/root/` to the
I think this should be done in the `client.go` file
the `Zero` is considered, not considered negative.
Is this a change in behavior?
I think this should be moved to `service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/service/
This is a breaking change.
I think this should be a set ofBreakerThresholds and not a set.
why is this changed?
This is a bit confusing, why not just use `struct calico_nat_dest *nat_dest`?
I think this should be `gradlew`
algod import is no longer needed.
I think this import is unused
This is a breaking change. We should probably add a `patternKind` field to the `pattern` field.
I think it is not necessary to make a new Reference
This is a bit of a hack, but I'm not sure what the best approach is.
I think this should be removed.
Why is this removed?
This should be applied only for the corresponding corresponding environment.
I think it's better to use `LowestInsertedHeader` instead of `_`
Please use `SimpleConfigs` instead of `public FakeApp`.
This line is too long.
I think this is not needed anymore.
so this is a change in behavior?
This import is unused.
I think this should be `int`
If the default is zero, then the default is zero.
This file should be removed.
Please use chainBase.chainID to be consistent with other places
`button` is not a button, it should be an `Optional`.
Why is this here?
This is a public API, so it's not a public API.
Shouldn't this be BuildIDOSEnv           = "BUILD_ID"
The "has started" should be "has started?"
This file is not used anymore.
I think this should be done in `lib/client.js`
This is a bit of an unrelated change, but I'm not sure it's worth it.
This should be done in a separate PR
I think it would be better to make this public.
Why are we making this change?
I think we should just check if the role exists and not the other env vars.
I think it is better to use `Tracer` instead of `opentracing-go`.
This test is not testing the right error message. I think it should be `self.assert_eq(kidx, pidx)`
This is a breaking change.
Why are you removing the default value?
This is not the same as the containerID, but I think it should be called `containerAccess.lockContainer`
Why not use a more specific Exception?
I think it's better to use `maxMessageQueueDuration = time.Second * 25`
what's the purpose of this change? I don't see why it's needed for this PR.
@jackfrancis I'm not sure if this change is correct. I'm not sure if this change is correct. I'm not sure if this change is correct. I'm not sure if this change is correct. I'm not sure if it is worth it. I'm not sure if it is worth it. I'm not sure if it is worth it. I'm not sure if it is worth it. I'm not sure if it is worth it.
I think we can just use `new HiveConf(HiveMetastoreTest.class)`
sr & protocol should be removed from the other PR
Is this a bug fix?
"immediately fail unless value is not zero" -> "immediately fail unless value is not zero"
I think this is the fix for the `overlaid` option.
This is the fix. The code is not using the `spec` variable.
This file is not used anymore.
I think this import is unused.
This file is not used anymore.
This is a bug, we don't need to call `BytesWritten` here. The timeout is not the same as the write.
I think we should use `prev[key]` instead of `!=`
nit: unused import.
This is a bit of an odd change. I would suggest to use wlr_log as a whole.
I think this was a leftover from debugging?
Line is too long. [84/80]
`NamedList` is not used in this file.
Please remove this.
I think we should just make this `pulumi up` and remove the `tg` parameter from `https.api` and `tg` in the `https.api` interface.
We don't need this, we can just put the Clump in a multi-valued column.
Is there a reason we don't want to keep the `config.ControllerManagerConfigurationSpec`?
I think we should just check if the removal of the `go` is the correct name.
This should be `&&`
This is a breaking change.
Please use `DiskGroup` instead.
@deads2k do you have any concerns with this?
So, if the commit is not closed, then the `editor` will be removed.
I think this should be `(queryResult.ErrorMessage != nil || *queryResult.ErrorMessage != "")`
Use relative imports.
Don't change the doc size here.
clip is not very descriptive when using `clmin` and `clmax`
This is a change in behavior, but I'm not sure why we need to do this.
Why not use the `===` operator here?
This should be `RATE: branch` instead of ` #{quiet_o`
I think we can remove this constant.
I think this should be `query_args.append('versionId=%s')` instead of `query_args.append('versionId=%s')`.
This is a change in behavior, but it seems like a lot of people might want to consider doing this.
This is the only change that affects TF providers.
Is there a reason why we wouldn't just use `self.name` instead of `hidden_info`?
This should be a separate change
I think we should keep the "tag" tag in case it is not a "ID" tag.
I think we should disable this file too
Maybe we should just call this `_window`?
I think the "deadill" thing should be removed, since it's not used.
This should be `&&`
I think we should stub this out into a `before { RSpec.configuration.stub(:color_enabled?) { ... }` so that we can stub it out in the stub.
This is a bit of an overkill, but I think it would be better to use `coincash` and `coincashash.toString()`.
This should be a warning, not a warning.
I think we can remove the `Resource` interface and use `Headers` in `io.ReadWriter`.
Can you add a `isNullOrEmpty` check here? We already have a `isEmpty()` method in the `cart` method.
I think we should use `LITERAL_FIELD.get(leaf)` here.
I think we can just remove this function and just call `TestSendResponse` directly.
What's the reasoning behind 1.1?
I think this test should be moved to `test_ok` instead of `test_flush_capability_if_enabled`
I think this should be `False`
I think we should error out here, since we're not logging the error.
Can we remove this function and just use the default implementation in the constructor?
I think we should just remove this line.
This should be done in `matchWithNoTerms`
I think this should be called `parseChecks` instead of `checks` if it's not a valid var.
`update_policy` is used in the `set_dir` method, so it should be renamed to `update_policy` or something like that.
This is the only place where we need to change the window to be the same as the other window.
This is a breaking change. It's not a valid fix. It's just a little hard to see. I think we should be using the `selector` method here.
Why is this false? Shouldn't it be false?
This was a bug, we don't have to fix it.
I think this # coding: utf-8 should be (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (c) (
I'm not sure if this is the best way to do it.
why is this change needed?
Please add a blank line between tags and summary for better readability
This is a breaking change.
why remove prover?
Is this needed?
I think we should create a default port here, instead of influxDBClient.
I think we should make the name consistent with the rest of the code.
`validation_set` is not used anywhere else, please remove it
This is a breaking change.
Metrics/LineLength: Line is too long. [97/80]
This is a private function, so I don't think it's necessary to have this in the `__init__` method.
I think this is a good idea. We should be able to use the `@VisibleForTesting` annotation here.
Is there a reason why you don't use `model.schema.base.options.strictPopulate == false` instead of `options.strictPopulate == null`?
I think we should be using the same `Builders.Build.A.Block` as the default.
This needs to be ` preserve_backslash` for consistency.
I think we should use `application.Duration` instead of `application.Duration`
I think this should be a `ManifestReader<File>`
This line is too long.
Why are you importing this?
why not just do a `stream` here?
I think we can remove this.
Nit: I think this change is unnecessary.
This is not a valid alternative, but I think it's better to use a `getVersionIndexFileImportName()` instead of a `getNamespace()`.
I think this can be simplified to `violations_tablename = 'violations'.format(model_name)`. The other pylints can be removed.
I think we can just use `ExerciseWithProgressQuery` here.
this is not needed.
I don't think we need to do this, we can just do `compute_max_num_parallel_readers(..., partitioned)`
I think we should keep the old name here.
How about `false` to `false`? This would be more readable as `false`
Is this still needed?
I think this is a breaking change.
I think we should use `cli-input-yaml` instead of `cli-input-yaml`.
This is a bug fix.
Why is this import needed?
`getArtistName()` is not used in the public API. The reason is that the `getTrackName()` method is used is because it is used in the public API. So, it is not used in the public API.
Can we just use `msg.Data` here?
I think we should still check if len(country) == 0 here.
I don't think this belongs in QButtonGroup.
This is not needed. It is already in the stopGPGAgent.
This is the only place where we need to use the proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto proto
I think we can just `reason` as we do in the past. The reason is not a valid user, so we don't need to explicitly check for `user` here.
I think this should be `class PromotedCatalog`
`data` is a list of `wrap`s.
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.
Should we also check the error message here?
I think we should use the topologyDriver.IsNullOrEmpty here.
This is a very minor detail, but I think it would be better to move the logic to the `describe` function.
should this be `<no_troh>`?
no need to check for the installation here.
This method is no longer used. It should be removed.
`Content-Type` should be `ProductInput`
@michaelkuhn Do you have any idea why we need to set the `pin`?
This should be called "HeadLess"
I think this import is unused?
Why do you need this?
What is the difference between these two?
This file should be removed.
This is the same as `nodes[index] virtualTree`
I think it would be more clear to say "This will be the old "merged" version from the cache.
I think this should be done in `FileHelper.Exists`.
I think we should pass the ExErr config here, since it's no longer a part of the config.
Can we use `currentPlayer` instead?
Use 2 (not 1) spaces for indentation.
What is the purpose of this?
I think this should be `user_KEY_WAITING_FOR_ATTACHMENTS`
`GoldenRetriever` is a `core` object, so we should use `core.deleteBlobs` here.
This can be done in a separate PR.
Is this `nil` check needed?
This is a change in behavior, but I think it's worth it to make it more explicit.
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
can we make these tests fail?
I think we should also add a `pkg/util/slice` package to the `metav1` package.
This file is not used anymore.
Is there a reason we don't use `this.map()` here?
Same here, we can use `NULL` instead of `NULL`
Is this needed?
I think this should be done in `url.js` and not here.
This is the only change that affects Trinket M0. We should probably add a TODO to remove this.
What's the reason for this change?
This is a change in behavior, but I think it's better to keep the assert.
This test is not testing the right thing to do.
I think we should use `AssertEx.IsIsClose(importPeptideSearchDlg.CurrentPage == ImportPeptideSearchDlg.Pages.match_modifications_page)`
This is a breaking change. The `registerSchema` method is used to create a `io.druid.segment.registerSchema` which is used to create a `io.druid.segment.registerSchema` which is used to create a `io.druid.segment.registerSchema` that is used to create a `io.druid.segment.registerSchema` that is used to create a `io.druid.segment.registerSchema` that is used to create a `io.druid.segment.registerSchema` that is used to create a `io.druid.segment
I think we should keep the original version in the service.
Why is this needed?
Why is this needed?
Is this needed?
Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
This record is not used. Please remove it.
I'm not sure this is the right fix.
I think we should do this in `make fmt`
I think we should just remove this.
This is a bit confusing, since the method name is a bit misleading.
This is not a good idea. It should be `ei := getExtendedIdentify(ctx)`
Why not use the `ContainerConfigurator` class?
This is a bug fix.
This is a bit of an unrelated but I think it would be better to have a `conf.l2types.get(type(p), None)` call that.
I think we should have a more descriptive name for this. The source should be used for the non-source properties.
I think we should be able to remove `lvis_v1_instance` from this list.
I think we should be able to remove this now that we don't have to do `<th>hi</th>`
Can you please add a note to the existing code to make sure this is only called on the other strategy?
I think this is a good change.
I'm not sure this is the right fix. The bb->stop_pc can be 0 if the bb->stop_pc is not specified. The bb->stop_pc can be 0 if the bb->stop_pc is not specified.
Why are we adding these types types?
I think this is not correct. `this.getParentSvg()` will return a `null` value. The code will not have to worry about the `baseVal` event.
Do we need to also add a default port? If so, we should just add it to the `local` field.
I think we can remove the `witers` here.
what is the difference between `iff` and `iface`?
Why do we need to add a new column here? I think we should just pass in the `ActiveAdmin.register LicensePermission`
I think we should use `name` for the `name` property instead of `name` for the `.name` property.
This is a bit confusing to me. What about something like `test.getOutputs().cacheIf(task -> false)`?
This test is not testing the same as the one above.
I think this should be `bool`
Why not just use `$aliases`?
This is the only place where I can see this.
I think this should be `webservice.ListEventsRequest`.
should we also test the `4.0.1 community`?
I think it would be better to use `binlog.IsEmpty` here
I think this should be called `_url_url` instead of `_window`
I don't think we should assume the number of blocks is 10, so we should be able to assume the number of blocks is 10.
why >= 0?
I think you can remove the `run-as` check now, right?
I think this should be a separate PR
Was this change necessary?
This is a change in behavior, but I think it's better to use the new constant here.
This is a bit of an odd name. It's a bit confusing to have the `subscribers_` return a `\`.
This include looks like it should be removed.
I think we should add a `translate_form` constant in the view class instead of adding a new one.
This file is not used anymore
Just curious, why do we need to call `onCompletedCalled` here?
I think this is not needed anymore?
I think we should add a note about this.
This is a bit of an odd name. I would suggest `EXCLUDE_COMMIT_SEALS_AND_ROUND_NUMBER` or something like that.
Use the new Ruby 1.9 hash syntax.
I think it would be better to use a `Provider` here, as it is used in the other classes.
In this case, we don't need to add `events` to `javascripts` anymore.
This should be `iframesames` instead of `ax`
I think this should be `self._bump_and_store_timestamp`
This is a `MemoryDiagnoser` property, so we don't need to remove it.
This is not correct. It should be a function or a boolean.
Why is this removed?
I think we should use the same name for both `protobuf` and `core`.
Can you add a new paymentChannelCmd to the paymentChannelCmd as well?
I think this should be done in the `else` block.
nit: can you revert this change?
`prefixAsNibbles` is a common function, so you don't need `HashLength`
Why do we need this change?
I think we should use the variable name `mCharset` instead of `NullPointerException`.
I think this is not needed. The namespace should be marked `Datadog`
I think this is a bug fix.
I think this should be `debug` instead of `info`.
Is this a BC break?
This is a bug, right? Maybe `isHydrating = replaceNode._children || parentDom._children`?
This seems like a good candidate for a test.
Is there a reason why we don't just copy the pool?
Can we just write this field and write the revision?
Please remove this annotation
This will need to be changed to `cfg.EnableProcessBlockStats`
I think this is the only place where we set the lint configuration. I think we should remove it.
This is a bit of a hack, but I think it's not a good idea to do this in `init` instead of here.
This is not a big deal, but I think it's better to use the global `axe` as the default.
I don't think this is the correct solution. The `MessageDigestRule` class should be renamed to `FormatterRule` or `MessageDigestRule`
I think we should be able to use `Keccak.Zero` here.
This is a breaking change. I think it's better to use a `object[]` instead of a `object[]` as the default.
This should be added to the top of the file.
I think we can remove the `prefetch` method from the `p.config` interface.
`map` is the same as `m` because it is a type of `m`
This is a bit of an overkill, but I think it would be better to use a `CloseResource` instead of a `PMD`.
I'm not sure if this is the right place to put this. It's a good idea to move it to the `log_level` list.
This is a breaking change.
This file is removed.
This function is no longer used in this file, so I removed it.
nit: can you revert the change?
This is a breaking change.
Why not just do `if (!accountsInOrder.isDebugEnabled())`?
I think we should remove this line
I think we should be using the new one instead of the new one.
I think this should be a separate PR
I think we should also check if the tag is tagged with current tag.
I think this is the wrong place for this.
I think this is a bit confusing. I would expect that if `setupDev` is set to `true`, then `false` would be set up.
I think this should be `help: default. Target release version 16.`
I think `receiver` and `BalanceTracker` are both both used in the same function.
This is a bit of an unrelated change, but I think it's a good idea to add it to the `s3` list.
`baseIntrinsicGas` is not a number of bytes, so this should be `*Underpriced`
I think this is the only place where we need this.
I think this is the only place where we need to change the signature of the method.
The `cs.dirty.CAS(3, 3)` is the same as `cs.dirty.Load() < 3`.
Code Standards: Please remove the space after commas.
I think this import is unused.
Why is this typeWidth?
I think the encryption.ReferenceSize * 2 should be the current reference?
I think this is the only change in this file. The `if` statement is not needed.
why is this removed?
I think we should use `proto.Consensus[protocol.ConsensusCurrentVersion]` instead of `config.Consensus[protocol.ConsensusCurrentVersion]`
Why did you change this?
I think we should use `string errorMessage = String.Format(Resources.NoDotnetDotExeFileExist, dotnetExeName);`
This is a breaking change.
Does the vmultiplier need to be a pointer?
I think this should be `Organization: []string{"cert-manager")`
This is the only change that affects TF providers.
I think it would be better to use the `Reactive` and `Advice` and `Advice` methods in the `AbstractTest` class.
I think it would be better to keep the `number` as a `string`
I think we should keep the old version as well.
I think this test should be removed.
You should use `WPSEO_CRS_P_mark_B()` instead of `WPSEO_B()` here.
This is not the right place to put this method. It is used in TiChunkColumn() and TiChunkColumn() will be called in all other places.
I think this should be `Store.render_count`
I think we should use `bundlerUtils` here.
I think we should use `getResourceType` and `getResourceReference` here.
This is a bit of an unrelated change, but I'm not sure it's worth it.
I think it's better to keep the combatPtr as it is used in the other place.
This was the only thing I'm not sure about. The previous code was not able to be calling this. I'm not sure if it is worth it.
I think we should import this from dagster.seven as the first line of the imports, and then import it from dagster.seven.abc so that it is not needed anymore.
`Sdk` is not used in this file.
`t.ColMeta[idx] == nil` is the right check here.
I think we should use the `Symfony\Form\Type\ApiDoctrineMediaType` class here.
I think we should be able to move this into the `ROLES_CLIENT` list.
I think this import is unused.
Prefer single-quoted strings when you don't need string interpolation or special symbols.
Can we import github.com instead of just github?
I don't think this is right. We're going to have to do with the service account, as it's not a valid service account, and we're not really using it.
I think this is the only place where we should be using the lock file, not the stream.
This test is not needed anymore, `mortbay.util` is only needed for tests.
This should be `SyncSyncSyncSyncSyncSyncSyncSyncSyncSyncSyncSyncSyncSyncSync`
This is the only place where we need to check for status code or '* was used.
Line is too long. [86/80]
This should be `#3307: unimplemented` (or similar) instead of `# mangling cases` (or similar)
I think we should be able to use the interface here, as it's a bit of a hack.
I think this should be `bytes.fromhex(pubkey_hex)`. It's not clear what the bytes is.
This is a good example of why we need to do this.
I think this should be done in a separate PR, but I'm not sure if it's worth it.
I think this should be set to `false`
This should be `ScopeListener`.
This is a bit of a hack, but I think it's a good idea to add a `refs` field to the `old` method.
I'm not sure if this change is correct. The `C` and `C` are the same, so I'm not sure if it is the best idea to use `.include?(subclass)` instead.
`Mvx.Resolve<IMvxChildViewModelCache>().Cache((MvxViewModelInstanceRequest).ViewModelInstance);`
Could you move this to the `exc_info`?
This import is not needed.
I think this import can be removed?
System.out.println should be the same as the rest of the file
Can we move this to the `enableProxy` section?
Why did you change this?
I think we should also add `@typescript-eslint` to `bnb.js`
Maybe we should add a note about this to the user that it's not allowed to be enough?
this file is not used anymore
I'm not sure if this is the right fix.
This import should be removed.
I think it would be better to use the `setSelectedElement` method here.
This is the wrong approach. You're using the same function if you're using the same function. You're using the same function in the `X509KeyPair` function.
I'm not sure if this is the right place to put this. The `to` is a string, so it should be `""` instead.
I think this should be configurable.
I think this should be a `map[string]*SidecarConfig`
I think this method can be removed now, since it is now only used in the `Class` method.
`this._super` is a bit ambiguous, it might be better to call `actions` instead of `arguments`.
`suspended: true` -> `wasHydrating && !c._pendingSuspensionCount++)`
I think this should be `if os.path.exists(path):` instead of `if os.path.debug("URL is a local file")`
This is a change in behavior, but I'm not sure it's worth it.
I think this constant should be private?
This is a little weird. `c.RevisionField` is used to generate the string.
@ramramps this is the only change needed for the new API change.
The `*` should be after `latte(int *, int *, int *, double *, double *, * );`
This is a change in behavior, but I'm not sure if it's worth it to make a test for this.
This test is not needed. It is already present in the `MockObject` method.
Can we use the `including` instead of `ctx`?
This is a change in behavior, but I'm not sure it's worth it.
This should be changed to `exit`.
This is the fix. The else is not needed.
I think we should just remove the `none` parameter from the `addToBlacklist` param
I think we should log the port here.
should we use the `count` here?
nit: remove extra empty line
I think this is the only place where we need to handle the `--target` flag. The `target` flag is used, so we can just use `config.Target.Triple`.
`in.AuditRPCWithTypesStatus` is the only thing that could be used here. I think we should be able to use `results.AuditRPCWithTypesStatus` here.
const key?
I think this TODO can be removed.
I think this `final` can be removed.
I think this should be `to_string()`.
Should we use iptables-pos now?
I think this should be `async_thread().save(SWriter)`
I think this should be `ASTAnnotationTest(parent, "NoArgsConstructor");`
I think it's better to use ` func(i.interceptors, interceptor)` instead of `i.interceptor = interceptor(i.interceptors, interceptor)`
I think it would be better to just add the Params to the Params. ELEVATE_DOCS_WITHOUT_Q, and then add the Params to the Params.
This is a bug fix.
I think this is a good idea. It should be `3.7-3.8`
I think it would be better to use `ipInput.IsEncrypted` here.
You should use the `num_simd_saved_abs` function.
Why change this one from `2.2.1`?
I think we should also check for the `_subject` parameter here.
This file is not used anymore
This is a bit odd, but I think it would be better to just have a `_` prefix that is used here.
I think we should be able to remove this line now that we're using it.
I think this should be `template.published?` instead of ` template.version.present?`
Why do we need to pass the `*` here? We don't have to pass the `*` to the `controlEntity` instance.
This should be `object.gcnArch`.
This line is not necessary, it's already in the `if` statement.
Can we remove this empty line?
This is a change in behavior, but I'm not sure if it's worth it to just use `--` instead of `--Path` as the default.
this is not needed anymore
This should be ServiceKey = "dd.service"
I think this should be `_api_version/{owner}/{pkg`
This should be `<=`
I think this should be `self.assertEqual(len(rules_engine.rule_book.resource_rules_map))`
Probably should mention that this is a public API.
Can we call this `NewPoolConfig` instead of `populateVersion`?
`exp Details.getAddressDetails` is a little confusing. Can we have a method that returns a `AddressDetails` instead of a `exp Details.getAddressDetails`?
I think we should just make this `backgroundFlusher`
I think we should just be more explicit here, e.g. `deletegulp`
I think this is not needed.
I think we can remove this field. We don't have any other fields in `MetricKey`.
I think we should make this configurable.
I think we should remove this line
I think this is a bit too much. I would just add a note to the link to the link to the link to the link to the link to the link.
I think we should not use the `getConfigBySite` method here.
TODO: this TODO can be removed
I think it would be better to use `info` and `finest` here.
This is a bit of an odd change.
I think we should be able to use the `s` in the `if` block.
This is a bit of an unrelated change, but I'm not sure it's worth it.
I think this should be a `protected`
this is the wrong place for this. `getStandards()` will return `null` if `listType` is null.
I think this should be `irregular_dims=[]` to be consistent with the rest of the codebase.
this is not needed anymore right?
I think this is not right. We should probably use `padding:` instead.
This include block should be removed.
This is a bit of an overkill. I think it's better to just use `isinstance` and `isinstance(isInstance)` instead of using `altModifier`
Please remove this line.
Use the new Ruby 1.9 hash syntax.
Shouldn't this be `[AspNetCoreBenchmark]`?
I think it would be better to have a method that returns a boolean. It would be better to check if the exception is in the case of an exception.
What about `sched policy`?
Why are we adding this default? We don't seem to be using the default in the database.
Is there a reason why we wouldn't want to be able to use the `secure` instead of the `self.secure`?
`ExpireTableMetadata expireTable`?
I think we should be able to use the `Stream` struct here.
Why not just return receLogOnErr?
This is a bit of an unrelated but I'm not sure we should have a `tls` annotation here.
I think this should be `OC.getLocale()` instead of `OC.getLocale()`
I'm not sure if this is the right place to put this. I'm not sure if we should just use the `interface1` interface here.
This should be a separate function to_dict.
Shouldn't this be `allocate == null`?
The evalInsDelPreCondExpr() is called after the INSERT_CLOSE is called.
Can we move this TODO to the `Kind`?
This is a bug fix.
please remove debug logs
I think we should remove this field.
@deads2k do we need to change the vda1 version of `dev/xvda` to `dev/xvda`?
`fstream` is used in the C++11 and `fstream` is used in the C++11.
This is a pretty big change, but I think it would be better to throw an exception here.
This is a test, not a test.
I think we should just remove this and the `FullRules` variable.
I think we should use `myId` here.
This is a bug fix.
should we log it?
I think this should be `include_order`
I think we should return `<div />` instead of `<div />`
This is a private function, so it should be a public constant.
Please add a trailing comma.
nit: `noConflict()` -> `bootstrap.js`
This test is not correct. It should be `CartItemTest`
Is there a reason why we wouldn't want to present the cachedID? I'm not sure if it's a good idea to do it in a way that would be more clear.
generated here is a bit of an overkill.
I think this check could be moved to `isQuietTime` and then just check the notification.
Prefer single-quoted strings when you don't need string interpolation or special symbols.
This should be `repo_private?` so that the `force_private?` is always true.
The `if err != nil` check is redundant because the `if err != nil` check is redundant.
I think we should change this to something like `TLS.prototype.default`
Please revert the change.
I think it would be better to just pass the key to the constructor.
This should be removed.
The `click` element is not used in the `element` method.
This should be a separate change, I think. The `dataFile` is not a `data` (which is a `File`).
This test doesn't work anymore.
I think this is not needed anymore?
This import should be renamed to `channelq_context` to match the other imports.
This should be private.
This should be set to `false` as well.
Is this the only place where we need this? I think it should be `httpHandler := handler{rpcHandler}`.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
This method is not used anywhere.
I'm not sure if this is the right place for this. The `def shell` part is the correct one.
This is a breaking change. The `sarif-1.0.0-beta.5` version is not in the `buildCallback` package.
Line is too long. [83/80]
this is a bit weird, why is it not a global variable?
I think we should use the `Image` variable here.
This change is unrelated to the PR?
This file is no longer used.
I think this is a good idea. It should be `this.select(newElement, event)`
I think this should be `ACPprof`.
I think we should probably add a `commit.h` here.
I think we should wait for the updates to wait before we do the same thing.
This should be done in a separate PR
Why is this being removed?
Bootstrap: clusterv1.Bootstrap{Data: pointer.StringPtr("dXNlci1kYXRhCg=="),
Is the `KeepTraces` check necessary? It seems to me that the `samplingPirority` is not used anywhere.
We should probably use `/etc/kubeedge/ca` here.
I think we should change the `procedures_prototype` value from `blocks[i].type == 'procedures_prototype'` to `true` here.
please add `!r`
I think this is the only place where we can get this.
I think this should be `messageFrameTracer.getState()` instead of `messageFrameTracer`, right?
This should be `SERCOM0_SPI`
I think we should be using the `@VisibleForTesting` here.
This change is not correct. We should fix the error in the PR.
I think this method should be renamed to `implementedRoleMember`
I think we should use a constant here, as we're not using an attribute.
why not put the original version on the repo?
This should be `@var string = 'as_string'`
I think this was the only place where we were using this.
Shouldn't this be `SafeAreaInsets`?
Line is too long. [87/80]
I'm not sure if this is the right approach. The writer will be closed by the caller.
This should be `_no_window`
I think we should add a TODO to improve the error message.
I think we should be able to remove this `if x < x {`
@matt-gardner How about `all-apis-forwarding`?
Is it possible to add a `options` options to the top level?
Why do you need to use `!storage.cluster.id`?
If loadingUrl is null, loadingUrl.getHost() will be true.
Note that this is not compatible with the next step. The purpose of this PR is to generally generally the regression into the final release.
I think we should keep the old logic here and remove the existing logic in `createSolrConfig` and `createIndexSchema` as well.
This link is not correct.
I think this should be `const glob = ...`
Maybe we should add a check to make sure `config.AWSRegion == ""` is set?
This version is not used anywhere, right?
This is a breaking change. It is not needed anymore.
Is this file still needed?
I'm not sure if this is the right solution. The `unless` check is redundant. The `plans` check is already there, so it should be removed.
I think this warning should be in `configuration.isNotModkgable(Level.WARNING)`
Please use `db.collection()`
nit: `openqa.selenium`
This file is not used anymore.
What if we just use `replace("Countly", "")`?
Why is this change needed?
`Dict` is not used in this file.
remove empty line
I think this is a bit of a hack, but I think it should be called `client.local` or `client.io`
This should be a separate change
I think this is a bit confusing. What about something like `body_html=None`, and if it's not there, then `body_html=None`?
This should be a separate commit
I don't think we need this. Can we just remove the NET45 if we're using NET46?
should we return the error here?
Why is it removed?
Please use `Classic Editor`
Why do we need this?
I think this is a good change.
I think this should be added to the description of the new config
I think this should be ` retry bool`. If the error is being returned, then the `ok` will be `nil`
Do we need to keep the old property as well?
Use the new Ruby 1.9 hash syntax.
The `const` should be before the `const`
This is a very expensive method. I think it would be better to move the logic to `exportPortal` and then use it in the `getPortal` method.
I think this should be `this.hooks.clone`.
I think we should just remove the bool here.
I'm not sure if this is a good idea. It seems like a good idea to have 3 times per user.
`crash-data-subrow` is a bit confusing, why is it necessary to change the name of the `data`?
I think this is still wrong. The `assertEquals` function is called `failed_files`.
I think this is the only place where we need to handle the case where we don't have a `nil` value, but I think we should just remove the `nil` check here.
Do we need to check that the pool is 0?
I think we should default to `foo: bar` here.
Can you rename this variable to `ccSampleTransformer`?
This is not a very good idea. You could just use `result = xxstrdup( (char *) digest);`
What's the reason for this change?
I think we should remove this
Line is too long. [81/80]
How about a default key? "cpp" is a bit confusing since we're not doing a cpp anymore.
This is a bit of an odd change. It's not a big deal, but it's not a big deal.
I think it would be better to just return `npController.networkPolicyListerSynced = alwaysReady` and then just return `npController.networkPolicyListerSynced = alwaysReady`
I think we should use `mongoClient.s.options.autoEncryption.cryptdConnectionString` instead of `==`
This switch seems to be unrelated to the rest of the PR.
Can we change the span id to spanIdGenerator.ThreadInstance.CreateNew()?
I think it would be better to have a message that does the queue in a queue that was not a signaled by queue.
This is a breaking change.
I think we can remove this.
Is this file still used?
nit: remove this line
I think we should just remove this test.
`Error` is not really needed.
I think we should add a new line after this to `l` since it's the default behavior.
This is a bit of an unrelated change, but I'm not sure what the best way to do this is.
Should we also check if the block is in `initAndDelete`?
I think this should be `Topic.find_by_slug` instead of `Topic.find_by_slug`
I'm not sure if this is the right place to put this.
should we just remove the `executionCredentialsID`?
This should be `validateFlowExporterConfig`
Should we use the `url` here?
The logic here is not correct. The logic should be moved inside `if (hasQualifiers)`, and then the `if (hasQualifiers)` above should be moved inside `AppendLine()`.
Why is this removed?
Please remove this line.
I think we should add some description about what we do in #9990
I think it would be better to use `array_filter($authors, function ($a);` instead of `array_filter($authors, function ($a);`
This is a bit of an unrelated change, but I'm not sure it's worth it.
Is the `keystore` key being used anywhere?
@matt-gardner, I'm not sure why this change is necessary.
I think you can remove the `Text.standardize` check here
Why is this false?
The `$sourceFilePath` variable is used in the `<source>` variable.
I think this should be `api_quota_configs` and not `api_quota` in the config file.
I think it would be better to just use `hyperledger.besu.evm.Contract.gascalculator` instead of `hyperledger.besu.evm.Contract.gascalculator`
I think this is a breaking change.
It's should be relative import.
Why not `equal`?
I think we can remove this line
This is the only change I'm not sure about. If we can't change the config here, we should just change the config in the `Config` struct and change the config in the `Options` struct.
I think we can remove this and use `httpexceptions` in `service_config.py`
I think this can be simplified to just `span.GraphQL`
I think this is the only change that affects the user's status.
Why is this change required?
This should be removed.
this is a change in behavior, right? why is this needed?
This should be in the `else:` clause.
Why `int64` and not `int64`?
I think this is the only change that will fix the bug.
I think it would be better to use `cls.info` instead of `cls.warning`
is this still necessary?
I think this should be `listen_host_auth`
This is a change in behavior, but I think it's better to be explicit here.
Why remove the bool here?
Another thing I see is that this is not a problem.
This should be `throw { return; }`
I think we can remove this file as it is no longer needed. The `taurus-wrapper.py` file is already in the path, so it should be removed.
`ListServices` will not be used anymore.
@smarterclayton do we want to add this here?
I think this is a change in behavior, but I think it's a good idea to remove this.
I think this should be `globalVars.appDir`
DisableInMem is a struct, so you can't change it here.
this is not needed anymore
The name `obs` is misleading, it's a name.
I think we should try to avoid the `try` here. I think we should try to avoid the `message` (and the `message['message']` in the `try` block).
I think this file should be removed
Use 2 (not 0) spaces for indenting an expression spanning multiple lines.
I think we should be able to get rid of this check.
This should be `update_all`
This is a change in behavior, but I think it's a good idea to add a `default` parameter to this method.
Why is this change required?
This is a bug, if the previous code was not found, the previous code was not found.
This is a breaking change.
@joda-time.Period looks like a typo. I think it should be `org.joda.time.Period`
Should be `@type {Boolean}`
This is a bit of an unrelated change, but I think it's better to have a `char` variable that is used here.
Why is this needed?
I think this is a bug fix.
This is a change in behavior, but I think it's a good change.
I think this should be `["["has_constraints?"`
Layout/SpaceInsideHashLiteralBraces: Space inside { missing.<br>Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
I think this should be `streamHandle`
We should probably add a `cursorState` command to the options.
why is this change needed?
I think this should be `bucketRegex = regexp.MustCompile(',', '^gs://%s/?$, bucket))`
I think it's better to use a ApiModel instead of a ApiModel.
Why are you removing this?
I think this is a leftover. If you want to use the containerized flow, you can just use the existing one instead.
`role` is an role, so why not use a role?
`booleanbooleanAsBoolean` ?
Why did you remove this?
`node` is a bit confusing. I would have expected the first param to be `Node` instead of `NodeNode`
I think this should be `SvidPath`
Why is this change needed? I don't see why it is needed.
I think we should add a link to the `lower()` method in the `addOrderBy()` method
I think we should be able to remove this. I think it's not a good idea to just have a `TableObject` interface that is passed in.
This is the only line needed.
I think this should be a warning instead of a warning.
I think this should be moved to the `if` block.
Align the elements of a hash literal if they span more than one line.
nit: can we use `curTagCount` instead of `new tags count`?
Why `none` is not defined here?
I think this should be reverted
This is a bit of a nitpick, but I think it would be better to move the log to the `log` package.
why is this needed?
I think we should just pass the proxy to the `NotImplementedError` instead of the err.
This is a bit of an unrelated change, but I'm not sure why `root` is here. I think it's better to use `root.root` instead.
I think this should be a warning instead of a switch.
nit: I think we can remove the `return`
why is it a pointer?
This is a bit of a hack, but I think it's worth it to make it more clear that we're not using the `<v3>` tag.
This is the fix.
I think we should be able to use `rand.getClass().getSimpleName()` instead of `rand.getSimpleName()` here.
This should be `--rpc-require-chainid-in-txs` to be consistent with other commands.
